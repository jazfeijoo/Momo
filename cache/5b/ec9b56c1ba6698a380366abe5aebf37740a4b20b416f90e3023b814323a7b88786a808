{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":73,"column":0,"index":1792}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.ToggleButtonGroupContext = exports.ToggleButtonGroup = void 0;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[1], \"react/jsx-runtime\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var ToggleButtonGroupContext = exports.ToggleButtonGroupContext =\n  //@ts-expect-error: TS can't ensure the type from Group to children\n  React.createContext(null);\n\n  /**\n   * Toggle group allows to control a group of toggle buttons.</br>\n   * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, check out [ToggleButton.Row](ToggleButtonRow).\n   *\n   * ## Usage\n   * ```js\n   * import * as React from 'react';\n   * import { ToggleButton } from 'react-native-paper';\n   *\n   * const MyComponent = () => {\n   *   const [value, setValue] = React.useState('left');\n   *\n   *   return (\n   *     <ToggleButton.Group\n   *       onValueChange={value => setValue(value)}\n   *       value={value}>\n   *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n   *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n   *     </ToggleButton.Group>\n   *   );\n   * };\n   *\n   * export default MyComponent;\n   *```\n   */\n  var ToggleButtonGroup = exports.ToggleButtonGroup = function ToggleButtonGroup(_ref) {\n    var value = _ref.value,\n      onValueChange = _ref.onValueChange,\n      children = _ref.children;\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ToggleButtonGroupContext.Provider, {\n      value: {\n        value: value,\n        onValueChange: onValueChange\n      },\n      children: children\n    });\n  };\n  ToggleButtonGroup.displayName = 'ToggleButton.Group';\n  var _default = exports.default = ToggleButtonGroup; // @component-docs ignore-next-line\n});","lineCount":53,"map":[[6,2,1,0],[6,6,1,0,"React"],[6,11,1,0],[6,14,1,0,"_interopRequireWildcard"],[6,37,1,0],[6,38,1,0,"_$$_REQUIRE"],[6,49,1,0],[6,50,1,0,"_dependencyMap"],[6,64,1,0],[7,2,1,31],[7,6,1,31,"_jsxRuntime"],[7,17,1,31],[7,20,1,31,"_$$_REQUIRE"],[7,31,1,31],[7,32,1,31,"_dependencyMap"],[7,46,1,31],[8,2,1,31],[8,11,1,31,"_getRequireWildcardCache"],[8,36,1,31,"e"],[8,37,1,31],[8,66,1,31,"WeakMap"],[8,73,1,31],[8,92,1,31,"r"],[8,93,1,31],[8,100,1,31,"WeakMap"],[8,107,1,31],[8,111,1,31,"t"],[8,112,1,31],[8,119,1,31,"WeakMap"],[8,126,1,31],[8,138,1,31,"_getRequireWildcardCache"],[8,162,1,31],[8,174,1,31,"_getRequireWildcardCache"],[8,199,1,31,"e"],[8,200,1,31],[8,211,1,31,"e"],[8,212,1,31],[8,215,1,31,"t"],[8,216,1,31],[8,219,1,31,"r"],[8,220,1,31],[8,225,1,31,"e"],[8,226,1,31],[9,2,1,31],[9,11,1,31,"_interopRequireWildcard"],[9,35,1,31,"e"],[9,36,1,31],[9,38,1,31,"r"],[9,39,1,31],[9,48,1,31,"r"],[9,49,1,31],[9,53,1,31,"e"],[9,54,1,31],[9,58,1,31,"e"],[9,59,1,31],[9,60,1,31,"__esModule"],[9,70,1,31],[9,79,1,31,"e"],[9,80,1,31],[9,95,1,31,"e"],[9,96,1,31],[9,119,1,31,"e"],[9,120,1,31],[9,145,1,31,"e"],[9,146,1,31],[9,157,1,31,"default"],[9,164,1,31],[9,166,1,31,"e"],[9,167,1,31],[9,175,1,31,"t"],[9,176,1,31],[9,179,1,31,"_getRequireWildcardCache"],[9,203,1,31],[9,204,1,31,"r"],[9,205,1,31],[9,212,1,31,"t"],[9,213,1,31],[9,217,1,31,"t"],[9,218,1,31],[9,219,1,31,"has"],[9,222,1,31],[9,223,1,31,"e"],[9,224,1,31],[9,234,1,31,"t"],[9,235,1,31],[9,236,1,31,"get"],[9,239,1,31],[9,240,1,31,"e"],[9,241,1,31],[9,248,1,31,"n"],[9,249,1,31],[9,254,1,31,"__proto__"],[9,263,1,31],[9,273,1,31,"a"],[9,274,1,31],[9,277,1,31,"Object"],[9,283,1,31],[9,284,1,31,"defineProperty"],[9,298,1,31],[9,302,1,31,"Object"],[9,308,1,31],[9,309,1,31,"getOwnPropertyDescriptor"],[9,333,1,31],[9,344,1,31,"u"],[9,345,1,31],[9,349,1,31,"e"],[9,350,1,31],[9,370,1,31,"u"],[9,371,1,31],[9,375,1,31,"Object"],[9,381,1,31],[9,382,1,31,"prototype"],[9,391,1,31],[9,392,1,31,"hasOwnProperty"],[9,406,1,31],[9,407,1,31,"call"],[9,411,1,31],[9,412,1,31,"e"],[9,413,1,31],[9,415,1,31,"u"],[9,416,1,31],[9,425,1,31,"i"],[9,426,1,31],[9,429,1,31,"a"],[9,430,1,31],[9,433,1,31,"Object"],[9,439,1,31],[9,440,1,31,"getOwnPropertyDescriptor"],[9,464,1,31],[9,465,1,31,"e"],[9,466,1,31],[9,468,1,31,"u"],[9,469,1,31],[9,479,1,31,"i"],[9,480,1,31],[9,485,1,31,"i"],[9,486,1,31],[9,487,1,31,"get"],[9,490,1,31],[9,494,1,31,"i"],[9,495,1,31],[9,496,1,31,"set"],[9,499,1,31],[9,503,1,31,"Object"],[9,509,1,31],[9,510,1,31,"defineProperty"],[9,524,1,31],[9,525,1,31,"n"],[9,526,1,31],[9,528,1,31,"u"],[9,529,1,31],[9,531,1,31,"i"],[9,532,1,31],[9,536,1,31,"n"],[9,537,1,31],[9,538,1,31,"u"],[9,539,1,31],[9,543,1,31,"e"],[9,544,1,31],[9,545,1,31,"u"],[9,546,1,31],[9,558,1,31,"n"],[9,559,1,31],[9,560,1,31,"default"],[9,567,1,31],[9,570,1,31,"e"],[9,571,1,31],[9,573,1,31,"t"],[9,574,1,31],[9,578,1,31,"t"],[9,579,1,31],[9,580,1,31,"set"],[9,583,1,31],[9,584,1,31,"e"],[9,585,1,31],[9,587,1,31,"n"],[9,588,1,31],[9,591,1,31,"n"],[9,592,1,31],[10,2,23,7],[10,6,23,13,"ToggleButtonGroupContext"],[10,30,23,37],[10,33,23,37,"exports"],[10,40,23,37],[10,41,23,37,"ToggleButtonGroupContext"],[10,65,23,37],[11,2,24,2],[12,2,25,2,"React"],[12,7,25,7],[12,8,25,8,"createContext"],[12,21,25,21],[12,22,25,47],[12,26,25,58],[12,27,25,59],[14,2,27,0],[15,0,28,0],[16,0,29,0],[17,0,30,0],[18,0,31,0],[19,0,32,0],[20,0,33,0],[21,0,34,0],[22,0,35,0],[23,0,36,0],[24,0,37,0],[25,0,38,0],[26,0,39,0],[27,0,40,0],[28,0,41,0],[29,0,42,0],[30,0,43,0],[31,0,44,0],[32,0,45,0],[33,0,46,0],[34,0,47,0],[35,0,48,0],[36,0,49,0],[37,0,50,0],[38,0,51,0],[39,2,52,0],[39,6,52,6,"ToggleButtonGroup"],[39,23,52,23],[39,26,52,23,"exports"],[39,33,52,23],[39,34,52,23,"ToggleButtonGroup"],[39,51,52,23],[39,54,52,26],[39,63,52,6,"ToggleButtonGroup"],[39,80,52,23,"ToggleButtonGroup"],[39,81,52,23,"_ref"],[39,85,52,23],[40,4,52,23],[40,8,53,2,"value"],[40,13,53,7],[40,16,53,7,"_ref"],[40,20,53,7],[40,21,53,2,"value"],[40,26,53,7],[41,6,54,2,"onValueChange"],[41,19,54,15],[41,22,54,15,"_ref"],[41,26,54,15],[41,27,54,2,"onValueChange"],[41,40,54,15],[42,6,55,2,"children"],[42,14,55,10],[42,17,55,10,"_ref"],[42,21,55,10],[42,22,55,2,"children"],[42,30,55,10],[43,4,55,10],[43,24,57,2],[43,28,57,2,"_jsxRuntime"],[43,39,57,2],[43,40,57,2,"jsx"],[43,43,57,2],[43,45,57,3,"ToggleButtonGroupContext"],[43,69,57,27],[43,70,57,28,"Provider"],[43,78,57,36],[44,6,58,4,"value"],[44,11,58,9],[44,13,58,11],[45,8,59,6,"value"],[45,13,59,11],[45,15,59,6,"value"],[45,20,59,11],[46,8,60,6,"onValueChange"],[46,21,60,19],[46,23,60,6,"onValueChange"],[47,6,61,4],[47,7,61,6],[48,6,61,6,"children"],[48,14,61,6],[48,16,63,5,"children"],[49,4,63,13],[49,5,64,37],[49,6,64,38],[50,2,64,38],[50,3,65,1],[51,2,67,0,"ToggleButtonGroup"],[51,19,67,17],[51,20,67,18,"displayName"],[51,31,67,29],[51,34,67,32],[51,54,67,52],[52,2,67,53],[52,6,67,53,"_default"],[52,14,67,53],[52,17,67,53,"exports"],[52,24,67,53],[52,25,67,53,"default"],[52,32,67,53],[52,35,69,15,"ToggleButtonGroup"],[52,52,69,32],[52,54,71,0],[53,0,71,0]],"functionMap":{"names":["<global>","ToggleButtonGroup"],"mappings":"AAA;0BCmD;CDa"}},"type":"js/module"}]}