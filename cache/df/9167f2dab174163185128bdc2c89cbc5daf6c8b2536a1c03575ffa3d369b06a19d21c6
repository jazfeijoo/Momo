{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":37,"index":37}}],"key":"llq4nuOBKCCL4A7IFpRswh14toM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n  var WHITESPACE = TYPE.WhiteSpace;\n  var COMMENT = TYPE.Comment;\n  var ATKEYWORD = TYPE.AtKeyword;\n  var CDO = TYPE.CDO;\n  var CDC = TYPE.CDC;\n  var EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, null, false);\n  }\n  module.exports = {\n    name: 'StyleSheet',\n    structure: {\n      children: [['Comment', 'CDO', 'CDC', 'Atrule', 'Rule', 'Raw']]\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var children = this.createList();\n      var child;\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case WHITESPACE:\n            this.scanner.next();\n            continue;\n          case COMMENT:\n            // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n            if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 2) !== EXCLAMATIONMARK) {\n              this.scanner.next();\n              continue;\n            }\n            child = this.Comment();\n            break;\n          case CDO:\n            // <!--\n            child = this.CDO();\n            break;\n          case CDC:\n            // -->\n            child = this.CDC();\n            break;\n\n          // CSS Syntax Module Level 3\n          // ยง2.2 Error handling\n          // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n          case ATKEYWORD:\n            child = this.parseWithFallback(this.Atrule, consumeRaw);\n            break;\n\n          // Anything else starts a qualified rule ...\n          default:\n            child = this.parseWithFallback(this.Rule, consumeRaw);\n        }\n        children.push(child);\n      }\n      return {\n        type: 'StyleSheet',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node);\n    },\n    walkContext: 'stylesheet'\n  };\n});","lineCount":68,"map":[[2,2,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,25,1,18,"_dependencyMap"],[2,39,1,18],[2,61,1,36],[2,62,1,37],[2,63,1,38,"TYPE"],[2,67,1,42],[3,2,3,0],[3,6,3,4,"WHITESPACE"],[3,16,3,14],[3,19,3,17,"TYPE"],[3,23,3,21],[3,24,3,22,"WhiteSpace"],[3,34,3,32],[4,2,4,0],[4,6,4,4,"COMMENT"],[4,13,4,11],[4,16,4,14,"TYPE"],[4,20,4,18],[4,21,4,19,"Comment"],[4,28,4,26],[5,2,5,0],[5,6,5,4,"ATKEYWORD"],[5,15,5,13],[5,18,5,16,"TYPE"],[5,22,5,20],[5,23,5,21,"AtKeyword"],[5,32,5,30],[6,2,6,0],[6,6,6,4,"CDO"],[6,9,6,7],[6,12,6,10,"TYPE"],[6,16,6,14],[6,17,6,15,"CDO"],[6,20,6,18],[7,2,7,0],[7,6,7,4,"CDC"],[7,9,7,7],[7,12,7,10,"TYPE"],[7,16,7,14],[7,17,7,15,"CDC"],[7,20,7,18],[8,2,8,0],[8,6,8,4,"EXCLAMATIONMARK"],[8,21,8,19],[8,24,8,22],[8,30,8,28],[8,31,8,29],[8,32,8,30],[10,2,10,0],[10,11,10,9,"consumeRaw"],[10,21,10,19,"consumeRaw"],[10,22,10,20,"startToken"],[10,32,10,30],[10,34,10,32],[11,4,11,4],[11,11,11,11],[11,15,11,15],[11,16,11,16,"Raw"],[11,19,11,19],[11,20,11,20,"startToken"],[11,30,11,30],[11,32,11,32],[11,36,11,36],[11,38,11,38],[11,43,11,43],[11,44,11,44],[12,2,12,0],[13,2,14,0,"module"],[13,8,14,6],[13,9,14,7,"exports"],[13,16,14,14],[13,19,14,17],[14,4,15,4,"name"],[14,8,15,8],[14,10,15,10],[14,22,15,22],[15,4,16,4,"structure"],[15,13,16,13],[15,15,16,15],[16,6,17,8,"children"],[16,14,17,16],[16,16,17,18],[16,17,17,19],[16,18,18,12],[16,27,18,21],[16,29,19,12],[16,34,19,17],[16,36,20,12],[16,41,20,17],[16,43,21,12],[16,51,21,20],[16,53,22,12],[16,59,22,18],[16,61,23,12],[16,66,23,17],[16,67,24,9],[17,4,25,4],[17,5,25,5],[18,4,26,4,"parse"],[18,9,26,9],[18,11,26,11],[18,20,26,11,"parse"],[18,26,26,11],[18,28,26,22],[19,6,27,8],[19,10,27,12,"start"],[19,15,27,17],[19,18,27,20],[19,22,27,24],[19,23,27,25,"scanner"],[19,30,27,32],[19,31,27,33,"tokenStart"],[19,41,27,43],[20,6,28,8],[20,10,28,12,"children"],[20,18,28,20],[20,21,28,23],[20,25,28,27],[20,26,28,28,"createList"],[20,36,28,38],[20,37,28,39],[20,38,28,40],[21,6,29,8],[21,10,29,12,"child"],[21,15,29,17],[22,6,31,8,"scan"],[22,10,31,12],[22,12,32,8],[22,19,32,15],[22,20,32,16],[22,24,32,20],[22,25,32,21,"scanner"],[22,32,32,28],[22,33,32,29,"eof"],[22,36,32,32],[22,38,32,34],[23,8,33,12],[23,16,33,20],[23,20,33,24],[23,21,33,25,"scanner"],[23,28,33,32],[23,29,33,33,"tokenType"],[23,38,33,42],[24,10,34,16],[24,15,34,21,"WHITESPACE"],[24,25,34,31],[25,12,35,20],[25,16,35,24],[25,17,35,25,"scanner"],[25,24,35,32],[25,25,35,33,"next"],[25,29,35,37],[25,30,35,38],[25,31,35,39],[26,12,36,20],[27,10,38,16],[27,15,38,21,"COMMENT"],[27,22,38,28],[28,12,39,20],[29,12,40,20],[29,16,40,24],[29,20,40,28],[29,21,40,29,"scanner"],[29,28,40,36],[29,29,40,37,"source"],[29,35,40,43],[29,36,40,44,"charCodeAt"],[29,46,40,54],[29,47,40,55],[29,51,40,59],[29,52,40,60,"scanner"],[29,59,40,67],[29,60,40,68,"tokenStart"],[29,70,40,78],[29,73,40,81],[29,74,40,82],[29,75,40,83],[29,80,40,88,"EXCLAMATIONMARK"],[29,95,40,103],[29,97,40,105],[30,14,41,24],[30,18,41,28],[30,19,41,29,"scanner"],[30,26,41,36],[30,27,41,37,"next"],[30,31,41,41],[30,32,41,42],[30,33,41,43],[31,14,42,24],[32,12,43,20],[33,12,45,20,"child"],[33,17,45,25],[33,20,45,28],[33,24,45,32],[33,25,45,33,"Comment"],[33,32,45,40],[33,33,45,41],[33,34,45,42],[34,12,46,20],[35,10,48,16],[35,15,48,21,"CDO"],[35,18,48,24],[36,12,48,26],[37,12,49,20,"child"],[37,17,49,25],[37,20,49,28],[37,24,49,32],[37,25,49,33,"CDO"],[37,28,49,36],[37,29,49,37],[37,30,49,38],[38,12,50,20],[39,10,52,16],[39,15,52,21,"CDC"],[39,18,52,24],[40,12,52,26],[41,12,53,20,"child"],[41,17,53,25],[41,20,53,28],[41,24,53,32],[41,25,53,33,"CDC"],[41,28,53,36],[41,29,53,37],[41,30,53,38],[42,12,54,20],[44,10,56,16],[45,10,57,16],[46,10,58,16],[47,10,59,16],[47,15,59,21,"ATKEYWORD"],[47,24,59,30],[48,12,60,20,"child"],[48,17,60,25],[48,20,60,28],[48,24,60,32],[48,25,60,33,"parseWithFallback"],[48,42,60,50],[48,43,60,51],[48,47,60,55],[48,48,60,56,"Atrule"],[48,54,60,62],[48,56,60,64,"consumeRaw"],[48,66,60,74],[48,67,60,75],[49,12,61,20],[51,10,63,16],[52,10,64,16],[53,12,65,20,"child"],[53,17,65,25],[53,20,65,28],[53,24,65,32],[53,25,65,33,"parseWithFallback"],[53,42,65,50],[53,43,65,51],[53,47,65,55],[53,48,65,56,"Rule"],[53,52,65,60],[53,54,65,62,"consumeRaw"],[53,64,65,72],[53,65,65,73],[54,8,66,12],[55,8,68,12,"children"],[55,16,68,20],[55,17,68,21,"push"],[55,21,68,25],[55,22,68,26,"child"],[55,27,68,31],[55,28,68,32],[56,6,69,8],[57,6,71,8],[57,13,71,15],[58,8,72,12,"type"],[58,12,72,16],[58,14,72,18],[58,26,72,30],[59,8,73,12,"loc"],[59,11,73,15],[59,13,73,17],[59,17,73,21],[59,18,73,22,"getLocation"],[59,29,73,33],[59,30,73,34,"start"],[59,35,73,39],[59,37,73,41],[59,41,73,45],[59,42,73,46,"scanner"],[59,49,73,53],[59,50,73,54,"tokenStart"],[59,60,73,64],[59,61,73,65],[60,8,74,12,"children"],[60,16,74,20],[60,18,74,22,"children"],[61,6,75,8],[61,7,75,9],[62,4,76,4],[62,5,76,5],[63,4,77,4,"generate"],[63,12,77,12],[63,14,77,14],[63,23,77,14,"generate"],[63,32,77,23,"node"],[63,36,77,27],[63,38,77,29],[64,6,78,8],[64,10,78,12],[64,11,78,13,"children"],[64,19,78,21],[64,20,78,22,"node"],[64,24,78,26],[64,25,78,27],[65,4,79,4],[65,5,79,5],[66,4,80,4,"walkContext"],[66,15,80,15],[66,17,80,17],[67,2,81,0],[67,3,81,1],[68,0,81,2]],"functionMap":{"names":["<global>","consumeRaw","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACS;CDE;WEc;KFkD;cGC;KHE"}},"type":"js/module"}]}