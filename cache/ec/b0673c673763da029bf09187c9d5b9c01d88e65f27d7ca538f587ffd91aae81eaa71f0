{"dependencies":[{"name":"./generated/encode-html.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":39,"index":313},"end":{"line":7,"column":76,"index":350}}],"key":"vYeeE1dxV9lMzbZ0P92Si8b6GIE="}},{"name":"./escape.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":18,"index":371},"end":{"line":8,"column":40,"index":393}}],"key":"7N1fk6a+ou3oZOyjnJqhPl++BOw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encodeNonAsciiHTML = exports.encodeHTML = void 0;\n  var encode_html_js_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0], \"./generated/encode-html.js\"));\n  var escape_js_1 = _$$_REQUIRE(_dependencyMap[1], \"./escape.js\");\n  var htmlReplacer = /[\\t\\n!-,./:-@[-`\\f{-}$\\x80-\\uFFFF]/g;\n  /**\n   * Encodes all characters in the input using HTML entities. This includes\n   * characters that are valid ASCII characters in HTML documents, such as `#`.\n   *\n   * To get a more compact output, consider using the `encodeNonAsciiHTML`\n   * function, which will only encode characters that are not valid in HTML\n   * documents, as well as non-ASCII characters.\n   *\n   * If a character has no equivalent entity, a numeric hexadecimal reference\n   * (eg. `&#xfc;`) will be used.\n   */\n  function encodeHTML(data) {\n    return encodeHTMLTrieRe(htmlReplacer, data);\n  }\n  exports.encodeHTML = encodeHTML;\n  /**\n   * Encodes all non-ASCII characters, as well as characters not valid in HTML\n   * documents using HTML entities. This function will not encode characters that\n   * are valid in HTML documents, such as `#`.\n   *\n   * If a character has no equivalent entity, a numeric hexadecimal reference\n   * (eg. `&#xfc;`) will be used.\n   */\n  function encodeNonAsciiHTML(data) {\n    return encodeHTMLTrieRe(escape_js_1.xmlReplacer, data);\n  }\n  exports.encodeNonAsciiHTML = encodeNonAsciiHTML;\n  function encodeHTMLTrieRe(regExp, str) {\n    var ret = \"\";\n    var lastIdx = 0;\n    var match;\n    while ((match = regExp.exec(str)) !== null) {\n      var i = match.index;\n      ret += str.substring(lastIdx, i);\n      var char = str.charCodeAt(i);\n      var next = encode_html_js_1.default.get(char);\n      if (typeof next === \"object\") {\n        // We are in a branch. Try to match the next char.\n        if (i + 1 < str.length) {\n          var nextChar = str.charCodeAt(i + 1);\n          var value = typeof next.n === \"number\" ? next.n === nextChar ? next.o : undefined : next.n.get(nextChar);\n          if (value !== undefined) {\n            ret += value;\n            lastIdx = regExp.lastIndex += 1;\n            continue;\n          }\n        }\n        next = next.v;\n      }\n      // We might have a tree node without a value; skip and use a numeric entity.\n      if (next !== undefined) {\n        ret += next;\n        lastIdx = i + 1;\n      } else {\n        var cp = (0, escape_js_1.getCodePoint)(str, i);\n        ret += \"&#x\".concat(cp.toString(16), \";\");\n        // Increase by 1 if we have a surrogate pair\n        lastIdx = regExp.lastIndex += Number(cp !== char);\n      }\n    }\n    return ret + str.substr(lastIdx);\n  }\n});","lineCount":78,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,6,0,"exports"],[12,9,6,7],[12,10,6,8,"encodeNonAsciiHTML"],[12,28,6,26],[12,31,6,29,"exports"],[12,38,6,36],[12,39,6,37,"encodeHTML"],[12,49,6,47],[12,52,6,50],[12,57,6,55],[12,58,6,56],[13,2,7,0],[13,6,7,4,"encode_html_js_1"],[13,22,7,20],[13,25,7,23,"__importDefault"],[13,40,7,38],[13,41,7,39,"require"],[13,52,7,46],[13,53,7,46,"_dependencyMap"],[13,67,7,46],[13,100,7,75],[13,101,7,76],[13,102,7,77],[14,2,8,0],[14,6,8,4,"escape_js_1"],[14,17,8,15],[14,20,8,18,"require"],[14,31,8,25],[14,32,8,25,"_dependencyMap"],[14,46,8,25],[14,64,8,39],[14,65,8,40],[15,2,9,0],[15,6,9,4,"htmlReplacer"],[15,18,9,16],[15,21,9,19],[15,58,9,56],[16,2,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,2,21,0],[27,11,21,9,"encodeHTML"],[27,21,21,19,"encodeHTML"],[27,22,21,20,"data"],[27,26,21,24],[27,28,21,26],[28,4,22,4],[28,11,22,11,"encodeHTMLTrieRe"],[28,27,22,27],[28,28,22,28,"htmlReplacer"],[28,40,22,40],[28,42,22,42,"data"],[28,46,22,46],[28,47,22,47],[29,2,23,0],[30,2,24,0,"exports"],[30,9,24,7],[30,10,24,8,"encodeHTML"],[30,20,24,18],[30,23,24,21,"encodeHTML"],[30,33,24,31],[31,2,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,2,33,0],[39,11,33,9,"encodeNonAsciiHTML"],[39,29,33,27,"encodeNonAsciiHTML"],[39,30,33,28,"data"],[39,34,33,32],[39,36,33,34],[40,4,34,4],[40,11,34,11,"encodeHTMLTrieRe"],[40,27,34,27],[40,28,34,28,"escape_js_1"],[40,39,34,39],[40,40,34,40,"xmlReplacer"],[40,51,34,51],[40,53,34,53,"data"],[40,57,34,57],[40,58,34,58],[41,2,35,0],[42,2,36,0,"exports"],[42,9,36,7],[42,10,36,8,"encodeNonAsciiHTML"],[42,28,36,26],[42,31,36,29,"encodeNonAsciiHTML"],[42,49,36,47],[43,2,37,0],[43,11,37,9,"encodeHTMLTrieRe"],[43,27,37,25,"encodeHTMLTrieRe"],[43,28,37,26,"regExp"],[43,34,37,32],[43,36,37,34,"str"],[43,39,37,37],[43,41,37,39],[44,4,38,4],[44,8,38,8,"ret"],[44,11,38,11],[44,14,38,14],[44,16,38,16],[45,4,39,4],[45,8,39,8,"lastIdx"],[45,15,39,15],[45,18,39,18],[45,19,39,19],[46,4,40,4],[46,8,40,8,"match"],[46,13,40,13],[47,4,41,4],[47,11,41,11],[47,12,41,12,"match"],[47,17,41,17],[47,20,41,20,"regExp"],[47,26,41,26],[47,27,41,27,"exec"],[47,31,41,31],[47,32,41,32,"str"],[47,35,41,35],[47,36,41,36],[47,42,41,42],[47,46,41,46],[47,48,41,48],[48,6,42,8],[48,10,42,12,"i"],[48,11,42,13],[48,14,42,16,"match"],[48,19,42,21],[48,20,42,22,"index"],[48,25,42,27],[49,6,43,8,"ret"],[49,9,43,11],[49,13,43,15,"str"],[49,16,43,18],[49,17,43,19,"substring"],[49,26,43,28],[49,27,43,29,"lastIdx"],[49,34,43,36],[49,36,43,38,"i"],[49,37,43,39],[49,38,43,40],[50,6,44,8],[50,10,44,12,"char"],[50,14,44,16],[50,17,44,19,"str"],[50,20,44,22],[50,21,44,23,"charCodeAt"],[50,31,44,33],[50,32,44,34,"i"],[50,33,44,35],[50,34,44,36],[51,6,45,8],[51,10,45,12,"next"],[51,14,45,16],[51,17,45,19,"encode_html_js_1"],[51,33,45,35],[51,34,45,36,"default"],[51,41,45,43],[51,42,45,44,"get"],[51,45,45,47],[51,46,45,48,"char"],[51,50,45,52],[51,51,45,53],[52,6,46,8],[52,10,46,12],[52,17,46,19,"next"],[52,21,46,23],[52,26,46,28],[52,34,46,36],[52,36,46,38],[53,8,47,12],[54,8,48,12],[54,12,48,16,"i"],[54,13,48,17],[54,16,48,20],[54,17,48,21],[54,20,48,24,"str"],[54,23,48,27],[54,24,48,28,"length"],[54,30,48,34],[54,32,48,36],[55,10,49,16],[55,14,49,20,"nextChar"],[55,22,49,28],[55,25,49,31,"str"],[55,28,49,34],[55,29,49,35,"charCodeAt"],[55,39,49,45],[55,40,49,46,"i"],[55,41,49,47],[55,44,49,50],[55,45,49,51],[55,46,49,52],[56,10,50,16],[56,14,50,20,"value"],[56,19,50,25],[56,22,50,28],[56,29,50,35,"next"],[56,33,50,39],[56,34,50,40,"n"],[56,35,50,41],[56,40,50,46],[56,48,50,54],[56,51,51,22,"next"],[56,55,51,26],[56,56,51,27,"n"],[56,57,51,28],[56,62,51,33,"nextChar"],[56,70,51,41],[56,73,52,26,"next"],[56,77,52,30],[56,78,52,31,"o"],[56,79,52,32],[56,82,53,26,"undefined"],[56,91,53,35],[56,94,54,22,"next"],[56,98,54,26],[56,99,54,27,"n"],[56,100,54,28],[56,101,54,29,"get"],[56,104,54,32],[56,105,54,33,"nextChar"],[56,113,54,41],[56,114,54,42],[57,10,55,16],[57,14,55,20,"value"],[57,19,55,25],[57,24,55,30,"undefined"],[57,33,55,39],[57,35,55,41],[58,12,56,20,"ret"],[58,15,56,23],[58,19,56,27,"value"],[58,24,56,32],[59,12,57,20,"lastIdx"],[59,19,57,27],[59,22,57,30,"regExp"],[59,28,57,36],[59,29,57,37,"lastIndex"],[59,38,57,46],[59,42,57,50],[59,43,57,51],[60,12,58,20],[61,10,59,16],[62,8,60,12],[63,8,61,12,"next"],[63,12,61,16],[63,15,61,19,"next"],[63,19,61,23],[63,20,61,24,"v"],[63,21,61,25],[64,6,62,8],[65,6,63,8],[66,6,64,8],[66,10,64,12,"next"],[66,14,64,16],[66,19,64,21,"undefined"],[66,28,64,30],[66,30,64,32],[67,8,65,12,"ret"],[67,11,65,15],[67,15,65,19,"next"],[67,19,65,23],[68,8,66,12,"lastIdx"],[68,15,66,19],[68,18,66,22,"i"],[68,19,66,23],[68,22,66,26],[68,23,66,27],[69,6,67,8],[69,7,67,9],[69,13,68,13],[70,8,69,12],[70,12,69,16,"cp"],[70,14,69,18],[70,17,69,21],[70,18,69,22],[70,19,69,23],[70,21,69,25,"escape_js_1"],[70,32,69,36],[70,33,69,37,"getCodePoint"],[70,45,69,49],[70,47,69,51,"str"],[70,50,69,54],[70,52,69,56,"i"],[70,53,69,57],[70,54,69,58],[71,8,70,12,"ret"],[71,11,70,15],[71,15,70,19],[71,20,70,24],[71,21,70,25,"concat"],[71,27,70,31],[71,28,70,32,"cp"],[71,30,70,34],[71,31,70,35,"toString"],[71,39,70,43],[71,40,70,44],[71,42,70,46],[71,43,70,47],[71,45,70,49],[71,48,70,52],[71,49,70,53],[72,8,71,12],[73,8,72,12,"lastIdx"],[73,15,72,19],[73,18,72,22,"regExp"],[73,24,72,28],[73,25,72,29,"lastIndex"],[73,34,72,38],[73,38,72,42,"Number"],[73,44,72,48],[73,45,72,49,"cp"],[73,47,72,51],[73,52,72,56,"char"],[73,56,72,60],[73,57,72,61],[74,6,73,8],[75,4,74,4],[76,4,75,4],[76,11,75,11,"ret"],[76,14,75,14],[76,17,75,17,"str"],[76,20,75,20],[76,21,75,21,"substr"],[76,27,75,27],[76,28,75,28,"lastIdx"],[76,35,75,35],[76,36,75,36],[77,2,76,0],[78,0,76,1]],"functionMap":{"names":["<global>","<anonymous>","encodeHTML","encodeNonAsciiHTML","encodeHTMLTrieRe"],"mappings":"AAA;wDCC;CDE;AEiB;CFE;AGU;CHE;AIE;CJuC"}},"type":"js/module"}]}