{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":29,"index":44},"end":{"line":3,"column":84,"index":99}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":55,"index":285},"end":{"line":11,"column":112,"index":342}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"@babel/runtime/helpers/typeof","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":38,"index":384},"end":{"line":13,"column":78,"index":424}}],"key":"d2A8Bs8r2z6AChcpdDCixK1PzmU="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":46,"index":474},"end":{"line":15,"column":94,"index":522}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":13,"index":539},"end":{"line":17,"column":29,"index":555}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"html-parse-stringify","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":49,"index":607},"end":{"line":19,"column":80,"index":638}}],"key":"8GtUl5/ddnc9eV/+J5FaHanxO2k="}},{"name":"./utils.js","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":13,"index":655},"end":{"line":21,"column":34,"index":676}}],"key":"03VO7/E+L2S6CYQuFHTg8eKUrwk="}},{"name":"./defaults.js","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":16,"index":695},"end":{"line":23,"column":40,"index":719}}],"key":"FX7JT6BcWwnLugiQcZOywBOF/Eg="}},{"name":"./i18nInstance.js","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":20,"index":742},"end":{"line":25,"column":48,"index":770}}],"key":"A30LYEaDRO6LxKBsi2VV07yGQkM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.nodesToString = nodesToString;\n  exports.Trans = Trans;\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _typeof2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/typeof\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n  var _react = _$$_REQUIRE(_dependencyMap[4], \"react\");\n  var _htmlParseStringify = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"html-parse-stringify\"));\n  var _utils = _$$_REQUIRE(_dependencyMap[6], \"./utils.js\");\n  var _defaults = _$$_REQUIRE(_dependencyMap[7], \"./defaults.js\");\n  var _i18nInstance = _$$_REQUIRE(_dependencyMap[8], \"./i18nInstance.js\");\n  var _excluded = [\"format\"],\n    _excluded2 = [\"children\", \"count\", \"parent\", \"i18nKey\", \"context\", \"tOptions\", \"values\", \"defaults\", \"components\", \"ns\", \"i18n\", \"t\", \"shouldUnescape\"];\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n      keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          (0, _defineProperty2[\"default\"])(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n    return target;\n  }\n  function hasChildren(node, checkLength) {\n    if (!node) return false;\n    var base = node.props ? node.props.children : node.children;\n    if (checkLength) return base.length > 0;\n    return !!base;\n  }\n  function getChildren(node) {\n    if (!node) return [];\n    return node.props ? node.props.children : node.children;\n  }\n  function hasValidReactChildren(children) {\n    if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n    return children.every(function (child) {\n      return (0, _react.isValidElement)(child);\n    });\n  }\n  function getAsArray(data) {\n    return Array.isArray(data) ? data : [data];\n  }\n  function mergeProps(source, target) {\n    var newTarget = _objectSpread({}, target);\n    newTarget.props = Object.assign(source.props, target.props);\n    return newTarget;\n  }\n  function nodesToString(children, i18nOptions) {\n    if (!children) return '';\n    var stringNode = '';\n    var childrenArray = getAsArray(children);\n    var keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];\n    childrenArray.forEach(function (child, childIndex) {\n      if (typeof child === 'string') {\n        stringNode += \"\".concat(child);\n      } else if ((0, _react.isValidElement)(child)) {\n        var childPropsCount = Object.keys(child.props).length;\n        var shouldKeepChild = keepArray.indexOf(child.type) > -1;\n        var childChildren = child.props.children;\n        if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n          stringNode += \"<\".concat(child.type, \"/>\");\n        } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n          stringNode += \"<\".concat(childIndex, \"></\").concat(childIndex, \">\");\n        } else if (child.props.i18nIsDynamicList) {\n          stringNode += \"<\".concat(childIndex, \"></\").concat(childIndex, \">\");\n        } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === 'string') {\n          stringNode += \"<\".concat(child.type, \">\").concat(childChildren, \"</\").concat(child.type, \">\");\n        } else {\n          var content = nodesToString(childChildren, i18nOptions);\n          stringNode += \"<\".concat(childIndex, \">\").concat(content, \"</\").concat(childIndex, \">\");\n        }\n      } else if (child === null) {\n        (0, _utils.warn)(\"Trans: the passed in value is invalid - seems you passed in a null child.\");\n      } else if ((0, _typeof2[\"default\"])(child) === 'object') {\n        var format = child.format,\n          clone = (0, _objectWithoutProperties2[\"default\"])(child, _excluded);\n        var keys = Object.keys(clone);\n        if (keys.length === 1) {\n          var value = format ? \"\".concat(keys[0], \", \").concat(format) : keys[0];\n          stringNode += \"{{\".concat(value, \"}}\");\n        } else {\n          (0, _utils.warn)(\"react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.\", child);\n        }\n      } else {\n        (0, _utils.warn)(\"Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.\", child);\n      }\n    });\n    return stringNode;\n  }\n  function renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {\n    if (targetString === '') return [];\n    var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n    var emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString);\n    if (!children && !emptyChildrenButNeedsHandling) return [targetString];\n    var data = {};\n    function getData(childs) {\n      var childrenArray = getAsArray(childs);\n      childrenArray.forEach(function (child) {\n        if (typeof child === 'string') return;\n        if (hasChildren(child)) getData(getChildren(child));else if ((0, _typeof2[\"default\"])(child) === 'object' && !(0, _react.isValidElement)(child)) Object.assign(data, child);\n      });\n    }\n    getData(children);\n    var ast = _htmlParseStringify[\"default\"].parse(\"<0>\".concat(targetString, \"</0>\"));\n    var opts = _objectSpread(_objectSpread({}, data), combinedTOpts);\n    function renderInner(child, node, rootReactNode) {\n      var childs = getChildren(child);\n      var mappedChildren = mapAST(childs, node.children, rootReactNode);\n      return hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;\n    }\n    function pushTranslatedJSX(child, inner, mem, i, isVoid) {\n      if (child.dummy) child.children = inner;\n      mem.push((0, _react.cloneElement)(child, _objectSpread(_objectSpread({}, child.props), {}, {\n        key: i\n      }), isVoid ? undefined : inner));\n    }\n    function mapAST(reactNode, astNode, rootReactNode) {\n      var reactNodes = getAsArray(reactNode);\n      var astNodes = getAsArray(astNode);\n      return astNodes.reduce(function (mem, node, i) {\n        var translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n        if (node.type === 'tag') {\n          var tmp = reactNodes[parseInt(node.name, 10)];\n          if (!tmp && rootReactNode.length === 1 && rootReactNode[0][node.name]) tmp = rootReactNode[0][node.name];\n          if (!tmp) tmp = {};\n          var child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n            props: node.attrs\n          }, tmp) : tmp;\n          var isElement = (0, _react.isValidElement)(child);\n          var isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n          var isEmptyTransWithHTML = emptyChildrenButNeedsHandling && (0, _typeof2[\"default\"])(child) === 'object' && child.dummy && !isElement;\n          var isKnownComponent = (0, _typeof2[\"default\"])(children) === 'object' && children !== null && Object.hasOwnProperty.call(children, node.name);\n          if (typeof child === 'string') {\n            var value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n            mem.push(value);\n          } else if (hasChildren(child) || isValidTranslationWithChildren) {\n            var inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i);\n          } else if (isEmptyTransWithHTML) {\n            var _inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push((0, _react.cloneElement)(child, _objectSpread(_objectSpread({}, child.props), {}, {\n              key: i\n            }), _inner));\n          } else if (Number.isNaN(parseFloat(node.name))) {\n            if (isKnownComponent) {\n              var _inner2 = renderInner(child, node, rootReactNode);\n              pushTranslatedJSX(child, _inner2, mem, i, node.voidElement);\n            } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n              if (node.voidElement) {\n                mem.push((0, _react.createElement)(node.name, {\n                  key: \"\".concat(node.name, \"-\").concat(i)\n                }));\n              } else {\n                var _inner3 = mapAST(reactNodes, node.children, rootReactNode);\n                mem.push((0, _react.createElement)(node.name, {\n                  key: \"\".concat(node.name, \"-\").concat(i)\n                }, _inner3));\n              }\n            } else if (node.voidElement) {\n              mem.push(\"<\".concat(node.name, \" />\"));\n            } else {\n              var _inner4 = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(\"<\".concat(node.name, \">\").concat(_inner4, \"</\").concat(node.name, \">\"));\n            }\n          } else if ((0, _typeof2[\"default\"])(child) === 'object' && !isElement) {\n            var content = node.children[0] ? translationContent : null;\n            if (content) mem.push(content);\n          } else if (node.children.length === 1 && translationContent) {\n            mem.push((0, _react.cloneElement)(child, _objectSpread(_objectSpread({}, child.props), {}, {\n              key: i\n            }), translationContent));\n          } else {\n            mem.push((0, _react.cloneElement)(child, _objectSpread(_objectSpread({}, child.props), {}, {\n              key: i\n            })));\n          }\n        } else if (node.type === 'text') {\n          var wrapTextNodes = i18nOptions.transWrapTextNodes;\n          var _content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n          if (wrapTextNodes) {\n            mem.push((0, _react.createElement)(wrapTextNodes, {\n              key: \"\".concat(node.name, \"-\").concat(i)\n            }, _content));\n          } else {\n            mem.push(_content);\n          }\n        }\n        return mem;\n      }, []);\n    }\n    var result = mapAST([{\n      dummy: true,\n      children: children || []\n    }], ast, getAsArray(children || []));\n    return getChildren(result[0]);\n  }\n  function Trans(_ref) {\n    var children = _ref.children,\n      count = _ref.count,\n      parent = _ref.parent,\n      i18nKey = _ref.i18nKey,\n      context = _ref.context,\n      _ref$tOptions = _ref.tOptions,\n      tOptions = _ref$tOptions === void 0 ? {} : _ref$tOptions,\n      values = _ref.values,\n      defaults = _ref.defaults,\n      components = _ref.components,\n      ns = _ref.ns,\n      i18nFromProps = _ref.i18n,\n      tFromProps = _ref.t,\n      shouldUnescape = _ref.shouldUnescape,\n      additionalProps = (0, _objectWithoutProperties2[\"default\"])(_ref, _excluded2);\n    var i18n = i18nFromProps || (0, _i18nInstance.getI18n)();\n    if (!i18n) {\n      (0, _utils.warnOnce)('You will need to pass in an i18next instance by using i18nextReactModule');\n      return children;\n    }\n    var t = tFromProps || i18n.t.bind(i18n) || function (k) {\n      return k;\n    };\n    if (context) tOptions.context = context;\n    var reactI18nextOptions = _objectSpread(_objectSpread({}, (0, _defaults.getDefaults)()), i18n.options && i18n.options.react);\n    var namespaces = ns || t.ns || i18n.options && i18n.options.defaultNS;\n    namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n    var defaultValue = defaults || nodesToString(children, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n    var hashTransKey = reactI18nextOptions.hashTransKey;\n    var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n    var interpolationOverride = values ? tOptions.interpolation : {\n      interpolation: _objectSpread(_objectSpread({}, tOptions.interpolation), {}, {\n        prefix: '#$?',\n        suffix: '?$#'\n      })\n    };\n    var combinedTOpts = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, tOptions), {}, {\n      count: count\n    }, values), interpolationOverride), {}, {\n      defaultValue: defaultValue,\n      ns: namespaces\n    });\n    var translation = key ? t(key, combinedTOpts) : defaultValue;\n    var content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n    var useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n    return useAsParent ? (0, _react.createElement)(useAsParent, additionalProps, content) : content;\n  }\n});","lineCount":271,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"_interopRequireDefault"],[4,28,3,26],[4,31,3,29,"require"],[4,42,3,36],[4,43,3,36,"_dependencyMap"],[4,57,3,36],[4,108,3,83],[4,109,3,84],[5,2,5,0,"Object"],[5,8,5,6],[5,9,5,7,"defineProperty"],[5,23,5,21],[5,24,5,22,"exports"],[5,31,5,29],[5,33,5,31],[5,45,5,43],[5,47,5,45],[6,4,6,2,"value"],[6,9,6,7],[6,11,6,9],[7,2,7,0],[7,3,7,1],[7,4,7,2],[8,2,8,0,"exports"],[8,9,8,7],[8,10,8,8,"nodesToString"],[8,23,8,21],[8,26,8,24,"nodesToString"],[8,39,8,37],[9,2,9,0,"exports"],[9,9,9,7],[9,10,9,8,"Trans"],[9,15,9,13],[9,18,9,16,"Trans"],[9,23,9,21],[10,2,11,0],[10,6,11,4,"_objectWithoutProperties2"],[10,31,11,29],[10,34,11,32,"_interopRequireDefault"],[10,56,11,54],[10,57,11,55,"require"],[10,68,11,62],[10,69,11,62,"_dependencyMap"],[10,83,11,62],[10,136,11,111],[10,137,11,112],[10,138,11,113],[11,2,13,0],[11,6,13,4,"_typeof2"],[11,14,13,12],[11,17,13,15,"_interopRequireDefault"],[11,39,13,37],[11,40,13,38,"require"],[11,51,13,45],[11,52,13,45,"_dependencyMap"],[11,66,13,45],[11,102,13,77],[11,103,13,78],[11,104,13,79],[12,2,15,0],[12,6,15,4,"_defineProperty2"],[12,22,15,20],[12,25,15,23,"_interopRequireDefault"],[12,47,15,45],[12,48,15,46,"require"],[12,59,15,53],[12,60,15,53,"_dependencyMap"],[12,74,15,53],[12,118,15,93],[12,119,15,94],[12,120,15,95],[13,2,17,0],[13,6,17,4,"_react"],[13,12,17,10],[13,15,17,13,"require"],[13,26,17,20],[13,27,17,20,"_dependencyMap"],[13,41,17,20],[13,53,17,28],[13,54,17,29],[14,2,19,0],[14,6,19,4,"_htmlParseStringify"],[14,25,19,23],[14,28,19,26,"_interopRequireDefault"],[14,50,19,48],[14,51,19,49,"require"],[14,62,19,56],[14,63,19,56,"_dependencyMap"],[14,77,19,56],[14,104,19,79],[14,105,19,80],[14,106,19,81],[15,2,21,0],[15,6,21,4,"_utils"],[15,12,21,10],[15,15,21,13,"require"],[15,26,21,20],[15,27,21,20,"_dependencyMap"],[15,41,21,20],[15,58,21,33],[15,59,21,34],[16,2,23,0],[16,6,23,4,"_defaults"],[16,15,23,13],[16,18,23,16,"require"],[16,29,23,23],[16,30,23,23,"_dependencyMap"],[16,44,23,23],[16,64,23,39],[16,65,23,40],[17,2,25,0],[17,6,25,4,"_i18nInstance"],[17,19,25,17],[17,22,25,20,"require"],[17,33,25,27],[17,34,25,27,"_dependencyMap"],[17,48,25,27],[17,72,25,47],[17,73,25,48],[18,2,27,0],[18,6,27,4,"_excluded"],[18,15,27,13],[18,18,27,16],[18,19,27,17],[18,27,27,25],[18,28,27,26],[19,4,28,4,"_excluded2"],[19,14,28,14],[19,17,28,17],[19,18,28,18],[19,28,28,28],[19,30,28,30],[19,37,28,37],[19,39,28,39],[19,47,28,47],[19,49,28,49],[19,58,28,58],[19,60,28,60],[19,69,28,69],[19,71,28,71],[19,81,28,81],[19,83,28,83],[19,91,28,91],[19,93,28,93],[19,103,28,103],[19,105,28,105],[19,117,28,117],[19,119,28,119],[19,123,28,123],[19,125,28,125],[19,131,28,131],[19,133,28,133],[19,136,28,136],[19,138,28,138],[19,154,28,154],[19,155,28,155],[20,2,30,0],[20,11,30,9,"ownKeys"],[20,18,30,16,"ownKeys"],[20,19,30,17,"object"],[20,25,30,23],[20,27,30,25,"enumerableOnly"],[20,41,30,39],[20,43,30,41],[21,4,30,43],[21,8,30,47,"keys"],[21,12,30,51],[21,15,30,54,"Object"],[21,21,30,60],[21,22,30,61,"keys"],[21,26,30,65],[21,27,30,66,"object"],[21,33,30,72],[21,34,30,73],[22,4,30,75],[22,8,30,79,"Object"],[22,14,30,85],[22,15,30,86,"getOwnPropertySymbols"],[22,36,30,107],[22,38,30,109],[23,6,30,111],[23,10,30,115,"symbols"],[23,17,30,122],[23,20,30,125,"Object"],[23,26,30,131],[23,27,30,132,"getOwnPropertySymbols"],[23,48,30,153],[23,49,30,154,"object"],[23,55,30,160],[23,56,30,161],[24,6,30,163],[24,10,30,167,"enumerableOnly"],[24,24,30,181],[24,26,30,183],[25,8,30,185,"symbols"],[25,15,30,192],[25,18,30,195,"symbols"],[25,25,30,202],[25,26,30,203,"filter"],[25,32,30,209],[25,33,30,210],[25,43,30,220,"sym"],[25,46,30,223],[25,48,30,225],[26,10,30,227],[26,17,30,234,"Object"],[26,23,30,240],[26,24,30,241,"getOwnPropertyDescriptor"],[26,48,30,265],[26,49,30,266,"object"],[26,55,30,272],[26,57,30,274,"sym"],[26,60,30,277],[26,61,30,278],[26,62,30,279,"enumerable"],[26,72,30,289],[27,8,30,291],[27,9,30,292],[27,10,30,293],[28,6,30,295],[29,6,30,297,"keys"],[29,10,30,301],[29,11,30,302,"push"],[29,15,30,306],[29,16,30,307,"apply"],[29,21,30,312],[29,22,30,313,"keys"],[29,26,30,317],[29,28,30,319,"symbols"],[29,35,30,326],[29,36,30,327],[30,4,30,329],[31,4,30,331],[31,11,30,338,"keys"],[31,15,30,342],[32,2,30,344],[33,2,32,0],[33,11,32,9,"_objectSpread"],[33,24,32,22,"_objectSpread"],[33,25,32,23,"target"],[33,31,32,29],[33,33,32,31],[34,4,32,33],[34,9,32,38],[34,13,32,42,"i"],[34,14,32,43],[34,17,32,46],[34,18,32,47],[34,20,32,49,"i"],[34,21,32,50],[34,24,32,53,"arguments"],[34,33,32,62],[34,34,32,63,"length"],[34,40,32,69],[34,42,32,71,"i"],[34,43,32,72],[34,45,32,74],[34,47,32,76],[35,6,32,78],[35,10,32,82,"source"],[35,16,32,88],[35,19,32,91,"arguments"],[35,28,32,100],[35,29,32,101,"i"],[35,30,32,102],[35,31,32,103],[35,35,32,107],[35,39,32,111],[35,42,32,114,"arguments"],[35,51,32,123],[35,52,32,124,"i"],[35,53,32,125],[35,54,32,126],[35,57,32,129],[35,58,32,130],[35,59,32,131],[36,6,32,133],[36,10,32,137,"i"],[36,11,32,138],[36,14,32,141],[36,15,32,142],[36,17,32,144],[37,8,32,146,"ownKeys"],[37,15,32,153],[37,16,32,154,"Object"],[37,22,32,160],[37,23,32,161,"source"],[37,29,32,167],[37,30,32,168],[37,32,32,170],[37,36,32,174],[37,37,32,175],[37,38,32,176,"forEach"],[37,45,32,183],[37,46,32,184],[37,56,32,194,"key"],[37,59,32,197],[37,61,32,199],[38,10,32,201],[38,11,32,202],[38,12,32,203],[38,14,32,205,"_defineProperty2"],[38,30,32,221],[38,31,32,222],[38,40,32,231],[38,41,32,232],[38,43,32,234,"target"],[38,49,32,240],[38,51,32,242,"key"],[38,54,32,245],[38,56,32,247,"source"],[38,62,32,253],[38,63,32,254,"key"],[38,66,32,257],[38,67,32,258],[38,68,32,259],[39,8,32,261],[39,9,32,262],[39,10,32,263],[40,6,32,265],[40,7,32,266],[40,13,32,272],[40,17,32,276,"Object"],[40,23,32,282],[40,24,32,283,"getOwnPropertyDescriptors"],[40,49,32,308],[40,51,32,310],[41,8,32,312,"Object"],[41,14,32,318],[41,15,32,319,"defineProperties"],[41,31,32,335],[41,32,32,336,"target"],[41,38,32,342],[41,40,32,344,"Object"],[41,46,32,350],[41,47,32,351,"getOwnPropertyDescriptors"],[41,72,32,376],[41,73,32,377,"source"],[41,79,32,383],[41,80,32,384],[41,81,32,385],[42,6,32,387],[42,7,32,388],[42,13,32,394],[43,8,32,396,"ownKeys"],[43,15,32,403],[43,16,32,404,"Object"],[43,22,32,410],[43,23,32,411,"source"],[43,29,32,417],[43,30,32,418],[43,31,32,419],[43,32,32,420,"forEach"],[43,39,32,427],[43,40,32,428],[43,50,32,438,"key"],[43,53,32,441],[43,55,32,443],[44,10,32,445,"Object"],[44,16,32,451],[44,17,32,452,"defineProperty"],[44,31,32,466],[44,32,32,467,"target"],[44,38,32,473],[44,40,32,475,"key"],[44,43,32,478],[44,45,32,480,"Object"],[44,51,32,486],[44,52,32,487,"getOwnPropertyDescriptor"],[44,76,32,511],[44,77,32,512,"source"],[44,83,32,518],[44,85,32,520,"key"],[44,88,32,523],[44,89,32,524],[44,90,32,525],[45,8,32,527],[45,9,32,528],[45,10,32,529],[46,6,32,531],[47,4,32,533],[48,4,32,535],[48,11,32,542,"target"],[48,17,32,548],[49,2,32,550],[50,2,34,0],[50,11,34,9,"hasChildren"],[50,22,34,20,"hasChildren"],[50,23,34,21,"node"],[50,27,34,25],[50,29,34,27,"checkLength"],[50,40,34,38],[50,42,34,40],[51,4,35,2],[51,8,35,6],[51,9,35,7,"node"],[51,13,35,11],[51,15,35,13],[51,22,35,20],[51,27,35,25],[52,4,36,2],[52,8,36,6,"base"],[52,12,36,10],[52,15,36,13,"node"],[52,19,36,17],[52,20,36,18,"props"],[52,25,36,23],[52,28,36,26,"node"],[52,32,36,30],[52,33,36,31,"props"],[52,38,36,36],[52,39,36,37,"children"],[52,47,36,45],[52,50,36,48,"node"],[52,54,36,52],[52,55,36,53,"children"],[52,63,36,61],[53,4,37,2],[53,8,37,6,"checkLength"],[53,19,37,17],[53,21,37,19],[53,28,37,26,"base"],[53,32,37,30],[53,33,37,31,"length"],[53,39,37,37],[53,42,37,40],[53,43,37,41],[54,4,38,2],[54,11,38,9],[54,12,38,10],[54,13,38,11,"base"],[54,17,38,15],[55,2,39,0],[56,2,41,0],[56,11,41,9,"getChildren"],[56,22,41,20,"getChildren"],[56,23,41,21,"node"],[56,27,41,25],[56,29,41,27],[57,4,42,2],[57,8,42,6],[57,9,42,7,"node"],[57,13,42,11],[57,15,42,13],[57,22,42,20],[57,24,42,22],[58,4,43,2],[58,11,43,9,"node"],[58,15,43,13],[58,16,43,14,"props"],[58,21,43,19],[58,24,43,22,"node"],[58,28,43,26],[58,29,43,27,"props"],[58,34,43,32],[58,35,43,33,"children"],[58,43,43,41],[58,46,43,44,"node"],[58,50,43,48],[58,51,43,49,"children"],[58,59,43,57],[59,2,44,0],[60,2,46,0],[60,11,46,9,"hasValidReactChildren"],[60,32,46,30,"hasValidReactChildren"],[60,33,46,31,"children"],[60,41,46,39],[60,43,46,41],[61,4,47,2],[61,8,47,6,"Object"],[61,14,47,12],[61,15,47,13,"prototype"],[61,24,47,22],[61,25,47,23,"toString"],[61,33,47,31],[61,34,47,32,"call"],[61,38,47,36],[61,39,47,37,"children"],[61,47,47,45],[61,48,47,46],[61,53,47,51],[61,69,47,67],[61,71,47,69],[61,78,47,76],[61,83,47,81],[62,4,48,2],[62,11,48,9,"children"],[62,19,48,17],[62,20,48,18,"every"],[62,25,48,23],[62,26,48,24],[62,36,48,34,"child"],[62,41,48,39],[62,43,48,41],[63,6,49,4],[63,13,49,11],[63,14,49,12],[63,15,49,13],[63,17,49,15,"_react"],[63,23,49,21],[63,24,49,22,"isValidElement"],[63,38,49,36],[63,40,49,38,"child"],[63,45,49,43],[63,46,49,44],[64,4,50,2],[64,5,50,3],[64,6,50,4],[65,2,51,0],[66,2,53,0],[66,11,53,9,"getAsArray"],[66,21,53,19,"getAsArray"],[66,22,53,20,"data"],[66,26,53,24],[66,28,53,26],[67,4,54,2],[67,11,54,9,"Array"],[67,16,54,14],[67,17,54,15,"isArray"],[67,24,54,22],[67,25,54,23,"data"],[67,29,54,27],[67,30,54,28],[67,33,54,31,"data"],[67,37,54,35],[67,40,54,38],[67,41,54,39,"data"],[67,45,54,43],[67,46,54,44],[68,2,55,0],[69,2,57,0],[69,11,57,9,"mergeProps"],[69,21,57,19,"mergeProps"],[69,22,57,20,"source"],[69,28,57,26],[69,30,57,28,"target"],[69,36,57,34],[69,38,57,36],[70,4,58,2],[70,8,58,6,"newTarget"],[70,17,58,15],[70,20,58,18,"_objectSpread"],[70,33,58,31],[70,34,58,32],[70,35,58,33],[70,36,58,34],[70,38,58,36,"target"],[70,44,58,42],[70,45,58,43],[71,4,60,2,"newTarget"],[71,13,60,11],[71,14,60,12,"props"],[71,19,60,17],[71,22,60,20,"Object"],[71,28,60,26],[71,29,60,27,"assign"],[71,35,60,33],[71,36,60,34,"source"],[71,42,60,40],[71,43,60,41,"props"],[71,48,60,46],[71,50,60,48,"target"],[71,56,60,54],[71,57,60,55,"props"],[71,62,60,60],[71,63,60,61],[72,4,61,2],[72,11,61,9,"newTarget"],[72,20,61,18],[73,2,62,0],[74,2,64,0],[74,11,64,9,"nodesToString"],[74,24,64,22,"nodesToString"],[74,25,64,23,"children"],[74,33,64,31],[74,35,64,33,"i18nOptions"],[74,46,64,44],[74,48,64,46],[75,4,65,2],[75,8,65,6],[75,9,65,7,"children"],[75,17,65,15],[75,19,65,17],[75,26,65,24],[75,28,65,26],[76,4,66,2],[76,8,66,6,"stringNode"],[76,18,66,16],[76,21,66,19],[76,23,66,21],[77,4,67,2],[77,8,67,6,"childrenArray"],[77,21,67,19],[77,24,67,22,"getAsArray"],[77,34,67,32],[77,35,67,33,"children"],[77,43,67,41],[77,44,67,42],[78,4,68,2],[78,8,68,6,"keepArray"],[78,17,68,15],[78,20,68,18,"i18nOptions"],[78,31,68,29],[78,32,68,30,"transSupportBasicHtmlNodes"],[78,58,68,56],[78,62,68,60,"i18nOptions"],[78,73,68,71],[78,74,68,72,"transKeepBasicHtmlNodesFor"],[78,100,68,98],[78,103,68,101,"i18nOptions"],[78,114,68,112],[78,115,68,113,"transKeepBasicHtmlNodesFor"],[78,141,68,139],[78,144,68,142],[78,146,68,144],[79,4,69,2,"childrenArray"],[79,17,69,15],[79,18,69,16,"forEach"],[79,25,69,23],[79,26,69,24],[79,36,69,34,"child"],[79,41,69,39],[79,43,69,41,"childIndex"],[79,53,69,51],[79,55,69,53],[80,6,70,4],[80,10,70,8],[80,17,70,15,"child"],[80,22,70,20],[80,27,70,25],[80,35,70,33],[80,37,70,35],[81,8,71,6,"stringNode"],[81,18,71,16],[81,22,71,20],[81,24,71,22],[81,25,71,23,"concat"],[81,31,71,29],[81,32,71,30,"child"],[81,37,71,35],[81,38,71,36],[82,6,72,4],[82,7,72,5],[82,13,72,11],[82,17,72,15],[82,18,72,16],[82,19,72,17],[82,21,72,19,"_react"],[82,27,72,25],[82,28,72,26,"isValidElement"],[82,42,72,40],[82,44,72,42,"child"],[82,49,72,47],[82,50,72,48],[82,52,72,50],[83,8,73,6],[83,12,73,10,"childPropsCount"],[83,27,73,25],[83,30,73,28,"Object"],[83,36,73,34],[83,37,73,35,"keys"],[83,41,73,39],[83,42,73,40,"child"],[83,47,73,45],[83,48,73,46,"props"],[83,53,73,51],[83,54,73,52],[83,55,73,53,"length"],[83,61,73,59],[84,8,74,6],[84,12,74,10,"shouldKeepChild"],[84,27,74,25],[84,30,74,28,"keepArray"],[84,39,74,37],[84,40,74,38,"indexOf"],[84,47,74,45],[84,48,74,46,"child"],[84,53,74,51],[84,54,74,52,"type"],[84,58,74,56],[84,59,74,57],[84,62,74,60],[84,63,74,61],[84,64,74,62],[85,8,75,6],[85,12,75,10,"childChildren"],[85,25,75,23],[85,28,75,26,"child"],[85,33,75,31],[85,34,75,32,"props"],[85,39,75,37],[85,40,75,38,"children"],[85,48,75,46],[86,8,77,6],[86,12,77,10],[86,13,77,11,"childChildren"],[86,26,77,24],[86,30,77,28,"shouldKeepChild"],[86,45,77,43],[86,49,77,47,"childPropsCount"],[86,64,77,62],[86,69,77,67],[86,70,77,68],[86,72,77,70],[87,10,78,8,"stringNode"],[87,20,78,18],[87,24,78,22],[87,27,78,25],[87,28,78,26,"concat"],[87,34,78,32],[87,35,78,33,"child"],[87,40,78,38],[87,41,78,39,"type"],[87,45,78,43],[87,47,78,45],[87,51,78,49],[87,52,78,50],[88,8,79,6],[88,9,79,7],[88,15,79,13],[88,19,79,17],[88,20,79,18,"childChildren"],[88,33,79,31],[88,38,79,36],[88,39,79,37,"shouldKeepChild"],[88,54,79,52],[88,58,79,56,"childPropsCount"],[88,73,79,71],[88,78,79,76],[88,79,79,77],[88,80,79,78],[88,82,79,80],[89,10,80,8,"stringNode"],[89,20,80,18],[89,24,80,22],[89,27,80,25],[89,28,80,26,"concat"],[89,34,80,32],[89,35,80,33,"childIndex"],[89,45,80,43],[89,47,80,45],[89,52,80,50],[89,53,80,51],[89,54,80,52,"concat"],[89,60,80,58],[89,61,80,59,"childIndex"],[89,71,80,69],[89,73,80,71],[89,76,80,74],[89,77,80,75],[90,8,81,6],[90,9,81,7],[90,15,81,13],[90,19,81,17,"child"],[90,24,81,22],[90,25,81,23,"props"],[90,30,81,28],[90,31,81,29,"i18nIsDynamicList"],[90,48,81,46],[90,50,81,48],[91,10,82,8,"stringNode"],[91,20,82,18],[91,24,82,22],[91,27,82,25],[91,28,82,26,"concat"],[91,34,82,32],[91,35,82,33,"childIndex"],[91,45,82,43],[91,47,82,45],[91,52,82,50],[91,53,82,51],[91,54,82,52,"concat"],[91,60,82,58],[91,61,82,59,"childIndex"],[91,71,82,69],[91,73,82,71],[91,76,82,74],[91,77,82,75],[92,8,83,6],[92,9,83,7],[92,15,83,13],[92,19,83,17,"shouldKeepChild"],[92,34,83,32],[92,38,83,36,"childPropsCount"],[92,53,83,51],[92,58,83,56],[92,59,83,57],[92,63,83,61],[92,70,83,68,"childChildren"],[92,83,83,81],[92,88,83,86],[92,96,83,94],[92,98,83,96],[93,10,84,8,"stringNode"],[93,20,84,18],[93,24,84,22],[93,27,84,25],[93,28,84,26,"concat"],[93,34,84,32],[93,35,84,33,"child"],[93,40,84,38],[93,41,84,39,"type"],[93,45,84,43],[93,47,84,45],[93,50,84,48],[93,51,84,49],[93,52,84,50,"concat"],[93,58,84,56],[93,59,84,57,"childChildren"],[93,72,84,70],[93,74,84,72],[93,78,84,76],[93,79,84,77],[93,80,84,78,"concat"],[93,86,84,84],[93,87,84,85,"child"],[93,92,84,90],[93,93,84,91,"type"],[93,97,84,95],[93,99,84,97],[93,102,84,100],[93,103,84,101],[94,8,85,6],[94,9,85,7],[94,15,85,13],[95,10,86,8],[95,14,86,12,"content"],[95,21,86,19],[95,24,86,22,"nodesToString"],[95,37,86,35],[95,38,86,36,"childChildren"],[95,51,86,49],[95,53,86,51,"i18nOptions"],[95,64,86,62],[95,65,86,63],[96,10,87,8,"stringNode"],[96,20,87,18],[96,24,87,22],[96,27,87,25],[96,28,87,26,"concat"],[96,34,87,32],[96,35,87,33,"childIndex"],[96,45,87,43],[96,47,87,45],[96,50,87,48],[96,51,87,49],[96,52,87,50,"concat"],[96,58,87,56],[96,59,87,57,"content"],[96,66,87,64],[96,68,87,66],[96,72,87,70],[96,73,87,71],[96,74,87,72,"concat"],[96,80,87,78],[96,81,87,79,"childIndex"],[96,91,87,89],[96,93,87,91],[96,96,87,94],[96,97,87,95],[97,8,88,6],[98,6,89,4],[98,7,89,5],[98,13,89,11],[98,17,89,15,"child"],[98,22,89,20],[98,27,89,25],[98,31,89,29],[98,33,89,31],[99,8,90,6],[99,9,90,7],[99,10,90,8],[99,12,90,10,"_utils"],[99,18,90,16],[99,19,90,17,"warn"],[99,23,90,21],[99,25,90,23],[99,100,90,98],[99,101,90,99],[100,6,91,4],[100,7,91,5],[100,13,91,11],[100,17,91,15],[100,18,91,16],[100,19,91,17],[100,21,91,19,"_typeof2"],[100,29,91,27],[100,30,91,28],[100,39,91,37],[100,40,91,38],[100,42,91,40,"child"],[100,47,91,45],[100,48,91,46],[100,53,91,51],[100,61,91,59],[100,63,91,61],[101,8,92,6],[101,12,92,10,"format"],[101,18,92,16],[101,21,92,19,"child"],[101,26,92,24],[101,27,92,25,"format"],[101,33,92,31],[102,10,93,10,"clone"],[102,15,93,15],[102,18,93,18],[102,19,93,19],[102,20,93,20],[102,22,93,22,"_objectWithoutProperties2"],[102,47,93,47],[102,48,93,48],[102,57,93,57],[102,58,93,58],[102,60,93,60,"child"],[102,65,93,65],[102,67,93,67,"_excluded"],[102,76,93,76],[102,77,93,77],[103,8,94,6],[103,12,94,10,"keys"],[103,16,94,14],[103,19,94,17,"Object"],[103,25,94,23],[103,26,94,24,"keys"],[103,30,94,28],[103,31,94,29,"clone"],[103,36,94,34],[103,37,94,35],[104,8,96,6],[104,12,96,10,"keys"],[104,16,96,14],[104,17,96,15,"length"],[104,23,96,21],[104,28,96,26],[104,29,96,27],[104,31,96,29],[105,10,97,8],[105,14,97,12,"value"],[105,19,97,17],[105,22,97,20,"format"],[105,28,97,26],[105,31,97,29],[105,33,97,31],[105,34,97,32,"concat"],[105,40,97,38],[105,41,97,39,"keys"],[105,45,97,43],[105,46,97,44],[105,47,97,45],[105,48,97,46],[105,50,97,48],[105,54,97,52],[105,55,97,53],[105,56,97,54,"concat"],[105,62,97,60],[105,63,97,61,"format"],[105,69,97,67],[105,70,97,68],[105,73,97,71,"keys"],[105,77,97,75],[105,78,97,76],[105,79,97,77],[105,80,97,78],[106,10,98,8,"stringNode"],[106,20,98,18],[106,24,98,22],[106,28,98,26],[106,29,98,27,"concat"],[106,35,98,33],[106,36,98,34,"value"],[106,41,98,39],[106,43,98,41],[106,47,98,45],[106,48,98,46],[107,8,99,6],[107,9,99,7],[107,15,99,13],[108,10,100,8],[108,11,100,9],[108,12,100,10],[108,14,100,12,"_utils"],[108,20,100,18],[108,21,100,19,"warn"],[108,25,100,23],[108,27,100,25],[108,173,100,171],[108,175,100,173,"child"],[108,180,100,178],[108,181,100,179],[109,8,101,6],[110,6,102,4],[110,7,102,5],[110,13,102,11],[111,8,103,6],[111,9,103,7],[111,10,103,8],[111,12,103,10,"_utils"],[111,18,103,16],[111,19,103,17,"warn"],[111,23,103,21],[111,25,103,23],[111,189,103,187],[111,191,103,189,"child"],[111,196,103,194],[111,197,103,195],[112,6,104,4],[113,4,105,2],[113,5,105,3],[113,6,105,4],[114,4,106,2],[114,11,106,9,"stringNode"],[114,21,106,19],[115,2,107,0],[116,2,109,0],[116,11,109,9,"renderNodes"],[116,22,109,20,"renderNodes"],[116,23,109,21,"children"],[116,31,109,29],[116,33,109,31,"targetString"],[116,45,109,43],[116,47,109,45,"i18n"],[116,51,109,49],[116,53,109,51,"i18nOptions"],[116,64,109,62],[116,66,109,64,"combinedTOpts"],[116,79,109,77],[116,81,109,79,"shouldUnescape"],[116,95,109,93],[116,97,109,95],[117,4,110,2],[117,8,110,6,"targetString"],[117,20,110,18],[117,25,110,23],[117,27,110,25],[117,29,110,27],[117,36,110,34],[117,38,110,36],[118,4,111,2],[118,8,111,6,"keepArray"],[118,17,111,15],[118,20,111,18,"i18nOptions"],[118,31,111,29],[118,32,111,30,"transKeepBasicHtmlNodesFor"],[118,58,111,56],[118,62,111,60],[118,64,111,62],[119,4,112,2],[119,8,112,6,"emptyChildrenButNeedsHandling"],[119,37,112,35],[119,40,112,38,"targetString"],[119,52,112,50],[119,56,112,54],[119,60,112,58,"RegExp"],[119,66,112,64],[119,67,112,65,"keepArray"],[119,76,112,74],[119,77,112,75,"join"],[119,81,112,79],[119,82,112,80],[119,85,112,83],[119,86,112,84],[119,87,112,85],[119,88,112,86,"test"],[119,92,112,90],[119,93,112,91,"targetString"],[119,105,112,103],[119,106,112,104],[120,4,113,2],[120,8,113,6],[120,9,113,7,"children"],[120,17,113,15],[120,21,113,19],[120,22,113,20,"emptyChildrenButNeedsHandling"],[120,51,113,49],[120,53,113,51],[120,60,113,58],[120,61,113,59,"targetString"],[120,73,113,71],[120,74,113,72],[121,4,114,2],[121,8,114,6,"data"],[121,12,114,10],[121,15,114,13],[121,16,114,14],[121,17,114,15],[122,4,116,2],[122,13,116,11,"getData"],[122,20,116,18,"getData"],[122,21,116,19,"childs"],[122,27,116,25],[122,29,116,27],[123,6,117,4],[123,10,117,8,"childrenArray"],[123,23,117,21],[123,26,117,24,"getAsArray"],[123,36,117,34],[123,37,117,35,"childs"],[123,43,117,41],[123,44,117,42],[124,6,118,4,"childrenArray"],[124,19,118,17],[124,20,118,18,"forEach"],[124,27,118,25],[124,28,118,26],[124,38,118,36,"child"],[124,43,118,41],[124,45,118,43],[125,8,119,6],[125,12,119,10],[125,19,119,17,"child"],[125,24,119,22],[125,29,119,27],[125,37,119,35],[125,39,119,37],[126,8,120,6],[126,12,120,10,"hasChildren"],[126,23,120,21],[126,24,120,22,"child"],[126,29,120,27],[126,30,120,28],[126,32,120,30,"getData"],[126,39,120,37],[126,40,120,38,"getChildren"],[126,51,120,49],[126,52,120,50,"child"],[126,57,120,55],[126,58,120,56],[126,59,120,57],[126,60,120,58],[126,65,120,63],[126,69,120,67],[126,70,120,68],[126,71,120,69],[126,73,120,71,"_typeof2"],[126,81,120,79],[126,82,120,80],[126,91,120,89],[126,92,120,90],[126,94,120,92,"child"],[126,99,120,97],[126,100,120,98],[126,105,120,103],[126,113,120,111],[126,117,120,115],[126,118,120,116],[126,119,120,117],[126,120,120,118],[126,122,120,120,"_react"],[126,128,120,126],[126,129,120,127,"isValidElement"],[126,143,120,141],[126,145,120,143,"child"],[126,150,120,148],[126,151,120,149],[126,153,120,151,"Object"],[126,159,120,157],[126,160,120,158,"assign"],[126,166,120,164],[126,167,120,165,"data"],[126,171,120,169],[126,173,120,171,"child"],[126,178,120,176],[126,179,120,177],[127,6,121,4],[127,7,121,5],[127,8,121,6],[128,4,122,2],[129,4,124,2,"getData"],[129,11,124,9],[129,12,124,10,"children"],[129,20,124,18],[129,21,124,19],[130,4,126,2],[130,8,126,6,"ast"],[130,11,126,9],[130,14,126,12,"_htmlParseStringify"],[130,33,126,31],[130,34,126,32],[130,43,126,41],[130,44,126,42],[130,45,126,43,"parse"],[130,50,126,48],[130,51,126,49],[130,56,126,54],[130,57,126,55,"concat"],[130,63,126,61],[130,64,126,62,"targetString"],[130,76,126,74],[130,78,126,76],[130,84,126,82],[130,85,126,83],[130,86,126,84],[131,4,128,2],[131,8,128,6,"opts"],[131,12,128,10],[131,15,128,13,"_objectSpread"],[131,28,128,26],[131,29,128,27,"_objectSpread"],[131,42,128,40],[131,43,128,41],[131,44,128,42],[131,45,128,43],[131,47,128,45,"data"],[131,51,128,49],[131,52,128,50],[131,54,128,52,"combinedTOpts"],[131,67,128,65],[131,68,128,66],[132,4,130,2],[132,13,130,11,"renderInner"],[132,24,130,22,"renderInner"],[132,25,130,23,"child"],[132,30,130,28],[132,32,130,30,"node"],[132,36,130,34],[132,38,130,36,"rootReactNode"],[132,51,130,49],[132,53,130,51],[133,6,131,4],[133,10,131,8,"childs"],[133,16,131,14],[133,19,131,17,"getChildren"],[133,30,131,28],[133,31,131,29,"child"],[133,36,131,34],[133,37,131,35],[134,6,132,4],[134,10,132,8,"mappedChildren"],[134,24,132,22],[134,27,132,25,"mapAST"],[134,33,132,31],[134,34,132,32,"childs"],[134,40,132,38],[134,42,132,40,"node"],[134,46,132,44],[134,47,132,45,"children"],[134,55,132,53],[134,57,132,55,"rootReactNode"],[134,70,132,68],[134,71,132,69],[135,6,133,4],[135,13,133,11,"hasValidReactChildren"],[135,34,133,32],[135,35,133,33,"childs"],[135,41,133,39],[135,42,133,40],[135,46,133,44,"mappedChildren"],[135,60,133,58],[135,61,133,59,"length"],[135,67,133,65],[135,72,133,70],[135,73,133,71],[135,76,133,74,"childs"],[135,82,133,80],[135,85,133,83,"mappedChildren"],[135,99,133,97],[136,4,134,2],[137,4,136,2],[137,13,136,11,"pushTranslatedJSX"],[137,30,136,28,"pushTranslatedJSX"],[137,31,136,29,"child"],[137,36,136,34],[137,38,136,36,"inner"],[137,43,136,41],[137,45,136,43,"mem"],[137,48,136,46],[137,50,136,48,"i"],[137,51,136,49],[137,53,136,51,"isVoid"],[137,59,136,57],[137,61,136,59],[138,6,137,4],[138,10,137,8,"child"],[138,15,137,13],[138,16,137,14,"dummy"],[138,21,137,19],[138,23,137,21,"child"],[138,28,137,26],[138,29,137,27,"children"],[138,37,137,35],[138,40,137,38,"inner"],[138,45,137,43],[139,6,138,4,"mem"],[139,9,138,7],[139,10,138,8,"push"],[139,14,138,12],[139,15,138,13],[139,16,138,14],[139,17,138,15],[139,19,138,17,"_react"],[139,25,138,23],[139,26,138,24,"cloneElement"],[139,38,138,36],[139,40,138,38,"child"],[139,45,138,43],[139,47,138,45,"_objectSpread"],[139,60,138,58],[139,61,138,59,"_objectSpread"],[139,74,138,72],[139,75,138,73],[139,76,138,74],[139,77,138,75],[139,79,138,77,"child"],[139,84,138,82],[139,85,138,83,"props"],[139,90,138,88],[139,91,138,89],[139,93,138,91],[139,94,138,92],[139,95,138,93],[139,97,138,95],[140,8,139,6,"key"],[140,11,139,9],[140,13,139,11,"i"],[141,6,140,4],[141,7,140,5],[141,8,140,6],[141,10,140,8,"isVoid"],[141,16,140,14],[141,19,140,17,"undefined"],[141,28,140,26],[141,31,140,29,"inner"],[141,36,140,34],[141,37,140,35],[141,38,140,36],[142,4,141,2],[143,4,143,2],[143,13,143,11,"mapAST"],[143,19,143,17,"mapAST"],[143,20,143,18,"reactNode"],[143,29,143,27],[143,31,143,29,"astNode"],[143,38,143,36],[143,40,143,38,"rootReactNode"],[143,53,143,51],[143,55,143,53],[144,6,144,4],[144,10,144,8,"reactNodes"],[144,20,144,18],[144,23,144,21,"getAsArray"],[144,33,144,31],[144,34,144,32,"reactNode"],[144,43,144,41],[144,44,144,42],[145,6,145,4],[145,10,145,8,"astNodes"],[145,18,145,16],[145,21,145,19,"getAsArray"],[145,31,145,29],[145,32,145,30,"astNode"],[145,39,145,37],[145,40,145,38],[146,6,146,4],[146,13,146,11,"astNodes"],[146,21,146,19],[146,22,146,20,"reduce"],[146,28,146,26],[146,29,146,27],[146,39,146,37,"mem"],[146,42,146,40],[146,44,146,42,"node"],[146,48,146,46],[146,50,146,48,"i"],[146,51,146,49],[146,53,146,51],[147,8,147,6],[147,12,147,10,"translationContent"],[147,30,147,28],[147,33,147,31,"node"],[147,37,147,35],[147,38,147,36,"children"],[147,46,147,44],[147,50,147,48,"node"],[147,54,147,52],[147,55,147,53,"children"],[147,63,147,61],[147,64,147,62],[147,65,147,63],[147,66,147,64],[147,70,147,68,"node"],[147,74,147,72],[147,75,147,73,"children"],[147,83,147,81],[147,84,147,82],[147,85,147,83],[147,86,147,84],[147,87,147,85,"content"],[147,94,147,92],[147,98,147,96,"i18n"],[147,102,147,100],[147,103,147,101,"services"],[147,111,147,109],[147,112,147,110,"interpolator"],[147,124,147,122],[147,125,147,123,"interpolate"],[147,136,147,134],[147,137,147,135,"node"],[147,141,147,139],[147,142,147,140,"children"],[147,150,147,148],[147,151,147,149],[147,152,147,150],[147,153,147,151],[147,154,147,152,"content"],[147,161,147,159],[147,163,147,161,"opts"],[147,167,147,165],[147,169,147,167,"i18n"],[147,173,147,171],[147,174,147,172,"language"],[147,182,147,180],[147,183,147,181],[148,8,149,6],[148,12,149,10,"node"],[148,16,149,14],[148,17,149,15,"type"],[148,21,149,19],[148,26,149,24],[148,31,149,29],[148,33,149,31],[149,10,150,8],[149,14,150,12,"tmp"],[149,17,150,15],[149,20,150,18,"reactNodes"],[149,30,150,28],[149,31,150,29,"parseInt"],[149,39,150,37],[149,40,150,38,"node"],[149,44,150,42],[149,45,150,43,"name"],[149,49,150,47],[149,51,150,49],[149,53,150,51],[149,54,150,52],[149,55,150,53],[150,10,151,8],[150,14,151,12],[150,15,151,13,"tmp"],[150,18,151,16],[150,22,151,20,"rootReactNode"],[150,35,151,33],[150,36,151,34,"length"],[150,42,151,40],[150,47,151,45],[150,48,151,46],[150,52,151,50,"rootReactNode"],[150,65,151,63],[150,66,151,64],[150,67,151,65],[150,68,151,66],[150,69,151,67,"node"],[150,73,151,71],[150,74,151,72,"name"],[150,78,151,76],[150,79,151,77],[150,81,151,79,"tmp"],[150,84,151,82],[150,87,151,85,"rootReactNode"],[150,100,151,98],[150,101,151,99],[150,102,151,100],[150,103,151,101],[150,104,151,102,"node"],[150,108,151,106],[150,109,151,107,"name"],[150,113,151,111],[150,114,151,112],[151,10,152,8],[151,14,152,12],[151,15,152,13,"tmp"],[151,18,152,16],[151,20,152,18,"tmp"],[151,23,152,21],[151,26,152,24],[151,27,152,25],[151,28,152,26],[152,10,153,8],[152,14,153,12,"child"],[152,19,153,17],[152,22,153,20,"Object"],[152,28,153,26],[152,29,153,27,"keys"],[152,33,153,31],[152,34,153,32,"node"],[152,38,153,36],[152,39,153,37,"attrs"],[152,44,153,42],[152,45,153,43],[152,46,153,44,"length"],[152,52,153,50],[152,57,153,55],[152,58,153,56],[152,61,153,59,"mergeProps"],[152,71,153,69],[152,72,153,70],[153,12,154,10,"props"],[153,17,154,15],[153,19,154,17,"node"],[153,23,154,21],[153,24,154,22,"attrs"],[154,10,155,8],[154,11,155,9],[154,13,155,11,"tmp"],[154,16,155,14],[154,17,155,15],[154,20,155,18,"tmp"],[154,23,155,21],[155,10,156,8],[155,14,156,12,"isElement"],[155,23,156,21],[155,26,156,24],[155,27,156,25],[155,28,156,26],[155,30,156,28,"_react"],[155,36,156,34],[155,37,156,35,"isValidElement"],[155,51,156,49],[155,53,156,51,"child"],[155,58,156,56],[155,59,156,57],[156,10,157,8],[156,14,157,12,"isValidTranslationWithChildren"],[156,44,157,42],[156,47,157,45,"isElement"],[156,56,157,54],[156,60,157,58,"hasChildren"],[156,71,157,69],[156,72,157,70,"node"],[156,76,157,74],[156,78,157,76],[156,82,157,80],[156,83,157,81],[156,87,157,85],[156,88,157,86,"node"],[156,92,157,90],[156,93,157,91,"voidElement"],[156,104,157,102],[157,10,158,8],[157,14,158,12,"isEmptyTransWithHTML"],[157,34,158,32],[157,37,158,35,"emptyChildrenButNeedsHandling"],[157,66,158,64],[157,70,158,68],[157,71,158,69],[157,72,158,70],[157,74,158,72,"_typeof2"],[157,82,158,80],[157,83,158,81],[157,92,158,90],[157,93,158,91],[157,95,158,93,"child"],[157,100,158,98],[157,101,158,99],[157,106,158,104],[157,114,158,112],[157,118,158,116,"child"],[157,123,158,121],[157,124,158,122,"dummy"],[157,129,158,127],[157,133,158,131],[157,134,158,132,"isElement"],[157,143,158,141],[158,10,159,8],[158,14,159,12,"isKnownComponent"],[158,30,159,28],[158,33,159,31],[158,34,159,32],[158,35,159,33],[158,37,159,35,"_typeof2"],[158,45,159,43],[158,46,159,44],[158,55,159,53],[158,56,159,54],[158,58,159,56,"children"],[158,66,159,64],[158,67,159,65],[158,72,159,70],[158,80,159,78],[158,84,159,82,"children"],[158,92,159,90],[158,97,159,95],[158,101,159,99],[158,105,159,103,"Object"],[158,111,159,109],[158,112,159,110,"hasOwnProperty"],[158,126,159,124],[158,127,159,125,"call"],[158,131,159,129],[158,132,159,130,"children"],[158,140,159,138],[158,142,159,140,"node"],[158,146,159,144],[158,147,159,145,"name"],[158,151,159,149],[158,152,159,150],[159,10,161,8],[159,14,161,12],[159,21,161,19,"child"],[159,26,161,24],[159,31,161,29],[159,39,161,37],[159,41,161,39],[160,12,162,10],[160,16,162,14,"value"],[160,21,162,19],[160,24,162,22,"i18n"],[160,28,162,26],[160,29,162,27,"services"],[160,37,162,35],[160,38,162,36,"interpolator"],[160,50,162,48],[160,51,162,49,"interpolate"],[160,62,162,60],[160,63,162,61,"child"],[160,68,162,66],[160,70,162,68,"opts"],[160,74,162,72],[160,76,162,74,"i18n"],[160,80,162,78],[160,81,162,79,"language"],[160,89,162,87],[160,90,162,88],[161,12,163,10,"mem"],[161,15,163,13],[161,16,163,14,"push"],[161,20,163,18],[161,21,163,19,"value"],[161,26,163,24],[161,27,163,25],[162,10,164,8],[162,11,164,9],[162,17,164,15],[162,21,164,19,"hasChildren"],[162,32,164,30],[162,33,164,31,"child"],[162,38,164,36],[162,39,164,37],[162,43,164,41,"isValidTranslationWithChildren"],[162,73,164,71],[162,75,164,73],[163,12,165,12],[163,16,165,16,"inner"],[163,21,165,21],[163,24,165,24,"renderInner"],[163,35,165,35],[163,36,165,36,"child"],[163,41,165,41],[163,43,165,43,"node"],[163,47,165,47],[163,49,165,49,"rootReactNode"],[163,62,165,62],[163,63,165,63],[164,12,166,12,"pushTranslatedJSX"],[164,29,166,29],[164,30,166,30,"child"],[164,35,166,35],[164,37,166,37,"inner"],[164,42,166,42],[164,44,166,44,"mem"],[164,47,166,47],[164,49,166,49,"i"],[164,50,166,50],[164,51,166,51],[165,10,167,10],[165,11,167,11],[165,17,167,17],[165,21,167,21,"isEmptyTransWithHTML"],[165,41,167,41],[165,43,167,43],[166,12,168,10],[166,16,168,14,"_inner"],[166,22,168,20],[166,25,168,23,"mapAST"],[166,31,168,29],[166,32,168,30,"reactNodes"],[166,42,168,40],[166,44,168,42,"node"],[166,48,168,46],[166,49,168,47,"children"],[166,57,168,55],[166,59,168,57,"rootReactNode"],[166,72,168,70],[166,73,168,71],[167,12,170,10,"mem"],[167,15,170,13],[167,16,170,14,"push"],[167,20,170,18],[167,21,170,19],[167,22,170,20],[167,23,170,21],[167,25,170,23,"_react"],[167,31,170,29],[167,32,170,30,"cloneElement"],[167,44,170,42],[167,46,170,44,"child"],[167,51,170,49],[167,53,170,51,"_objectSpread"],[167,66,170,64],[167,67,170,65,"_objectSpread"],[167,80,170,78],[167,81,170,79],[167,82,170,80],[167,83,170,81],[167,85,170,83,"child"],[167,90,170,88],[167,91,170,89,"props"],[167,96,170,94],[167,97,170,95],[167,99,170,97],[167,100,170,98],[167,101,170,99],[167,103,170,101],[168,14,171,12,"key"],[168,17,171,15],[168,19,171,17,"i"],[169,12,172,10],[169,13,172,11],[169,14,172,12],[169,16,172,14,"_inner"],[169,22,172,20],[169,23,172,21],[169,24,172,22],[170,10,173,8],[170,11,173,9],[170,17,173,15],[170,21,173,19,"Number"],[170,27,173,25],[170,28,173,26,"isNaN"],[170,33,173,31],[170,34,173,32,"parseFloat"],[170,44,173,42],[170,45,173,43,"node"],[170,49,173,47],[170,50,173,48,"name"],[170,54,173,52],[170,55,173,53],[170,56,173,54],[170,58,173,56],[171,12,174,10],[171,16,174,14,"isKnownComponent"],[171,32,174,30],[171,34,174,32],[172,14,175,12],[172,18,175,16,"_inner2"],[172,25,175,23],[172,28,175,26,"renderInner"],[172,39,175,37],[172,40,175,38,"child"],[172,45,175,43],[172,47,175,45,"node"],[172,51,175,49],[172,53,175,51,"rootReactNode"],[172,66,175,64],[172,67,175,65],[173,14,177,12,"pushTranslatedJSX"],[173,31,177,29],[173,32,177,30,"child"],[173,37,177,35],[173,39,177,37,"_inner2"],[173,46,177,44],[173,48,177,46,"mem"],[173,51,177,49],[173,53,177,51,"i"],[173,54,177,52],[173,56,177,54,"node"],[173,60,177,58],[173,61,177,59,"voidElement"],[173,72,177,70],[173,73,177,71],[174,12,178,10],[174,13,178,11],[174,19,178,17],[174,23,178,21,"i18nOptions"],[174,34,178,32],[174,35,178,33,"transSupportBasicHtmlNodes"],[174,61,178,59],[174,65,178,63,"keepArray"],[174,74,178,72],[174,75,178,73,"indexOf"],[174,82,178,80],[174,83,178,81,"node"],[174,87,178,85],[174,88,178,86,"name"],[174,92,178,90],[174,93,178,91],[174,96,178,94],[174,97,178,95],[174,98,178,96],[174,100,178,98],[175,14,179,12],[175,18,179,16,"node"],[175,22,179,20],[175,23,179,21,"voidElement"],[175,34,179,32],[175,36,179,34],[176,16,180,14,"mem"],[176,19,180,17],[176,20,180,18,"push"],[176,24,180,22],[176,25,180,23],[176,26,180,24],[176,27,180,25],[176,29,180,27,"_react"],[176,35,180,33],[176,36,180,34,"createElement"],[176,49,180,47],[176,51,180,49,"node"],[176,55,180,53],[176,56,180,54,"name"],[176,60,180,58],[176,62,180,60],[177,18,181,16,"key"],[177,21,181,19],[177,23,181,21],[177,25,181,23],[177,26,181,24,"concat"],[177,32,181,30],[177,33,181,31,"node"],[177,37,181,35],[177,38,181,36,"name"],[177,42,181,40],[177,44,181,42],[177,47,181,45],[177,48,181,46],[177,49,181,47,"concat"],[177,55,181,53],[177,56,181,54,"i"],[177,57,181,55],[178,16,182,14],[178,17,182,15],[178,18,182,16],[178,19,182,17],[179,14,183,12],[179,15,183,13],[179,21,183,19],[180,16,184,14],[180,20,184,18,"_inner3"],[180,27,184,25],[180,30,184,28,"mapAST"],[180,36,184,34],[180,37,184,35,"reactNodes"],[180,47,184,45],[180,49,184,47,"node"],[180,53,184,51],[180,54,184,52,"children"],[180,62,184,60],[180,64,184,62,"rootReactNode"],[180,77,184,75],[180,78,184,76],[181,16,186,14,"mem"],[181,19,186,17],[181,20,186,18,"push"],[181,24,186,22],[181,25,186,23],[181,26,186,24],[181,27,186,25],[181,29,186,27,"_react"],[181,35,186,33],[181,36,186,34,"createElement"],[181,49,186,47],[181,51,186,49,"node"],[181,55,186,53],[181,56,186,54,"name"],[181,60,186,58],[181,62,186,60],[182,18,187,16,"key"],[182,21,187,19],[182,23,187,21],[182,25,187,23],[182,26,187,24,"concat"],[182,32,187,30],[182,33,187,31,"node"],[182,37,187,35],[182,38,187,36,"name"],[182,42,187,40],[182,44,187,42],[182,47,187,45],[182,48,187,46],[182,49,187,47,"concat"],[182,55,187,53],[182,56,187,54,"i"],[182,57,187,55],[183,16,188,14],[183,17,188,15],[183,19,188,17,"_inner3"],[183,26,188,24],[183,27,188,25],[183,28,188,26],[184,14,189,12],[185,12,190,10],[185,13,190,11],[185,19,190,17],[185,23,190,21,"node"],[185,27,190,25],[185,28,190,26,"voidElement"],[185,39,190,37],[185,41,190,39],[186,14,191,12,"mem"],[186,17,191,15],[186,18,191,16,"push"],[186,22,191,20],[186,23,191,21],[186,26,191,24],[186,27,191,25,"concat"],[186,33,191,31],[186,34,191,32,"node"],[186,38,191,36],[186,39,191,37,"name"],[186,43,191,41],[186,45,191,43],[186,50,191,48],[186,51,191,49],[186,52,191,50],[187,12,192,10],[187,13,192,11],[187,19,192,17],[188,14,193,12],[188,18,193,16,"_inner4"],[188,25,193,23],[188,28,193,26,"mapAST"],[188,34,193,32],[188,35,193,33,"reactNodes"],[188,45,193,43],[188,47,193,45,"node"],[188,51,193,49],[188,52,193,50,"children"],[188,60,193,58],[188,62,193,60,"rootReactNode"],[188,75,193,73],[188,76,193,74],[189,14,195,12,"mem"],[189,17,195,15],[189,18,195,16,"push"],[189,22,195,20],[189,23,195,21],[189,26,195,24],[189,27,195,25,"concat"],[189,33,195,31],[189,34,195,32,"node"],[189,38,195,36],[189,39,195,37,"name"],[189,43,195,41],[189,45,195,43],[189,48,195,46],[189,49,195,47],[189,50,195,48,"concat"],[189,56,195,54],[189,57,195,55,"_inner4"],[189,64,195,62],[189,66,195,64],[189,70,195,68],[189,71,195,69],[189,72,195,70,"concat"],[189,78,195,76],[189,79,195,77,"node"],[189,83,195,81],[189,84,195,82,"name"],[189,88,195,86],[189,90,195,88],[189,93,195,91],[189,94,195,92],[189,95,195,93],[190,12,196,10],[191,10,197,8],[191,11,197,9],[191,17,197,15],[191,21,197,19],[191,22,197,20],[191,23,197,21],[191,25,197,23,"_typeof2"],[191,33,197,31],[191,34,197,32],[191,43,197,41],[191,44,197,42],[191,46,197,44,"child"],[191,51,197,49],[191,52,197,50],[191,57,197,55],[191,65,197,63],[191,69,197,67],[191,70,197,68,"isElement"],[191,79,197,77],[191,81,197,79],[192,12,198,10],[192,16,198,14,"content"],[192,23,198,21],[192,26,198,24,"node"],[192,30,198,28],[192,31,198,29,"children"],[192,39,198,37],[192,40,198,38],[192,41,198,39],[192,42,198,40],[192,45,198,43,"translationContent"],[192,63,198,61],[192,66,198,64],[192,70,198,68],[193,12,199,10],[193,16,199,14,"content"],[193,23,199,21],[193,25,199,23,"mem"],[193,28,199,26],[193,29,199,27,"push"],[193,33,199,31],[193,34,199,32,"content"],[193,41,199,39],[193,42,199,40],[194,10,200,8],[194,11,200,9],[194,17,200,15],[194,21,200,19,"node"],[194,25,200,23],[194,26,200,24,"children"],[194,34,200,32],[194,35,200,33,"length"],[194,41,200,39],[194,46,200,44],[194,47,200,45],[194,51,200,49,"translationContent"],[194,69,200,67],[194,71,200,69],[195,12,201,10,"mem"],[195,15,201,13],[195,16,201,14,"push"],[195,20,201,18],[195,21,201,19],[195,22,201,20],[195,23,201,21],[195,25,201,23,"_react"],[195,31,201,29],[195,32,201,30,"cloneElement"],[195,44,201,42],[195,46,201,44,"child"],[195,51,201,49],[195,53,201,51,"_objectSpread"],[195,66,201,64],[195,67,201,65,"_objectSpread"],[195,80,201,78],[195,81,201,79],[195,82,201,80],[195,83,201,81],[195,85,201,83,"child"],[195,90,201,88],[195,91,201,89,"props"],[195,96,201,94],[195,97,201,95],[195,99,201,97],[195,100,201,98],[195,101,201,99],[195,103,201,101],[196,14,202,12,"key"],[196,17,202,15],[196,19,202,17,"i"],[197,12,203,10],[197,13,203,11],[197,14,203,12],[197,16,203,14,"translationContent"],[197,34,203,32],[197,35,203,33],[197,36,203,34],[198,10,204,8],[198,11,204,9],[198,17,204,15],[199,12,205,10,"mem"],[199,15,205,13],[199,16,205,14,"push"],[199,20,205,18],[199,21,205,19],[199,22,205,20],[199,23,205,21],[199,25,205,23,"_react"],[199,31,205,29],[199,32,205,30,"cloneElement"],[199,44,205,42],[199,46,205,44,"child"],[199,51,205,49],[199,53,205,51,"_objectSpread"],[199,66,205,64],[199,67,205,65,"_objectSpread"],[199,80,205,78],[199,81,205,79],[199,82,205,80],[199,83,205,81],[199,85,205,83,"child"],[199,90,205,88],[199,91,205,89,"props"],[199,96,205,94],[199,97,205,95],[199,99,205,97],[199,100,205,98],[199,101,205,99],[199,103,205,101],[200,14,206,12,"key"],[200,17,206,15],[200,19,206,17,"i"],[201,12,207,10],[201,13,207,11],[201,14,207,12],[201,15,207,13],[201,16,207,14],[202,10,208,8],[203,8,209,6],[203,9,209,7],[203,15,209,13],[203,19,209,17,"node"],[203,23,209,21],[203,24,209,22,"type"],[203,28,209,26],[203,33,209,31],[203,39,209,37],[203,41,209,39],[204,10,210,8],[204,14,210,12,"wrapTextNodes"],[204,27,210,25],[204,30,210,28,"i18nOptions"],[204,41,210,39],[204,42,210,40,"transWrapTextNodes"],[204,60,210,58],[205,10,212,8],[205,14,212,12,"_content"],[205,22,212,20],[205,25,212,23,"shouldUnescape"],[205,39,212,37],[205,42,212,40,"i18nOptions"],[205,53,212,51],[205,54,212,52,"unescape"],[205,62,212,60],[205,63,212,61,"i18n"],[205,67,212,65],[205,68,212,66,"services"],[205,76,212,74],[205,77,212,75,"interpolator"],[205,89,212,87],[205,90,212,88,"interpolate"],[205,101,212,99],[205,102,212,100,"node"],[205,106,212,104],[205,107,212,105,"content"],[205,114,212,112],[205,116,212,114,"opts"],[205,120,212,118],[205,122,212,120,"i18n"],[205,126,212,124],[205,127,212,125,"language"],[205,135,212,133],[205,136,212,134],[205,137,212,135],[205,140,212,138,"i18n"],[205,144,212,142],[205,145,212,143,"services"],[205,153,212,151],[205,154,212,152,"interpolator"],[205,166,212,164],[205,167,212,165,"interpolate"],[205,178,212,176],[205,179,212,177,"node"],[205,183,212,181],[205,184,212,182,"content"],[205,191,212,189],[205,193,212,191,"opts"],[205,197,212,195],[205,199,212,197,"i18n"],[205,203,212,201],[205,204,212,202,"language"],[205,212,212,210],[205,213,212,211],[206,10,214,8],[206,14,214,12,"wrapTextNodes"],[206,27,214,25],[206,29,214,27],[207,12,215,10,"mem"],[207,15,215,13],[207,16,215,14,"push"],[207,20,215,18],[207,21,215,19],[207,22,215,20],[207,23,215,21],[207,25,215,23,"_react"],[207,31,215,29],[207,32,215,30,"createElement"],[207,45,215,43],[207,47,215,45,"wrapTextNodes"],[207,60,215,58],[207,62,215,60],[208,14,216,12,"key"],[208,17,216,15],[208,19,216,17],[208,21,216,19],[208,22,216,20,"concat"],[208,28,216,26],[208,29,216,27,"node"],[208,33,216,31],[208,34,216,32,"name"],[208,38,216,36],[208,40,216,38],[208,43,216,41],[208,44,216,42],[208,45,216,43,"concat"],[208,51,216,49],[208,52,216,50,"i"],[208,53,216,51],[209,12,217,10],[209,13,217,11],[209,15,217,13,"_content"],[209,23,217,21],[209,24,217,22],[209,25,217,23],[210,10,218,8],[210,11,218,9],[210,17,218,15],[211,12,219,10,"mem"],[211,15,219,13],[211,16,219,14,"push"],[211,20,219,18],[211,21,219,19,"_content"],[211,29,219,27],[211,30,219,28],[212,10,220,8],[213,8,221,6],[214,8,223,6],[214,15,223,13,"mem"],[214,18,223,16],[215,6,224,4],[215,7,224,5],[215,9,224,7],[215,11,224,9],[215,12,224,10],[216,4,225,2],[217,4,227,2],[217,8,227,6,"result"],[217,14,227,12],[217,17,227,15,"mapAST"],[217,23,227,21],[217,24,227,22],[217,25,227,23],[218,6,228,4,"dummy"],[218,11,228,9],[218,13,228,11],[218,17,228,15],[219,6,229,4,"children"],[219,14,229,12],[219,16,229,14,"children"],[219,24,229,22],[219,28,229,26],[220,4,230,2],[220,5,230,3],[220,6,230,4],[220,8,230,6,"ast"],[220,11,230,9],[220,13,230,11,"getAsArray"],[220,23,230,21],[220,24,230,22,"children"],[220,32,230,30],[220,36,230,34],[220,38,230,36],[220,39,230,37],[220,40,230,38],[221,4,231,2],[221,11,231,9,"getChildren"],[221,22,231,20],[221,23,231,21,"result"],[221,29,231,27],[221,30,231,28],[221,31,231,29],[221,32,231,30],[221,33,231,31],[222,2,232,0],[223,2,234,0],[223,11,234,9,"Trans"],[223,16,234,14,"Trans"],[223,17,234,15,"_ref"],[223,21,234,19],[223,23,234,21],[224,4,235,2],[224,8,235,6,"children"],[224,16,235,14],[224,19,235,17,"_ref"],[224,23,235,21],[224,24,235,22,"children"],[224,32,235,30],[225,6,236,6,"count"],[225,11,236,11],[225,14,236,14,"_ref"],[225,18,236,18],[225,19,236,19,"count"],[225,24,236,24],[226,6,237,6,"parent"],[226,12,237,12],[226,15,237,15,"_ref"],[226,19,237,19],[226,20,237,20,"parent"],[226,26,237,26],[227,6,238,6,"i18nKey"],[227,13,238,13],[227,16,238,16,"_ref"],[227,20,238,20],[227,21,238,21,"i18nKey"],[227,28,238,28],[228,6,239,6,"context"],[228,13,239,13],[228,16,239,16,"_ref"],[228,20,239,20],[228,21,239,21,"context"],[228,28,239,28],[229,6,240,6,"_ref$tOptions"],[229,19,240,19],[229,22,240,22,"_ref"],[229,26,240,26],[229,27,240,27,"tOptions"],[229,35,240,35],[230,6,241,6,"tOptions"],[230,14,241,14],[230,17,241,17,"_ref$tOptions"],[230,30,241,30],[230,35,241,35],[230,40,241,40],[230,41,241,41],[230,44,241,44],[230,45,241,45],[230,46,241,46],[230,49,241,49,"_ref$tOptions"],[230,62,241,62],[231,6,242,6,"values"],[231,12,242,12],[231,15,242,15,"_ref"],[231,19,242,19],[231,20,242,20,"values"],[231,26,242,26],[232,6,243,6,"defaults"],[232,14,243,14],[232,17,243,17,"_ref"],[232,21,243,21],[232,22,243,22,"defaults"],[232,30,243,30],[233,6,244,6,"components"],[233,16,244,16],[233,19,244,19,"_ref"],[233,23,244,23],[233,24,244,24,"components"],[233,34,244,34],[234,6,245,6,"ns"],[234,8,245,8],[234,11,245,11,"_ref"],[234,15,245,15],[234,16,245,16,"ns"],[234,18,245,18],[235,6,246,6,"i18nFromProps"],[235,19,246,19],[235,22,246,22,"_ref"],[235,26,246,26],[235,27,246,27,"i18n"],[235,31,246,31],[236,6,247,6,"tFromProps"],[236,16,247,16],[236,19,247,19,"_ref"],[236,23,247,23],[236,24,247,24,"t"],[236,25,247,25],[237,6,248,6,"shouldUnescape"],[237,20,248,20],[237,23,248,23,"_ref"],[237,27,248,27],[237,28,248,28,"shouldUnescape"],[237,42,248,42],[238,6,249,6,"additionalProps"],[238,21,249,21],[238,24,249,24],[238,25,249,25],[238,26,249,26],[238,28,249,28,"_objectWithoutProperties2"],[238,53,249,53],[238,54,249,54],[238,63,249,63],[238,64,249,64],[238,66,249,66,"_ref"],[238,70,249,70],[238,72,249,72,"_excluded2"],[238,82,249,82],[238,83,249,83],[239,4,250,2],[239,8,250,6,"i18n"],[239,12,250,10],[239,15,250,13,"i18nFromProps"],[239,28,250,26],[239,32,250,30],[239,33,250,31],[239,34,250,32],[239,36,250,34,"_i18nInstance"],[239,49,250,47],[239,50,250,48,"getI18n"],[239,57,250,55],[239,59,250,57],[239,60,250,58],[240,4,252,2],[240,8,252,6],[240,9,252,7,"i18n"],[240,13,252,11],[240,15,252,13],[241,6,253,4],[241,7,253,5],[241,8,253,6],[241,10,253,8,"_utils"],[241,16,253,14],[241,17,253,15,"warnOnce"],[241,25,253,23],[241,27,253,25],[241,101,253,99],[241,102,253,100],[242,6,254,4],[242,13,254,11,"children"],[242,21,254,19],[243,4,255,2],[244,4,257,2],[244,8,257,6,"t"],[244,9,257,7],[244,12,257,10,"tFromProps"],[244,22,257,20],[244,26,257,24,"i18n"],[244,30,257,28],[244,31,257,29,"t"],[244,32,257,30],[244,33,257,31,"bind"],[244,37,257,35],[244,38,257,36,"i18n"],[244,42,257,40],[244,43,257,41],[244,47,257,45],[244,57,257,55,"k"],[244,58,257,56],[244,60,257,58],[245,6,258,4],[245,13,258,11,"k"],[245,14,258,12],[246,4,259,2],[246,5,259,3],[247,4,261,2],[247,8,261,6,"context"],[247,15,261,13],[247,17,261,15,"tOptions"],[247,25,261,23],[247,26,261,24,"context"],[247,33,261,31],[247,36,261,34,"context"],[247,43,261,41],[248,4,263,2],[248,8,263,6,"reactI18nextOptions"],[248,27,263,25],[248,30,263,28,"_objectSpread"],[248,43,263,41],[248,44,263,42,"_objectSpread"],[248,57,263,55],[248,58,263,56],[248,59,263,57],[248,60,263,58],[248,62,263,60],[248,63,263,61],[248,64,263,62],[248,66,263,64,"_defaults"],[248,75,263,73],[248,76,263,74,"getDefaults"],[248,87,263,85],[248,89,263,87],[248,90,263,88],[248,91,263,89],[248,93,263,91,"i18n"],[248,97,263,95],[248,98,263,96,"options"],[248,105,263,103],[248,109,263,107,"i18n"],[248,113,263,111],[248,114,263,112,"options"],[248,121,263,119],[248,122,263,120,"react"],[248,127,263,125],[248,128,263,126],[249,4,265,2],[249,8,265,6,"namespaces"],[249,18,265,16],[249,21,265,19,"ns"],[249,23,265,21],[249,27,265,25,"t"],[249,28,265,26],[249,29,265,27,"ns"],[249,31,265,29],[249,35,265,33,"i18n"],[249,39,265,37],[249,40,265,38,"options"],[249,47,265,45],[249,51,265,49,"i18n"],[249,55,265,53],[249,56,265,54,"options"],[249,63,265,61],[249,64,265,62,"defaultNS"],[249,73,265,71],[250,4,266,2,"namespaces"],[250,14,266,12],[250,17,266,15],[250,24,266,22,"namespaces"],[250,34,266,32],[250,39,266,37],[250,47,266,45],[250,50,266,48],[250,51,266,49,"namespaces"],[250,61,266,59],[250,62,266,60],[250,65,266,63,"namespaces"],[250,75,266,73],[250,79,266,77],[250,80,266,78],[250,93,266,91],[250,94,266,92],[251,4,267,2],[251,8,267,6,"defaultValue"],[251,20,267,18],[251,23,267,21,"defaults"],[251,31,267,29],[251,35,267,33,"nodesToString"],[251,48,267,46],[251,49,267,47,"children"],[251,57,267,55],[251,59,267,57,"reactI18nextOptions"],[251,78,267,76],[251,79,267,77],[251,83,267,81,"reactI18nextOptions"],[251,102,267,100],[251,103,267,101,"transEmptyNodeValue"],[251,122,267,120],[251,126,267,124,"i18nKey"],[251,133,267,131],[252,4,268,2],[252,8,268,6,"hashTransKey"],[252,20,268,18],[252,23,268,21,"reactI18nextOptions"],[252,42,268,40],[252,43,268,41,"hashTransKey"],[252,55,268,53],[253,4,269,2],[253,8,269,6,"key"],[253,11,269,9],[253,14,269,12,"i18nKey"],[253,21,269,19],[253,26,269,24,"hashTransKey"],[253,38,269,36],[253,41,269,39,"hashTransKey"],[253,53,269,51],[253,54,269,52,"defaultValue"],[253,66,269,64],[253,67,269,65],[253,70,269,68,"defaultValue"],[253,82,269,80],[253,83,269,81],[254,4,270,2],[254,8,270,6,"interpolationOverride"],[254,29,270,27],[254,32,270,30,"values"],[254,38,270,36],[254,41,270,39,"tOptions"],[254,49,270,47],[254,50,270,48,"interpolation"],[254,63,270,61],[254,66,270,64],[255,6,271,4,"interpolation"],[255,19,271,17],[255,21,271,19,"_objectSpread"],[255,34,271,32],[255,35,271,33,"_objectSpread"],[255,48,271,46],[255,49,271,47],[255,50,271,48],[255,51,271,49],[255,53,271,51,"tOptions"],[255,61,271,59],[255,62,271,60,"interpolation"],[255,75,271,73],[255,76,271,74],[255,78,271,76],[255,79,271,77],[255,80,271,78],[255,82,271,80],[256,8,272,6,"prefix"],[256,14,272,12],[256,16,272,14],[256,21,272,19],[257,8,273,6,"suffix"],[257,14,273,12],[257,16,273,14],[258,6,274,4],[258,7,274,5],[259,4,275,2],[259,5,275,3],[260,4,277,2],[260,8,277,6,"combinedTOpts"],[260,21,277,19],[260,24,277,22,"_objectSpread"],[260,37,277,35],[260,38,277,36,"_objectSpread"],[260,51,277,49],[260,52,277,50,"_objectSpread"],[260,65,277,63],[260,66,277,64,"_objectSpread"],[260,79,277,77],[260,80,277,78],[260,81,277,79],[260,82,277,80],[260,84,277,82,"tOptions"],[260,92,277,90],[260,93,277,91],[260,95,277,93],[260,96,277,94],[260,97,277,95],[260,99,277,97],[261,6,278,4,"count"],[261,11,278,9],[261,13,278,11,"count"],[262,4,279,2],[262,5,279,3],[262,7,279,5,"values"],[262,13,279,11],[262,14,279,12],[262,16,279,14,"interpolationOverride"],[262,37,279,35],[262,38,279,36],[262,40,279,38],[262,41,279,39],[262,42,279,40],[262,44,279,42],[263,6,280,4,"defaultValue"],[263,18,280,16],[263,20,280,18,"defaultValue"],[263,32,280,30],[264,6,281,4,"ns"],[264,8,281,6],[264,10,281,8,"namespaces"],[265,4,282,2],[265,5,282,3],[265,6,282,4],[266,4,284,2],[266,8,284,6,"translation"],[266,19,284,17],[266,22,284,20,"key"],[266,25,284,23],[266,28,284,26,"t"],[266,29,284,27],[266,30,284,28,"key"],[266,33,284,31],[266,35,284,33,"combinedTOpts"],[266,48,284,46],[266,49,284,47],[266,52,284,50,"defaultValue"],[266,64,284,62],[267,4,285,2],[267,8,285,6,"content"],[267,15,285,13],[267,18,285,16,"renderNodes"],[267,29,285,27],[267,30,285,28,"components"],[267,40,285,38],[267,44,285,42,"children"],[267,52,285,50],[267,54,285,52,"translation"],[267,65,285,63],[267,67,285,65,"i18n"],[267,71,285,69],[267,73,285,71,"reactI18nextOptions"],[267,92,285,90],[267,94,285,92,"combinedTOpts"],[267,107,285,105],[267,109,285,107,"shouldUnescape"],[267,123,285,121],[267,124,285,122],[268,4,286,2],[268,8,286,6,"useAsParent"],[268,19,286,17],[268,22,286,20,"parent"],[268,28,286,26],[268,33,286,31,"undefined"],[268,42,286,40],[268,45,286,43,"parent"],[268,51,286,49],[268,54,286,52,"reactI18nextOptions"],[268,73,286,71],[268,74,286,72,"defaultTransParent"],[268,92,286,90],[269,4,287,2],[269,11,287,9,"useAsParent"],[269,22,287,20],[269,25,287,23],[269,26,287,24],[269,27,287,25],[269,29,287,27,"_react"],[269,35,287,33],[269,36,287,34,"createElement"],[269,49,287,47],[269,51,287,49,"useAsParent"],[269,62,287,60],[269,64,287,62,"additionalProps"],[269,79,287,77],[269,81,287,79,"content"],[269,88,287,86],[269,89,287,87],[269,92,287,90,"content"],[269,99,287,97],[270,2,288,0],[271,0,288,1]],"functionMap":{"names":["<global>","ownKeys","symbols.filter$argument_0","_objectSpread","ownKeys.forEach$argument_0","hasChildren","getChildren","hasValidReactChildren","children.every$argument_0","getAsArray","mergeProps","nodesToString","childrenArray.forEach$argument_0","renderNodes","getData","renderInner","pushTranslatedJSX","mapAST","astNodes.reduce$argument_0","Trans","<anonymous>"],"mappings":"AAA;AC6B,kNC,kFD,qDD;AGE,wLC,8ED,sKC,oGD,uBH;AKE;CLK;AME;CNG;AOE;wBCE;GDE;CPC;ASE;CTE;AUE;CVK;AWE;wBCK;GDoC;CXE;AaE;ECO;0BFE;KEG;GDC;EEQ;GFI;EGE;GHK;EIE;2BCG;KD8E;GJC;CbO;AmBE;6CCuB;GDE"}},"type":"js/module"}]}