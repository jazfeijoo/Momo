{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":6,"column":32,"index":100}}],"key":"i0wMeuFkK29k6tj4be7EOXJEiJA="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":0,"index":101},"end":{"line":7,"column":31,"index":132}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useScrollToTop;\n  var _core = _$$_REQUIRE(_dependencyMap[0], \"@react-navigation/core\");\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"react\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      // This is already a scrollable node.\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      // If the view is a wrapper like FlatList, SectionList etc.\n      // We need to use `getScrollResponder` to get access to the scroll responder\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n      // we need to use `getNode` to get the ref to the actual scrollview.\n      // Note that `getNode` is deprecated in newer versions of react-native\n      // this is why we check if we already have a scrollable node above.\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n  function useScrollToTop(ref) {\n    var navigation = (0, _core.useNavigation)();\n    var route = (0, _core.useRoute)();\n    React.useEffect(function () {\n      var tabNavigations = [];\n      var currentNavigation = navigation;\n\n      // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n      // So we need to find all the parent tab navigators and add the listeners there\n      while (currentNavigation) {\n        if (currentNavigation.getState().type === 'tab') {\n          tabNavigations.push(currentNavigation);\n        }\n        currentNavigation = currentNavigation.getParent();\n      }\n      if (tabNavigations.length === 0) {\n        return;\n      }\n      var unsubscribers = tabNavigations.map(function (tab) {\n        return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error\n        'tabPress', function (e) {\n          // We should scroll to top only when the screen is focused\n          var isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          var isFirst = tabNavigations.includes(navigation) || navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(function () {\n            var scrollable = getScrollableNode(ref);\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({\n                  y: 0,\n                  animated: true\n                });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({\n                  offset: 0,\n                  animated: true\n                });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({\n                  y: 0,\n                  animated: true\n                });\n              }\n            }\n          });\n        });\n      });\n      return function () {\n        unsubscribers.forEach(function (unsubscribe) {\n          return unsubscribe();\n        });\n      };\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":96,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"_$$_REQUIRE"],[6,25,1,0],[6,26,1,0,"_dependencyMap"],[6,40,1,0],[7,2,7,0],[7,6,7,0,"React"],[7,11,7,0],[7,14,7,0,"_interopRequireWildcard"],[7,37,7,0],[7,38,7,0,"_$$_REQUIRE"],[7,49,7,0],[7,50,7,0,"_dependencyMap"],[7,64,7,0],[8,2,7,31],[8,11,7,31,"_getRequireWildcardCache"],[8,36,7,31,"e"],[8,37,7,31],[8,66,7,31,"WeakMap"],[8,73,7,31],[8,92,7,31,"r"],[8,93,7,31],[8,100,7,31,"WeakMap"],[8,107,7,31],[8,111,7,31,"t"],[8,112,7,31],[8,119,7,31,"WeakMap"],[8,126,7,31],[8,138,7,31,"_getRequireWildcardCache"],[8,162,7,31],[8,174,7,31,"_getRequireWildcardCache"],[8,199,7,31,"e"],[8,200,7,31],[8,211,7,31,"e"],[8,212,7,31],[8,215,7,31,"t"],[8,216,7,31],[8,219,7,31,"r"],[8,220,7,31],[8,225,7,31,"e"],[8,226,7,31],[9,2,7,31],[9,11,7,31,"_interopRequireWildcard"],[9,35,7,31,"e"],[9,36,7,31],[9,38,7,31,"r"],[9,39,7,31],[9,48,7,31,"r"],[9,49,7,31],[9,53,7,31,"e"],[9,54,7,31],[9,58,7,31,"e"],[9,59,7,31],[9,60,7,31,"__esModule"],[9,70,7,31],[9,79,7,31,"e"],[9,80,7,31],[9,95,7,31,"e"],[9,96,7,31],[9,119,7,31,"e"],[9,120,7,31],[9,145,7,31,"e"],[9,146,7,31],[9,157,7,31,"default"],[9,164,7,31],[9,166,7,31,"e"],[9,167,7,31],[9,175,7,31,"t"],[9,176,7,31],[9,179,7,31,"_getRequireWildcardCache"],[9,203,7,31],[9,204,7,31,"r"],[9,205,7,31],[9,212,7,31,"t"],[9,213,7,31],[9,217,7,31,"t"],[9,218,7,31],[9,219,7,31,"has"],[9,222,7,31],[9,223,7,31,"e"],[9,224,7,31],[9,234,7,31,"t"],[9,235,7,31],[9,236,7,31,"get"],[9,239,7,31],[9,240,7,31,"e"],[9,241,7,31],[9,248,7,31,"n"],[9,249,7,31],[9,254,7,31,"__proto__"],[9,263,7,31],[9,273,7,31,"a"],[9,274,7,31],[9,277,7,31,"Object"],[9,283,7,31],[9,284,7,31,"defineProperty"],[9,298,7,31],[9,302,7,31,"Object"],[9,308,7,31],[9,309,7,31,"getOwnPropertyDescriptor"],[9,333,7,31],[9,344,7,31,"u"],[9,345,7,31],[9,349,7,31,"e"],[9,350,7,31],[9,370,7,31,"u"],[9,371,7,31],[9,375,7,31,"Object"],[9,381,7,31],[9,382,7,31,"prototype"],[9,391,7,31],[9,392,7,31,"hasOwnProperty"],[9,406,7,31],[9,407,7,31,"call"],[9,411,7,31],[9,412,7,31,"e"],[9,413,7,31],[9,415,7,31,"u"],[9,416,7,31],[9,425,7,31,"i"],[9,426,7,31],[9,429,7,31,"a"],[9,430,7,31],[9,433,7,31,"Object"],[9,439,7,31],[9,440,7,31,"getOwnPropertyDescriptor"],[9,464,7,31],[9,465,7,31,"e"],[9,466,7,31],[9,468,7,31,"u"],[9,469,7,31],[9,479,7,31,"i"],[9,480,7,31],[9,485,7,31,"i"],[9,486,7,31],[9,487,7,31,"get"],[9,490,7,31],[9,494,7,31,"i"],[9,495,7,31],[9,496,7,31,"set"],[9,499,7,31],[9,503,7,31,"Object"],[9,509,7,31],[9,510,7,31,"defineProperty"],[9,524,7,31],[9,525,7,31,"n"],[9,526,7,31],[9,528,7,31,"u"],[9,529,7,31],[9,531,7,31,"i"],[9,532,7,31],[9,536,7,31,"n"],[9,537,7,31],[9,538,7,31,"u"],[9,539,7,31],[9,543,7,31,"e"],[9,544,7,31],[9,545,7,31,"u"],[9,546,7,31],[9,558,7,31,"n"],[9,559,7,31],[9,560,7,31,"default"],[9,567,7,31],[9,570,7,31,"e"],[9,571,7,31],[9,573,7,31,"t"],[9,574,7,31],[9,578,7,31,"t"],[9,579,7,31],[9,580,7,31,"set"],[9,583,7,31],[9,584,7,31,"e"],[9,585,7,31],[9,587,7,31,"n"],[9,588,7,31],[9,591,7,31,"n"],[9,592,7,31],[10,2,23,0],[10,11,23,9,"getScrollableNode"],[10,28,23,26,"getScrollableNode"],[10,29,23,27,"ref"],[10,32,23,66],[10,34,23,68],[11,4,24,2],[11,8,24,6,"ref"],[11,11,24,9],[11,12,24,10,"current"],[11,19,24,17],[11,23,24,21],[11,27,24,25],[11,29,24,27],[12,6,25,4],[12,13,25,11],[12,17,25,15],[13,4,26,2],[14,4,28,2],[14,8,29,4],[14,21,29,17],[14,25,29,21,"ref"],[14,28,29,24],[14,29,29,25,"current"],[14,36,29,32],[14,40,30,4],[14,50,30,14],[14,54,30,18,"ref"],[14,57,30,21],[14,58,30,22,"current"],[14,65,30,29],[14,69,31,4],[14,85,31,20],[14,89,31,24,"ref"],[14,92,31,27],[14,93,31,28,"current"],[14,100,31,35],[14,104,32,4],[14,129,32,29],[14,133,32,33,"ref"],[14,136,32,36],[14,137,32,37,"current"],[14,144,32,44],[14,146,33,4],[15,6,34,4],[16,6,35,4],[16,13,35,11,"ref"],[16,16,35,14],[16,17,35,15,"current"],[16,24,35,22],[17,4,36,2],[17,5,36,3],[17,11,36,9],[17,15,36,13],[17,35,36,33],[17,39,36,37,"ref"],[17,42,36,40],[17,43,36,41,"current"],[17,50,36,48],[17,52,36,50],[18,6,37,4],[19,6,38,4],[20,6,39,4],[20,13,39,11,"ref"],[20,16,39,14],[20,17,39,15,"current"],[20,24,39,22],[20,25,39,23,"getScrollResponder"],[20,43,39,41],[20,44,39,42],[20,45,39,43],[21,4,40,2],[21,5,40,3],[21,11,40,9],[21,15,40,13],[21,24,40,22],[21,28,40,26,"ref"],[21,31,40,29],[21,32,40,30,"current"],[21,39,40,37],[21,41,40,39],[22,6,41,4],[23,6,42,4],[24,6,43,4],[25,6,44,4],[26,6,45,4],[26,13,45,11,"ref"],[26,16,45,14],[26,17,45,15,"current"],[26,24,45,22],[26,25,45,23,"getNode"],[26,32,45,30],[26,33,45,31],[26,34,45,32],[27,4,46,2],[27,5,46,3],[27,11,46,9],[28,6,47,4],[28,13,47,11,"ref"],[28,16,47,14],[28,17,47,15,"current"],[28,24,47,22],[29,4,48,2],[30,2,49,0],[31,2,51,15],[31,11,51,24,"useScrollToTop"],[31,25,51,38,"useScrollToTop"],[31,26,52,2,"ref"],[31,29,52,41],[31,31,53,2],[32,4,54,2],[32,8,54,8,"navigation"],[32,18,54,18],[32,21,54,21],[32,25,54,21,"useNavigation"],[32,44,54,34],[32,46,54,35],[32,47,54,36],[33,4,55,2],[33,8,55,8,"route"],[33,13,55,13],[33,16,55,16],[33,20,55,16,"useRoute"],[33,34,55,24],[33,36,55,25],[33,37,55,26],[34,4,57,2,"React"],[34,9,57,7],[34,10,57,8,"useEffect"],[34,19,57,17],[34,20,57,18],[34,32,57,24],[35,6,58,4],[35,10,58,8,"tabNavigations"],[35,24,58,71],[35,27,58,74],[35,29,58,76],[36,6,59,4],[36,10,59,8,"currentNavigation"],[36,27,59,25],[36,30,59,28,"navigation"],[36,40,59,38],[38,6,61,4],[39,6,62,4],[40,6,63,4],[40,13,63,11,"currentNavigation"],[40,30,63,28],[40,32,63,30],[41,8,64,6],[41,12,64,10,"currentNavigation"],[41,29,64,27],[41,30,64,28,"getState"],[41,38,64,36],[41,39,64,37],[41,40,64,38],[41,41,64,39,"type"],[41,45,64,43],[41,50,64,48],[41,55,64,53],[41,57,64,55],[42,10,65,8,"tabNavigations"],[42,24,65,22],[42,25,65,23,"push"],[42,29,65,27],[42,30,65,28,"currentNavigation"],[42,47,65,45],[42,48,65,46],[43,8,66,6],[44,8,68,6,"currentNavigation"],[44,25,68,23],[44,28,68,26,"currentNavigation"],[44,45,68,43],[44,46,68,44,"getParent"],[44,55,68,53],[44,56,68,54],[44,57,68,55],[45,6,69,4],[46,6,71,4],[46,10,71,8,"tabNavigations"],[46,24,71,22],[46,25,71,23,"length"],[46,31,71,29],[46,36,71,34],[46,37,71,35],[46,39,71,37],[47,8,72,6],[48,6,73,4],[49,6,75,4],[49,10,75,10,"unsubscribers"],[49,23,75,23],[49,26,75,26,"tabNavigations"],[49,40,75,40],[49,41,75,41,"map"],[49,44,75,44],[49,45,75,45],[49,55,75,46,"tab"],[49,58,75,49],[49,60,75,54],[50,8,76,6],[50,15,76,13,"tab"],[50,18,76,16],[50,19,76,17,"addListener"],[50,30,76,28],[51,8,77,8],[52,8,78,8],[53,8,79,8],[54,8,80,8],[54,18,80,18],[54,20,81,8],[54,30,81,9,"e"],[54,31,81,38],[54,33,81,43],[55,10,82,10],[56,10,83,10],[56,14,83,16,"isFocused"],[56,23,83,25],[56,26,83,28,"navigation"],[56,36,83,38],[56,37,83,39,"isFocused"],[56,46,83,48],[56,47,83,49],[56,48,83,50],[58,10,85,10],[59,10,86,10],[60,10,87,10],[60,14,87,16,"isFirst"],[60,21,87,23],[60,24,88,12,"tabNavigations"],[60,38,88,26],[60,39,88,27,"includes"],[60,47,88,35],[60,48,88,36,"navigation"],[60,58,88,46],[60,59,88,47],[60,63,89,12,"navigation"],[60,73,89,22],[60,74,89,23,"getState"],[60,82,89,31],[60,83,89,32],[60,84,89,33],[60,85,89,34,"routes"],[60,91,89,40],[60,92,89,41],[60,93,89,42],[60,94,89,43],[60,95,89,44,"key"],[60,98,89,47],[60,103,89,52,"route"],[60,108,89,57],[60,109,89,58,"key"],[60,112,89,61],[62,10,91,10],[63,10,92,10],[64,10,93,10,"requestAnimationFrame"],[64,31,93,31],[64,32,93,32],[64,44,93,38],[65,12,94,12],[65,16,94,18,"scrollable"],[65,26,94,28],[65,29,94,31,"getScrollableNode"],[65,46,94,48],[65,47,94,49,"ref"],[65,50,94,52],[65,51,94,74],[66,12,96,12],[66,16,96,16,"isFocused"],[66,25,96,25],[66,29,96,29,"isFirst"],[66,36,96,36],[66,40,96,40,"scrollable"],[66,50,96,50],[66,54,96,54],[66,55,96,55,"e"],[66,56,96,56],[66,57,96,57,"defaultPrevented"],[66,73,96,73],[66,75,96,75],[67,14,97,14],[67,18,97,18],[67,31,97,31],[67,35,97,35,"scrollable"],[67,45,97,45],[67,47,97,47],[68,16,98,16,"scrollable"],[68,26,98,26],[68,27,98,27,"scrollToTop"],[68,38,98,38],[68,39,98,39],[68,40,98,40],[69,14,99,14],[69,15,99,15],[69,21,99,21],[69,25,99,25],[69,35,99,35],[69,39,99,39,"scrollable"],[69,49,99,49],[69,51,99,51],[70,16,100,16,"scrollable"],[70,26,100,26],[70,27,100,27,"scrollTo"],[70,35,100,35],[70,36,100,36],[71,18,100,38,"y"],[71,19,100,39],[71,21,100,41],[71,22,100,42],[72,18,100,44,"animated"],[72,26,100,52],[72,28,100,54],[73,16,100,59],[73,17,100,60],[73,18,100,61],[74,14,101,14],[74,15,101,15],[74,21,101,21],[74,25,101,25],[74,41,101,41],[74,45,101,45,"scrollable"],[74,55,101,55],[74,57,101,57],[75,16,102,16,"scrollable"],[75,26,102,26],[75,27,102,27,"scrollToOffset"],[75,41,102,41],[75,42,102,42],[76,18,102,44,"offset"],[76,24,102,50],[76,26,102,52],[76,27,102,53],[77,18,102,55,"animated"],[77,26,102,63],[77,28,102,65],[78,16,102,70],[78,17,102,71],[78,18,102,72],[79,14,103,14],[79,15,103,15],[79,21,103,21],[79,25,103,25],[79,50,103,50],[79,54,103,54,"scrollable"],[79,64,103,64],[79,66,103,66],[80,16,104,16,"scrollable"],[80,26,104,26],[80,27,104,27,"scrollResponderScrollTo"],[80,50,104,50],[80,51,104,51],[81,18,104,53,"y"],[81,19,104,54],[81,21,104,56],[81,22,104,57],[82,18,104,59,"animated"],[82,26,104,67],[82,28,104,69],[83,16,104,74],[83,17,104,75],[83,18,104,76],[84,14,105,14],[85,12,106,12],[86,10,107,10],[86,11,107,11],[86,12,107,12],[87,8,108,8],[87,9,109,6],[87,10,109,7],[88,6,110,4],[88,7,110,5],[88,8,110,6],[89,6,112,4],[89,13,112,11],[89,25,112,17],[90,8,113,6,"unsubscribers"],[90,21,113,19],[90,22,113,20,"forEach"],[90,29,113,27],[90,30,113,28],[90,40,113,29,"unsubscribe"],[90,51,113,40],[91,10,113,40],[91,17,113,45,"unsubscribe"],[91,28,113,56],[91,29,113,57],[91,30,113,58],[92,8,113,58],[92,10,113,59],[93,6,114,4],[93,7,114,5],[94,4,115,2],[94,5,115,3],[94,7,115,5],[94,8,115,6,"navigation"],[94,18,115,16],[94,20,115,18,"ref"],[94,23,115,21],[94,25,115,23,"route"],[94,30,115,28],[94,31,115,29,"key"],[94,34,115,32],[94,35,115,33],[94,36,115,34],[95,2,116,0],[96,0,116,1]],"functionMap":{"names":["<global>","getScrollableNode","useScrollToTop","React.useEffect$argument_0","tabNavigations.map$argument_0","tab.addListener$argument_1","requestAnimationFrame$argument_0","<anonymous>","unsubscribers.forEach$argument_0"],"mappings":"AAA;ACsB;CD0B;eEE;kBCM;6CCkB;QCM;gCCY;WDc;SDC;KDE;WIE;4BCC,8BD;KJC;GDC;CFC"}},"type":"js/module"}]}