{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":605,"column":0,"index":19343}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":605,"column":0,"index":19343}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":608},"end":{"line":21,"column":68,"index":676}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../EventEmitter/RCTDeviceEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":677},"end":{"line":22,"column":74,"index":751}}],"key":"8/8s2qHajvAK0ZSPYhrCXcF24uY="}},{"name":"../ReactNative/ReactNativeFeatureFlags","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":752},"end":{"line":23,"column":77,"index":829}}],"key":"axbfbINLgnsR8mrK5Pa2FD78/P8="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":830},"end":{"line":24,"column":45,"index":875}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeAnimatedModule","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":876},"end":{"line":25,"column":66,"index":942}}],"key":"2IHkob69BqWPcRW7TYgRTU/H7xU="}},{"name":"./NativeAnimatedTurboModule","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":943},"end":{"line":26,"column":68,"index":1011}}],"key":"5lLuBbz92WMWkrATIjmhcGDqF0g="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0,"index":1012},"end":{"line":27,"column":34,"index":1046}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../EventEmitter/NativeEventEmitter\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../EventEmitter/RCTDeviceEventEmitter\"));\n  var _ReactNativeFeatureFlags = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../ReactNative/ReactNativeFeatureFlags\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../Utilities/Platform\"));\n  var _NativeAnimatedModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./NativeAnimatedModule\"));\n  var _NativeAnimatedTurboModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./NativeAnimatedTurboModule\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"invariant\"));\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * @format\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         */\n  // TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\n  var NativeAnimatedModule = _Platform.default.OS === 'ios' && global.RN$Bridgeless === true ? _NativeAnimatedTurboModule.default : _NativeAnimatedModule.default;\n  var __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\n  var __nativeAnimationIdCount = 1; /* used for started animations */\n\n  var nativeEventEmitter;\n  var waitingForQueuedOperations = new Set();\n  var queueOperations = false;\n  var queue = [];\n  // $FlowFixMe\n  var singleOpQueue = [];\n  var useSingleOpBatching = _Platform.default.OS === 'android' && !!(NativeAnimatedModule != null && NativeAnimatedModule.queueAndExecuteBatchedOperations) && _ReactNativeFeatureFlags.default.animatedShouldUseSingleOp();\n  var flushQueueTimeout = null;\n  var eventListenerGetValueCallbacks = {};\n  var eventListenerAnimationFinishedCallbacks = {};\n  var globalEventEmitterGetValueListener = null;\n  var globalEventEmitterAnimationFinishedListener = null;\n  var nativeOps = useSingleOpBatching ? function () {\n    var apis = ['createAnimatedNode',\n    // 1\n    'updateAnimatedNodeConfig',\n    // 2\n    'getValue',\n    // 3\n    'startListeningToAnimatedNodeValue',\n    // 4\n    'stopListeningToAnimatedNodeValue',\n    // 5\n    'connectAnimatedNodes',\n    // 6\n    'disconnectAnimatedNodes',\n    // 7\n    'startAnimatingNode',\n    // 8\n    'stopAnimation',\n    // 9\n    'setAnimatedNodeValue',\n    // 10\n    'setAnimatedNodeOffset',\n    // 11\n    'flattenAnimatedNodeOffset',\n    // 12\n    'extractAnimatedNodeOffset',\n    // 13\n    'connectAnimatedNodeToView',\n    // 14\n    'disconnectAnimatedNodeFromView',\n    // 15\n    'restoreDefaultValues',\n    // 16\n    'dropAnimatedNode',\n    // 17\n    'addAnimatedEventToView',\n    // 18\n    'removeAnimatedEventFromView',\n    // 19\n    'addListener',\n    // 20\n    'removeListener' // 21\n    ];\n\n    return apis.reduce(function (acc, functionName, i) {\n      // These indices need to be kept in sync with the indices in native (see NativeAnimatedModule in Java, or the equivalent for any other native platform).\n      // $FlowFixMe[prop-missing]\n      acc[functionName] = i + 1;\n      return acc;\n    }, {});\n  }() : NativeAnimatedModule;\n\n  /**\n   * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\n   * the native module methods, and automatic queue management on Android\n   */\n  var API = {\n    getValue: function getValue(tag, saveValueCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (saveValueCallback) {\n          eventListenerGetValueCallbacks[tag] = saveValueCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(nativeOps.getValue, tag);\n      } else {\n        API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n      }\n    },\n    setWaitingForIdentifier: function setWaitingForIdentifier(id) {\n      waitingForQueuedOperations.add(id);\n      queueOperations = true;\n      if (_ReactNativeFeatureFlags.default.animatedShouldDebounceQueueFlush() && flushQueueTimeout) {\n        clearTimeout(flushQueueTimeout);\n      }\n    },\n    unsetWaitingForIdentifier: function unsetWaitingForIdentifier(id) {\n      waitingForQueuedOperations.delete(id);\n      if (waitingForQueuedOperations.size === 0) {\n        queueOperations = false;\n        API.disableQueue();\n      }\n    },\n    disableQueue: function disableQueue() {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (_ReactNativeFeatureFlags.default.animatedShouldDebounceQueueFlush()) {\n        var prevTimeout = flushQueueTimeout;\n        clearImmediate(prevTimeout);\n        flushQueueTimeout = setImmediate(API.flushQueue);\n      } else {\n        API.flushQueue();\n      }\n    },\n    flushQueue: function flushQueue() {\n      // TODO: (T136971132)\n      (0, _invariant.default)(NativeAnimatedModule || process.env.NODE_ENV === 'test', 'Native animated module is not available');\n      flushQueueTimeout = null;\n\n      // Early returns before calling any APIs\n      if (useSingleOpBatching && singleOpQueue.length === 0) {\n        return;\n      }\n      if (!useSingleOpBatching && queue.length === 0) {\n        return;\n      }\n      if (useSingleOpBatching) {\n        // Set up event listener for callbacks if it's not set up\n        if (!globalEventEmitterGetValueListener || !globalEventEmitterAnimationFinishedListener) {\n          setupGlobalEventEmitterListeners();\n        }\n        // Single op batching doesn't use callback functions, instead we\n        // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\n        // JSI functions across to native code; but also, TM infrastructure currently\n        // does not support packing a function into native arrays.\n        NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.queueAndExecuteBatchedOperations == null ? void 0 : NativeAnimatedModule.queueAndExecuteBatchedOperations(singleOpQueue);\n        singleOpQueue.length = 0;\n      } else {\n        _Platform.default.OS === 'android' && (NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.startOperationBatch == null ? void 0 : NativeAnimatedModule.startOperationBatch());\n        for (var q = 0, l = queue.length; q < l; q++) {\n          queue[q]();\n        }\n        queue.length = 0;\n        _Platform.default.OS === 'android' && (NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.finishOperationBatch == null ? void 0 : NativeAnimatedModule.finishOperationBatch());\n      }\n    },\n    queueOperation: function queueOperation(fn) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (useSingleOpBatching) {\n        // Get the command ID from the queued function, and push that ID and any arguments needed to execute the operation\n        // $FlowFixMe: surprise, fn is actually a number\n        singleOpQueue.push.apply(singleOpQueue, [fn].concat(args));\n        return;\n      }\n\n      // If queueing is explicitly on, *or* the queue has not yet\n      // been flushed, use the queue. This is to prevent operations\n      // from being executed out of order.\n      if (queueOperations || queue.length !== 0) {\n        queue.push(function () {\n          return fn.apply(void 0, args);\n        });\n      } else {\n        fn.apply(void 0, args);\n      }\n    },\n    createAnimatedNode: function createAnimatedNode(tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n    },\n    updateAnimatedNodeConfig: function updateAnimatedNodeConfig(tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (nativeOps.updateAnimatedNodeConfig) {\n        API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n      }\n    },\n    startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n    },\n    stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n    },\n    connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n    },\n    disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n    },\n    startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (endCallback) {\n          eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(\n        // $FlowFixMe[incompatible-call]\n        nativeOps.startAnimatingNode, animationId, nodeTag, config);\n      } else {\n        API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config, endCallback);\n      }\n    },\n    stopAnimation: function stopAnimation(animationId) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopAnimation, animationId);\n    },\n    setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n    },\n    setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n    },\n    flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n    },\n    extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n    },\n    connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n    },\n    disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodeFromView, nodeTag, viewTag);\n    },\n    restoreDefaultValues: function restoreDefaultValues(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      // Backwards compat with older native runtimes, can be removed later.\n      if (nativeOps.restoreDefaultValues != null) {\n        API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n      }\n    },\n    dropAnimatedNode: function dropAnimatedNode(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.dropAnimatedNode, tag);\n    },\n    addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.addAnimatedEventToView, viewTag, eventName, eventMapping);\n    },\n    removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.removeAnimatedEventFromView, viewTag, eventName, animatedNodeTag);\n    }\n  };\n  function setupGlobalEventEmitterListeners() {\n    globalEventEmitterGetValueListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleGetValue', function (params) {\n      var tag = params.tag;\n      var callback = eventListenerGetValueCallbacks[tag];\n      if (!callback) {\n        return;\n      }\n      callback(params.value);\n      delete eventListenerGetValueCallbacks[tag];\n    });\n    globalEventEmitterAnimationFinishedListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleAnimationFinished', function (params) {\n      var animationId = params.animationId;\n      var callback = eventListenerAnimationFinishedCallbacks[animationId];\n      if (!callback) {\n        return;\n      }\n      callback(params);\n      delete eventListenerAnimationFinishedCallbacks[animationId];\n    });\n  }\n\n  /**\n   * Styles allowed by the native animated implementation.\n   *\n   * In general native animated implementation should support any numeric or color property that\n   * doesn't need to be updated through the shadow view hierarchy (all non-layout properties).\n   */\n  var SUPPORTED_COLOR_STYLES = {\n    backgroundColor: true,\n    borderBottomColor: true,\n    borderColor: true,\n    borderEndColor: true,\n    borderLeftColor: true,\n    borderRightColor: true,\n    borderStartColor: true,\n    borderTopColor: true,\n    color: true,\n    tintColor: true\n  };\n  var SUPPORTED_STYLES = _objectSpread(_objectSpread({}, SUPPORTED_COLOR_STYLES), {}, {\n    borderBottomEndRadius: true,\n    borderBottomLeftRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomStartRadius: true,\n    borderEndEndRadius: true,\n    borderEndStartRadius: true,\n    borderRadius: true,\n    borderTopEndRadius: true,\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderTopStartRadius: true,\n    borderStartEndRadius: true,\n    borderStartStartRadius: true,\n    elevation: true,\n    opacity: true,\n    transform: true,\n    zIndex: true,\n    /* ios styles */\n    shadowOpacity: true,\n    shadowRadius: true,\n    /* legacy android transform properties */\n    scaleX: true,\n    scaleY: true,\n    translateX: true,\n    translateY: true\n  });\n  var SUPPORTED_TRANSFORMS = {\n    translateX: true,\n    translateY: true,\n    scale: true,\n    scaleX: true,\n    scaleY: true,\n    rotate: true,\n    rotateX: true,\n    rotateY: true,\n    rotateZ: true,\n    perspective: true\n  };\n  var SUPPORTED_INTERPOLATION_PARAMS = {\n    inputRange: true,\n    outputRange: true,\n    extrapolate: true,\n    extrapolateRight: true,\n    extrapolateLeft: true\n  };\n  function addWhitelistedStyleProp(prop) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_STYLES[prop] = true;\n  }\n  function addWhitelistedTransformProp(prop) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_TRANSFORMS[prop] = true;\n  }\n  function addWhitelistedInterpolationParam(param) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n  }\n  function isSupportedColorStyleProp(prop) {\n    return SUPPORTED_COLOR_STYLES.hasOwnProperty(prop);\n  }\n  function isSupportedStyleProp(prop) {\n    return SUPPORTED_STYLES.hasOwnProperty(prop);\n  }\n  function isSupportedTransformProp(prop) {\n    return SUPPORTED_TRANSFORMS.hasOwnProperty(prop);\n  }\n  function isSupportedInterpolationParam(param) {\n    return SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(param);\n  }\n  function validateTransform(configs) {\n    configs.forEach(function (config) {\n      if (!isSupportedTransformProp(config.property)) {\n        throw new Error(`Property '${config.property}' is not supported by native animated module`);\n      }\n    });\n  }\n  function validateStyles(styles) {\n    for (var _key2 in styles) {\n      if (!isSupportedStyleProp(_key2)) {\n        throw new Error(`Style property '${_key2}' is not supported by native animated module`);\n      }\n    }\n  }\n  function validateInterpolation(config) {\n    for (var _key3 in config) {\n      if (!isSupportedInterpolationParam(_key3)) {\n        throw new Error(`Interpolation property '${_key3}' is not supported by native animated module`);\n      }\n    }\n  }\n  function generateNewNodeTag() {\n    return __nativeAnimatedNodeTagCount++;\n  }\n  function generateNewAnimationId() {\n    return __nativeAnimationIdCount++;\n  }\n  function assertNativeAnimatedModule() {\n    (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');\n  }\n  var _warnedMissingNativeAnimated = false;\n  function shouldUseNativeDriver(config) {\n    if (config.useNativeDriver == null) {\n      console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n    }\n    if (config.useNativeDriver === true && !NativeAnimatedModule) {\n      if (process.env.NODE_ENV !== 'test') {\n        if (!_warnedMissingNativeAnimated) {\n          console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n          _warnedMissingNativeAnimated = true;\n        }\n      }\n      return false;\n    }\n    return config.useNativeDriver || false;\n  }\n  function transformDataType(value) {\n    // Change the string type to number type so we can reuse the same logic in\n    // iOS and Android platform\n    if (typeof value !== 'string') {\n      return value;\n    }\n    if (/deg$/.test(value)) {\n      var degrees = parseFloat(value) || 0;\n      var radians = degrees * Math.PI / 180.0;\n      return radians;\n    } else {\n      return value;\n    }\n  }\n  var _default = exports.default = {\n    API: API,\n    isSupportedColorStyleProp: isSupportedColorStyleProp,\n    isSupportedStyleProp: isSupportedStyleProp,\n    isSupportedTransformProp: isSupportedTransformProp,\n    isSupportedInterpolationParam: isSupportedInterpolationParam,\n    addWhitelistedStyleProp: addWhitelistedStyleProp,\n    addWhitelistedTransformProp: addWhitelistedTransformProp,\n    addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n    validateStyles: validateStyles,\n    validateTransform: validateTransform,\n    validateInterpolation: validateInterpolation,\n    generateNewNodeTag: generateNewNodeTag,\n    generateNewAnimationId: generateNewAnimationId,\n    assertNativeAnimatedModule: assertNativeAnimatedModule,\n    shouldUseNativeDriver: shouldUseNativeDriver,\n    transformDataType: transformDataType,\n    // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppression\n    // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppression\n    get nativeEventEmitter() {\n      if (!nativeEventEmitter) {\n        // $FlowFixMe[underconstrained-implicit-instantiation]\n        nativeEventEmitter = new _NativeEventEmitter.default(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        _Platform.default.OS !== 'ios' ? null : NativeAnimatedModule);\n      }\n      return nativeEventEmitter;\n    }\n  };\n});","lineCount":476,"map":[[8,2,21,0],[8,6,21,0,"_NativeEventEmitter"],[8,25,21,0],[8,28,21,0,"_interopRequireDefault"],[8,50,21,0],[8,51,21,0,"_$$_REQUIRE"],[8,62,21,0],[8,63,21,0,"_dependencyMap"],[8,77,21,0],[9,2,22,0],[9,6,22,0,"_RCTDeviceEventEmitter"],[9,28,22,0],[9,31,22,0,"_interopRequireDefault"],[9,53,22,0],[9,54,22,0,"_$$_REQUIRE"],[9,65,22,0],[9,66,22,0,"_dependencyMap"],[9,80,22,0],[10,2,23,0],[10,6,23,0,"_ReactNativeFeatureFlags"],[10,30,23,0],[10,33,23,0,"_interopRequireDefault"],[10,55,23,0],[10,56,23,0,"_$$_REQUIRE"],[10,67,23,0],[10,68,23,0,"_dependencyMap"],[10,82,23,0],[11,2,24,0],[11,6,24,0,"_Platform"],[11,15,24,0],[11,18,24,0,"_interopRequireDefault"],[11,40,24,0],[11,41,24,0,"_$$_REQUIRE"],[11,52,24,0],[11,53,24,0,"_dependencyMap"],[11,67,24,0],[12,2,25,0],[12,6,25,0,"_NativeAnimatedModule"],[12,27,25,0],[12,30,25,0,"_interopRequireDefault"],[12,52,25,0],[12,53,25,0,"_$$_REQUIRE"],[12,64,25,0],[12,65,25,0,"_dependencyMap"],[12,79,25,0],[13,2,26,0],[13,6,26,0,"_NativeAnimatedTurboModule"],[13,32,26,0],[13,35,26,0,"_interopRequireDefault"],[13,57,26,0],[13,58,26,0,"_$$_REQUIRE"],[13,69,26,0],[13,70,26,0,"_dependencyMap"],[13,84,26,0],[14,2,27,0],[14,6,27,0,"_invariant"],[14,16,27,0],[14,19,27,0,"_interopRequireDefault"],[14,41,27,0],[14,42,27,0,"_$$_REQUIRE"],[14,53,27,0],[14,54,27,0,"_dependencyMap"],[14,68,27,0],[15,2,27,34],[15,11,27,34,"ownKeys"],[15,19,27,34,"e"],[15,20,27,34],[15,22,27,34,"r"],[15,23,27,34],[15,31,27,34,"t"],[15,32,27,34],[15,35,27,34,"Object"],[15,41,27,34],[15,42,27,34,"keys"],[15,46,27,34],[15,47,27,34,"e"],[15,48,27,34],[15,55,27,34,"Object"],[15,61,27,34],[15,62,27,34,"getOwnPropertySymbols"],[15,83,27,34],[15,91,27,34,"o"],[15,92,27,34],[15,95,27,34,"Object"],[15,101,27,34],[15,102,27,34,"getOwnPropertySymbols"],[15,123,27,34],[15,124,27,34,"e"],[15,125,27,34],[15,128,27,34,"r"],[15,129,27,34],[15,134,27,34,"o"],[15,135,27,34],[15,138,27,34,"o"],[15,139,27,34],[15,140,27,34,"filter"],[15,146,27,34],[15,157,27,34,"r"],[15,158,27,34],[15,169,27,34,"Object"],[15,175,27,34],[15,176,27,34,"getOwnPropertyDescriptor"],[15,200,27,34],[15,201,27,34,"e"],[15,202,27,34],[15,204,27,34,"r"],[15,205,27,34],[15,207,27,34,"enumerable"],[15,217,27,34],[15,224,27,34,"t"],[15,225,27,34],[15,226,27,34,"push"],[15,230,27,34],[15,231,27,34,"apply"],[15,236,27,34],[15,237,27,34,"t"],[15,238,27,34],[15,240,27,34,"o"],[15,241,27,34],[15,253,27,34,"t"],[15,254,27,34],[16,2,27,34],[16,11,27,34,"_objectSpread"],[16,25,27,34,"e"],[16,26,27,34],[16,39,27,34,"r"],[16,40,27,34],[16,46,27,34,"r"],[16,47,27,34],[16,50,27,34,"arguments"],[16,59,27,34],[16,60,27,34,"length"],[16,66,27,34],[16,68,27,34,"r"],[16,69,27,34],[16,79,27,34,"t"],[16,80,27,34],[16,91,27,34,"arguments"],[16,100,27,34],[16,101,27,34,"r"],[16,102,27,34],[16,106,27,34,"arguments"],[16,115,27,34],[16,116,27,34,"r"],[16,117,27,34],[16,125,27,34,"r"],[16,126,27,34],[16,133,27,34,"ownKeys"],[16,140,27,34],[16,141,27,34,"Object"],[16,147,27,34],[16,148,27,34,"t"],[16,149,27,34],[16,156,27,34,"forEach"],[16,163,27,34],[16,174,27,34,"r"],[16,175,27,34],[16,183,27,34,"_defineProperty2"],[16,199,27,34],[16,200,27,34,"default"],[16,207,27,34],[16,209,27,34,"e"],[16,210,27,34],[16,212,27,34,"r"],[16,213,27,34],[16,215,27,34,"t"],[16,216,27,34],[16,217,27,34,"r"],[16,218,27,34],[16,227,27,34,"Object"],[16,233,27,34],[16,234,27,34,"getOwnPropertyDescriptors"],[16,259,27,34],[16,262,27,34,"Object"],[16,268,27,34],[16,269,27,34,"defineProperties"],[16,285,27,34],[16,286,27,34,"e"],[16,287,27,34],[16,289,27,34,"Object"],[16,295,27,34],[16,296,27,34,"getOwnPropertyDescriptors"],[16,321,27,34],[16,322,27,34,"t"],[16,323,27,34],[16,328,27,34,"ownKeys"],[16,335,27,34],[16,336,27,34,"Object"],[16,342,27,34],[16,343,27,34,"t"],[16,344,27,34],[16,347,27,34,"forEach"],[16,354,27,34],[16,365,27,34,"r"],[16,366,27,34],[16,370,27,34,"Object"],[16,376,27,34],[16,377,27,34,"defineProperty"],[16,391,27,34],[16,392,27,34,"e"],[16,393,27,34],[16,395,27,34,"r"],[16,396,27,34],[16,398,27,34,"Object"],[16,404,27,34],[16,405,27,34,"getOwnPropertyDescriptor"],[16,429,27,34],[16,430,27,34,"t"],[16,431,27,34],[16,433,27,34,"r"],[16,434,27,34],[16,451,27,34,"e"],[16,452,27,34],[16,456,1,0],[17,0,2,0],[18,0,3,0],[19,0,4,0],[20,0,5,0],[21,0,6,0],[22,0,7,0],[23,0,8,0],[24,0,9,0],[25,2,29,0],[26,2,30,0],[26,6,30,6,"NativeAnimatedModule"],[26,26,30,26],[26,29,31,2,"Platform"],[26,46,31,10],[26,47,31,11,"OS"],[26,49,31,13],[26,54,31,18],[26,59,31,23],[26,63,31,27,"global"],[26,69,31,33],[26,70,31,34,"RN$Bridgeless"],[26,83,31,47],[26,88,31,52],[26,92,31,56],[26,95,32,6,"NativeAnimatedTurboModule"],[26,129,32,31],[26,132,33,6,"NativeAnimatedNonTurboModule"],[26,161,33,34],[27,2,35,0],[27,6,35,4,"__nativeAnimatedNodeTagCount"],[27,34,35,32],[27,37,35,35],[27,38,35,36],[27,39,35,37],[27,40,35,38],[28,2,36,0],[28,6,36,4,"__nativeAnimationIdCount"],[28,30,36,28],[28,33,36,31],[28,34,36,32],[28,35,36,33],[28,36,36,34],[30,2,38,0],[30,6,38,4,"nativeEventEmitter"],[30,24,38,22],[31,2,40,0],[31,6,40,4,"waitingForQueuedOperations"],[31,32,40,30],[31,35,40,33],[31,39,40,37,"Set"],[31,42,40,40],[31,43,40,49],[31,44,40,50],[32,2,41,0],[32,6,41,4,"queueOperations"],[32,21,41,19],[32,24,41,22],[32,29,41,27],[33,2,42,0],[33,6,42,4,"queue"],[33,11,42,28],[33,14,42,31],[33,16,42,33],[34,2,43,0],[35,2,44,0],[35,6,44,4,"singleOpQueue"],[35,19,44,29],[35,22,44,32],[35,24,44,34],[36,2,46,0],[36,6,46,6,"useSingleOpBatching"],[36,25,46,25],[36,28,47,2,"Platform"],[36,45,47,10],[36,46,47,11,"OS"],[36,48,47,13],[36,53,47,18],[36,62,47,27],[36,66,48,2],[36,67,48,3],[36,69,48,4,"NativeAnimatedModule"],[36,89,48,24],[36,101,48,4,"NativeAnimatedModule"],[36,121,48,24],[36,122,48,26,"queueAndExecuteBatchedOperations"],[36,154,48,58],[36,159,49,2,"ReactNativeFeatureFlags"],[36,191,49,25],[36,192,49,26,"animatedShouldUseSingleOp"],[36,217,49,51],[36,218,49,52],[36,219,49,53],[37,2,50,0],[37,6,50,4,"flushQueueTimeout"],[37,23,50,21],[37,26,50,24],[37,30,50,28],[38,2,52,0],[38,6,52,6,"eventListenerGetValueCallbacks"],[38,36,54,1],[38,39,54,4],[38,40,54,5],[38,41,54,6],[39,2,55,0],[39,6,55,6,"eventListenerAnimationFinishedCallbacks"],[39,45,57,1],[39,48,57,4],[39,49,57,5],[39,50,57,6],[40,2,58,0],[40,6,58,4,"globalEventEmitterGetValueListener"],[40,40,58,58],[40,43,58,61],[40,47,58,65],[41,2,59,0],[41,6,59,4,"globalEventEmitterAnimationFinishedListener"],[41,49,59,67],[41,52,59,70],[41,56,59,74],[42,2,61,0],[42,6,61,6,"nativeOps"],[42,15,61,45],[42,18,61,48,"useSingleOpBatching"],[42,37,61,67],[42,40,62,6],[42,52,62,18],[43,4,63,6],[43,8,63,12,"apis"],[43,12,63,16],[43,15,63,19],[43,16,64,8],[43,36,64,28],[44,4,64,30],[45,4,65,8],[45,30,65,34],[46,4,65,36],[47,4,66,8],[47,14,66,18],[48,4,66,20],[49,4,67,8],[49,39,67,43],[50,4,67,45],[51,4,68,8],[51,38,68,42],[52,4,68,44],[53,4,69,8],[53,26,69,30],[54,4,69,32],[55,4,70,8],[55,29,70,33],[56,4,70,35],[57,4,71,8],[57,24,71,28],[58,4,71,30],[59,4,72,8],[59,19,72,23],[60,4,72,25],[61,4,73,8],[61,26,73,30],[62,4,73,32],[63,4,74,8],[63,27,74,31],[64,4,74,33],[65,4,75,8],[65,31,75,35],[66,4,75,37],[67,4,76,8],[67,31,76,35],[68,4,76,37],[69,4,77,8],[69,31,77,35],[70,4,77,37],[71,4,78,8],[71,36,78,40],[72,4,78,42],[73,4,79,8],[73,26,79,30],[74,4,79,32],[75,4,80,8],[75,22,80,26],[76,4,80,28],[77,4,81,8],[77,28,81,32],[78,4,81,34],[79,4,82,8],[79,33,82,37],[80,4,82,39],[81,4,83,8],[81,17,83,21],[82,4,83,23],[83,4,84,8],[83,20,84,24],[83,21,84,26],[84,4,84,26],[84,5,85,7],[86,4,86,6],[86,11,86,13,"apis"],[86,15,86,17],[86,16,86,18,"reduce"],[86,22,86,24],[86,23,86,45],[86,33,86,46,"acc"],[86,36,86,49],[86,38,86,51,"functionName"],[86,50,86,63],[86,52,86,65,"i"],[86,53,86,66],[86,55,86,71],[87,6,87,8],[88,6,88,8],[89,6,89,8,"acc"],[89,9,89,11],[89,10,89,12,"functionName"],[89,22,89,24],[89,23,89,25],[89,26,89,28,"i"],[89,27,89,29],[89,30,89,32],[89,31,89,33],[90,6,90,8],[90,13,90,15,"acc"],[90,16,90,18],[91,4,91,6],[91,5,91,7],[91,7,91,9],[91,8,91,10],[91,9,91,11],[91,10,91,12],[92,2,92,4],[92,3,92,5],[92,4,92,7],[92,5,92,8],[92,8,93,4,"NativeAnimatedModule"],[92,28,93,24],[94,2,95,0],[95,0,96,0],[96,0,97,0],[97,0,98,0],[98,2,99,0],[98,6,99,6,"API"],[98,9,99,9],[98,12,99,12],[99,4,100,2,"getValue"],[99,12,100,10],[99,14,100,12],[99,23,100,12,"getValue"],[99,32,101,4,"tag"],[99,35,101,15],[99,37,102,4,"saveValueCallback"],[99,54,102,46],[99,56,103,10],[100,6,104,4],[100,10,104,4,"invariant"],[100,28,104,13],[100,30,104,14,"nativeOps"],[100,39,104,23],[100,41,104,25],[100,82,104,66],[100,83,104,67],[101,6,105,4],[101,10,105,8,"useSingleOpBatching"],[101,29,105,27],[101,31,105,29],[102,8,106,6],[102,12,106,10,"saveValueCallback"],[102,29,106,27],[102,31,106,29],[103,10,107,8,"eventListenerGetValueCallbacks"],[103,40,107,38],[103,41,107,39,"tag"],[103,44,107,42],[103,45,107,43],[103,48,107,46,"saveValueCallback"],[103,65,107,63],[104,8,108,6],[105,8,109,6],[106,8,110,6,"API"],[106,11,110,9],[106,12,110,10,"queueOperation"],[106,26,110,24],[106,27,110,25,"nativeOps"],[106,36,110,34],[106,37,110,35,"getValue"],[106,45,110,43],[106,47,110,45,"tag"],[106,50,110,48],[106,51,110,49],[107,6,111,4],[107,7,111,5],[107,13,111,11],[108,8,112,6,"API"],[108,11,112,9],[108,12,112,10,"queueOperation"],[108,26,112,24],[108,27,112,25,"nativeOps"],[108,36,112,34],[108,37,112,35,"getValue"],[108,45,112,43],[108,47,112,45,"tag"],[108,50,112,48],[108,52,112,50,"saveValueCallback"],[108,69,112,67],[108,70,112,68],[109,6,113,4],[110,4,114,2],[110,5,114,3],[111,4,115,2,"setWaitingForIdentifier"],[111,27,115,25],[111,29,115,27],[111,38,115,27,"setWaitingForIdentifier"],[111,62,115,37,"id"],[111,64,115,47],[111,66,115,55],[112,6,116,4,"waitingForQueuedOperations"],[112,32,116,30],[112,33,116,31,"add"],[112,36,116,34],[112,37,116,35,"id"],[112,39,116,37],[112,40,116,38],[113,6,117,4,"queueOperations"],[113,21,117,19],[113,24,117,22],[113,28,117,26],[114,6,118,4],[114,10,119,6,"ReactNativeFeatureFlags"],[114,42,119,29],[114,43,119,30,"animatedShouldDebounceQueueFlush"],[114,75,119,62],[114,76,119,63],[114,77,119,64],[114,81,120,6,"flushQueueTimeout"],[114,98,120,23],[114,100,121,6],[115,8,122,6,"clearTimeout"],[115,20,122,18],[115,21,122,19,"flushQueueTimeout"],[115,38,122,36],[115,39,122,37],[116,6,123,4],[117,4,124,2],[117,5,124,3],[118,4,125,2,"unsetWaitingForIdentifier"],[118,29,125,27],[118,31,125,29],[118,40,125,29,"unsetWaitingForIdentifier"],[118,66,125,39,"id"],[118,68,125,49],[118,70,125,57],[119,6,126,4,"waitingForQueuedOperations"],[119,32,126,30],[119,33,126,31,"delete"],[119,39,126,37],[119,40,126,38,"id"],[119,42,126,40],[119,43,126,41],[120,6,128,4],[120,10,128,8,"waitingForQueuedOperations"],[120,36,128,34],[120,37,128,35,"size"],[120,41,128,39],[120,46,128,44],[120,47,128,45],[120,49,128,47],[121,8,129,6,"queueOperations"],[121,23,129,21],[121,26,129,24],[121,31,129,29],[122,8,130,6,"API"],[122,11,130,9],[122,12,130,10,"disableQueue"],[122,24,130,22],[122,25,130,23],[122,26,130,24],[123,6,131,4],[124,4,132,2],[124,5,132,3],[125,4,133,2,"disableQueue"],[125,16,133,14],[125,18,133,16],[125,27,133,16,"disableQueue"],[125,40,133,16],[125,42,133,34],[126,6,134,4],[126,10,134,4,"invariant"],[126,28,134,13],[126,30,134,14,"nativeOps"],[126,39,134,23],[126,41,134,25],[126,82,134,66],[126,83,134,67],[127,6,136,4],[127,10,136,8,"ReactNativeFeatureFlags"],[127,42,136,31],[127,43,136,32,"animatedShouldDebounceQueueFlush"],[127,75,136,64],[127,76,136,65],[127,77,136,66],[127,79,136,68],[128,8,137,6],[128,12,137,12,"prevTimeout"],[128,23,137,23],[128,26,137,26,"flushQueueTimeout"],[128,43,137,43],[129,8,138,6,"clearImmediate"],[129,22,138,20],[129,23,138,21,"prevTimeout"],[129,34,138,32],[129,35,138,33],[130,8,139,6,"flushQueueTimeout"],[130,25,139,23],[130,28,139,26,"setImmediate"],[130,40,139,38],[130,41,139,39,"API"],[130,44,139,42],[130,45,139,43,"flushQueue"],[130,55,139,53],[130,56,139,54],[131,6,140,4],[131,7,140,5],[131,13,140,11],[132,8,141,6,"API"],[132,11,141,9],[132,12,141,10,"flushQueue"],[132,22,141,20],[132,23,141,21],[132,24,141,22],[133,6,142,4],[134,4,143,2],[134,5,143,3],[135,4,144,2,"flushQueue"],[135,14,144,12],[135,16,144,14],[135,25,144,14,"flushQueue"],[135,36,144,14],[135,38,144,32],[136,6,145,4],[137,6,146,4],[137,10,146,4,"invariant"],[137,28,146,13],[137,30,147,6,"NativeAnimatedModule"],[137,50,147,26],[137,54,147,30,"process"],[137,61,147,37],[137,62,147,38,"env"],[137,65,147,41],[137,66,147,42,"NODE_ENV"],[137,74,147,50],[137,79,147,55],[137,85,147,61],[137,87,148,6],[137,128,149,4],[137,129,149,5],[138,6,150,4,"flushQueueTimeout"],[138,23,150,21],[138,26,150,24],[138,30,150,28],[140,6,152,4],[141,6,153,4],[141,10,153,8,"useSingleOpBatching"],[141,29,153,27],[141,33,153,31,"singleOpQueue"],[141,46,153,44],[141,47,153,45,"length"],[141,53,153,51],[141,58,153,56],[141,59,153,57],[141,61,153,59],[142,8,154,6],[143,6,155,4],[144,6,156,4],[144,10,156,8],[144,11,156,9,"useSingleOpBatching"],[144,30,156,28],[144,34,156,32,"queue"],[144,39,156,37],[144,40,156,38,"length"],[144,46,156,44],[144,51,156,49],[144,52,156,50],[144,54,156,52],[145,8,157,6],[146,6,158,4],[147,6,160,4],[147,10,160,8,"useSingleOpBatching"],[147,29,160,27],[147,31,160,29],[148,8,161,6],[149,8,162,6],[149,12,163,8],[149,13,163,9,"globalEventEmitterGetValueListener"],[149,47,163,43],[149,51,164,8],[149,52,164,9,"globalEventEmitterAnimationFinishedListener"],[149,95,164,52],[149,97,165,8],[150,10,166,8,"setupGlobalEventEmitterListeners"],[150,42,166,40],[150,43,166,41],[150,44,166,42],[151,8,167,6],[152,8,168,6],[153,8,169,6],[154,8,170,6],[155,8,171,6],[156,8,172,6,"NativeAnimatedModule"],[156,28,172,26],[156,48,172,6,"NativeAnimatedModule"],[156,68,172,26],[156,69,172,28,"queueAndExecuteBatchedOperations"],[156,101,172,60],[156,121,172,6,"NativeAnimatedModule"],[156,141,172,26],[156,142,172,28,"queueAndExecuteBatchedOperations"],[156,174,172,60],[156,175,172,63,"singleOpQueue"],[156,188,172,76],[156,189,172,77],[157,8,173,6,"singleOpQueue"],[157,21,173,19],[157,22,173,20,"length"],[157,28,173,26],[157,31,173,29],[157,32,173,30],[158,6,174,4],[158,7,174,5],[158,13,174,11],[159,8,175,6,"Platform"],[159,25,175,14],[159,26,175,15,"OS"],[159,28,175,17],[159,33,175,22],[159,42,175,31],[159,47,176,8,"NativeAnimatedModule"],[159,67,176,28],[159,87,176,8,"NativeAnimatedModule"],[159,107,176,28],[159,108,176,30,"startOperationBatch"],[159,127,176,49],[159,147,176,8,"NativeAnimatedModule"],[159,167,176,28],[159,168,176,30,"startOperationBatch"],[159,187,176,49],[159,188,176,52],[159,189,176,53],[160,8,178,6],[160,13,178,11],[160,17,178,15,"q"],[160,18,178,16],[160,21,178,19],[160,22,178,20],[160,24,178,22,"l"],[160,25,178,23],[160,28,178,26,"queue"],[160,33,178,31],[160,34,178,32,"length"],[160,40,178,38],[160,42,178,40,"q"],[160,43,178,41],[160,46,178,44,"l"],[160,47,178,45],[160,49,178,47,"q"],[160,50,178,48],[160,52,178,50],[160,54,178,52],[161,10,179,8,"queue"],[161,15,179,13],[161,16,179,14,"q"],[161,17,179,15],[161,18,179,16],[161,19,179,17],[161,20,179,18],[162,8,180,6],[163,8,181,6,"queue"],[163,13,181,11],[163,14,181,12,"length"],[163,20,181,18],[163,23,181,21],[163,24,181,22],[164,8,182,6,"Platform"],[164,25,182,14],[164,26,182,15,"OS"],[164,28,182,17],[164,33,182,22],[164,42,182,31],[164,47,183,8,"NativeAnimatedModule"],[164,67,183,28],[164,87,183,8,"NativeAnimatedModule"],[164,107,183,28],[164,108,183,30,"finishOperationBatch"],[164,128,183,50],[164,148,183,8,"NativeAnimatedModule"],[164,168,183,28],[164,169,183,30,"finishOperationBatch"],[164,189,183,50],[164,190,183,53],[164,191,183,54],[165,6,184,4],[166,4,185,2],[166,5,185,3],[167,4,186,2,"queueOperation"],[167,18,186,16],[167,20,186,18],[167,29,186,18,"queueOperation"],[167,44,187,4,"fn"],[167,46,187,10],[167,48,189,13],[168,6,189,13],[168,15,189,13,"_len"],[168,19,189,13],[168,22,189,13,"arguments"],[168,31,189,13],[168,32,189,13,"length"],[168,38,189,13],[168,40,188,7,"args"],[168,44,188,11],[168,51,188,11,"Array"],[168,56,188,11],[168,57,188,11,"_len"],[168,61,188,11],[168,68,188,11,"_len"],[168,72,188,11],[168,83,188,11,"_key"],[168,87,188,11],[168,93,188,11,"_key"],[168,97,188,11],[168,100,188,11,"_len"],[168,104,188,11],[168,106,188,11,"_key"],[168,110,188,11],[169,8,188,7,"args"],[169,12,188,11],[169,13,188,11,"_key"],[169,17,188,11],[169,25,188,11,"arguments"],[169,34,188,11],[169,35,188,11,"_key"],[169,39,188,11],[170,6,188,11],[171,6,190,4],[171,10,190,8,"useSingleOpBatching"],[171,29,190,27],[171,31,190,29],[172,8,191,6],[173,8,192,6],[174,8,193,6,"singleOpQueue"],[174,21,193,19],[174,22,193,20,"push"],[174,26,193,24],[174,27,193,24,"apply"],[174,32,193,24],[174,33,193,6,"singleOpQueue"],[174,46,193,19],[174,49,193,25,"fn"],[174,51,193,27],[174,53,193,27,"concat"],[174,59,193,27],[174,60,193,32,"args"],[174,64,193,36],[174,66,193,37],[175,8,194,6],[176,6,195,4],[178,6,197,4],[179,6,198,4],[180,6,199,4],[181,6,200,4],[181,10,200,8,"queueOperations"],[181,25,200,23],[181,29,200,27,"queue"],[181,34,200,32],[181,35,200,33,"length"],[181,41,200,39],[181,46,200,44],[181,47,200,45],[181,49,200,47],[182,8,201,6,"queue"],[182,13,201,11],[182,14,201,12,"push"],[182,18,201,16],[182,19,201,17],[183,10,201,17],[183,17,201,23,"fn"],[183,19,201,25],[183,20,201,25,"apply"],[183,25,201,25],[183,34,201,29,"args"],[183,38,201,33],[183,39,201,34],[184,8,201,34],[184,10,201,35],[185,6,202,4],[185,7,202,5],[185,13,202,11],[186,8,203,6,"fn"],[186,10,203,8],[186,11,203,8,"apply"],[186,16,203,8],[186,25,203,12,"args"],[186,29,203,16],[186,30,203,17],[187,6,204,4],[188,4,205,2],[188,5,205,3],[189,4,206,2,"createAnimatedNode"],[189,22,206,20],[189,24,206,22],[189,33,206,22,"createAnimatedNode"],[189,52,206,32,"tag"],[189,55,206,43],[189,57,206,45,"config"],[189,63,206,71],[189,65,206,79],[190,6,207,4],[190,10,207,4,"invariant"],[190,28,207,13],[190,30,207,14,"nativeOps"],[190,39,207,23],[190,41,207,25],[190,82,207,66],[190,83,207,67],[191,6,208,4,"API"],[191,9,208,7],[191,10,208,8,"queueOperation"],[191,24,208,22],[191,25,208,23,"nativeOps"],[191,34,208,32],[191,35,208,33,"createAnimatedNode"],[191,53,208,51],[191,55,208,53,"tag"],[191,58,208,56],[191,60,208,58,"config"],[191,66,208,64],[191,67,208,65],[192,4,209,2],[192,5,209,3],[193,4,210,2,"updateAnimatedNodeConfig"],[193,28,210,26],[193,30,210,28],[193,39,210,28,"updateAnimatedNodeConfig"],[193,64,211,4,"tag"],[193,67,211,15],[193,69,212,4,"config"],[193,75,212,30],[193,77,213,10],[194,6,214,4],[194,10,214,4,"invariant"],[194,28,214,13],[194,30,214,14,"nativeOps"],[194,39,214,23],[194,41,214,25],[194,82,214,66],[194,83,214,67],[195,6,215,4],[195,10,215,8,"nativeOps"],[195,19,215,17],[195,20,215,18,"updateAnimatedNodeConfig"],[195,44,215,42],[195,46,215,44],[196,8,216,6,"API"],[196,11,216,9],[196,12,216,10,"queueOperation"],[196,26,216,24],[196,27,216,25,"nativeOps"],[196,36,216,34],[196,37,216,35,"updateAnimatedNodeConfig"],[196,61,216,59],[196,63,216,61,"tag"],[196,66,216,64],[196,68,216,66,"config"],[196,74,216,72],[196,75,216,73],[197,6,217,4],[198,4,218,2],[198,5,218,3],[199,4,219,2,"startListeningToAnimatedNodeValue"],[199,37,219,35],[199,39,219,37],[199,48,219,37,"startListeningToAnimatedNodeValue"],[199,82,219,47,"tag"],[199,85,219,58],[199,87,219,60],[200,6,220,4],[200,10,220,4,"invariant"],[200,28,220,13],[200,30,220,14,"nativeOps"],[200,39,220,23],[200,41,220,25],[200,82,220,66],[200,83,220,67],[201,6,221,4,"API"],[201,9,221,7],[201,10,221,8,"queueOperation"],[201,24,221,22],[201,25,221,23,"nativeOps"],[201,34,221,32],[201,35,221,33,"startListeningToAnimatedNodeValue"],[201,68,221,66],[201,70,221,68,"tag"],[201,73,221,71],[201,74,221,72],[202,4,222,2],[202,5,222,3],[203,4,223,2,"stopListeningToAnimatedNodeValue"],[203,36,223,34],[203,38,223,36],[203,47,223,36,"stopListeningToAnimatedNodeValue"],[203,80,223,46,"tag"],[203,83,223,57],[203,85,223,59],[204,6,224,4],[204,10,224,4,"invariant"],[204,28,224,13],[204,30,224,14,"nativeOps"],[204,39,224,23],[204,41,224,25],[204,82,224,66],[204,83,224,67],[205,6,225,4,"API"],[205,9,225,7],[205,10,225,8,"queueOperation"],[205,24,225,22],[205,25,225,23,"nativeOps"],[205,34,225,32],[205,35,225,33,"stopListeningToAnimatedNodeValue"],[205,67,225,65],[205,69,225,67,"tag"],[205,72,225,70],[205,73,225,71],[206,4,226,2],[206,5,226,3],[207,4,227,2,"connectAnimatedNodes"],[207,24,227,22],[207,26,227,24],[207,35,227,24,"connectAnimatedNodes"],[207,56,227,34,"parentTag"],[207,65,227,51],[207,67,227,53,"childTag"],[207,75,227,69],[207,77,227,77],[208,6,228,4],[208,10,228,4,"invariant"],[208,28,228,13],[208,30,228,14,"nativeOps"],[208,39,228,23],[208,41,228,25],[208,82,228,66],[208,83,228,67],[209,6,229,4,"API"],[209,9,229,7],[209,10,229,8,"queueOperation"],[209,24,229,22],[209,25,229,23,"nativeOps"],[209,34,229,32],[209,35,229,33,"connectAnimatedNodes"],[209,55,229,53],[209,57,229,55,"parentTag"],[209,66,229,64],[209,68,229,66,"childTag"],[209,76,229,74],[209,77,229,75],[210,4,230,2],[210,5,230,3],[211,4,231,2,"disconnectAnimatedNodes"],[211,27,231,25],[211,29,231,27],[211,38,231,27,"disconnectAnimatedNodes"],[211,62,232,4,"parentTag"],[211,71,232,21],[211,73,233,4,"childTag"],[211,81,233,20],[211,83,234,10],[212,6,235,4],[212,10,235,4,"invariant"],[212,28,235,13],[212,30,235,14,"nativeOps"],[212,39,235,23],[212,41,235,25],[212,82,235,66],[212,83,235,67],[213,6,236,4,"API"],[213,9,236,7],[213,10,236,8,"queueOperation"],[213,24,236,22],[213,25,236,23,"nativeOps"],[213,34,236,32],[213,35,236,33,"disconnectAnimatedNodes"],[213,58,236,56],[213,60,236,58,"parentTag"],[213,69,236,67],[213,71,236,69,"childTag"],[213,79,236,77],[213,80,236,78],[214,4,237,2],[214,5,237,3],[215,4,238,2,"startAnimatingNode"],[215,22,238,20],[215,24,238,22],[215,33,238,22,"startAnimatingNode"],[215,52,239,4,"animationId"],[215,63,239,23],[215,65,240,4,"nodeTag"],[215,72,240,19],[215,74,241,4,"config"],[215,80,241,31],[215,82,242,4,"endCallback"],[215,93,242,28],[215,95,243,10],[216,6,244,4],[216,10,244,4,"invariant"],[216,28,244,13],[216,30,244,14,"nativeOps"],[216,39,244,23],[216,41,244,25],[216,82,244,66],[216,83,244,67],[217,6,245,4],[217,10,245,8,"useSingleOpBatching"],[217,29,245,27],[217,31,245,29],[218,8,246,6],[218,12,246,10,"endCallback"],[218,23,246,21],[218,25,246,23],[219,10,247,8,"eventListenerAnimationFinishedCallbacks"],[219,49,247,47],[219,50,247,48,"animationId"],[219,61,247,59],[219,62,247,60],[219,65,247,63,"endCallback"],[219,76,247,74],[220,8,248,6],[221,8,249,6],[222,8,250,6,"API"],[222,11,250,9],[222,12,250,10,"queueOperation"],[222,26,250,24],[223,8,251,8],[224,8,252,8,"nativeOps"],[224,17,252,17],[224,18,252,18,"startAnimatingNode"],[224,36,252,36],[224,38,253,8,"animationId"],[224,49,253,19],[224,51,254,8,"nodeTag"],[224,58,254,15],[224,60,255,8,"config"],[224,66,256,6],[224,67,256,7],[225,6,257,4],[225,7,257,5],[225,13,257,11],[226,8,258,6,"API"],[226,11,258,9],[226,12,258,10,"queueOperation"],[226,26,258,24],[226,27,259,8,"nativeOps"],[226,36,259,17],[226,37,259,18,"startAnimatingNode"],[226,55,259,36],[226,57,260,8,"animationId"],[226,68,260,19],[226,70,261,8,"nodeTag"],[226,77,261,15],[226,79,262,8,"config"],[226,85,262,14],[226,87,263,8,"endCallback"],[226,98,264,6],[226,99,264,7],[227,6,265,4],[228,4,266,2],[228,5,266,3],[229,4,267,2,"stopAnimation"],[229,17,267,15],[229,19,267,17],[229,28,267,17,"stopAnimation"],[229,42,267,27,"animationId"],[229,53,267,46],[229,55,267,48],[230,6,268,4],[230,10,268,4,"invariant"],[230,28,268,13],[230,30,268,14,"nativeOps"],[230,39,268,23],[230,41,268,25],[230,82,268,66],[230,83,268,67],[231,6,269,4,"API"],[231,9,269,7],[231,10,269,8,"queueOperation"],[231,24,269,22],[231,25,269,23,"nativeOps"],[231,34,269,32],[231,35,269,33,"stopAnimation"],[231,48,269,46],[231,50,269,48,"animationId"],[231,61,269,59],[231,62,269,60],[232,4,270,2],[232,5,270,3],[233,4,271,2,"setAnimatedNodeValue"],[233,24,271,22],[233,26,271,24],[233,35,271,24,"setAnimatedNodeValue"],[233,56,271,34,"nodeTag"],[233,63,271,49],[233,65,271,51,"value"],[233,70,271,64],[233,72,271,72],[234,6,272,4],[234,10,272,4,"invariant"],[234,28,272,13],[234,30,272,14,"nativeOps"],[234,39,272,23],[234,41,272,25],[234,82,272,66],[234,83,272,67],[235,6,273,4,"API"],[235,9,273,7],[235,10,273,8,"queueOperation"],[235,24,273,22],[235,25,273,23,"nativeOps"],[235,34,273,32],[235,35,273,33,"setAnimatedNodeValue"],[235,55,273,53],[235,57,273,55,"nodeTag"],[235,64,273,62],[235,66,273,64,"value"],[235,71,273,69],[235,72,273,70],[236,4,274,2],[236,5,274,3],[237,4,275,2,"setAnimatedNodeOffset"],[237,25,275,23],[237,27,275,25],[237,36,275,25,"setAnimatedNodeOffset"],[237,58,275,35,"nodeTag"],[237,65,275,50],[237,67,275,52,"offset"],[237,73,275,66],[237,75,275,74],[238,6,276,4],[238,10,276,4,"invariant"],[238,28,276,13],[238,30,276,14,"nativeOps"],[238,39,276,23],[238,41,276,25],[238,82,276,66],[238,83,276,67],[239,6,277,4,"API"],[239,9,277,7],[239,10,277,8,"queueOperation"],[239,24,277,22],[239,25,277,23,"nativeOps"],[239,34,277,32],[239,35,277,33,"setAnimatedNodeOffset"],[239,56,277,54],[239,58,277,56,"nodeTag"],[239,65,277,63],[239,67,277,65,"offset"],[239,73,277,71],[239,74,277,72],[240,4,278,2],[240,5,278,3],[241,4,279,2,"flattenAnimatedNodeOffset"],[241,29,279,27],[241,31,279,29],[241,40,279,29,"flattenAnimatedNodeOffset"],[241,66,279,39,"nodeTag"],[241,73,279,54],[241,75,279,62],[242,6,280,4],[242,10,280,4,"invariant"],[242,28,280,13],[242,30,280,14,"nativeOps"],[242,39,280,23],[242,41,280,25],[242,82,280,66],[242,83,280,67],[243,6,281,4,"API"],[243,9,281,7],[243,10,281,8,"queueOperation"],[243,24,281,22],[243,25,281,23,"nativeOps"],[243,34,281,32],[243,35,281,33,"flattenAnimatedNodeOffset"],[243,60,281,58],[243,62,281,60,"nodeTag"],[243,69,281,67],[243,70,281,68],[244,4,282,2],[244,5,282,3],[245,4,283,2,"extractAnimatedNodeOffset"],[245,29,283,27],[245,31,283,29],[245,40,283,29,"extractAnimatedNodeOffset"],[245,66,283,39,"nodeTag"],[245,73,283,54],[245,75,283,62],[246,6,284,4],[246,10,284,4,"invariant"],[246,28,284,13],[246,30,284,14,"nativeOps"],[246,39,284,23],[246,41,284,25],[246,82,284,66],[246,83,284,67],[247,6,285,4,"API"],[247,9,285,7],[247,10,285,8,"queueOperation"],[247,24,285,22],[247,25,285,23,"nativeOps"],[247,34,285,32],[247,35,285,33,"extractAnimatedNodeOffset"],[247,60,285,58],[247,62,285,60,"nodeTag"],[247,69,285,67],[247,70,285,68],[248,4,286,2],[248,5,286,3],[249,4,287,2,"connectAnimatedNodeToView"],[249,29,287,27],[249,31,287,29],[249,40,287,29,"connectAnimatedNodeToView"],[249,66,287,39,"nodeTag"],[249,73,287,54],[249,75,287,56,"viewTag"],[249,82,287,71],[249,84,287,79],[250,6,288,4],[250,10,288,4,"invariant"],[250,28,288,13],[250,30,288,14,"nativeOps"],[250,39,288,23],[250,41,288,25],[250,82,288,66],[250,83,288,67],[251,6,289,4,"API"],[251,9,289,7],[251,10,289,8,"queueOperation"],[251,24,289,22],[251,25,289,23,"nativeOps"],[251,34,289,32],[251,35,289,33,"connectAnimatedNodeToView"],[251,60,289,58],[251,62,289,60,"nodeTag"],[251,69,289,67],[251,71,289,69,"viewTag"],[251,78,289,76],[251,79,289,77],[252,4,290,2],[252,5,290,3],[253,4,291,2,"disconnectAnimatedNodeFromView"],[253,34,291,32],[253,36,291,34],[253,45,291,34,"disconnectAnimatedNodeFromView"],[253,76,292,4,"nodeTag"],[253,83,292,19],[253,85,293,4,"viewTag"],[253,92,293,19],[253,94,294,10],[254,6,295,4],[254,10,295,4,"invariant"],[254,28,295,13],[254,30,295,14,"nativeOps"],[254,39,295,23],[254,41,295,25],[254,82,295,66],[254,83,295,67],[255,6,296,4,"API"],[255,9,296,7],[255,10,296,8,"queueOperation"],[255,24,296,22],[255,25,297,6,"nativeOps"],[255,34,297,15],[255,35,297,16,"disconnectAnimatedNodeFromView"],[255,65,297,46],[255,67,298,6,"nodeTag"],[255,74,298,13],[255,76,299,6,"viewTag"],[255,83,300,4],[255,84,300,5],[256,4,301,2],[256,5,301,3],[257,4,302,2,"restoreDefaultValues"],[257,24,302,22],[257,26,302,24],[257,35,302,24,"restoreDefaultValues"],[257,56,302,34,"nodeTag"],[257,63,302,49],[257,65,302,57],[258,6,303,4],[258,10,303,4,"invariant"],[258,28,303,13],[258,30,303,14,"nativeOps"],[258,39,303,23],[258,41,303,25],[258,82,303,66],[258,83,303,67],[259,6,304,4],[260,6,305,4],[260,10,305,8,"nativeOps"],[260,19,305,17],[260,20,305,18,"restoreDefaultValues"],[260,40,305,38],[260,44,305,42],[260,48,305,46],[260,50,305,48],[261,8,306,6,"API"],[261,11,306,9],[261,12,306,10,"queueOperation"],[261,26,306,24],[261,27,306,25,"nativeOps"],[261,36,306,34],[261,37,306,35,"restoreDefaultValues"],[261,57,306,55],[261,59,306,57,"nodeTag"],[261,66,306,64],[261,67,306,65],[262,6,307,4],[263,4,308,2],[263,5,308,3],[264,4,309,2,"dropAnimatedNode"],[264,20,309,18],[264,22,309,20],[264,31,309,20,"dropAnimatedNode"],[264,48,309,30,"tag"],[264,51,309,41],[264,53,309,49],[265,6,310,4],[265,10,310,4,"invariant"],[265,28,310,13],[265,30,310,14,"nativeOps"],[265,39,310,23],[265,41,310,25],[265,82,310,66],[265,83,310,67],[266,6,311,4,"API"],[266,9,311,7],[266,10,311,8,"queueOperation"],[266,24,311,22],[266,25,311,23,"nativeOps"],[266,34,311,32],[266,35,311,33,"dropAnimatedNode"],[266,51,311,49],[266,53,311,51,"tag"],[266,56,311,54],[266,57,311,55],[267,4,312,2],[267,5,312,3],[268,4,313,2,"addAnimatedEventToView"],[268,26,313,24],[268,28,313,26],[268,37,313,26,"addAnimatedEventToView"],[268,60,314,4,"viewTag"],[268,67,314,19],[268,69,315,4,"eventName"],[268,78,315,21],[268,80,316,4,"eventMapping"],[268,92,316,30],[268,94,317,4],[269,6,318,4],[269,10,318,4,"invariant"],[269,28,318,13],[269,30,318,14,"nativeOps"],[269,39,318,23],[269,41,318,25],[269,82,318,66],[269,83,318,67],[270,6,319,4,"API"],[270,9,319,7],[270,10,319,8,"queueOperation"],[270,24,319,22],[270,25,320,6,"nativeOps"],[270,34,320,15],[270,35,320,16,"addAnimatedEventToView"],[270,57,320,38],[270,59,321,6,"viewTag"],[270,66,321,13],[270,68,322,6,"eventName"],[270,77,322,15],[270,79,323,6,"eventMapping"],[270,91,324,4],[270,92,324,5],[271,4,325,2],[271,5,325,3],[272,4,326,2,"removeAnimatedEventFromView"],[272,31,326,29],[272,42,326,29,"removeAnimatedEventFromView"],[272,70,327,4,"viewTag"],[272,77,327,19],[272,79,328,4,"eventName"],[272,88,328,21],[272,90,329,4,"animatedNodeTag"],[272,105,329,27],[272,107,330,4],[273,6,331,4],[273,10,331,4,"invariant"],[273,28,331,13],[273,30,331,14,"nativeOps"],[273,39,331,23],[273,41,331,25],[273,82,331,66],[273,83,331,67],[274,6,332,4,"API"],[274,9,332,7],[274,10,332,8,"queueOperation"],[274,24,332,22],[274,25,333,6,"nativeOps"],[274,34,333,15],[274,35,333,16,"removeAnimatedEventFromView"],[274,62,333,43],[274,64,334,6,"viewTag"],[274,71,334,13],[274,73,335,6,"eventName"],[274,82,335,15],[274,84,336,6,"animatedNodeTag"],[274,99,337,4],[274,100,337,5],[275,4,338,2],[276,2,339,0],[276,3,339,1],[277,2,341,0],[277,11,341,9,"setupGlobalEventEmitterListeners"],[277,43,341,41,"setupGlobalEventEmitterListeners"],[277,44,341,41],[277,46,341,44],[278,4,342,2,"globalEventEmitterGetValueListener"],[278,38,342,36],[278,41,342,39,"RCTDeviceEventEmitter"],[278,71,342,60],[278,72,342,61,"addListener"],[278,83,342,72],[278,84,343,4],[278,116,343,36],[278,118,344,4],[278,128,344,14,"params"],[278,134,344,20],[278,136,344,22],[279,6,345,6],[279,10,345,13,"tag"],[279,13,345,16],[279,16,345,20,"params"],[279,22,345,26],[279,23,345,13,"tag"],[279,26,345,16],[280,6,346,6],[280,10,346,12,"callback"],[280,18,346,20],[280,21,346,23,"eventListenerGetValueCallbacks"],[280,51,346,53],[280,52,346,54,"tag"],[280,55,346,57],[280,56,346,58],[281,6,347,6],[281,10,347,10],[281,11,347,11,"callback"],[281,19,347,19],[281,21,347,21],[282,8,348,8],[283,6,349,6],[284,6,350,6,"callback"],[284,14,350,14],[284,15,350,15,"params"],[284,21,350,21],[284,22,350,22,"value"],[284,27,350,27],[284,28,350,28],[285,6,351,6],[285,13,351,13,"eventListenerGetValueCallbacks"],[285,43,351,43],[285,44,351,44,"tag"],[285,47,351,47],[285,48,351,48],[286,4,352,4],[286,5,353,2],[286,6,353,3],[287,4,354,2,"globalEventEmitterAnimationFinishedListener"],[287,47,354,45],[287,50,355,4,"RCTDeviceEventEmitter"],[287,80,355,25],[287,81,355,26,"addListener"],[287,92,355,37],[287,93,356,6],[287,134,356,47],[287,136,357,6],[287,146,357,16,"params"],[287,152,357,22],[287,154,357,24],[288,6,358,8],[288,10,358,15,"animationId"],[288,21,358,26],[288,24,358,30,"params"],[288,30,358,36],[288,31,358,15,"animationId"],[288,42,358,26],[289,6,359,8],[289,10,359,14,"callback"],[289,18,359,22],[289,21,359,25,"eventListenerAnimationFinishedCallbacks"],[289,60,359,64],[289,61,359,65,"animationId"],[289,72,359,76],[289,73,359,77],[290,6,360,8],[290,10,360,12],[290,11,360,13,"callback"],[290,19,360,21],[290,21,360,23],[291,8,361,10],[292,6,362,8],[293,6,363,8,"callback"],[293,14,363,16],[293,15,363,17,"params"],[293,21,363,23],[293,22,363,24],[294,6,364,8],[294,13,364,15,"eventListenerAnimationFinishedCallbacks"],[294,52,364,54],[294,53,364,55,"animationId"],[294,64,364,66],[294,65,364,67],[295,4,365,6],[295,5,366,4],[295,6,366,5],[296,2,367,0],[298,2,369,0],[299,0,370,0],[300,0,371,0],[301,0,372,0],[302,0,373,0],[303,0,374,0],[304,2,375,0],[304,6,375,6,"SUPPORTED_COLOR_STYLES"],[304,28,375,28],[304,31,375,31],[305,4,376,2,"backgroundColor"],[305,19,376,17],[305,21,376,19],[305,25,376,23],[306,4,377,2,"borderBottomColor"],[306,21,377,19],[306,23,377,21],[306,27,377,25],[307,4,378,2,"borderColor"],[307,15,378,13],[307,17,378,15],[307,21,378,19],[308,4,379,2,"borderEndColor"],[308,18,379,16],[308,20,379,18],[308,24,379,22],[309,4,380,2,"borderLeftColor"],[309,19,380,17],[309,21,380,19],[309,25,380,23],[310,4,381,2,"borderRightColor"],[310,20,381,18],[310,22,381,20],[310,26,381,24],[311,4,382,2,"borderStartColor"],[311,20,382,18],[311,22,382,20],[311,26,382,24],[312,4,383,2,"borderTopColor"],[312,18,383,16],[312,20,383,18],[312,24,383,22],[313,4,384,2,"color"],[313,9,384,7],[313,11,384,9],[313,15,384,13],[314,4,385,2,"tintColor"],[314,13,385,11],[314,15,385,13],[315,2,386,0],[315,3,386,1],[316,2,388,0],[316,6,388,6,"SUPPORTED_STYLES"],[316,22,388,22],[316,25,388,22,"_objectSpread"],[316,38,388,22],[316,39,388,22,"_objectSpread"],[316,52,388,22],[316,57,389,5,"SUPPORTED_COLOR_STYLES"],[316,79,389,27],[317,4,390,2,"borderBottomEndRadius"],[317,25,390,23],[317,27,390,25],[317,31,390,29],[318,4,391,2,"borderBottomLeftRadius"],[318,26,391,24],[318,28,391,26],[318,32,391,30],[319,4,392,2,"borderBottomRightRadius"],[319,27,392,25],[319,29,392,27],[319,33,392,31],[320,4,393,2,"borderBottomStartRadius"],[320,27,393,25],[320,29,393,27],[320,33,393,31],[321,4,394,2,"borderEndEndRadius"],[321,22,394,20],[321,24,394,22],[321,28,394,26],[322,4,395,2,"borderEndStartRadius"],[322,24,395,22],[322,26,395,24],[322,30,395,28],[323,4,396,2,"borderRadius"],[323,16,396,14],[323,18,396,16],[323,22,396,20],[324,4,397,2,"borderTopEndRadius"],[324,22,397,20],[324,24,397,22],[324,28,397,26],[325,4,398,2,"borderTopLeftRadius"],[325,23,398,21],[325,25,398,23],[325,29,398,27],[326,4,399,2,"borderTopRightRadius"],[326,24,399,22],[326,26,399,24],[326,30,399,28],[327,4,400,2,"borderTopStartRadius"],[327,24,400,22],[327,26,400,24],[327,30,400,28],[328,4,401,2,"borderStartEndRadius"],[328,24,401,22],[328,26,401,24],[328,30,401,28],[329,4,402,2,"borderStartStartRadius"],[329,26,402,24],[329,28,402,26],[329,32,402,30],[330,4,403,2,"elevation"],[330,13,403,11],[330,15,403,13],[330,19,403,17],[331,4,404,2,"opacity"],[331,11,404,9],[331,13,404,11],[331,17,404,15],[332,4,405,2,"transform"],[332,13,405,11],[332,15,405,13],[332,19,405,17],[333,4,406,2,"zIndex"],[333,10,406,8],[333,12,406,10],[333,16,406,14],[334,4,407,2],[335,4,408,2,"shadowOpacity"],[335,17,408,15],[335,19,408,17],[335,23,408,21],[336,4,409,2,"shadowRadius"],[336,16,409,14],[336,18,409,16],[336,22,409,20],[337,4,410,2],[338,4,411,2,"scaleX"],[338,10,411,8],[338,12,411,10],[338,16,411,14],[339,4,412,2,"scaleY"],[339,10,412,8],[339,12,412,10],[339,16,412,14],[340,4,413,2,"translateX"],[340,14,413,12],[340,16,413,14],[340,20,413,18],[341,4,414,2,"translateY"],[341,14,414,12],[341,16,414,14],[342,2,414,18],[342,4,415,1],[343,2,417,0],[343,6,417,6,"SUPPORTED_TRANSFORMS"],[343,26,417,26],[343,29,417,29],[344,4,418,2,"translateX"],[344,14,418,12],[344,16,418,14],[344,20,418,18],[345,4,419,2,"translateY"],[345,14,419,12],[345,16,419,14],[345,20,419,18],[346,4,420,2,"scale"],[346,9,420,7],[346,11,420,9],[346,15,420,13],[347,4,421,2,"scaleX"],[347,10,421,8],[347,12,421,10],[347,16,421,14],[348,4,422,2,"scaleY"],[348,10,422,8],[348,12,422,10],[348,16,422,14],[349,4,423,2,"rotate"],[349,10,423,8],[349,12,423,10],[349,16,423,14],[350,4,424,2,"rotateX"],[350,11,424,9],[350,13,424,11],[350,17,424,15],[351,4,425,2,"rotateY"],[351,11,425,9],[351,13,425,11],[351,17,425,15],[352,4,426,2,"rotateZ"],[352,11,426,9],[352,13,426,11],[352,17,426,15],[353,4,427,2,"perspective"],[353,15,427,13],[353,17,427,15],[354,2,428,0],[354,3,428,1],[355,2,430,0],[355,6,430,6,"SUPPORTED_INTERPOLATION_PARAMS"],[355,36,430,36],[355,39,430,39],[356,4,431,2,"inputRange"],[356,14,431,12],[356,16,431,14],[356,20,431,18],[357,4,432,2,"outputRange"],[357,15,432,13],[357,17,432,15],[357,21,432,19],[358,4,433,2,"extrapolate"],[358,15,433,13],[358,17,433,15],[358,21,433,19],[359,4,434,2,"extrapolateRight"],[359,20,434,18],[359,22,434,20],[359,26,434,24],[360,4,435,2,"extrapolateLeft"],[360,19,435,17],[360,21,435,19],[361,2,436,0],[361,3,436,1],[362,2,438,0],[362,11,438,9,"addWhitelistedStyleProp"],[362,34,438,32,"addWhitelistedStyleProp"],[362,35,438,33,"prop"],[362,39,438,45],[362,41,438,53],[363,4,439,2],[364,4,440,2,"SUPPORTED_STYLES"],[364,20,440,18],[364,21,440,19,"prop"],[364,25,440,23],[364,26,440,24],[364,29,440,27],[364,33,440,31],[365,2,441,0],[366,2,443,0],[366,11,443,9,"addWhitelistedTransformProp"],[366,38,443,36,"addWhitelistedTransformProp"],[366,39,443,37,"prop"],[366,43,443,49],[366,45,443,57],[367,4,444,2],[368,4,445,2,"SUPPORTED_TRANSFORMS"],[368,24,445,22],[368,25,445,23,"prop"],[368,29,445,27],[368,30,445,28],[368,33,445,31],[368,37,445,35],[369,2,446,0],[370,2,448,0],[370,11,448,9,"addWhitelistedInterpolationParam"],[370,43,448,41,"addWhitelistedInterpolationParam"],[370,44,448,42,"param"],[370,49,448,55],[370,51,448,63],[371,4,449,2],[372,4,450,2,"SUPPORTED_INTERPOLATION_PARAMS"],[372,34,450,32],[372,35,450,33,"param"],[372,40,450,38],[372,41,450,39],[372,44,450,42],[372,48,450,46],[373,2,451,0],[374,2,453,0],[374,11,453,9,"isSupportedColorStyleProp"],[374,36,453,34,"isSupportedColorStyleProp"],[374,37,453,35,"prop"],[374,41,453,47],[374,43,453,58],[375,4,454,2],[375,11,454,9,"SUPPORTED_COLOR_STYLES"],[375,33,454,31],[375,34,454,32,"hasOwnProperty"],[375,48,454,46],[375,49,454,47,"prop"],[375,53,454,51],[375,54,454,52],[376,2,455,0],[377,2,457,0],[377,11,457,9,"isSupportedStyleProp"],[377,31,457,29,"isSupportedStyleProp"],[377,32,457,30,"prop"],[377,36,457,42],[377,38,457,53],[378,4,458,2],[378,11,458,9,"SUPPORTED_STYLES"],[378,27,458,25],[378,28,458,26,"hasOwnProperty"],[378,42,458,40],[378,43,458,41,"prop"],[378,47,458,45],[378,48,458,46],[379,2,459,0],[380,2,461,0],[380,11,461,9,"isSupportedTransformProp"],[380,35,461,33,"isSupportedTransformProp"],[380,36,461,34,"prop"],[380,40,461,46],[380,42,461,57],[381,4,462,2],[381,11,462,9,"SUPPORTED_TRANSFORMS"],[381,31,462,29],[381,32,462,30,"hasOwnProperty"],[381,46,462,44],[381,47,462,45,"prop"],[381,51,462,49],[381,52,462,50],[382,2,463,0],[383,2,465,0],[383,11,465,9,"isSupportedInterpolationParam"],[383,40,465,38,"isSupportedInterpolationParam"],[383,41,465,39,"param"],[383,46,465,52],[383,48,465,63],[384,4,466,2],[384,11,466,9,"SUPPORTED_INTERPOLATION_PARAMS"],[384,41,466,39],[384,42,466,40,"hasOwnProperty"],[384,56,466,54],[384,57,466,55,"param"],[384,62,466,60],[384,63,466,61],[385,2,467,0],[386,2,469,0],[386,11,469,9,"validateTransform"],[386,28,469,26,"validateTransform"],[386,29,470,2,"configs"],[386,36,483,3],[386,38,484,8],[387,4,485,2,"configs"],[387,11,485,9],[387,12,485,10,"forEach"],[387,19,485,17],[387,20,485,18],[387,30,485,18,"config"],[387,36,485,24],[387,38,485,28],[388,6,486,4],[388,10,486,8],[388,11,486,9,"isSupportedTransformProp"],[388,35,486,33],[388,36,486,34,"config"],[388,42,486,40],[388,43,486,41,"property"],[388,51,486,49],[388,52,486,50],[388,54,486,52],[389,8,487,6],[389,14,487,12],[389,18,487,16,"Error"],[389,23,487,21],[389,24,488,9],[389,37,488,21,"config"],[389,43,488,27],[389,44,488,28,"property"],[389,52,488,37],[389,98,489,6],[389,99,489,7],[390,6,490,4],[391,4,491,2],[391,5,491,3],[391,6,491,4],[392,2,492,0],[393,2,494,0],[393,11,494,9,"validateStyles"],[393,25,494,23,"validateStyles"],[393,26,494,24,"styles"],[393,32,494,61],[393,34,494,69],[394,4,495,2],[394,9,495,7],[394,13,495,13,"key"],[394,18,495,16],[394,22,495,20,"styles"],[394,28,495,26],[394,30,495,28],[395,6,496,4],[395,10,496,8],[395,11,496,9,"isSupportedStyleProp"],[395,31,496,29],[395,32,496,30,"key"],[395,37,496,33],[395,38,496,34],[395,40,496,36],[396,8,497,6],[396,14,497,12],[396,18,497,16,"Error"],[396,23,497,21],[396,24,498,9],[396,43,498,27,"key"],[396,48,498,31],[396,94,499,6],[396,95,499,7],[397,6,500,4],[398,4,501,2],[399,2,502,0],[400,2,504,0],[400,11,504,9,"validateInterpolation"],[400,32,504,30,"validateInterpolation"],[400,33,505,2,"config"],[400,39,505,42],[400,41,506,8],[401,4,507,2],[401,9,507,7],[401,13,507,13,"key"],[401,18,507,16],[401,22,507,20,"config"],[401,28,507,26],[401,30,507,28],[402,6,508,4],[402,10,508,8],[402,11,508,9,"isSupportedInterpolationParam"],[402,40,508,38],[402,41,508,39,"key"],[402,46,508,42],[402,47,508,43],[402,49,508,45],[403,8,509,6],[403,14,509,12],[403,18,509,16,"Error"],[403,23,509,21],[403,24,510,9],[403,51,510,35,"key"],[403,56,510,39],[403,102,511,6],[403,103,511,7],[404,6,512,4],[405,4,513,2],[406,2,514,0],[407,2,516,0],[407,11,516,9,"generateNewNodeTag"],[407,29,516,27,"generateNewNodeTag"],[407,30,516,27],[407,32,516,38],[408,4,517,2],[408,11,517,9,"__nativeAnimatedNodeTagCount"],[408,39,517,37],[408,41,517,39],[409,2,518,0],[410,2,520,0],[410,11,520,9,"generateNewAnimationId"],[410,33,520,31,"generateNewAnimationId"],[410,34,520,31],[410,36,520,42],[411,4,521,2],[411,11,521,9,"__nativeAnimationIdCount"],[411,35,521,33],[411,37,521,35],[412,2,522,0],[413,2,524,0],[413,11,524,9,"assertNativeAnimatedModule"],[413,37,524,35,"assertNativeAnimatedModule"],[413,38,524,35],[413,40,524,44],[414,4,525,2],[414,8,525,2,"invariant"],[414,26,525,11],[414,28,525,12,"NativeAnimatedModule"],[414,48,525,32],[414,50,525,34],[414,91,525,75],[414,92,525,76],[415,2,526,0],[416,2,528,0],[416,6,528,4,"_warnedMissingNativeAnimated"],[416,34,528,32],[416,37,528,35],[416,42,528,40],[417,2,530,0],[417,11,530,9,"shouldUseNativeDriver"],[417,32,530,30,"shouldUseNativeDriver"],[417,33,531,2,"config"],[417,39,531,60],[417,41,532,11],[418,4,533,2],[418,8,533,6,"config"],[418,14,533,12],[418,15,533,13,"useNativeDriver"],[418,30,533,28],[418,34,533,32],[418,38,533,36],[418,40,533,38],[419,6,534,4,"console"],[419,13,534,11],[419,14,534,12,"warn"],[419,18,534,16],[419,19,535,6],[419,87,535,74],[419,90,536,8],[419,146,537,4],[419,147,537,5],[420,4,538,2],[421,4,540,2],[421,8,540,6,"config"],[421,14,540,12],[421,15,540,13,"useNativeDriver"],[421,30,540,28],[421,35,540,33],[421,39,540,37],[421,43,540,41],[421,44,540,42,"NativeAnimatedModule"],[421,64,540,62],[421,66,540,64],[422,6,541,4],[422,10,541,8,"process"],[422,17,541,15],[422,18,541,16,"env"],[422,21,541,19],[422,22,541,20,"NODE_ENV"],[422,30,541,28],[422,35,541,33],[422,41,541,39],[422,43,541,41],[423,8,542,6],[423,12,542,10],[423,13,542,11,"_warnedMissingNativeAnimated"],[423,41,542,39],[423,43,542,41],[424,10,543,8,"console"],[424,17,543,15],[424,18,543,16,"warn"],[424,22,543,20],[424,23,544,10],[424,89,544,76],[424,92,545,12],[424,161,545,81],[424,164,546,12],[424,229,546,77],[424,232,547,12],[424,253,547,33],[424,256,548,12],[424,414,549,8],[424,415,549,9],[425,10,550,8,"_warnedMissingNativeAnimated"],[425,38,550,36],[425,41,550,39],[425,45,550,43],[426,8,551,6],[427,6,552,4],[428,6,553,4],[428,13,553,11],[428,18,553,16],[429,4,554,2],[430,4,556,2],[430,11,556,9,"config"],[430,17,556,15],[430,18,556,16,"useNativeDriver"],[430,33,556,31],[430,37,556,35],[430,42,556,40],[431,2,557,0],[432,2,559,0],[432,11,559,9,"transformDataType"],[432,28,559,26,"transformDataType"],[432,29,559,27,"value"],[432,34,559,49],[432,36,559,68],[433,4,560,2],[434,4,561,2],[435,4,562,2],[435,8,562,6],[435,15,562,13,"value"],[435,20,562,18],[435,25,562,23],[435,33,562,31],[435,35,562,33],[436,6,563,4],[436,13,563,11,"value"],[436,18,563,16],[437,4,564,2],[438,4,565,2],[438,8,565,6],[438,14,565,12],[438,15,565,13,"test"],[438,19,565,17],[438,20,565,18,"value"],[438,25,565,23],[438,26,565,24],[438,28,565,26],[439,6,566,4],[439,10,566,10,"degrees"],[439,17,566,17],[439,20,566,20,"parseFloat"],[439,30,566,30],[439,31,566,31,"value"],[439,36,566,36],[439,37,566,37],[439,41,566,41],[439,42,566,42],[440,6,567,4],[440,10,567,10,"radians"],[440,17,567,17],[440,20,567,21,"degrees"],[440,27,567,28],[440,30,567,31,"Math"],[440,34,567,35],[440,35,567,36,"PI"],[440,37,567,38],[440,40,567,42],[440,45,567,47],[441,6,568,4],[441,13,568,11,"radians"],[441,20,568,18],[442,4,569,2],[442,5,569,3],[442,11,569,9],[443,6,570,4],[443,13,570,11,"value"],[443,18,570,16],[444,4,571,2],[445,2,572,0],[446,2,572,1],[446,6,572,1,"_default"],[446,14,572,1],[446,17,572,1,"exports"],[446,24,572,1],[446,25,572,1,"default"],[446,32,572,1],[446,35,574,15],[447,4,575,2,"API"],[447,7,575,5],[447,9,575,2,"API"],[447,12,575,5],[448,4,576,2,"isSupportedColorStyleProp"],[448,29,576,27],[448,31,576,2,"isSupportedColorStyleProp"],[448,56,576,27],[449,4,577,2,"isSupportedStyleProp"],[449,24,577,22],[449,26,577,2,"isSupportedStyleProp"],[449,46,577,22],[450,4,578,2,"isSupportedTransformProp"],[450,28,578,26],[450,30,578,2,"isSupportedTransformProp"],[450,54,578,26],[451,4,579,2,"isSupportedInterpolationParam"],[451,33,579,31],[451,35,579,2,"isSupportedInterpolationParam"],[451,64,579,31],[452,4,580,2,"addWhitelistedStyleProp"],[452,27,580,25],[452,29,580,2,"addWhitelistedStyleProp"],[452,52,580,25],[453,4,581,2,"addWhitelistedTransformProp"],[453,31,581,29],[453,33,581,2,"addWhitelistedTransformProp"],[453,60,581,29],[454,4,582,2,"addWhitelistedInterpolationParam"],[454,36,582,34],[454,38,582,2,"addWhitelistedInterpolationParam"],[454,70,582,34],[455,4,583,2,"validateStyles"],[455,18,583,16],[455,20,583,2,"validateStyles"],[455,34,583,16],[456,4,584,2,"validateTransform"],[456,21,584,19],[456,23,584,2,"validateTransform"],[456,40,584,19],[457,4,585,2,"validateInterpolation"],[457,25,585,23],[457,27,585,2,"validateInterpolation"],[457,48,585,23],[458,4,586,2,"generateNewNodeTag"],[458,22,586,20],[458,24,586,2,"generateNewNodeTag"],[458,42,586,20],[459,4,587,2,"generateNewAnimationId"],[459,26,587,24],[459,28,587,2,"generateNewAnimationId"],[459,50,587,24],[460,4,588,2,"assertNativeAnimatedModule"],[460,30,588,28],[460,32,588,2,"assertNativeAnimatedModule"],[460,58,588,28],[461,4,589,2,"shouldUseNativeDriver"],[461,25,589,23],[461,27,589,2,"shouldUseNativeDriver"],[461,48,589,23],[462,4,590,2,"transformDataType"],[462,21,590,19],[462,23,590,2,"transformDataType"],[462,40,590,19],[463,4,591,2],[464,4,592,2],[465,4,593,2],[465,8,593,6,"nativeEventEmitter"],[465,26,593,24,"nativeEventEmitter"],[465,27,593,24],[465,29,593,47],[466,6,594,4],[466,10,594,8],[466,11,594,9,"nativeEventEmitter"],[466,29,594,27],[466,31,594,29],[467,8,595,6],[468,8,596,6,"nativeEventEmitter"],[468,26,596,24],[468,29,596,27],[468,33,596,31,"NativeEventEmitter"],[468,60,596,49],[469,8,597,8],[470,8,598,8],[471,8,599,8,"Platform"],[471,25,599,16],[471,26,599,17,"OS"],[471,28,599,19],[471,33,599,24],[471,38,599,29],[471,41,599,32],[471,45,599,36],[471,48,599,39,"NativeAnimatedModule"],[471,68,600,6],[471,69,600,7],[472,6,601,4],[473,6,602,4],[473,13,602,11,"nativeEventEmitter"],[473,31,602,29],[474,4,603,2],[475,2,604,0],[475,3,604,1],[476,0,604,1]],"functionMap":{"names":["<global>","<anonymous>","apis.reduce$argument_0","API.getValue","API.setWaitingForIdentifier","API.unsetWaitingForIdentifier","API.disableQueue","API.flushQueue","API.queueOperation","queue.push$argument_0","API.createAnimatedNode","API.updateAnimatedNodeConfig","API.startListeningToAnimatedNodeValue","API.stopListeningToAnimatedNodeValue","API.connectAnimatedNodes","API.disconnectAnimatedNodes","API.startAnimatingNode","API.stopAnimation","API.setAnimatedNodeValue","API.setAnimatedNodeOffset","API.flattenAnimatedNodeOffset","API.extractAnimatedNodeOffset","API.connectAnimatedNodeToView","API.disconnectAnimatedNodeFromView","API.restoreDefaultValues","API.dropAnimatedNode","API.addAnimatedEventToView","API.removeAnimatedEventFromView","setupGlobalEventEmitterListeners","RCTDeviceEventEmitter.addListener$argument_1","addWhitelistedStyleProp","addWhitelistedTransformProp","addWhitelistedInterpolationParam","isSupportedColorStyleProp","isSupportedStyleProp","isSupportedTransformProp","isSupportedInterpolationParam","validateTransform","configs.forEach$argument_0","validateStyles","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","shouldUseNativeDriver","transformDataType","default.get__nativeEventEmitter"],"mappings":"AAA;MC6D;6CCwB;ODK;KDC;YGQ;GHc;2BIC;GJS;6BKC;GLO;gBMC;GNU;cOC;GPyC;kBQC;iBCe,iBD;GRI;sBUC;GVG;4BWC;GXQ;qCYC;GZG;oCaC;GbG;wBcC;GdG;2BeC;GfM;sBgBC;GhB4B;iBiBC;GjBG;wBkBC;GlBG;yBmBC;GnBG;6BoBC;GpBG;6BqBC;GrBG;6BsBC;GtBG;kCuBC;GvBU;wBwBC;GxBM;oByBC;GzBG;0B0BC;G1BY;E2BC;G3BY;A4BG;ICG;KDQ;MCK;ODQ;C5BE;A8BuE;C9BG;A+BE;C/BG;AgCE;ChCG;AiCE;CjCE;AkCE;ClCE;AmCE;CnCE;AoCE;CpCE;AqCE;kBCgB;GDM;CrCC;AuCE;CvCQ;AwCE;CxCU;AyCE;CzCE;A0CE;C1CE;A2CE;C3CE;A4CI;C5C2B;A6CE;C7Ca;E8CqB;G9CU"}},"type":"js/module"}]}