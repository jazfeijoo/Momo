{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":37,"index":37}}],"key":"llq4nuOBKCCL4A7IFpRswh14toM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n  var SEMICOLON = TYPE.Semicolon;\n  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n  module.exports = {\n    name: 'AtrulePrelude',\n    structure: {\n      children: [[]]\n    },\n    parse: function parse(name) {\n      var children = null;\n      if (name !== null) {\n        name = name.toLowerCase();\n      }\n      this.scanner.skipSC();\n      if (this.atrule.hasOwnProperty(name) && typeof this.atrule[name].prelude === 'function') {\n        // custom consumer\n        children = this.atrule[name].prelude.call(this);\n      } else {\n        // default consumer\n        children = this.readSequence(this.scope.AtrulePrelude);\n      }\n      this.scanner.skipSC();\n      if (this.scanner.eof !== true && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {\n        this.error('Semicolon or block is expected');\n      }\n      if (children === null) {\n        children = this.createList();\n      }\n      return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node);\n    },\n    walkContext: 'atrulePrelude'\n  };\n});","lineCount":41,"map":[[2,2,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,25,1,18,"_dependencyMap"],[2,39,1,18],[2,61,1,36],[2,62,1,37],[2,63,1,38,"TYPE"],[2,67,1,42],[3,2,3,0],[3,6,3,4,"SEMICOLON"],[3,15,3,13],[3,18,3,16,"TYPE"],[3,22,3,20],[3,23,3,21,"Semicolon"],[3,32,3,30],[4,2,4,0],[4,6,4,4,"LEFTCURLYBRACKET"],[4,22,4,20],[4,25,4,23,"TYPE"],[4,29,4,27],[4,30,4,28,"LeftCurlyBracket"],[4,46,4,44],[5,2,6,0,"module"],[5,8,6,6],[5,9,6,7,"exports"],[5,16,6,14],[5,19,6,17],[6,4,7,4,"name"],[6,8,7,8],[6,10,7,10],[6,25,7,25],[7,4,8,4,"structure"],[7,13,8,13],[7,15,8,15],[8,6,9,8,"children"],[8,14,9,16],[8,16,9,18],[8,17,9,19],[8,19,9,21],[9,4,10,4],[9,5,10,5],[10,4,11,4,"parse"],[10,9,11,9],[10,11,11,11],[10,20,11,11,"parse"],[10,26,11,20,"name"],[10,30,11,24],[10,32,11,26],[11,6,12,8],[11,10,12,12,"children"],[11,18,12,20],[11,21,12,23],[11,25,12,27],[12,6,14,8],[12,10,14,12,"name"],[12,14,14,16],[12,19,14,21],[12,23,14,25],[12,25,14,27],[13,8,15,12,"name"],[13,12,15,16],[13,15,15,19,"name"],[13,19,15,23],[13,20,15,24,"toLowerCase"],[13,31,15,35],[13,32,15,36],[13,33,15,37],[14,6,16,8],[15,6,18,8],[15,10,18,12],[15,11,18,13,"scanner"],[15,18,18,20],[15,19,18,21,"skipSC"],[15,25,18,27],[15,26,18,28],[15,27,18,29],[16,6,20,8],[16,10,20,12],[16,14,20,16],[16,15,20,17,"atrule"],[16,21,20,23],[16,22,20,24,"hasOwnProperty"],[16,36,20,38],[16,37,20,39,"name"],[16,41,20,43],[16,42,20,44],[16,46,21,12],[16,53,21,19],[16,57,21,23],[16,58,21,24,"atrule"],[16,64,21,30],[16,65,21,31,"name"],[16,69,21,35],[16,70,21,36],[16,71,21,37,"prelude"],[16,78,21,44],[16,83,21,49],[16,93,21,59],[16,95,21,61],[17,8,22,12],[18,8,23,12,"children"],[18,16,23,20],[18,19,23,23],[18,23,23,27],[18,24,23,28,"atrule"],[18,30,23,34],[18,31,23,35,"name"],[18,35,23,39],[18,36,23,40],[18,37,23,41,"prelude"],[18,44,23,48],[18,45,23,49,"call"],[18,49,23,53],[18,50,23,54],[18,54,23,58],[18,55,23,59],[19,6,24,8],[19,7,24,9],[19,13,24,15],[20,8,25,12],[21,8,26,12,"children"],[21,16,26,20],[21,19,26,23],[21,23,26,27],[21,24,26,28,"readSequence"],[21,36,26,40],[21,37,26,41],[21,41,26,45],[21,42,26,46,"scope"],[21,47,26,51],[21,48,26,52,"AtrulePrelude"],[21,61,26,65],[21,62,26,66],[22,6,27,8],[23,6,29,8],[23,10,29,12],[23,11,29,13,"scanner"],[23,18,29,20],[23,19,29,21,"skipSC"],[23,25,29,27],[23,26,29,28],[23,27,29,29],[24,6,31,8],[24,10,31,12],[24,14,31,16],[24,15,31,17,"scanner"],[24,22,31,24],[24,23,31,25,"eof"],[24,26,31,28],[24,31,31,33],[24,35,31,37],[24,39,32,12],[24,43,32,16],[24,44,32,17,"scanner"],[24,51,32,24],[24,52,32,25,"tokenType"],[24,61,32,34],[24,66,32,39,"LEFTCURLYBRACKET"],[24,82,32,55],[24,86,33,12],[24,90,33,16],[24,91,33,17,"scanner"],[24,98,33,24],[24,99,33,25,"tokenType"],[24,108,33,34],[24,113,33,39,"SEMICOLON"],[24,122,33,48],[24,124,33,50],[25,8,34,12],[25,12,34,16],[25,13,34,17,"error"],[25,18,34,22],[25,19,34,23],[25,51,34,55],[25,52,34,56],[26,6,35,8],[27,6,37,8],[27,10,37,12,"children"],[27,18,37,20],[27,23,37,25],[27,27,37,29],[27,29,37,31],[28,8,38,12,"children"],[28,16,38,20],[28,19,38,23],[28,23,38,27],[28,24,38,28,"createList"],[28,34,38,38],[28,35,38,39],[28,36,38,40],[29,6,39,8],[30,6,41,8],[30,13,41,15],[31,8,42,12,"type"],[31,12,42,16],[31,14,42,18],[31,29,42,33],[32,8,43,12,"loc"],[32,11,43,15],[32,13,43,17],[32,17,43,21],[32,18,43,22,"getLocationFromList"],[32,37,43,41],[32,38,43,42,"children"],[32,46,43,50],[32,47,43,51],[33,8,44,12,"children"],[33,16,44,20],[33,18,44,22,"children"],[34,6,45,8],[34,7,45,9],[35,4,46,4],[35,5,46,5],[36,4,47,4,"generate"],[36,12,47,12],[36,14,47,14],[36,23,47,14,"generate"],[36,32,47,23,"node"],[36,36,47,27],[36,38,47,29],[37,6,48,8],[37,10,48,12],[37,11,48,13,"children"],[37,19,48,21],[37,20,48,22,"node"],[37,24,48,26],[37,25,48,27],[38,4,49,4],[38,5,49,5],[39,4,50,4,"walkContext"],[39,15,50,15],[39,17,50,17],[40,2,51,0],[40,3,51,1],[41,0,51,2]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCU;KDmC;cEC;KFE"}},"type":"js/module"}]}