{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":8644}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":8644}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":8644}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":341,"column":0,"index":8644}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../Performance/Systrace","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":326},"end":{"line":18,"column":52,"index":378}}],"key":"8BbC2DX1/RekdS3q6H5EDxQpVLU="}},{"name":"../WebPerformance/Performance","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":379},"end":{"line":19,"column":56,"index":435}}],"key":"c7hrZ4wLBNmoSqLz37wS8Sj3ynI="}},{"name":"./infoLog","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":436},"end":{"line":20,"column":32,"index":468}}],"key":"SSHVtWIKHjYEbWCVN1RC0UTeszg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createPerformanceLogger;\n  exports.getCurrentTimestamp = void 0;\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var Systrace = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"../Performance/Systrace\"));\n  var _Performance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../WebPerformance/Performance\"));\n  var _infoLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./infoLog\"));\n  var _global$nativeQPLTime;\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  var _cookies = {};\n  var PRINT_TO_CONSOLE = false; // Type as false to prevent accidentally committing `true`;\n\n  // This is the prefix for optional logging points/timespans as marks/measures via Performance API,\n  // used to separate these internally from other marks/measures\n  var WEB_PERFORMANCE_PREFIX = 'global_perf_';\n\n  // TODO: Remove once T143070419 is done\n  var performance = new _Performance.default();\n  var getCurrentTimestamp = exports.getCurrentTimestamp = (_global$nativeQPLTime = global.nativeQPLTimestamp) != null ? _global$nativeQPLTime : global.performance.now.bind(global.performance);\n  var PerformanceLogger = /*#__PURE__*/function () {\n    function PerformanceLogger(isLoggingForWebPerformance) {\n      (0, _classCallCheck2.default)(this, PerformanceLogger);\n      this._timespans = {};\n      this._extras = {};\n      this._points = {};\n      this._pointExtras = {};\n      this._closed = false;\n      this._isLoggingForWebPerformance = false;\n      this._isLoggingForWebPerformance = isLoggingForWebPerformance === true;\n    }\n    (0, _createClass2.default)(PerformanceLogger, [{\n      key: \"addTimespan\",\n      value: function addTimespan(key, startTime, endTime, startExtras, endExtras) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to add a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: startTime,\n          endTime: endTime,\n          totalTime: endTime - (startTime || 0),\n          startExtras: startExtras,\n          endExtras: endExtras\n        };\n        if (this._isLoggingForWebPerformance) {\n          performance.measure(`${WEB_PERFORMANCE_PREFIX}_${key}`, {\n            start: startTime,\n            end: endTime\n          });\n        }\n      }\n    }, {\n      key: \"append\",\n      value: function append(performanceLogger) {\n        this._timespans = _objectSpread(_objectSpread({}, performanceLogger.getTimespans()), this._timespans);\n        this._extras = _objectSpread(_objectSpread({}, performanceLogger.getExtras()), this._extras);\n        this._points = _objectSpread(_objectSpread({}, performanceLogger.getPoints()), this._points);\n        this._pointExtras = _objectSpread(_objectSpread({}, performanceLogger.getPointExtras()), this._pointExtras);\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this._timespans = {};\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'clear');\n        }\n      }\n    }, {\n      key: \"clearCompleted\",\n      value: function clearCompleted() {\n        for (var _key in this._timespans) {\n          var _this$_timespans$_key;\n          if (((_this$_timespans$_key = this._timespans[_key]) == null ? void 0 : _this$_timespans$_key.totalTime) != null) {\n            delete this._timespans[_key];\n          }\n        }\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'clearCompleted');\n        }\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this._closed = true;\n      }\n    }, {\n      key: \"currentTimestamp\",\n      value: function currentTimestamp() {\n        return getCurrentTimestamp();\n      }\n    }, {\n      key: \"getExtras\",\n      value: function getExtras() {\n        return this._extras;\n      }\n    }, {\n      key: \"getPoints\",\n      value: function getPoints() {\n        return this._points;\n      }\n    }, {\n      key: \"getPointExtras\",\n      value: function getPointExtras() {\n        return this._pointExtras;\n      }\n    }, {\n      key: \"getTimespans\",\n      value: function getTimespans() {\n        return this._timespans;\n      }\n    }, {\n      key: \"hasTimespan\",\n      value: function hasTimespan(key) {\n        return !!this._timespans[key];\n      }\n    }, {\n      key: \"isClosed\",\n      value: function isClosed() {\n        return this._closed;\n      }\n    }, {\n      key: \"logEverything\",\n      value: function logEverything() {\n        if (PRINT_TO_CONSOLE) {\n          // log timespans\n          for (var _key2 in this._timespans) {\n            var _this$_timespans$_key2;\n            if (((_this$_timespans$_key2 = this._timespans[_key2]) == null ? void 0 : _this$_timespans$_key2.totalTime) != null) {\n              (0, _infoLog.default)(_key2 + ': ' + this._timespans[_key2].totalTime + 'ms');\n            }\n          }\n\n          // log extras\n          (0, _infoLog.default)(this._extras);\n\n          // log points\n          for (var _key3 in this._points) {\n            if (this._points[_key3] != null) {\n              (0, _infoLog.default)(_key3 + ': ' + this._points[_key3] + 'ms');\n            }\n          }\n        }\n      }\n    }, {\n      key: \"markPoint\",\n      value: function markPoint(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: markPoint - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._points[key] != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to mark a point that has been already logged ', key);\n          }\n          return;\n        }\n        this._points[key] = timestamp;\n        if (extras) {\n          this._pointExtras[key] = extras;\n        }\n        if (this._isLoggingForWebPerformance) {\n          performance.mark(`${WEB_PERFORMANCE_PREFIX}_${key}`, {\n            startTime: timestamp\n          });\n        }\n      }\n    }, {\n      key: \"removeExtra\",\n      value: function removeExtra(key) {\n        var value = this._extras[key];\n        delete this._extras[key];\n        return value;\n      }\n    }, {\n      key: \"setExtra\",\n      value: function setExtra(key, value) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: setExtra - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._extras.hasOwnProperty(key)) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to set an extra that already exists ', {\n              key: key,\n              currentValue: this._extras[key],\n              attemptedValue: value\n            });\n          }\n          return;\n        }\n        this._extras[key] = value;\n      }\n    }, {\n      key: \"startTimespan\",\n      value: function startTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: startTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to start a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: timestamp,\n          startExtras: extras\n        };\n        _cookies[key] = Systrace.beginAsyncEvent(key);\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'start: ' + key);\n        }\n        if (this._isLoggingForWebPerformance) {\n          performance.mark(`${WEB_PERFORMANCE_PREFIX}_timespan_start_${key}`, {\n            startTime: timestamp\n          });\n        }\n      }\n    }, {\n      key: \"stopTimespan\",\n      value: function stopTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        var timespan = this._timespans[key];\n        if (!timespan || timespan.startTime == null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to end a timespan that has not started ', key);\n          }\n          return;\n        }\n        if (timespan.endTime != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to end a timespan that has already ended ', key);\n          }\n          return;\n        }\n        timespan.endExtras = extras;\n        timespan.endTime = timestamp;\n        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'end: ' + key);\n        }\n        if (_cookies[key] != null) {\n          Systrace.endAsyncEvent(key, _cookies[key]);\n          delete _cookies[key];\n        }\n        if (this._isLoggingForWebPerformance) {\n          performance.measure(`${WEB_PERFORMANCE_PREFIX}_${key}`, {\n            start: `${WEB_PERFORMANCE_PREFIX}_timespan_start_${key}`,\n            end: timestamp\n          });\n        }\n      }\n    }]);\n    return PerformanceLogger;\n  }(); // Re-exporting for backwards compatibility with all the clients that\n  // may still import it from this module.\n  /**\n   * This function creates performance loggers that can be used to collect and log\n   * various performance data such as timespans, points and extras.\n   * The loggers need to have minimal overhead since they're used in production.\n   */\n  function createPerformanceLogger(isLoggingForWebPerformance) {\n    return new PerformanceLogger(isLoggingForWebPerformance);\n  }\n});","lineCount":313,"map":[[11,2,18,0],[11,6,18,0,"Systrace"],[11,14,18,0],[11,17,18,0,"_interopRequireWildcard"],[11,40,18,0],[11,41,18,0,"_$$_REQUIRE"],[11,52,18,0],[11,53,18,0,"_dependencyMap"],[11,67,18,0],[12,2,19,0],[12,6,19,0,"_Performance"],[12,18,19,0],[12,21,19,0,"_interopRequireDefault"],[12,43,19,0],[12,44,19,0,"_$$_REQUIRE"],[12,55,19,0],[12,56,19,0,"_dependencyMap"],[12,70,19,0],[13,2,20,0],[13,6,20,0,"_infoLog"],[13,14,20,0],[13,17,20,0,"_interopRequireDefault"],[13,39,20,0],[13,40,20,0,"_$$_REQUIRE"],[13,51,20,0],[13,52,20,0,"_dependencyMap"],[13,66,20,0],[14,2,20,32],[14,6,20,32,"_global$nativeQPLTime"],[14,27,20,32],[15,2,1,0],[16,0,2,0],[17,0,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,2,1,0],[24,11,1,0,"_getRequireWildcardCache"],[24,36,1,0,"nodeInterop"],[24,47,1,0],[24,62,1,0,"WeakMap"],[24,69,1,0],[24,103,1,0,"cacheBabelInterop"],[24,120,1,0],[24,127,1,0,"WeakMap"],[24,134,1,0],[24,142,1,0,"cacheNodeInterop"],[24,158,1,0],[24,165,1,0,"WeakMap"],[24,172,1,0],[24,184,1,0,"_getRequireWildcardCache"],[24,208,1,0],[24,220,1,0,"_getRequireWildcardCache"],[24,245,1,0,"nodeInterop"],[24,256,1,0],[24,267,1,0,"nodeInterop"],[24,278,1,0],[24,281,1,0,"cacheNodeInterop"],[24,297,1,0],[24,300,1,0,"cacheBabelInterop"],[24,317,1,0],[24,322,1,0,"nodeInterop"],[24,333,1,0],[25,2,1,0],[25,11,1,0,"_interopRequireWildcard"],[25,35,1,0,"obj"],[25,38,1,0],[25,40,1,0,"nodeInterop"],[25,51,1,0],[25,60,1,0,"nodeInterop"],[25,71,1,0],[25,75,1,0,"obj"],[25,78,1,0],[25,82,1,0,"obj"],[25,85,1,0],[25,86,1,0,"__esModule"],[25,96,1,0],[25,107,1,0,"obj"],[25,110,1,0],[25,118,1,0,"obj"],[25,121,1,0],[25,141,1,0,"obj"],[25,144,1,0],[25,168,1,0,"obj"],[25,171,1,0],[25,199,1,0,"default"],[25,206,1,0],[25,208,1,0,"obj"],[25,211,1,0],[25,221,1,0,"cache"],[25,226,1,0],[25,229,1,0,"_getRequireWildcardCache"],[25,253,1,0],[25,254,1,0,"nodeInterop"],[25,265,1,0],[25,272,1,0,"cache"],[25,277,1,0],[25,281,1,0,"cache"],[25,286,1,0],[25,287,1,0,"has"],[25,290,1,0],[25,291,1,0,"obj"],[25,294,1,0],[25,306,1,0,"cache"],[25,311,1,0],[25,312,1,0,"get"],[25,315,1,0],[25,316,1,0,"obj"],[25,319,1,0],[25,328,1,0,"newObj"],[25,334,1,0],[25,345,1,0,"hasPropertyDescriptor"],[25,366,1,0],[25,369,1,0,"Object"],[25,375,1,0],[25,376,1,0,"defineProperty"],[25,390,1,0],[25,394,1,0,"Object"],[25,400,1,0],[25,401,1,0,"getOwnPropertyDescriptor"],[25,425,1,0],[25,436,1,0,"key"],[25,439,1,0],[25,443,1,0,"obj"],[25,446,1,0],[25,454,1,0,"key"],[25,457,1,0],[25,475,1,0,"Object"],[25,481,1,0],[25,482,1,0,"prototype"],[25,491,1,0],[25,492,1,0,"hasOwnProperty"],[25,506,1,0],[25,507,1,0,"call"],[25,511,1,0],[25,512,1,0,"obj"],[25,515,1,0],[25,517,1,0,"key"],[25,520,1,0],[25,529,1,0,"desc"],[25,533,1,0],[25,536,1,0,"hasPropertyDescriptor"],[25,557,1,0],[25,560,1,0,"Object"],[25,566,1,0],[25,567,1,0,"getOwnPropertyDescriptor"],[25,591,1,0],[25,592,1,0,"obj"],[25,595,1,0],[25,597,1,0,"key"],[25,600,1,0],[25,614,1,0,"desc"],[25,618,1,0],[25,623,1,0,"desc"],[25,627,1,0],[25,628,1,0,"get"],[25,631,1,0],[25,635,1,0,"desc"],[25,639,1,0],[25,640,1,0,"set"],[25,643,1,0],[25,648,1,0,"Object"],[25,654,1,0],[25,655,1,0,"defineProperty"],[25,669,1,0],[25,670,1,0,"newObj"],[25,676,1,0],[25,678,1,0,"key"],[25,681,1,0],[25,683,1,0,"desc"],[25,687,1,0],[25,699,1,0,"newObj"],[25,705,1,0],[25,706,1,0,"key"],[25,709,1,0],[25,713,1,0,"obj"],[25,716,1,0],[25,717,1,0,"key"],[25,720,1,0],[25,729,1,0,"newObj"],[25,735,1,0],[25,736,1,0,"default"],[25,743,1,0],[25,746,1,0,"obj"],[25,749,1,0],[25,755,1,0,"cache"],[25,760,1,0],[25,764,1,0,"cache"],[25,769,1,0],[25,770,1,0,"set"],[25,773,1,0],[25,774,1,0,"obj"],[25,777,1,0],[25,779,1,0,"newObj"],[25,785,1,0],[25,797,1,0,"newObj"],[25,803,1,0],[26,2,1,0],[26,11,1,0,"ownKeys"],[26,19,1,0,"e"],[26,20,1,0],[26,22,1,0,"r"],[26,23,1,0],[26,31,1,0,"t"],[26,32,1,0],[26,35,1,0,"Object"],[26,41,1,0],[26,42,1,0,"keys"],[26,46,1,0],[26,47,1,0,"e"],[26,48,1,0],[26,55,1,0,"Object"],[26,61,1,0],[26,62,1,0,"getOwnPropertySymbols"],[26,83,1,0],[26,91,1,0,"o"],[26,92,1,0],[26,95,1,0,"Object"],[26,101,1,0],[26,102,1,0,"getOwnPropertySymbols"],[26,123,1,0],[26,124,1,0,"e"],[26,125,1,0],[26,128,1,0,"r"],[26,129,1,0],[26,134,1,0,"o"],[26,135,1,0],[26,138,1,0,"o"],[26,139,1,0],[26,140,1,0,"filter"],[26,146,1,0],[26,157,1,0,"r"],[26,158,1,0],[26,169,1,0,"Object"],[26,175,1,0],[26,176,1,0,"getOwnPropertyDescriptor"],[26,200,1,0],[26,201,1,0,"e"],[26,202,1,0],[26,204,1,0,"r"],[26,205,1,0],[26,207,1,0,"enumerable"],[26,217,1,0],[26,224,1,0,"t"],[26,225,1,0],[26,226,1,0,"push"],[26,230,1,0],[26,231,1,0,"apply"],[26,236,1,0],[26,237,1,0,"t"],[26,238,1,0],[26,240,1,0,"o"],[26,241,1,0],[26,253,1,0,"t"],[26,254,1,0],[27,2,1,0],[27,11,1,0,"_objectSpread"],[27,25,1,0,"e"],[27,26,1,0],[27,39,1,0,"r"],[27,40,1,0],[27,46,1,0,"r"],[27,47,1,0],[27,50,1,0,"arguments"],[27,59,1,0],[27,60,1,0,"length"],[27,66,1,0],[27,68,1,0,"r"],[27,69,1,0],[27,79,1,0,"t"],[27,80,1,0],[27,91,1,0,"arguments"],[27,100,1,0],[27,101,1,0,"r"],[27,102,1,0],[27,106,1,0,"arguments"],[27,115,1,0],[27,116,1,0,"r"],[27,117,1,0],[27,125,1,0,"r"],[27,126,1,0],[27,133,1,0,"ownKeys"],[27,140,1,0],[27,141,1,0,"Object"],[27,147,1,0],[27,148,1,0,"t"],[27,149,1,0],[27,156,1,0,"forEach"],[27,163,1,0],[27,174,1,0,"r"],[27,175,1,0],[27,183,1,0,"_defineProperty2"],[27,199,1,0],[27,200,1,0,"default"],[27,207,1,0],[27,209,1,0,"e"],[27,210,1,0],[27,212,1,0,"r"],[27,213,1,0],[27,215,1,0,"t"],[27,216,1,0],[27,217,1,0,"r"],[27,218,1,0],[27,227,1,0,"Object"],[27,233,1,0],[27,234,1,0,"getOwnPropertyDescriptors"],[27,259,1,0],[27,262,1,0,"Object"],[27,268,1,0],[27,269,1,0,"defineProperties"],[27,285,1,0],[27,286,1,0,"e"],[27,287,1,0],[27,289,1,0,"Object"],[27,295,1,0],[27,296,1,0,"getOwnPropertyDescriptors"],[27,321,1,0],[27,322,1,0,"t"],[27,323,1,0],[27,328,1,0,"ownKeys"],[27,335,1,0],[27,336,1,0,"Object"],[27,342,1,0],[27,343,1,0,"t"],[27,344,1,0],[27,347,1,0,"forEach"],[27,354,1,0],[27,365,1,0,"r"],[27,366,1,0],[27,370,1,0,"Object"],[27,376,1,0],[27,377,1,0,"defineProperty"],[27,391,1,0],[27,392,1,0,"e"],[27,393,1,0],[27,395,1,0,"r"],[27,396,1,0],[27,398,1,0,"Object"],[27,404,1,0],[27,405,1,0,"getOwnPropertyDescriptor"],[27,429,1,0],[27,430,1,0,"t"],[27,431,1,0],[27,433,1,0,"r"],[27,434,1,0],[27,451,1,0,"e"],[27,452,1,0],[28,2,22,0],[28,6,22,6,"_cookies"],[28,14,22,44],[28,17,22,47],[28,18,22,48],[28,19,22,49],[29,2,24,0],[29,6,24,6,"PRINT_TO_CONSOLE"],[29,22,24,29],[29,25,24,32],[29,30,24,37],[29,31,24,38],[29,32,24,39],[31,2,26,0],[32,2,27,0],[33,2,28,0],[33,6,28,6,"WEB_PERFORMANCE_PREFIX"],[33,28,28,28],[33,31,28,31],[33,45,28,45],[35,2,30,0],[36,2,31,0],[36,6,31,6,"performance"],[36,17,31,17],[36,20,31,20],[36,24,31,24,"Performance"],[36,44,31,35],[36,45,31,36],[36,46,31,37],[37,2,33,7],[37,6,33,13,"getCurrentTimestamp"],[37,25,33,46],[37,28,33,46,"exports"],[37,35,33,46],[37,36,33,46,"getCurrentTimestamp"],[37,55,33,46],[37,59,33,46,"_global$nativeQPLTime"],[37,80,33,46],[37,83,34,2,"global"],[37,89,34,8],[37,90,34,9,"nativeQPLTimestamp"],[37,108,34,27],[37,120,34,27,"_global$nativeQPLTime"],[37,141,34,27],[37,144,34,31,"global"],[37,150,34,37],[37,151,34,38,"performance"],[37,162,34,49],[37,163,34,50,"now"],[37,166,34,53],[37,167,34,54,"bind"],[37,171,34,58],[37,172,34,59,"global"],[37,178,34,65],[37,179,34,66,"performance"],[37,190,34,77],[37,191,34,78],[38,2,34,79],[38,6,36,6,"PerformanceLogger"],[38,23,36,23],[39,4,44,2],[39,13,44,2,"PerformanceLogger"],[39,31,44,14,"isLoggingForWebPerformance"],[39,57,44,50],[39,59,44,52],[40,6,44,52],[40,10,44,52,"_classCallCheck2"],[40,26,44,52],[40,27,44,52,"default"],[40,34,44,52],[40,42,44,52,"PerformanceLogger"],[40,59,44,52],[41,6,44,52],[41,11,37,2,"_timespans"],[41,21,37,12],[41,24,37,43],[41,25,37,44],[41,26,37,45],[42,6,37,45],[42,11,38,2,"_extras"],[42,18,38,9],[42,21,38,42],[42,22,38,43],[42,23,38,44],[43,6,38,44],[43,11,39,2,"_points"],[43,18,39,9],[43,21,39,38],[43,22,39,39],[43,23,39,40],[44,6,39,40],[44,11,40,2,"_pointExtras"],[44,23,40,14],[44,26,40,48],[44,27,40,49],[44,28,40,50],[45,6,40,50],[45,11,41,2,"_closed"],[45,18,41,9],[45,21,41,21],[45,26,41,26],[46,6,41,26],[46,11,42,2,"_isLoggingForWebPerformance"],[46,38,42,29],[46,41,42,41],[46,46,42,46],[47,6,45,4],[47,10,45,8],[47,11,45,9,"_isLoggingForWebPerformance"],[47,38,45,36],[47,41,45,39,"isLoggingForWebPerformance"],[47,67,45,65],[47,72,45,70],[47,76,45,74],[48,4,46,2],[49,4,46,3],[49,8,46,3,"_createClass2"],[49,21,46,3],[49,22,46,3,"default"],[49,29,46,3],[49,31,46,3,"PerformanceLogger"],[49,48,46,3],[50,6,46,3,"key"],[50,9,46,3],[51,6,46,3,"value"],[51,11,46,3],[51,13,48,2],[51,22,48,2,"addTimespan"],[51,34,49,4,"key"],[51,37,49,15],[51,39,50,4,"startTime"],[51,48,50,21],[51,50,51,4,"endTime"],[51,57,51,19],[51,59,52,4,"startExtras"],[51,70,52,24],[51,72,53,4,"endExtras"],[51,81,53,22],[51,83,54,4],[52,8,55,4],[52,12,55,8],[52,16,55,12],[52,17,55,13,"_closed"],[52,24,55,20],[52,26,55,22],[53,10,56,6],[53,14,56,10,"PRINT_TO_CONSOLE"],[53,30,56,26],[53,34,56,30,"__DEV__"],[53,41,56,37],[53,43,56,39],[54,12,57,8],[54,16,57,8,"infoLog"],[54,32,57,15],[54,34,57,16],[54,90,57,72],[54,92,57,74,"key"],[54,95,57,77],[54,96,57,78],[55,10,58,6],[56,10,59,6],[57,8,60,4],[58,8,61,4],[58,12,61,8],[58,16,61,12],[58,17,61,13,"_timespans"],[58,27,61,23],[58,28,61,24,"key"],[58,31,61,27],[58,32,61,28],[58,34,61,30],[59,10,62,6],[59,14,62,10,"PRINT_TO_CONSOLE"],[59,30,62,26],[59,34,62,30,"__DEV__"],[59,41,62,37],[59,43,62,39],[60,12,63,8],[60,16,63,8,"infoLog"],[60,32,63,15],[60,34,64,10],[60,104,64,80],[60,106,65,10,"key"],[60,109,66,8],[60,110,66,9],[61,10,67,6],[62,10,68,6],[63,8,69,4],[64,8,71,4],[64,12,71,8],[64,13,71,9,"_timespans"],[64,23,71,19],[64,24,71,20,"key"],[64,27,71,23],[64,28,71,24],[64,31,71,27],[65,10,72,6,"startTime"],[65,19,72,15],[65,21,72,6,"startTime"],[65,30,72,15],[66,10,73,6,"endTime"],[66,17,73,13],[66,19,73,6,"endTime"],[66,26,73,13],[67,10,74,6,"totalTime"],[67,19,74,15],[67,21,74,17,"endTime"],[67,28,74,24],[67,32,74,28,"startTime"],[67,41,74,37],[67,45,74,41],[67,46,74,42],[67,47,74,43],[68,10,75,6,"startExtras"],[68,21,75,17],[68,23,75,6,"startExtras"],[68,34,75,17],[69,10,76,6,"endExtras"],[69,19,76,15],[69,21,76,6,"endExtras"],[70,8,77,4],[70,9,77,5],[71,8,79,4],[71,12,79,8],[71,16,79,12],[71,17,79,13,"_isLoggingForWebPerformance"],[71,44,79,40],[71,46,79,42],[72,10,80,6,"performance"],[72,21,80,17],[72,22,80,18,"measure"],[72,29,80,25],[72,30,80,27],[72,33,80,29,"WEB_PERFORMANCE_PREFIX"],[72,55,80,52],[72,59,80,55,"key"],[72,62,80,59],[72,64,80,60],[72,66,80,62],[73,12,81,8,"start"],[73,17,81,13],[73,19,81,15,"startTime"],[73,28,81,24],[74,12,82,8,"end"],[74,15,82,11],[74,17,82,13,"endTime"],[75,10,83,6],[75,11,83,7],[75,12,83,8],[76,8,84,4],[77,6,85,2],[78,4,85,3],[79,6,85,3,"key"],[79,9,85,3],[80,6,85,3,"value"],[80,11,85,3],[80,13,87,2],[80,22,87,2,"append"],[80,29,87,9,"performanceLogger"],[80,46,87,46],[80,48,87,48],[81,8,88,4],[81,12,88,8],[81,13,88,9,"_timespans"],[81,23,88,19],[81,26,88,19,"_objectSpread"],[81,39,88,19],[81,40,88,19,"_objectSpread"],[81,53,88,19],[81,58,89,9,"performanceLogger"],[81,75,89,26],[81,76,89,27,"getTimespans"],[81,88,89,39],[81,89,89,40],[81,90,89,41],[81,93,90,9],[81,97,90,13],[81,98,90,14,"_timespans"],[81,108,90,24],[81,109,91,5],[82,8,92,4],[82,12,92,8],[82,13,92,9,"_extras"],[82,20,92,16],[82,23,92,16,"_objectSpread"],[82,36,92,16],[82,37,92,16,"_objectSpread"],[82,50,92,16],[82,55,92,23,"performanceLogger"],[82,72,92,40],[82,73,92,41,"getExtras"],[82,82,92,50],[82,83,92,51],[82,84,92,52],[82,87,92,57],[82,91,92,61],[82,92,92,62,"_extras"],[82,99,92,69],[82,100,92,70],[83,8,93,4],[83,12,93,8],[83,13,93,9,"_points"],[83,20,93,16],[83,23,93,16,"_objectSpread"],[83,36,93,16],[83,37,93,16,"_objectSpread"],[83,50,93,16],[83,55,93,23,"performanceLogger"],[83,72,93,40],[83,73,93,41,"getPoints"],[83,82,93,50],[83,83,93,51],[83,84,93,52],[83,87,93,57],[83,91,93,61],[83,92,93,62,"_points"],[83,99,93,69],[83,100,93,70],[84,8,94,4],[84,12,94,8],[84,13,94,9,"_pointExtras"],[84,25,94,21],[84,28,94,21,"_objectSpread"],[84,41,94,21],[84,42,94,21,"_objectSpread"],[84,55,94,21],[84,60,95,9,"performanceLogger"],[84,77,95,26],[84,78,95,27,"getPointExtras"],[84,92,95,41],[84,93,95,42],[84,94,95,43],[84,97,96,9],[84,101,96,13],[84,102,96,14,"_pointExtras"],[84,114,96,26],[84,115,97,5],[85,6,98,2],[86,4,98,3],[87,6,98,3,"key"],[87,9,98,3],[88,6,98,3,"value"],[88,11,98,3],[88,13,100,2],[88,22,100,2,"clear"],[88,28,100,2],[88,30,100,10],[89,8,101,4],[89,12,101,8],[89,13,101,9,"_timespans"],[89,23,101,19],[89,26,101,22],[89,27,101,23],[89,28,101,24],[90,8,102,4],[90,12,102,8],[90,13,102,9,"_extras"],[90,20,102,16],[90,23,102,19],[90,24,102,20],[90,25,102,21],[91,8,103,4],[91,12,103,8],[91,13,103,9,"_points"],[91,20,103,16],[91,23,103,19],[91,24,103,20],[91,25,103,21],[92,8,104,4],[92,12,104,8,"PRINT_TO_CONSOLE"],[92,28,104,24],[92,30,104,26],[93,10,105,6],[93,14,105,6,"infoLog"],[93,30,105,13],[93,32,105,14],[93,54,105,36],[93,56,105,38],[93,63,105,45],[93,64,105,46],[94,8,106,4],[95,6,107,2],[96,4,107,3],[97,6,107,3,"key"],[97,9,107,3],[98,6,107,3,"value"],[98,11,107,3],[98,13,109,2],[98,22,109,2,"clearCompleted"],[98,37,109,2],[98,39,109,19],[99,8,110,4],[99,13,110,9],[99,17,110,15,"key"],[99,21,110,18],[99,25,110,22],[99,29,110,26],[99,30,110,27,"_timespans"],[99,40,110,37],[99,42,110,39],[100,10,110,39],[100,14,110,39,"_this$_timespans$_key"],[100,35,110,39],[101,10,111,6],[101,14,111,10],[101,16,111,10,"_this$_timespans$_key"],[101,37,111,10],[101,44,111,14],[101,45,111,15,"_timespans"],[101,55,111,25],[101,56,111,26,"key"],[101,60,111,29],[101,61,111,30],[101,82,111,10,"_this$_timespans$_key"],[101,103,111,10],[101,104,111,32,"totalTime"],[101,113,111,41],[101,118,111,45],[101,122,111,49],[101,124,111,51],[102,12,112,8],[102,19,112,15],[102,23,112,19],[102,24,112,20,"_timespans"],[102,34,112,30],[102,35,112,31,"key"],[102,39,112,34],[102,40,112,35],[103,10,113,6],[104,8,114,4],[105,8,115,4],[105,12,115,8],[105,13,115,9,"_extras"],[105,20,115,16],[105,23,115,19],[105,24,115,20],[105,25,115,21],[106,8,116,4],[106,12,116,8],[106,13,116,9,"_points"],[106,20,116,16],[106,23,116,19],[106,24,116,20],[106,25,116,21],[107,8,117,4],[107,12,117,8,"PRINT_TO_CONSOLE"],[107,28,117,24],[107,30,117,26],[108,10,118,6],[108,14,118,6,"infoLog"],[108,30,118,13],[108,32,118,14],[108,54,118,36],[108,56,118,38],[108,72,118,54],[108,73,118,55],[109,8,119,4],[110,6,120,2],[111,4,120,3],[112,6,120,3,"key"],[112,9,120,3],[113,6,120,3,"value"],[113,11,120,3],[113,13,122,2],[113,22,122,2,"close"],[113,28,122,2],[113,30,122,10],[114,8,123,4],[114,12,123,8],[114,13,123,9,"_closed"],[114,20,123,16],[114,23,123,19],[114,27,123,23],[115,6,124,2],[116,4,124,3],[117,6,124,3,"key"],[117,9,124,3],[118,6,124,3,"value"],[118,11,124,3],[118,13,126,2],[118,22,126,2,"currentTimestamp"],[118,39,126,2],[118,41,126,29],[119,8,127,4],[119,15,127,11,"getCurrentTimestamp"],[119,34,127,30],[119,35,127,31],[119,36,127,32],[120,6,128,2],[121,4,128,3],[122,6,128,3,"key"],[122,9,128,3],[123,6,128,3,"value"],[123,11,128,3],[123,13,130,2],[123,22,130,2,"getExtras"],[123,32,130,2],[123,34,130,44],[124,8,131,4],[124,15,131,11],[124,19,131,15],[124,20,131,16,"_extras"],[124,27,131,23],[125,6,132,2],[126,4,132,3],[127,6,132,3,"key"],[127,9,132,3],[128,6,132,3,"value"],[128,11,132,3],[128,13,134,2],[128,22,134,2,"getPoints"],[128,32,134,2],[128,34,134,40],[129,8,135,4],[129,15,135,11],[129,19,135,15],[129,20,135,16,"_points"],[129,27,135,23],[130,6,136,2],[131,4,136,3],[132,6,136,3,"key"],[132,9,136,3],[133,6,136,3,"value"],[133,11,136,3],[133,13,138,2],[133,22,138,2,"getPointExtras"],[133,37,138,2],[133,39,138,45],[134,8,139,4],[134,15,139,11],[134,19,139,15],[134,20,139,16,"_pointExtras"],[134,32,139,28],[135,6,140,2],[136,4,140,3],[137,6,140,3,"key"],[137,9,140,3],[138,6,140,3,"value"],[138,11,140,3],[138,13,142,2],[138,22,142,2,"getTimespans"],[138,35,142,2],[138,37,142,45],[139,8,143,4],[139,15,143,11],[139,19,143,15],[139,20,143,16,"_timespans"],[139,30,143,26],[140,6,144,2],[141,4,144,3],[142,6,144,3,"key"],[142,9,144,3],[143,6,144,3,"value"],[143,11,144,3],[143,13,146,2],[143,22,146,2,"hasTimespan"],[143,34,146,14,"key"],[143,37,146,25],[143,39,146,36],[144,8,147,4],[144,15,147,11],[144,16,147,12],[144,17,147,13],[144,21,147,17],[144,22,147,18,"_timespans"],[144,32,147,28],[144,33,147,29,"key"],[144,36,147,32],[144,37,147,33],[145,6,148,2],[146,4,148,3],[147,6,148,3,"key"],[147,9,148,3],[148,6,148,3,"value"],[148,11,148,3],[148,13,150,2],[148,22,150,2,"isClosed"],[148,31,150,2],[148,33,150,22],[149,8,151,4],[149,15,151,11],[149,19,151,15],[149,20,151,16,"_closed"],[149,27,151,23],[150,6,152,2],[151,4,152,3],[152,6,152,3,"key"],[152,9,152,3],[153,6,152,3,"value"],[153,11,152,3],[153,13,154,2],[153,22,154,2,"logEverything"],[153,36,154,2],[153,38,154,18],[154,8,155,4],[154,12,155,8,"PRINT_TO_CONSOLE"],[154,28,155,24],[154,30,155,26],[155,10,156,6],[156,10,157,6],[156,15,157,11],[156,19,157,17,"key"],[156,24,157,20],[156,28,157,24],[156,32,157,28],[156,33,157,29,"_timespans"],[156,43,157,39],[156,45,157,41],[157,12,157,41],[157,16,157,41,"_this$_timespans$_key2"],[157,38,157,41],[158,12,158,8],[158,16,158,12],[158,18,158,12,"_this$_timespans$_key2"],[158,40,158,12],[158,47,158,16],[158,48,158,17,"_timespans"],[158,58,158,27],[158,59,158,28,"key"],[158,64,158,31],[158,65,158,32],[158,86,158,12,"_this$_timespans$_key2"],[158,108,158,12],[158,109,158,34,"totalTime"],[158,118,158,43],[158,123,158,47],[158,127,158,51],[158,129,158,53],[159,14,159,10],[159,18,159,10,"infoLog"],[159,34,159,17],[159,36,159,18,"key"],[159,41,159,21],[159,44,159,24],[159,48,159,28],[159,51,159,31],[159,55,159,35],[159,56,159,36,"_timespans"],[159,66,159,46],[159,67,159,47,"key"],[159,72,159,50],[159,73,159,51],[159,74,159,52,"totalTime"],[159,83,159,61],[159,86,159,64],[159,90,159,68],[159,91,159,69],[160,12,160,8],[161,10,161,6],[163,10,163,6],[164,10,164,6],[164,14,164,6,"infoLog"],[164,30,164,13],[164,32,164,14],[164,36,164,18],[164,37,164,19,"_extras"],[164,44,164,26],[164,45,164,27],[166,10,166,6],[167,10,167,6],[167,15,167,11],[167,19,167,17,"key"],[167,24,167,20],[167,28,167,24],[167,32,167,28],[167,33,167,29,"_points"],[167,40,167,36],[167,42,167,38],[168,12,168,8],[168,16,168,12],[168,20,168,16],[168,21,168,17,"_points"],[168,28,168,24],[168,29,168,25,"key"],[168,34,168,28],[168,35,168,29],[168,39,168,33],[168,43,168,37],[168,45,168,39],[169,14,169,10],[169,18,169,10,"infoLog"],[169,34,169,17],[169,36,169,18,"key"],[169,41,169,21],[169,44,169,24],[169,48,169,28],[169,51,169,31],[169,55,169,35],[169,56,169,36,"_points"],[169,63,169,43],[169,64,169,44,"key"],[169,69,169,47],[169,70,169,48],[169,73,169,51],[169,77,169,55],[169,78,169,56],[170,12,170,8],[171,10,171,6],[172,8,172,4],[173,6,173,2],[174,4,173,3],[175,6,173,3,"key"],[175,9,173,3],[176,6,173,3,"value"],[176,11,173,3],[176,13,175,2],[176,22,175,2,"markPoint"],[176,32,176,4,"key"],[176,35,176,15],[176,37,179,4],[177,8,179,4],[177,12,177,4,"timestamp"],[177,21,177,22],[177,24,177,22,"arguments"],[177,33,177,22],[177,34,177,22,"length"],[177,40,177,22],[177,48,177,22,"arguments"],[177,57,177,22],[177,65,177,22,"undefined"],[177,74,177,22],[177,77,177,22,"arguments"],[177,86,177,22],[177,92,177,25,"getCurrentTimestamp"],[177,111,177,44],[177,112,177,45],[177,113,177,46],[178,8,177,46],[178,12,178,4,"extras"],[178,18,178,19],[178,21,178,19,"arguments"],[178,30,178,19],[178,31,178,19,"length"],[178,37,178,19],[178,44,178,19,"arguments"],[178,53,178,19],[178,59,178,19,"undefined"],[178,68,178,19],[179,8,180,4],[179,12,180,8],[179,16,180,12],[179,17,180,13,"_closed"],[179,24,180,20],[179,26,180,22],[180,10,181,6],[180,14,181,10,"PRINT_TO_CONSOLE"],[180,30,181,26],[180,34,181,30,"__DEV__"],[180,41,181,37],[180,43,181,39],[181,12,182,8],[181,16,182,8,"infoLog"],[181,32,182,15],[181,34,182,16],[181,88,182,70],[181,90,182,72,"key"],[181,93,182,75],[181,94,182,76],[182,10,183,6],[183,10,184,6],[184,8,185,4],[185,8,186,4],[185,12,186,8],[185,16,186,12],[185,17,186,13,"_points"],[185,24,186,20],[185,25,186,21,"key"],[185,28,186,24],[185,29,186,25],[185,33,186,29],[185,37,186,33],[185,39,186,35],[186,10,187,6],[186,14,187,10,"PRINT_TO_CONSOLE"],[186,30,187,26],[186,34,187,30,"__DEV__"],[186,41,187,37],[186,43,187,39],[187,12,188,8],[187,16,188,8,"infoLog"],[187,32,188,15],[187,34,189,10],[187,111,189,87],[187,113,190,10,"key"],[187,116,191,8],[187,117,191,9],[188,10,192,6],[189,10,193,6],[190,8,194,4],[191,8,195,4],[191,12,195,8],[191,13,195,9,"_points"],[191,20,195,16],[191,21,195,17,"key"],[191,24,195,20],[191,25,195,21],[191,28,195,24,"timestamp"],[191,37,195,33],[192,8,196,4],[192,12,196,8,"extras"],[192,18,196,14],[192,20,196,16],[193,10,197,6],[193,14,197,10],[193,15,197,11,"_pointExtras"],[193,27,197,23],[193,28,197,24,"key"],[193,31,197,27],[193,32,197,28],[193,35,197,31,"extras"],[193,41,197,37],[194,8,198,4],[195,8,200,4],[195,12,200,8],[195,16,200,12],[195,17,200,13,"_isLoggingForWebPerformance"],[195,44,200,40],[195,46,200,42],[196,10,201,6,"performance"],[196,21,201,17],[196,22,201,18,"mark"],[196,26,201,22],[196,27,201,24],[196,30,201,26,"WEB_PERFORMANCE_PREFIX"],[196,52,201,49],[196,56,201,52,"key"],[196,59,201,56],[196,61,201,57],[196,63,201,59],[197,12,202,8,"startTime"],[197,21,202,17],[197,23,202,19,"timestamp"],[198,10,203,6],[198,11,203,7],[198,12,203,8],[199,8,204,4],[200,6,205,2],[201,4,205,3],[202,6,205,3,"key"],[202,9,205,3],[203,6,205,3,"value"],[203,11,205,3],[203,13,207,2],[203,22,207,2,"removeExtra"],[203,34,207,14,"key"],[203,37,207,25],[203,39,207,40],[204,8,208,4],[204,12,208,10,"value"],[204,17,208,15],[204,20,208,18],[204,24,208,22],[204,25,208,23,"_extras"],[204,32,208,30],[204,33,208,31,"key"],[204,36,208,34],[204,37,208,35],[205,8,209,4],[205,15,209,11],[205,19,209,15],[205,20,209,16,"_extras"],[205,27,209,23],[205,28,209,24,"key"],[205,31,209,27],[205,32,209,28],[206,8,210,4],[206,15,210,11,"value"],[206,20,210,16],[207,6,211,2],[208,4,211,3],[209,6,211,3,"key"],[209,9,211,3],[210,6,211,3,"value"],[210,11,211,3],[210,13,213,2],[210,22,213,2,"setExtra"],[210,31,213,11,"key"],[210,34,213,22],[210,36,213,24,"value"],[210,41,213,41],[210,43,213,43],[211,8,214,4],[211,12,214,8],[211,16,214,12],[211,17,214,13,"_closed"],[211,24,214,20],[211,26,214,22],[212,10,215,6],[212,14,215,10,"PRINT_TO_CONSOLE"],[212,30,215,26],[212,34,215,30,"__DEV__"],[212,41,215,37],[212,43,215,39],[213,12,216,8],[213,16,216,8,"infoLog"],[213,32,216,15],[213,34,216,16],[213,87,216,69],[213,89,216,71,"key"],[213,92,216,74],[213,93,216,75],[214,10,217,6],[215,10,218,6],[216,8,219,4],[217,8,221,4],[217,12,221,8],[217,16,221,12],[217,17,221,13,"_extras"],[217,24,221,20],[217,25,221,21,"hasOwnProperty"],[217,39,221,35],[217,40,221,36,"key"],[217,43,221,39],[217,44,221,40],[217,46,221,42],[218,10,222,6],[218,14,222,10,"PRINT_TO_CONSOLE"],[218,30,222,26],[218,34,222,30,"__DEV__"],[218,41,222,37],[218,43,222,39],[219,12,223,8],[219,16,223,8,"infoLog"],[219,32,223,15],[219,34,224,10],[219,102,224,78],[219,104,225,10],[220,14,225,11,"key"],[220,17,225,14],[220,19,225,11,"key"],[220,22,225,14],[221,14,225,16,"currentValue"],[221,26,225,28],[221,28,225,30],[221,32,225,34],[221,33,225,35,"_extras"],[221,40,225,42],[221,41,225,43,"key"],[221,44,225,46],[221,45,225,47],[222,14,225,49,"attemptedValue"],[222,28,225,63],[222,30,225,65,"value"],[223,12,225,70],[223,13,226,8],[223,14,226,9],[224,10,227,6],[225,10,228,6],[226,8,229,4],[227,8,230,4],[227,12,230,8],[227,13,230,9,"_extras"],[227,20,230,16],[227,21,230,17,"key"],[227,24,230,20],[227,25,230,21],[227,28,230,24,"value"],[227,33,230,29],[228,6,231,2],[229,4,231,3],[230,6,231,3,"key"],[230,9,231,3],[231,6,231,3,"value"],[231,11,231,3],[231,13,233,2],[231,22,233,2,"startTimespan"],[231,36,234,4,"key"],[231,39,234,15],[231,41,237,4],[232,8,237,4],[232,12,235,4,"timestamp"],[232,21,235,22],[232,24,235,22,"arguments"],[232,33,235,22],[232,34,235,22,"length"],[232,40,235,22],[232,48,235,22,"arguments"],[232,57,235,22],[232,65,235,22,"undefined"],[232,74,235,22],[232,77,235,22,"arguments"],[232,86,235,22],[232,92,235,25,"getCurrentTimestamp"],[232,111,235,44],[232,112,235,45],[232,113,235,46],[233,8,235,46],[233,12,236,4,"extras"],[233,18,236,19],[233,21,236,19,"arguments"],[233,30,236,19],[233,31,236,19,"length"],[233,37,236,19],[233,44,236,19,"arguments"],[233,53,236,19],[233,59,236,19,"undefined"],[233,68,236,19],[234,8,238,4],[234,12,238,8],[234,16,238,12],[234,17,238,13,"_closed"],[234,24,238,20],[234,26,238,22],[235,10,239,6],[235,14,239,10,"PRINT_TO_CONSOLE"],[235,30,239,26],[235,34,239,30,"__DEV__"],[235,41,239,37],[235,43,239,39],[236,12,240,8],[236,16,240,8,"infoLog"],[236,32,240,15],[236,34,241,10],[236,92,241,68],[236,94,242,10,"key"],[236,97,243,8],[236,98,243,9],[237,10,244,6],[238,10,245,6],[239,8,246,4],[240,8,248,4],[240,12,248,8],[240,16,248,12],[240,17,248,13,"_timespans"],[240,27,248,23],[240,28,248,24,"key"],[240,31,248,27],[240,32,248,28],[240,34,248,30],[241,10,249,6],[241,14,249,10,"PRINT_TO_CONSOLE"],[241,30,249,26],[241,34,249,30,"__DEV__"],[241,41,249,37],[241,43,249,39],[242,12,250,8],[242,16,250,8,"infoLog"],[242,32,250,15],[242,34,251,10],[242,106,251,82],[242,108,252,10,"key"],[242,111,253,8],[242,112,253,9],[243,10,254,6],[244,10,255,6],[245,8,256,4],[246,8,258,4],[246,12,258,8],[246,13,258,9,"_timespans"],[246,23,258,19],[246,24,258,20,"key"],[246,27,258,23],[246,28,258,24],[246,31,258,27],[247,10,259,6,"startTime"],[247,19,259,15],[247,21,259,17,"timestamp"],[247,30,259,26],[248,10,260,6,"startExtras"],[248,21,260,17],[248,23,260,19,"extras"],[249,8,261,4],[249,9,261,5],[250,8,262,4,"_cookies"],[250,16,262,12],[250,17,262,13,"key"],[250,20,262,16],[250,21,262,17],[250,24,262,20,"Systrace"],[250,32,262,28],[250,33,262,29,"beginAsyncEvent"],[250,48,262,44],[250,49,262,45,"key"],[250,52,262,48],[250,53,262,49],[251,8,263,4],[251,12,263,8,"PRINT_TO_CONSOLE"],[251,28,263,24],[251,30,263,26],[252,10,264,6],[252,14,264,6,"infoLog"],[252,30,264,13],[252,32,264,14],[252,54,264,36],[252,56,264,38],[252,65,264,47],[252,68,264,50,"key"],[252,71,264,53],[252,72,264,54],[253,8,265,4],[254,8,267,4],[254,12,267,8],[254,16,267,12],[254,17,267,13,"_isLoggingForWebPerformance"],[254,44,267,40],[254,46,267,42],[255,10,268,6,"performance"],[255,21,268,17],[255,22,268,18,"mark"],[255,26,268,22],[255,27,268,24],[255,30,268,26,"WEB_PERFORMANCE_PREFIX"],[255,52,268,49],[255,71,268,67,"key"],[255,74,268,71],[255,76,268,72],[255,78,268,74],[256,12,269,8,"startTime"],[256,21,269,17],[256,23,269,19,"timestamp"],[257,10,270,6],[257,11,270,7],[257,12,270,8],[258,8,271,4],[259,6,272,2],[260,4,272,3],[261,6,272,3,"key"],[261,9,272,3],[262,6,272,3,"value"],[262,11,272,3],[262,13,274,2],[262,22,274,2,"stopTimespan"],[262,35,275,4,"key"],[262,38,275,15],[262,40,278,4],[263,8,278,4],[263,12,276,4,"timestamp"],[263,21,276,22],[263,24,276,22,"arguments"],[263,33,276,22],[263,34,276,22,"length"],[263,40,276,22],[263,48,276,22,"arguments"],[263,57,276,22],[263,65,276,22,"undefined"],[263,74,276,22],[263,77,276,22,"arguments"],[263,86,276,22],[263,92,276,25,"getCurrentTimestamp"],[263,111,276,44],[263,112,276,45],[263,113,276,46],[264,8,276,46],[264,12,277,4,"extras"],[264,18,277,19],[264,21,277,19,"arguments"],[264,30,277,19],[264,31,277,19,"length"],[264,37,277,19],[264,44,277,19,"arguments"],[264,53,277,19],[264,59,277,19,"undefined"],[264,68,277,19],[265,8,279,4],[265,12,279,8],[265,16,279,12],[265,17,279,13,"_closed"],[265,24,279,20],[265,26,279,22],[266,10,280,6],[266,14,280,10,"PRINT_TO_CONSOLE"],[266,30,280,26],[266,34,280,30,"__DEV__"],[266,41,280,37],[266,43,280,39],[267,12,281,8],[267,16,281,8,"infoLog"],[267,32,281,15],[267,34,281,16],[267,91,281,73],[267,93,281,75,"key"],[267,96,281,78],[267,97,281,79],[268,10,282,6],[269,10,283,6],[270,8,284,4],[271,8,286,4],[271,12,286,10,"timespan"],[271,20,286,18],[271,23,286,21],[271,27,286,25],[271,28,286,26,"_timespans"],[271,38,286,36],[271,39,286,37,"key"],[271,42,286,40],[271,43,286,41],[272,8,287,4],[272,12,287,8],[272,13,287,9,"timespan"],[272,21,287,17],[272,25,287,21,"timespan"],[272,33,287,29],[272,34,287,30,"startTime"],[272,43,287,39],[272,47,287,43],[272,51,287,47],[272,53,287,49],[273,10,288,6],[273,14,288,10,"PRINT_TO_CONSOLE"],[273,30,288,26],[273,34,288,30,"__DEV__"],[273,41,288,37],[273,43,288,39],[274,12,289,8],[274,16,289,8,"infoLog"],[274,32,289,15],[274,34,290,10],[274,105,290,81],[274,107,291,10,"key"],[274,110,292,8],[274,111,292,9],[275,10,293,6],[276,10,294,6],[277,8,295,4],[278,8,296,4],[278,12,296,8,"timespan"],[278,20,296,16],[278,21,296,17,"endTime"],[278,28,296,24],[278,32,296,28],[278,36,296,32],[278,38,296,34],[279,10,297,6],[279,14,297,10,"PRINT_TO_CONSOLE"],[279,30,297,26],[279,34,297,30,"__DEV__"],[279,41,297,37],[279,43,297,39],[280,12,298,8],[280,16,298,8,"infoLog"],[280,32,298,15],[280,34,299,10],[280,107,299,83],[280,109,300,10,"key"],[280,112,301,8],[280,113,301,9],[281,10,302,6],[282,10,303,6],[283,8,304,4],[284,8,306,4,"timespan"],[284,16,306,12],[284,17,306,13,"endExtras"],[284,26,306,22],[284,29,306,25,"extras"],[284,35,306,31],[285,8,307,4,"timespan"],[285,16,307,12],[285,17,307,13,"endTime"],[285,24,307,20],[285,27,307,23,"timestamp"],[285,36,307,32],[286,8,308,4,"timespan"],[286,16,308,12],[286,17,308,13,"totalTime"],[286,26,308,22],[286,29,308,25,"timespan"],[286,37,308,33],[286,38,308,34,"endTime"],[286,45,308,41],[286,49,308,45,"timespan"],[286,57,308,53],[286,58,308,54,"startTime"],[286,67,308,63],[286,71,308,67],[286,72,308,68],[286,73,308,69],[287,8,309,4],[287,12,309,8,"PRINT_TO_CONSOLE"],[287,28,309,24],[287,30,309,26],[288,10,310,6],[288,14,310,6,"infoLog"],[288,30,310,13],[288,32,310,14],[288,54,310,36],[288,56,310,38],[288,63,310,45],[288,66,310,48,"key"],[288,69,310,51],[288,70,310,52],[289,8,311,4],[290,8,313,4],[290,12,313,8,"_cookies"],[290,20,313,16],[290,21,313,17,"key"],[290,24,313,20],[290,25,313,21],[290,29,313,25],[290,33,313,29],[290,35,313,31],[291,10,314,6,"Systrace"],[291,18,314,14],[291,19,314,15,"endAsyncEvent"],[291,32,314,28],[291,33,314,29,"key"],[291,36,314,32],[291,38,314,34,"_cookies"],[291,46,314,42],[291,47,314,43,"key"],[291,50,314,46],[291,51,314,47],[291,52,314,48],[292,10,315,6],[292,17,315,13,"_cookies"],[292,25,315,21],[292,26,315,22,"key"],[292,29,315,25],[292,30,315,26],[293,8,316,4],[294,8,318,4],[294,12,318,8],[294,16,318,12],[294,17,318,13,"_isLoggingForWebPerformance"],[294,44,318,40],[294,46,318,42],[295,10,319,6,"performance"],[295,21,319,17],[295,22,319,18,"measure"],[295,29,319,25],[295,30,319,27],[295,33,319,29,"WEB_PERFORMANCE_PREFIX"],[295,55,319,52],[295,59,319,55,"key"],[295,62,319,59],[295,64,319,60],[295,66,319,62],[296,12,320,8,"start"],[296,17,320,13],[296,19,320,16],[296,22,320,18,"WEB_PERFORMANCE_PREFIX"],[296,44,320,41],[296,63,320,59,"key"],[296,66,320,63],[296,68,320,64],[297,12,321,8,"end"],[297,15,321,11],[297,17,321,13,"timestamp"],[298,10,322,6],[298,11,322,7],[298,12,322,8],[299,8,323,4],[300,6,324,2],[301,4,324,3],[302,4,324,3],[302,11,324,3,"PerformanceLogger"],[302,28,324,3],[303,2,324,3],[303,7,327,0],[304,2,328,0],[305,2,331,0],[306,0,332,0],[307,0,333,0],[308,0,334,0],[309,0,335,0],[310,2,336,15],[310,11,336,24,"createPerformanceLogger"],[310,34,336,47,"createPerformanceLogger"],[310,35,337,2,"isLoggingForWebPerformance"],[310,61,337,38],[310,63,338,22],[311,4,339,2],[311,11,339,9],[311,15,339,13,"PerformanceLogger"],[311,32,339,30],[311,33,339,31,"isLoggingForWebPerformance"],[311,59,339,57],[311,60,339,58],[312,2,340,0],[313,0,340,1]],"functionMap":{"names":["<global>","PerformanceLogger","PerformanceLogger#constructor","PerformanceLogger#addTimespan","PerformanceLogger#append","PerformanceLogger#clear","PerformanceLogger#clearCompleted","PerformanceLogger#close","PerformanceLogger#currentTimestamp","PerformanceLogger#getExtras","PerformanceLogger#getPoints","PerformanceLogger#getPointExtras","PerformanceLogger#getTimespans","PerformanceLogger#hasTimespan","PerformanceLogger#isClosed","PerformanceLogger#logEverything","PerformanceLogger#markPoint","PerformanceLogger#removeExtra","PerformanceLogger#setExtra","PerformanceLogger#startTimespan","PerformanceLogger#stopTimespan","createPerformanceLogger"],"mappings":"AAA;ACmC;ECQ;GDE;EEE;GFqC;EGE;GHW;EIE;GJO;EKE;GLW;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXE;EYE;GZE;EaE;GbE;EcE;GdmB;EeE;Gf8B;EgBE;GhBI;EiBE;GjBkB;EkBE;GlBuC;EmBE;GnBkD;CDC;eqBW;CrBI"}},"type":"js/module"}]}