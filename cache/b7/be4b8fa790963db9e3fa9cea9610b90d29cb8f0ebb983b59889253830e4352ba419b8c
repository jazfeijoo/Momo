{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":98,"column":41,"index":3865}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":98,"column":41,"index":3865}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"./RemoteLogging","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"en3bg1TIenuZBlDEF9i1m7Bbqwk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createRemoteConsole = createRemoteConsole;\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n  var _RemoteLogging = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./RemoteLogging\"));\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  /**\n   * Creates a console object that delegates calls to the specified underlying console and also sends\n   * the messages to the development environment over a remote connection.\n   */\n  function createRemoteConsole(originalConsole) {\n    var groupDepth = 0;\n    var enhancedConsole = Object.create(originalConsole);\n    // https://console.spec.whatwg.org/#debug\n    // Don't use a level below \"info\" because \"debug\" is intended for messages that shouldn't be shown\n    // to the developer\n    _defineConsoleLogMethod('debug', 'info');\n    // https://console.spec.whatwg.org/#log\n    _defineConsoleLogMethod('log', 'info');\n    // https://console.spec.whatwg.org/#info\n    _defineConsoleLogMethod('info', 'info');\n    // https://console.spec.whatwg.org/#warn\n    _defineConsoleLogMethod('warn', 'warn');\n    // https://console.spec.whatwg.org/#error\n    _defineConsoleLogMethod('error', 'error');\n    // https://console.spec.whatwg.org/#assert\n    enhancedConsole.assert = function assert(condition) {\n      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n      if (originalConsole.assert) {\n        // @ts-ignore\n        originalConsole.assert.apply(originalConsole, [!!condition].concat(data));\n      }\n      if (condition) {\n        return;\n      }\n      var assertionMessage = 'Assertion failed';\n      if (!data.length) {\n        data.push(assertionMessage);\n      } else {\n        if (typeof data[0] !== 'string') {\n          data.unshift(assertionMessage);\n        } else {\n          data[0] = `${assertionMessage}: ${data[0]}`;\n        }\n      }\n      _enqueueRemoteLog('error', {}, data);\n    };\n    // https://console.spec.whatwg.org/#group\n    enhancedConsole.group = function group() {\n      for (var _len2 = arguments.length, data = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        data[_key2] = arguments[_key2];\n      }\n      if (originalConsole.group) {\n        // @ts-ignore\n        originalConsole.group.apply(originalConsole, data);\n      }\n      _enqueueRemoteLog('info', {}, data);\n      groupDepth++;\n    };\n    // https://console.spec.whatwg.org/#groupcollapsed\n    enhancedConsole.groupCollapsed = function groupCollapsed() {\n      for (var _len3 = arguments.length, data = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        data[_key3] = arguments[_key3];\n      }\n      if (originalConsole.groupCollapsed) {\n        // @ts-ignore\n        originalConsole.groupCollapsed.apply(originalConsole, data);\n      }\n      _enqueueRemoteLog('info', {\n        groupCollapsed: true\n      }, data);\n      groupDepth++;\n    };\n    // https://console.spec.whatwg.org/#groupend\n    enhancedConsole.groupEnd = function groupEnd() {\n      if (originalConsole.groupEnd) {\n        originalConsole.groupEnd();\n      }\n      if (groupDepth > 0) {\n        groupDepth--;\n      }\n      _enqueueRemoteLog('info', {\n        shouldHide: true\n      }, []);\n    };\n    /**\n     * Defines a method in the `console.log()` family on the enhanced console\n     * instance\n     */\n    function _defineConsoleLogMethod(name, level) {\n      enhancedConsole[name] = function __expoConsoleLog() {\n        var originalMethod = originalConsole[name];\n        for (var _len4 = arguments.length, data = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          data[_key4] = arguments[_key4];\n        }\n        if (typeof originalMethod === 'function') {\n          originalMethod.apply(originalConsole, data);\n        }\n        _enqueueRemoteLog(level, {}, data);\n      };\n    }\n    /**\n     * Schedules the given log entry to be sent remotely in a safe way that handles all errors. This\n     * function is responsible for error handling because the console methods are synchronous but\n     * sending log messages is asynchronous, so this code (instead of the console methods) needs to be\n     * responsible for asynchronous errors.\n     */\n    function _enqueueRemoteLog(level, additionalFields, data) {\n      _RemoteLogging.default.enqueueRemoteLogAsync(level, _objectSpread({\n        groupDepth: groupDepth\n      }, additionalFields), data).catch(function (error) {\n        originalConsole.error(`There was a problem sending log messages to your development environment`, error);\n      });\n    }\n    return enhancedConsole;\n  }\n});","lineCount":123,"map":[[8,2,1,0],[8,6,1,0,"_RemoteLogging"],[8,20,1,0],[8,23,1,0,"_interopRequireDefault"],[8,45,1,0],[8,46,1,0,"_$$_REQUIRE"],[8,57,1,0],[8,58,1,0,"_dependencyMap"],[8,72,1,0],[9,2,1,44],[9,11,1,44,"ownKeys"],[9,19,1,44,"e"],[9,20,1,44],[9,22,1,44,"r"],[9,23,1,44],[9,31,1,44,"t"],[9,32,1,44],[9,35,1,44,"Object"],[9,41,1,44],[9,42,1,44,"keys"],[9,46,1,44],[9,47,1,44,"e"],[9,48,1,44],[9,55,1,44,"Object"],[9,61,1,44],[9,62,1,44,"getOwnPropertySymbols"],[9,83,1,44],[9,91,1,44,"o"],[9,92,1,44],[9,95,1,44,"Object"],[9,101,1,44],[9,102,1,44,"getOwnPropertySymbols"],[9,123,1,44],[9,124,1,44,"e"],[9,125,1,44],[9,128,1,44,"r"],[9,129,1,44],[9,134,1,44,"o"],[9,135,1,44],[9,138,1,44,"o"],[9,139,1,44],[9,140,1,44,"filter"],[9,146,1,44],[9,157,1,44,"r"],[9,158,1,44],[9,169,1,44,"Object"],[9,175,1,44],[9,176,1,44,"getOwnPropertyDescriptor"],[9,200,1,44],[9,201,1,44,"e"],[9,202,1,44],[9,204,1,44,"r"],[9,205,1,44],[9,207,1,44,"enumerable"],[9,217,1,44],[9,224,1,44,"t"],[9,225,1,44],[9,226,1,44,"push"],[9,230,1,44],[9,231,1,44,"apply"],[9,236,1,44],[9,237,1,44,"t"],[9,238,1,44],[9,240,1,44,"o"],[9,241,1,44],[9,253,1,44,"t"],[9,254,1,44],[10,2,1,44],[10,11,1,44,"_objectSpread"],[10,25,1,44,"e"],[10,26,1,44],[10,39,1,44,"r"],[10,40,1,44],[10,46,1,44,"r"],[10,47,1,44],[10,50,1,44,"arguments"],[10,59,1,44],[10,60,1,44,"length"],[10,66,1,44],[10,68,1,44,"r"],[10,69,1,44],[10,79,1,44,"t"],[10,80,1,44],[10,91,1,44,"arguments"],[10,100,1,44],[10,101,1,44,"r"],[10,102,1,44],[10,106,1,44,"arguments"],[10,115,1,44],[10,116,1,44,"r"],[10,117,1,44],[10,125,1,44,"r"],[10,126,1,44],[10,133,1,44,"ownKeys"],[10,140,1,44],[10,141,1,44,"Object"],[10,147,1,44],[10,148,1,44,"t"],[10,149,1,44],[10,156,1,44,"forEach"],[10,163,1,44],[10,174,1,44,"r"],[10,175,1,44],[10,183,1,44,"_defineProperty2"],[10,199,1,44],[10,200,1,44,"default"],[10,207,1,44],[10,209,1,44,"e"],[10,210,1,44],[10,212,1,44,"r"],[10,213,1,44],[10,215,1,44,"t"],[10,216,1,44],[10,217,1,44,"r"],[10,218,1,44],[10,227,1,44,"Object"],[10,233,1,44],[10,234,1,44,"getOwnPropertyDescriptors"],[10,259,1,44],[10,262,1,44,"Object"],[10,268,1,44],[10,269,1,44,"defineProperties"],[10,285,1,44],[10,286,1,44,"e"],[10,287,1,44],[10,289,1,44,"Object"],[10,295,1,44],[10,296,1,44,"getOwnPropertyDescriptors"],[10,321,1,44],[10,322,1,44,"t"],[10,323,1,44],[10,328,1,44,"ownKeys"],[10,335,1,44],[10,336,1,44,"Object"],[10,342,1,44],[10,343,1,44,"t"],[10,344,1,44],[10,347,1,44,"forEach"],[10,354,1,44],[10,365,1,44,"r"],[10,366,1,44],[10,370,1,44,"Object"],[10,376,1,44],[10,377,1,44,"defineProperty"],[10,391,1,44],[10,392,1,44,"e"],[10,393,1,44],[10,395,1,44,"r"],[10,396,1,44],[10,398,1,44,"Object"],[10,404,1,44],[10,405,1,44,"getOwnPropertyDescriptor"],[10,429,1,44],[10,430,1,44,"t"],[10,431,1,44],[10,433,1,44,"r"],[10,434,1,44],[10,451,1,44,"e"],[10,452,1,44],[11,2,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,2,6,7],[15,11,6,16,"createRemoteConsole"],[15,30,6,35,"createRemoteConsole"],[15,31,6,36,"originalConsole"],[15,46,6,51],[15,48,6,53],[16,4,7,4],[16,8,7,8,"groupDepth"],[16,18,7,18],[16,21,7,21],[16,22,7,22],[17,4,8,4],[17,8,8,10,"enhancedConsole"],[17,23,8,25],[17,26,8,28,"Object"],[17,32,8,34],[17,33,8,35,"create"],[17,39,8,41],[17,40,8,42,"originalConsole"],[17,55,8,57],[17,56,8,58],[18,4,9,4],[19,4,10,4],[20,4,11,4],[21,4,12,4,"_defineConsoleLogMethod"],[21,27,12,27],[21,28,12,28],[21,35,12,35],[21,37,12,37],[21,43,12,43],[21,44,12,44],[22,4,13,4],[23,4,14,4,"_defineConsoleLogMethod"],[23,27,14,27],[23,28,14,28],[23,33,14,33],[23,35,14,35],[23,41,14,41],[23,42,14,42],[24,4,15,4],[25,4,16,4,"_defineConsoleLogMethod"],[25,27,16,27],[25,28,16,28],[25,34,16,34],[25,36,16,36],[25,42,16,42],[25,43,16,43],[26,4,17,4],[27,4,18,4,"_defineConsoleLogMethod"],[27,27,18,27],[27,28,18,28],[27,34,18,34],[27,36,18,36],[27,42,18,42],[27,43,18,43],[28,4,19,4],[29,4,20,4,"_defineConsoleLogMethod"],[29,27,20,27],[29,28,20,28],[29,35,20,35],[29,37,20,37],[29,44,20,44],[29,45,20,45],[30,4,21,4],[31,4,22,4,"enhancedConsole"],[31,19,22,19],[31,20,22,20,"assert"],[31,26,22,26],[31,29,22,29],[31,38,22,38,"assert"],[31,44,22,44,"assert"],[31,45,22,45,"condition"],[31,54,22,54],[31,56,22,65],[32,6,22,65],[32,15,22,65,"_len"],[32,19,22,65],[32,22,22,65,"arguments"],[32,31,22,65],[32,32,22,65,"length"],[32,38,22,65],[32,40,22,59,"data"],[32,44,22,63],[32,51,22,63,"Array"],[32,56,22,63],[32,57,22,63,"_len"],[32,61,22,63],[32,68,22,63,"_len"],[32,72,22,63],[32,83,22,63,"_key"],[32,87,22,63],[32,93,22,63,"_key"],[32,97,22,63],[32,100,22,63,"_len"],[32,104,22,63],[32,106,22,63,"_key"],[32,110,22,63],[33,8,22,59,"data"],[33,12,22,63],[33,13,22,63,"_key"],[33,17,22,63],[33,25,22,63,"arguments"],[33,34,22,63],[33,35,22,63,"_key"],[33,39,22,63],[34,6,22,63],[35,6,23,8],[35,10,23,12,"originalConsole"],[35,25,23,27],[35,26,23,28,"assert"],[35,32,23,34],[35,34,23,36],[36,8,24,12],[37,8,25,12,"originalConsole"],[37,23,25,27],[37,24,25,28,"assert"],[37,30,25,34],[37,31,25,34,"apply"],[37,36,25,34],[37,37,25,12,"originalConsole"],[37,52,25,27],[37,55,25,35],[37,56,25,36],[37,57,25,37,"condition"],[37,66,25,46],[37,68,25,46,"concat"],[37,74,25,46],[37,75,25,51,"data"],[37,79,25,55],[37,81,25,56],[38,6,26,8],[39,6,27,8],[39,10,27,12,"condition"],[39,19,27,21],[39,21,27,23],[40,8,28,12],[41,6,29,8],[42,6,30,8],[42,10,30,14,"assertionMessage"],[42,26,30,30],[42,29,30,33],[42,47,30,51],[43,6,31,8],[43,10,31,12],[43,11,31,13,"data"],[43,15,31,17],[43,16,31,18,"length"],[43,22,31,24],[43,24,31,26],[44,8,32,12,"data"],[44,12,32,16],[44,13,32,17,"push"],[44,17,32,21],[44,18,32,22,"assertionMessage"],[44,34,32,38],[44,35,32,39],[45,6,33,8],[45,7,33,9],[45,13,34,13],[46,8,35,12],[46,12,35,16],[46,19,35,23,"data"],[46,23,35,27],[46,24,35,28],[46,25,35,29],[46,26,35,30],[46,31,35,35],[46,39,35,43],[46,41,35,45],[47,10,36,16,"data"],[47,14,36,20],[47,15,36,21,"unshift"],[47,22,36,28],[47,23,36,29,"assertionMessage"],[47,39,36,45],[47,40,36,46],[48,8,37,12],[48,9,37,13],[48,15,38,17],[49,10,39,16,"data"],[49,14,39,20],[49,15,39,21],[49,16,39,22],[49,17,39,23],[49,20,39,27],[49,23,39,29,"assertionMessage"],[49,39,39,46],[49,44,39,50,"data"],[49,48,39,54],[49,49,39,55],[49,50,39,56],[49,51,39,58],[49,53,39,59],[50,8,40,12],[51,6,41,8],[52,6,42,8,"_enqueueRemoteLog"],[52,23,42,25],[52,24,42,26],[52,31,42,33],[52,33,42,35],[52,34,42,36],[52,35,42,37],[52,37,42,39,"data"],[52,41,42,43],[52,42,42,44],[53,4,43,4],[53,5,43,5],[54,4,44,4],[55,4,45,4,"enhancedConsole"],[55,19,45,19],[55,20,45,20,"group"],[55,25,45,25],[55,28,45,28],[55,37,45,37,"group"],[55,42,45,42,"group"],[55,43,45,42],[55,45,45,52],[56,6,45,52],[56,15,45,52,"_len2"],[56,20,45,52],[56,23,45,52,"arguments"],[56,32,45,52],[56,33,45,52,"length"],[56,39,45,52],[56,41,45,46,"data"],[56,45,45,50],[56,52,45,50,"Array"],[56,57,45,50],[56,58,45,50,"_len2"],[56,63,45,50],[56,66,45,50,"_key2"],[56,71,45,50],[56,77,45,50,"_key2"],[56,82,45,50],[56,85,45,50,"_len2"],[56,90,45,50],[56,92,45,50,"_key2"],[56,97,45,50],[57,8,45,46,"data"],[57,12,45,50],[57,13,45,50,"_key2"],[57,18,45,50],[57,22,45,50,"arguments"],[57,31,45,50],[57,32,45,50,"_key2"],[57,37,45,50],[58,6,45,50],[59,6,46,8],[59,10,46,12,"originalConsole"],[59,25,46,27],[59,26,46,28,"group"],[59,31,46,33],[59,33,46,35],[60,8,47,12],[61,8,48,12,"originalConsole"],[61,23,48,27],[61,24,48,28,"group"],[61,29,48,33],[61,30,48,33,"apply"],[61,35,48,33],[61,36,48,12,"originalConsole"],[61,51,48,27],[61,53,48,37,"data"],[61,57,48,41],[61,58,48,42],[62,6,49,8],[63,6,50,8,"_enqueueRemoteLog"],[63,23,50,25],[63,24,50,26],[63,30,50,32],[63,32,50,34],[63,33,50,35],[63,34,50,36],[63,36,50,38,"data"],[63,40,50,42],[63,41,50,43],[64,6,51,8,"groupDepth"],[64,16,51,18],[64,18,51,20],[65,4,52,4],[65,5,52,5],[66,4,53,4],[67,4,54,4,"enhancedConsole"],[67,19,54,19],[67,20,54,20,"groupCollapsed"],[67,34,54,34],[67,37,54,37],[67,46,54,46,"groupCollapsed"],[67,60,54,60,"groupCollapsed"],[67,61,54,60],[67,63,54,70],[68,6,54,70],[68,15,54,70,"_len3"],[68,20,54,70],[68,23,54,70,"arguments"],[68,32,54,70],[68,33,54,70,"length"],[68,39,54,70],[68,41,54,64,"data"],[68,45,54,68],[68,52,54,68,"Array"],[68,57,54,68],[68,58,54,68,"_len3"],[68,63,54,68],[68,66,54,68,"_key3"],[68,71,54,68],[68,77,54,68,"_key3"],[68,82,54,68],[68,85,54,68,"_len3"],[68,90,54,68],[68,92,54,68,"_key3"],[68,97,54,68],[69,8,54,64,"data"],[69,12,54,68],[69,13,54,68,"_key3"],[69,18,54,68],[69,22,54,68,"arguments"],[69,31,54,68],[69,32,54,68,"_key3"],[69,37,54,68],[70,6,54,68],[71,6,55,8],[71,10,55,12,"originalConsole"],[71,25,55,27],[71,26,55,28,"groupCollapsed"],[71,40,55,42],[71,42,55,44],[72,8,56,12],[73,8,57,12,"originalConsole"],[73,23,57,27],[73,24,57,28,"groupCollapsed"],[73,38,57,42],[73,39,57,42,"apply"],[73,44,57,42],[73,45,57,12,"originalConsole"],[73,60,57,27],[73,62,57,46,"data"],[73,66,57,50],[73,67,57,51],[74,6,58,8],[75,6,59,8,"_enqueueRemoteLog"],[75,23,59,25],[75,24,59,26],[75,30,59,32],[75,32,59,34],[76,8,59,36,"groupCollapsed"],[76,22,59,50],[76,24,59,52],[77,6,59,57],[77,7,59,58],[77,9,59,60,"data"],[77,13,59,64],[77,14,59,65],[78,6,60,8,"groupDepth"],[78,16,60,18],[78,18,60,20],[79,4,61,4],[79,5,61,5],[80,4,62,4],[81,4,63,4,"enhancedConsole"],[81,19,63,19],[81,20,63,20,"groupEnd"],[81,28,63,28],[81,31,63,31],[81,40,63,40,"groupEnd"],[81,48,63,48,"groupEnd"],[81,49,63,48],[81,51,63,51],[82,6,64,8],[82,10,64,12,"originalConsole"],[82,25,64,27],[82,26,64,28,"groupEnd"],[82,34,64,36],[82,36,64,38],[83,8,65,12,"originalConsole"],[83,23,65,27],[83,24,65,28,"groupEnd"],[83,32,65,36],[83,33,65,37],[83,34,65,38],[84,6,66,8],[85,6,67,8],[85,10,67,12,"groupDepth"],[85,20,67,22],[85,23,67,25],[85,24,67,26],[85,26,67,28],[86,8,68,12,"groupDepth"],[86,18,68,22],[86,20,68,24],[87,6,69,8],[88,6,70,8,"_enqueueRemoteLog"],[88,23,70,25],[88,24,70,26],[88,30,70,32],[88,32,70,34],[89,8,70,36,"shouldHide"],[89,18,70,46],[89,20,70,48],[90,6,70,53],[90,7,70,54],[90,9,70,56],[90,11,70,58],[90,12,70,59],[91,4,71,4],[91,5,71,5],[92,4,72,4],[93,0,73,0],[94,0,74,0],[95,0,75,0],[96,4,76,4],[96,13,76,13,"_defineConsoleLogMethod"],[96,36,76,36,"_defineConsoleLogMethod"],[96,37,76,37,"name"],[96,41,76,41],[96,43,76,43,"level"],[96,48,76,48],[96,50,76,50],[97,6,77,8,"enhancedConsole"],[97,21,77,23],[97,22,77,24,"name"],[97,26,77,28],[97,27,77,29],[97,30,77,32],[97,39,77,41,"__expoConsoleLog"],[97,55,77,57,"__expoConsoleLog"],[97,56,77,57],[97,58,77,67],[98,8,78,12],[98,12,78,18,"originalMethod"],[98,26,78,32],[98,29,78,35,"originalConsole"],[98,44,78,50],[98,45,78,51,"name"],[98,49,78,55],[98,50,78,56],[99,8,78,57],[99,17,78,57,"_len4"],[99,22,78,57],[99,25,78,57,"arguments"],[99,34,78,57],[99,35,78,57,"length"],[99,41,78,57],[99,43,77,61,"data"],[99,47,77,65],[99,54,77,65,"Array"],[99,59,77,65],[99,60,77,65,"_len4"],[99,65,77,65],[99,68,77,65,"_key4"],[99,73,77,65],[99,79,77,65,"_key4"],[99,84,77,65],[99,87,77,65,"_len4"],[99,92,77,65],[99,94,77,65,"_key4"],[99,99,77,65],[100,10,77,61,"data"],[100,14,77,65],[100,15,77,65,"_key4"],[100,20,77,65],[100,24,77,65,"arguments"],[100,33,77,65],[100,34,77,65,"_key4"],[100,39,77,65],[101,8,77,65],[102,8,79,12],[102,12,79,16],[102,19,79,23,"originalMethod"],[102,33,79,37],[102,38,79,42],[102,48,79,52],[102,50,79,54],[103,10,80,16,"originalMethod"],[103,24,80,30],[103,25,80,31,"apply"],[103,30,80,36],[103,31,80,37,"originalConsole"],[103,46,80,52],[103,48,80,54,"data"],[103,52,80,58],[103,53,80,59],[104,8,81,12],[105,8,82,12,"_enqueueRemoteLog"],[105,25,82,29],[105,26,82,30,"level"],[105,31,82,35],[105,33,82,37],[105,34,82,38],[105,35,82,39],[105,37,82,41,"data"],[105,41,82,45],[105,42,82,46],[106,6,83,8],[106,7,83,9],[107,4,84,4],[108,4,85,4],[109,0,86,0],[110,0,87,0],[111,0,88,0],[112,0,89,0],[113,0,90,0],[114,4,91,4],[114,13,91,13,"_enqueueRemoteLog"],[114,30,91,30,"_enqueueRemoteLog"],[114,31,91,31,"level"],[114,36,91,36],[114,38,91,38,"additionalFields"],[114,54,91,54],[114,56,91,56,"data"],[114,60,91,60],[114,62,91,62],[115,6,92,8,"RemoteLogging"],[115,28,92,21],[115,29,92,22,"enqueueRemoteLogAsync"],[115,50,92,43],[115,51,92,44,"level"],[115,56,92,49],[115,58,92,49,"_objectSpread"],[115,71,92,49],[116,8,92,53,"groupDepth"],[116,18,92,63],[116,20,92,53,"groupDepth"],[117,6,92,63],[117,9,92,68,"additionalFields"],[117,25,92,84],[117,28,92,88,"data"],[117,32,92,92],[117,33,92,93],[117,34,92,94,"catch"],[117,39,92,99],[117,40,92,100],[117,50,92,101,"error"],[117,55,92,106],[117,57,92,111],[118,8,93,12,"originalConsole"],[118,23,93,27],[118,24,93,28,"error"],[118,29,93,33],[118,30,93,35],[118,104,93,108],[118,106,93,110,"error"],[118,111,93,115],[118,112,93,116],[119,6,94,8],[119,7,94,9],[119,8,94,10],[120,4,95,4],[121,4,96,4],[121,11,96,11,"enhancedConsole"],[121,26,96,26],[122,2,97,0],[123,0,97,1]],"functionMap":{"names":["<global>","createRemoteConsole","assert","group","groupCollapsed","groupEnd","_defineConsoleLogMethod","__expoConsoleLog","_enqueueRemoteLog","RemoteLogging.enqueueRemoteLogAsync._catch$argument_0"],"mappings":"AAA;OCK;6BCgB;KDqB;4BEE;KFO;qCGE;KHO;+BIE;KJQ;IKK;gCCC;SDM;KLC;IOO;oGCC;SDE;KPC;CDE"}},"type":"js/module"}]}