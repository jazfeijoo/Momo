{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":971,"column":0,"index":35406}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":971,"column":0,"index":35406}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":971,"column":0,"index":35406}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"../../Pressability/PressabilityDebug","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":463},"end":{"line":16,"column":75,"index":538}}],"key":"BwF2K0zd2/MBsgiTmT93oxAvyTQ="}},{"name":"../../ReactNative/UIManager","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":539},"end":{"line":17,"column":52,"index":591}}],"key":"BJvqAApcBQi+p+Q2g/u0ER1zq4Q="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":592},"end":{"line":18,"column":48,"index":640}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"../Sound/SoundManager","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":641},"end":{"line":19,"column":49,"index":690}}],"key":"uA4AGHsBw//AtmiYc789hCA9wkk="}},{"name":"./BoundingDimensions","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":691},"end":{"line":20,"column":54,"index":745}}],"key":"do3nGwolN6Iw9qDGOp45sKc94Qg="}},{"name":"./Position","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":746},"end":{"line":21,"column":34,"index":780}}],"key":"39yP6MOpdVvhNf29kS5TGnjSz+0="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":781},"end":{"line":22,"column":31,"index":812}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":971,"column":0,"index":35406}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n  var _PressabilityDebug = _$$_REQUIRE(_dependencyMap[3], \"../../Pressability/PressabilityDebug\");\n  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../ReactNative/UIManager\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../../Utilities/Platform\"));\n  var _SoundManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../Sound/SoundManager\"));\n  var _BoundingDimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./BoundingDimensions\"));\n  var _Position = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./Position\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\");\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * @format\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         */\n  var extractSingleTouch = function extractSingleTouch(nativeEvent) {\n    var touches = nativeEvent.touches;\n    var changedTouches = nativeEvent.changedTouches;\n    var hasTouches = touches && touches.length > 0;\n    var hasChangedTouches = changedTouches && changedTouches.length > 0;\n    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;\n  };\n\n  /**\n   * `Touchable`: Taps done right.\n   *\n   * You hook your `ResponderEventPlugin` events into `Touchable`. `Touchable`\n   * will measure time/geometry and tells you when to give feedback to the user.\n   *\n   * ====================== Touchable Tutorial ===============================\n   * The `Touchable` mixin helps you handle the \"press\" interaction. It analyzes\n   * the geometry of elements, and observes when another responder (scroll view\n   * etc) has stolen the touch lock. It notifies your component when it should\n   * give feedback to the user. (bouncing/highlighting/unhighlighting).\n   *\n   * - When a touch was activated (typically you highlight)\n   * - When a touch was deactivated (typically you unhighlight)\n   * - When a touch was \"pressed\" - a touch ended while still within the geometry\n   *   of the element, and no other element (like scroller) has \"stolen\" touch\n   *   lock (\"responder\") (Typically you bounce the element).\n   *\n   * A good tap interaction isn't as simple as you might think. There should be a\n   * slight delay before showing a highlight when starting a touch. If a\n   * subsequent touch move exceeds the boundary of the element, it should\n   * unhighlight, but if that same touch is brought back within the boundary, it\n   * should rehighlight again. A touch can move in and out of that boundary\n   * several times, each time toggling highlighting, but a \"press\" is only\n   * triggered if that touch ends while within the element's boundary and no\n   * scroller (or anything else) has stolen the lock on touches.\n   *\n   * To create a new type of component that handles interaction using the\n   * `Touchable` mixin, do the following:\n   *\n   * - Initialize the `Touchable` state.\n   *\n   *   getInitialState: function() {\n   *     return merge(this.touchableGetInitialState(), yourComponentState);\n   *   }\n   *\n   * - Choose the rendered component who's touches should start the interactive\n   *   sequence. On that rendered node, forward all `Touchable` responder\n   *   handlers. You can choose any rendered node you like. Choose a node whose\n   *   hit target you'd like to instigate the interaction sequence:\n   *\n   *   // In render function:\n   *   return (\n   *     <View\n   *       onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n   *       onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n   *       onResponderGrant={this.touchableHandleResponderGrant}\n   *       onResponderMove={this.touchableHandleResponderMove}\n   *       onResponderRelease={this.touchableHandleResponderRelease}\n   *       onResponderTerminate={this.touchableHandleResponderTerminate}>\n   *       <View>\n   *         Even though the hit detection/interactions are triggered by the\n   *         wrapping (typically larger) node, we usually end up implementing\n   *         custom logic that highlights this inner one.\n   *       </View>\n   *     </View>\n   *   );\n   *\n   * - You may set up your own handlers for each of these events, so long as you\n   *   also invoke the `touchable*` handlers inside of your custom handler.\n   *\n   * - Implement the handlers on your component class in order to provide\n   *   feedback to the user. See documentation for each of these class methods\n   *   that you should implement.\n   *\n   *   touchableHandlePress: function() {\n   *      this.performBounceAnimation();  // or whatever you want to do.\n   *   },\n   *   touchableHandleActivePressIn: function() {\n   *     this.beginHighlighting(...);  // Whatever you like to convey activation\n   *   },\n   *   touchableHandleActivePressOut: function() {\n   *     this.endHighlighting(...);  // Whatever you like to convey deactivation\n   *   },\n   *\n   * - There are more advanced methods you can implement (see documentation below):\n   *   touchableGetHighlightDelayMS: function() {\n   *     return 20;\n   *   }\n   *   // In practice, *always* use a predeclared constant (conserve memory).\n   *   touchableGetPressRectOffset: function() {\n   *     return {top: 20, left: 20, right: 20, bottom: 100};\n   *   }\n   */\n\n  /**\n   * Touchable states.\n   */\n\n  var States = {\n    NOT_RESPONDER: 'NOT_RESPONDER',\n    // Not the responder\n    RESPONDER_INACTIVE_PRESS_IN: 'RESPONDER_INACTIVE_PRESS_IN',\n    // Responder, inactive, in the `PressRect`\n    RESPONDER_INACTIVE_PRESS_OUT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    // Responder, inactive, out of `PressRect`\n    RESPONDER_ACTIVE_PRESS_IN: 'RESPONDER_ACTIVE_PRESS_IN',\n    // Responder, active, in the `PressRect`\n    RESPONDER_ACTIVE_PRESS_OUT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    // Responder, active, out of `PressRect`\n    RESPONDER_ACTIVE_LONG_PRESS_IN: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    // Responder, active, in the `PressRect`, after long press threshold\n    RESPONDER_ACTIVE_LONG_PRESS_OUT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    // Responder, active, out of `PressRect`, after long press threshold\n    ERROR: 'ERROR'\n  };\n  /*\n   * Quick lookup map for states that are considered to be \"active\"\n   */\n\n  var baseStatesConditions = {\n    NOT_RESPONDER: false,\n    RESPONDER_INACTIVE_PRESS_IN: false,\n    RESPONDER_INACTIVE_PRESS_OUT: false,\n    RESPONDER_ACTIVE_PRESS_IN: false,\n    RESPONDER_ACTIVE_PRESS_OUT: false,\n    RESPONDER_ACTIVE_LONG_PRESS_IN: false,\n    RESPONDER_ACTIVE_LONG_PRESS_OUT: false,\n    ERROR: false\n  };\n  var IsActive = _objectSpread(_objectSpread({}, baseStatesConditions), {}, {\n    RESPONDER_ACTIVE_PRESS_OUT: true,\n    RESPONDER_ACTIVE_PRESS_IN: true\n  });\n\n  /**\n   * Quick lookup for states that are considered to be \"pressing\" and are\n   * therefore eligible to result in a \"selection\" if the press stops.\n   */\n  var IsPressingIn = _objectSpread(_objectSpread({}, baseStatesConditions), {}, {\n    RESPONDER_INACTIVE_PRESS_IN: true,\n    RESPONDER_ACTIVE_PRESS_IN: true,\n    RESPONDER_ACTIVE_LONG_PRESS_IN: true\n  });\n  var IsLongPressingIn = _objectSpread(_objectSpread({}, baseStatesConditions), {}, {\n    RESPONDER_ACTIVE_LONG_PRESS_IN: true\n  });\n\n  /**\n   * Inputs to the state machine.\n   */\n  var Signals = {\n    DELAY: 'DELAY',\n    RESPONDER_GRANT: 'RESPONDER_GRANT',\n    RESPONDER_RELEASE: 'RESPONDER_RELEASE',\n    RESPONDER_TERMINATED: 'RESPONDER_TERMINATED',\n    ENTER_PRESS_RECT: 'ENTER_PRESS_RECT',\n    LEAVE_PRESS_RECT: 'LEAVE_PRESS_RECT',\n    LONG_PRESS_DETECTED: 'LONG_PRESS_DETECTED'\n  };\n  /**\n   * Mapping from States x Signals => States\n   */\n  var Transitions = {\n    NOT_RESPONDER: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n      RESPONDER_RELEASE: States.ERROR,\n      RESPONDER_TERMINATED: States.ERROR,\n      ENTER_PRESS_RECT: States.ERROR,\n      LEAVE_PRESS_RECT: States.ERROR,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    RESPONDER_INACTIVE_PRESS_IN: {\n      DELAY: States.RESPONDER_ACTIVE_PRESS_IN,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    RESPONDER_INACTIVE_PRESS_OUT: {\n      DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    RESPONDER_ACTIVE_PRESS_IN: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN\n    },\n    RESPONDER_ACTIVE_PRESS_OUT: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    RESPONDER_ACTIVE_LONG_PRESS_IN: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN\n    },\n    RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    error: {\n      DELAY: States.NOT_RESPONDER,\n      RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.NOT_RESPONDER,\n      LEAVE_PRESS_RECT: States.NOT_RESPONDER,\n      LONG_PRESS_DETECTED: States.NOT_RESPONDER\n    }\n  };\n\n  // ==== Typical Constants for integrating into UI components ====\n  // var HIT_EXPAND_PX = 20;\n  // var HIT_VERT_OFFSET_PX = 10;\n  var HIGHLIGHT_DELAY_MS = 130;\n  var PRESS_EXPAND_PX = 20;\n  var LONG_PRESS_THRESHOLD = 500;\n  var LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;\n  var LONG_PRESS_ALLOWED_MOVEMENT = 10;\n\n  // Default amount \"active\" region protrudes beyond box\n\n  /**\n   * By convention, methods prefixed with underscores are meant to be @private,\n   * and not @protected. Mixers shouldn't access them - not even to provide them\n   * as callback handlers.\n   *\n   *\n   * ========== Geometry =========\n   * `Touchable` only assumes that there exists a `HitRect` node. The `PressRect`\n   * is an abstract box that is extended beyond the `HitRect`.\n   *\n   *  +--------------------------+\n   *  |                          | - \"Start\" events in `HitRect` cause `HitRect`\n   *  |  +--------------------+  |   to become the responder.\n   *  |  |  +--------------+  |  | - `HitRect` is typically expanded around\n   *  |  |  |              |  |  |   the `VisualRect`, but shifted downward.\n   *  |  |  |  VisualRect  |  |  | - After pressing down, after some delay,\n   *  |  |  |              |  |  |   and before letting up, the Visual React\n   *  |  |  +--------------+  |  |   will become \"active\". This makes it eligible\n   *  |  |     HitRect        |  |   for being highlighted (so long as the\n   *  |  +--------------------+  |   press remains in the `PressRect`).\n   *  |        PressRect     o   |\n   *  +----------------------|---+\n   *           Out Region    |\n   *                         +-----+ This gap between the `HitRect` and\n   *                                 `PressRect` allows a touch to move far away\n   *                                 from the original hit rect, and remain\n   *                                 highlighted, and eligible for a \"Press\".\n   *                                 Customize this via\n   *                                 `touchableGetPressRectOffset()`.\n   *\n   *\n   *\n   * ======= State Machine =======\n   *\n   * +-------------+ <---+ RESPONDER_RELEASE\n   * |NOT_RESPONDER|\n   * +-------------+ <---+ RESPONDER_TERMINATED\n   *     +\n   *     | RESPONDER_GRANT (HitRect)\n   *     v\n   * +---------------------------+  DELAY   +-------------------------+  T + DELAY     +------------------------------+\n   * |RESPONDER_INACTIVE_PRESS_IN|+-------->|RESPONDER_ACTIVE_PRESS_IN| +------------> |RESPONDER_ACTIVE_LONG_PRESS_IN|\n   * +---------------------------+          +-------------------------+                +------------------------------+\n   *     +            ^                         +           ^                                 +           ^\n   *     |LEAVE_      |ENTER_                   |LEAVE_     |ENTER_                           |LEAVE_     |ENTER_\n   *     |PRESS_RECT  |PRESS_RECT               |PRESS_RECT |PRESS_RECT                       |PRESS_RECT |PRESS_RECT\n   *     |            |                         |           |                                 |           |\n   *     v            +                         v           +                                 v           +\n   * +----------------------------+  DELAY  +--------------------------+               +-------------------------------+\n   * |RESPONDER_INACTIVE_PRESS_OUT|+------->|RESPONDER_ACTIVE_PRESS_OUT|               |RESPONDER_ACTIVE_LONG_PRESS_OUT|\n   * +----------------------------+         +--------------------------+               +-------------------------------+\n   *\n   * T + DELAY => LONG_PRESS_DELAY_MS + DELAY\n   *\n   * Not drawn are the side effects of each transition. The most important side\n   * effect is the `touchableHandlePress` abstract method invocation that occurs\n   * when a responder is released while in either of the \"Press\" states.\n   *\n   * The other important side effects are the highlight abstract method\n   * invocations (internal callbacks) to be implemented by the mixer.\n   *\n   *\n   * @lends Touchable.prototype\n   */\n  var TouchableMixin = {\n    componentDidMount: function componentDidMount() {\n      if (!_Platform.default.isTV) {\n        return;\n      }\n    },\n    /**\n     * Clear all timeouts on unmount\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    componentWillUnmount: function componentWillUnmount() {\n      this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n      this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n      this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n    },\n    /**\n     * It's prefer that mixins determine state in this way, having the class\n     * explicitly mix the state in the one and only `getInitialState` method.\n     *\n     * @return {object} State object to be placed inside of\n     * `this.state.touchable`.\n     */\n    touchableGetInitialState: function touchableGetInitialState() {\n      return {\n        touchable: {\n          touchState: undefined,\n          responderID: null\n        }\n      };\n    },\n    // ==== Hooks to Gesture Responder system ====\n    /**\n     * Must return true if embedded in a native platform scroll view.\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {\n      return !this.props.rejectResponderTermination;\n    },\n    /**\n     * Must return true to start the process of `Touchable`.\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {\n      return !this.props.disabled;\n    },\n    /**\n     * Return true to cancel press on long press.\n     */\n    touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {\n      return true;\n    },\n    /**\n     * Place as callback for a DOM element's `onResponderGrant` event.\n     * @param {SyntheticEvent} e Synthetic event from event system.\n     *\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {\n      var dispatchID = e.currentTarget;\n      // Since e is used in a callback invoked on another event loop\n      // (as in setTimeout etc), we need to call e.persist() on the\n      // event to make sure it doesn't get reused in the event object pool.\n      e.persist();\n      this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n      this.pressOutDelayTimeout = null;\n      this.state.touchable.touchState = States.NOT_RESPONDER;\n      this.state.touchable.responderID = dispatchID;\n      this._receiveSignal(Signals.RESPONDER_GRANT, e);\n      var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;\n      delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;\n      if (delayMS !== 0) {\n        this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);\n      } else {\n        this._handleDelay(e);\n      }\n      var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;\n      longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;\n      this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);\n    },\n    /**\n     * Place as callback for a DOM element's `onResponderRelease` event.\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {\n      this.pressInLocation = null;\n      this._receiveSignal(Signals.RESPONDER_RELEASE, e);\n    },\n    /**\n     * Place as callback for a DOM element's `onResponderTerminate` event.\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {\n      this.pressInLocation = null;\n      this._receiveSignal(Signals.RESPONDER_TERMINATED, e);\n    },\n    /**\n     * Place as callback for a DOM element's `onResponderMove` event.\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    touchableHandleResponderMove: function touchableHandleResponderMove(e) {\n      // Measurement may not have returned yet.\n      if (!this.state.touchable.positionOnActivate) {\n        return;\n      }\n      var positionOnActivate = this.state.touchable.positionOnActivate;\n      var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;\n      var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {\n        left: PRESS_EXPAND_PX,\n        right: PRESS_EXPAND_PX,\n        top: PRESS_EXPAND_PX,\n        bottom: PRESS_EXPAND_PX\n      };\n      var pressExpandLeft = pressRectOffset.left;\n      var pressExpandTop = pressRectOffset.top;\n      var pressExpandRight = pressRectOffset.right;\n      var pressExpandBottom = pressRectOffset.bottom;\n      var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;\n      if (hitSlop) {\n        pressExpandLeft += hitSlop.left || 0;\n        pressExpandTop += hitSlop.top || 0;\n        pressExpandRight += hitSlop.right || 0;\n        pressExpandBottom += hitSlop.bottom || 0;\n      }\n      var touch = extractSingleTouch(e.nativeEvent);\n      var pageX = touch && touch.pageX;\n      var pageY = touch && touch.pageY;\n      if (this.pressInLocation) {\n        var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);\n        if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {\n          this._cancelLongPressDelayTimeout();\n        }\n      }\n      var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;\n      if (isTouchWithinActive) {\n        var prevState = this.state.touchable.touchState;\n        this._receiveSignal(Signals.ENTER_PRESS_RECT, e);\n        var curState = this.state.touchable.touchState;\n        if (curState === States.RESPONDER_INACTIVE_PRESS_IN && prevState !== States.RESPONDER_INACTIVE_PRESS_IN) {\n          // fix for t7967420\n          this._cancelLongPressDelayTimeout();\n        }\n      } else {\n        this._cancelLongPressDelayTimeout();\n        this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);\n      }\n    },\n    /**\n     * Invoked when the item receives focus. Mixers might override this to\n     * visually distinguish the `VisualRect` so that the user knows that it\n     * currently has the focus. Most platforms only support a single element being\n     * focused at a time, in which case there may have been a previously focused\n     * element that was blurred just prior to this. This can be overridden when\n     * using `Touchable.Mixin.withoutDefaultFocusAndBlur`.\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    touchableHandleFocus: function touchableHandleFocus(e) {\n      this.props.onFocus && this.props.onFocus(e);\n    },\n    /**\n     * Invoked when the item loses focus. Mixers might override this to\n     * visually distinguish the `VisualRect` so that the user knows that it\n     * no longer has focus. Most platforms only support a single element being\n     * focused at a time, in which case the focus may have moved to another.\n     * This can be overridden when using\n     * `Touchable.Mixin.withoutDefaultFocusAndBlur`.\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    touchableHandleBlur: function touchableHandleBlur(e) {\n      this.props.onBlur && this.props.onBlur(e);\n    },\n    // ==== Abstract Application Callbacks ====\n\n    /**\n     * Invoked when the item should be highlighted. Mixers should implement this\n     * to visually distinguish the `VisualRect` so that the user knows that\n     * releasing a touch will result in a \"selection\" (analog to click).\n     *\n     * @abstract\n     * touchableHandleActivePressIn: function,\n     */\n\n    /**\n     * Invoked when the item is \"active\" (in that it is still eligible to become\n     * a \"select\") but the touch has left the `PressRect`. Usually the mixer will\n     * want to unhighlight the `VisualRect`. If the user (while pressing) moves\n     * back into the `PressRect` `touchableHandleActivePressIn` will be invoked\n     * again and the mixer should probably highlight the `VisualRect` again. This\n     * event will not fire on an `touchEnd/mouseUp` event, only move events while\n     * the user is depressing the mouse/touch.\n     *\n     * @abstract\n     * touchableHandleActivePressOut: function\n     */\n\n    /**\n     * Invoked when the item is \"selected\" - meaning the interaction ended by\n     * letting up while the item was either in the state\n     * `RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`.\n     *\n     * @abstract\n     * touchableHandlePress: function\n     */\n\n    /**\n     * Invoked when the item is long pressed - meaning the interaction ended by\n     * letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`. If\n     * `touchableHandleLongPress` is *not* provided, `touchableHandlePress` will\n     * be called as it normally is. If `touchableHandleLongPress` is provided, by\n     * default any `touchableHandlePress` callback will not be invoked. To\n     * override this default behavior, override `touchableLongPressCancelsPress`\n     * to return false. As a result, `touchableHandlePress` will be called when\n     * lifting up, even if `touchableHandleLongPress` has also been called.\n     *\n     * @abstract\n     * touchableHandleLongPress: function\n     */\n\n    /**\n     * Returns the number of millis to wait before triggering a highlight.\n     *\n     * @abstract\n     * touchableGetHighlightDelayMS: function\n     */\n\n    /**\n     * Returns the amount to extend the `HitRect` into the `PressRect`. Positive\n     * numbers mean the size expands outwards.\n     *\n     * @abstract\n     * touchableGetPressRectOffset: function\n     */\n\n    // ==== Internal Logic ====\n\n    /**\n     * Measures the `HitRect` node on activation. The Bounding rectangle is with\n     * respect to viewport - not page, so adding the `pageXOffset/pageYOffset`\n     * should result in points that are in the same coordinate system as an\n     * event's `globalX/globalY` data values.\n     *\n     * - Consider caching this for the lifetime of the component, or possibly\n     *   being able to share this cache between any `ScrollMap` view.\n     *\n     * @sideeffects\n     * @private\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {\n      var responderID = this.state.touchable.responderID;\n      if (responderID == null) {\n        return;\n      }\n      if (typeof responderID === 'number') {\n        _UIManager.default.measure(responderID, this._handleQueryLayout);\n      } else {\n        responderID.measure(this._handleQueryLayout);\n      }\n    },\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {\n      //don't do anything UIManager failed to measure node\n      if (!l && !t && !w && !h && !globalX && !globalY) {\n        return;\n      }\n      this.state.touchable.positionOnActivate && _Position.default.release(this.state.touchable.positionOnActivate);\n      this.state.touchable.dimensionsOnActivate && _BoundingDimensions.default.release(this.state.touchable.dimensionsOnActivate);\n      this.state.touchable.positionOnActivate = _Position.default.getPooled(globalX, globalY);\n      this.state.touchable.dimensionsOnActivate = _BoundingDimensions.default.getPooled(w, h);\n    },\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _handleDelay: function _handleDelay(e) {\n      this.touchableDelayTimeout = null;\n      this._receiveSignal(Signals.DELAY, e);\n    },\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _handleLongDelay: function _handleLongDelay(e) {\n      this.longPressDelayTimeout = null;\n      var curState = this.state.touchable.touchState;\n      if (curState === States.RESPONDER_ACTIVE_PRESS_IN || curState === States.RESPONDER_ACTIVE_LONG_PRESS_IN) {\n        this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);\n      }\n    },\n    /**\n     * Receives a state machine signal, performs side effects of the transition\n     * and stores the new state. Validates the transition as well.\n     *\n     * @param {Signals} signal State machine signal.\n     * @throws Error if invalid state transition or unrecognized signal.\n     * @sideeffects\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _receiveSignal: function _receiveSignal(signal, e) {\n      var responderID = this.state.touchable.responderID;\n      var curState = this.state.touchable.touchState;\n      var nextState = Transitions[curState] && Transitions[curState][signal];\n      if (!responderID && signal === Signals.RESPONDER_RELEASE) {\n        return;\n      }\n      if (!nextState) {\n        throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + typeof this.state.touchable.responderID === 'number' ? this.state.touchable.responderID : 'host component' + '`');\n      }\n      if (nextState === States.ERROR) {\n        throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + typeof this.state.touchable.responderID === 'number' ? this.state.touchable.responderID : '<<host component>>' + '`');\n      }\n      if (curState !== nextState) {\n        this._performSideEffectsForTransition(curState, nextState, signal, e);\n        this.state.touchable.touchState = nextState;\n      }\n    },\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {\n      this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n      this.longPressDelayTimeout = null;\n    },\n    _isHighlight: function _isHighlight(state) {\n      return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;\n    },\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _savePressInLocation: function _savePressInLocation(e) {\n      var touch = extractSingleTouch(e.nativeEvent);\n      var pageX = touch && touch.pageX;\n      var pageY = touch && touch.pageY;\n      var locationX = touch && touch.locationX;\n      var locationY = touch && touch.locationY;\n      this.pressInLocation = {\n        pageX: pageX,\n        pageY: pageY,\n        locationX: locationX,\n        locationY: locationY\n      };\n    },\n    _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {\n      var deltaX = aX - bX;\n      var deltaY = aY - bY;\n      return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    },\n    /**\n     * Will perform a transition between touchable states, and identify any\n     * highlighting or unhighlighting that must be performed for this particular\n     * transition.\n     *\n     * @param {States} curState Current Touchable state.\n     * @param {States} nextState Next Touchable state.\n     * @param {Signal} signal Signal that triggered the transition.\n     * @param {Event} e Native event.\n     * @sideeffects\n     */\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {\n      var curIsHighlight = this._isHighlight(curState);\n      var newIsHighlight = this._isHighlight(nextState);\n      var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;\n      if (isFinalSignal) {\n        this._cancelLongPressDelayTimeout();\n      }\n      var isInitialTransition = curState === States.NOT_RESPONDER && nextState === States.RESPONDER_INACTIVE_PRESS_IN;\n      var isActiveTransition = !IsActive[curState] && IsActive[nextState];\n      if (isInitialTransition || isActiveTransition) {\n        this._remeasureMetricsOnActivation();\n      }\n      if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {\n        this.touchableHandleLongPress && this.touchableHandleLongPress(e);\n      }\n      if (newIsHighlight && !curIsHighlight) {\n        this._startHighlight(e);\n      } else if (!newIsHighlight && curIsHighlight) {\n        this._endHighlight(e);\n      }\n      if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {\n        var hasLongPressHandler = !!this.props.onLongPress;\n        var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (\n        // We *are* long pressing.. // But either has no long handler\n        !hasLongPressHandler || !this.touchableLongPressCancelsPress()); // or we're told to ignore it.\n\n        var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;\n        if (shouldInvokePress && this.touchableHandlePress) {\n          if (!newIsHighlight && !curIsHighlight) {\n            // we never highlighted because of delay, but we should highlight now\n            this._startHighlight(e);\n            this._endHighlight(e);\n          }\n          if (_Platform.default.OS === 'android' && !this.props.touchSoundDisabled) {\n            _SoundManager.default.playTouchSound();\n          }\n          this.touchableHandlePress(e);\n        }\n      }\n      this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n      this.touchableDelayTimeout = null;\n    },\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _startHighlight: function _startHighlight(e) {\n      this._savePressInLocation(e);\n      this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);\n    },\n    /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n     * Flow's LTI update could not be added via codemod */\n    _endHighlight: function _endHighlight(e) {\n      var _this = this;\n      if (this.touchableHandleActivePressOut) {\n        if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {\n          this.pressOutDelayTimeout = setTimeout(function () {\n            _this.touchableHandleActivePressOut(e);\n          }, this.touchableGetPressOutDelayMS());\n        } else {\n          this.touchableHandleActivePressOut(e);\n        }\n      }\n    },\n    withoutDefaultFocusAndBlur: {}\n  };\n\n  /**\n   * Provide an optional version of the mixin where `touchableHandleFocus` and\n   * `touchableHandleBlur` can be overridden. This allows appropriate defaults to\n   * be set on TV platforms, without breaking existing implementations of\n   * `Touchable`.\n   */\n  var touchableHandleFocus = TouchableMixin.touchableHandleFocus,\n    touchableHandleBlur = TouchableMixin.touchableHandleBlur,\n    TouchableMixinWithoutDefaultFocusAndBlur = (0, _objectWithoutProperties2.default)(TouchableMixin, [\"touchableHandleFocus\", \"touchableHandleBlur\"]);\n  TouchableMixin.withoutDefaultFocusAndBlur = TouchableMixinWithoutDefaultFocusAndBlur;\n  var Touchable = {\n    Mixin: TouchableMixin,\n    /**\n     * Renders a debugging overlay to visualize touch target with hitSlop (might not work on Android).\n     */\n    renderDebugView: function renderDebugView(_ref) {\n      var color = _ref.color,\n        hitSlop = _ref.hitSlop;\n      if (__DEV__) {\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_PressabilityDebug.PressabilityDebugView, {\n          color: color,\n          hitSlop: hitSlop\n        });\n      }\n      return null;\n    }\n  };\n  module.exports = Touchable;\n});","lineCount":794,"map":[[5,2,16,0],[5,6,16,0,"_PressabilityDebug"],[5,24,16,0],[5,27,16,0,"_$$_REQUIRE"],[5,38,16,0],[5,39,16,0,"_dependencyMap"],[5,53,16,0],[6,2,17,0],[6,6,17,0,"_UIManager"],[6,16,17,0],[6,19,17,0,"_interopRequireDefault"],[6,41,17,0],[6,42,17,0,"_$$_REQUIRE"],[6,53,17,0],[6,54,17,0,"_dependencyMap"],[6,68,17,0],[7,2,18,0],[7,6,18,0,"_Platform"],[7,15,18,0],[7,18,18,0,"_interopRequireDefault"],[7,40,18,0],[7,41,18,0,"_$$_REQUIRE"],[7,52,18,0],[7,53,18,0,"_dependencyMap"],[7,67,18,0],[8,2,19,0],[8,6,19,0,"_SoundManager"],[8,19,19,0],[8,22,19,0,"_interopRequireDefault"],[8,44,19,0],[8,45,19,0,"_$$_REQUIRE"],[8,56,19,0],[8,57,19,0,"_dependencyMap"],[8,71,19,0],[9,2,20,0],[9,6,20,0,"_BoundingDimensions"],[9,25,20,0],[9,28,20,0,"_interopRequireDefault"],[9,50,20,0],[9,51,20,0,"_$$_REQUIRE"],[9,62,20,0],[9,63,20,0,"_dependencyMap"],[9,77,20,0],[10,2,21,0],[10,6,21,0,"_Position"],[10,15,21,0],[10,18,21,0,"_interopRequireDefault"],[10,40,21,0],[10,41,21,0,"_$$_REQUIRE"],[10,52,21,0],[10,53,21,0,"_dependencyMap"],[10,67,21,0],[11,2,22,0],[11,6,22,0,"React"],[11,11,22,0],[11,14,22,0,"_interopRequireWildcard"],[11,37,22,0],[11,38,22,0,"_$$_REQUIRE"],[11,49,22,0],[11,50,22,0,"_dependencyMap"],[11,64,22,0],[12,2,22,31],[12,6,22,31,"_jsxRuntime"],[12,17,22,31],[12,20,22,31,"_$$_REQUIRE"],[12,31,22,31],[12,32,22,31,"_dependencyMap"],[12,46,22,31],[13,2,22,31],[13,11,22,31,"_getRequireWildcardCache"],[13,36,22,31,"nodeInterop"],[13,47,22,31],[13,62,22,31,"WeakMap"],[13,69,22,31],[13,103,22,31,"cacheBabelInterop"],[13,120,22,31],[13,127,22,31,"WeakMap"],[13,134,22,31],[13,142,22,31,"cacheNodeInterop"],[13,158,22,31],[13,165,22,31,"WeakMap"],[13,172,22,31],[13,184,22,31,"_getRequireWildcardCache"],[13,208,22,31],[13,220,22,31,"_getRequireWildcardCache"],[13,245,22,31,"nodeInterop"],[13,256,22,31],[13,267,22,31,"nodeInterop"],[13,278,22,31],[13,281,22,31,"cacheNodeInterop"],[13,297,22,31],[13,300,22,31,"cacheBabelInterop"],[13,317,22,31],[13,322,22,31,"nodeInterop"],[13,333,22,31],[14,2,22,31],[14,11,22,31,"_interopRequireWildcard"],[14,35,22,31,"obj"],[14,38,22,31],[14,40,22,31,"nodeInterop"],[14,51,22,31],[14,60,22,31,"nodeInterop"],[14,71,22,31],[14,75,22,31,"obj"],[14,78,22,31],[14,82,22,31,"obj"],[14,85,22,31],[14,86,22,31,"__esModule"],[14,96,22,31],[14,107,22,31,"obj"],[14,110,22,31],[14,118,22,31,"obj"],[14,121,22,31],[14,141,22,31,"obj"],[14,144,22,31],[14,168,22,31,"obj"],[14,171,22,31],[14,199,22,31,"default"],[14,206,22,31],[14,208,22,31,"obj"],[14,211,22,31],[14,221,22,31,"cache"],[14,226,22,31],[14,229,22,31,"_getRequireWildcardCache"],[14,253,22,31],[14,254,22,31,"nodeInterop"],[14,265,22,31],[14,272,22,31,"cache"],[14,277,22,31],[14,281,22,31,"cache"],[14,286,22,31],[14,287,22,31,"has"],[14,290,22,31],[14,291,22,31,"obj"],[14,294,22,31],[14,306,22,31,"cache"],[14,311,22,31],[14,312,22,31,"get"],[14,315,22,31],[14,316,22,31,"obj"],[14,319,22,31],[14,328,22,31,"newObj"],[14,334,22,31],[14,345,22,31,"hasPropertyDescriptor"],[14,366,22,31],[14,369,22,31,"Object"],[14,375,22,31],[14,376,22,31,"defineProperty"],[14,390,22,31],[14,394,22,31,"Object"],[14,400,22,31],[14,401,22,31,"getOwnPropertyDescriptor"],[14,425,22,31],[14,436,22,31,"key"],[14,439,22,31],[14,443,22,31,"obj"],[14,446,22,31],[14,454,22,31,"key"],[14,457,22,31],[14,475,22,31,"Object"],[14,481,22,31],[14,482,22,31,"prototype"],[14,491,22,31],[14,492,22,31,"hasOwnProperty"],[14,506,22,31],[14,507,22,31,"call"],[14,511,22,31],[14,512,22,31,"obj"],[14,515,22,31],[14,517,22,31,"key"],[14,520,22,31],[14,529,22,31,"desc"],[14,533,22,31],[14,536,22,31,"hasPropertyDescriptor"],[14,557,22,31],[14,560,22,31,"Object"],[14,566,22,31],[14,567,22,31,"getOwnPropertyDescriptor"],[14,591,22,31],[14,592,22,31,"obj"],[14,595,22,31],[14,597,22,31,"key"],[14,600,22,31],[14,614,22,31,"desc"],[14,618,22,31],[14,623,22,31,"desc"],[14,627,22,31],[14,628,22,31,"get"],[14,631,22,31],[14,635,22,31,"desc"],[14,639,22,31],[14,640,22,31,"set"],[14,643,22,31],[14,648,22,31,"Object"],[14,654,22,31],[14,655,22,31,"defineProperty"],[14,669,22,31],[14,670,22,31,"newObj"],[14,676,22,31],[14,678,22,31,"key"],[14,681,22,31],[14,683,22,31,"desc"],[14,687,22,31],[14,699,22,31,"newObj"],[14,705,22,31],[14,706,22,31,"key"],[14,709,22,31],[14,713,22,31,"obj"],[14,716,22,31],[14,717,22,31,"key"],[14,720,22,31],[14,729,22,31,"newObj"],[14,735,22,31],[14,736,22,31,"default"],[14,743,22,31],[14,746,22,31,"obj"],[14,749,22,31],[14,755,22,31,"cache"],[14,760,22,31],[14,764,22,31,"cache"],[14,769,22,31],[14,770,22,31,"set"],[14,773,22,31],[14,774,22,31,"obj"],[14,777,22,31],[14,779,22,31,"newObj"],[14,785,22,31],[14,797,22,31,"newObj"],[14,803,22,31],[15,2,22,31],[15,11,22,31,"ownKeys"],[15,19,22,31,"e"],[15,20,22,31],[15,22,22,31,"r"],[15,23,22,31],[15,31,22,31,"t"],[15,32,22,31],[15,35,22,31,"Object"],[15,41,22,31],[15,42,22,31,"keys"],[15,46,22,31],[15,47,22,31,"e"],[15,48,22,31],[15,55,22,31,"Object"],[15,61,22,31],[15,62,22,31,"getOwnPropertySymbols"],[15,83,22,31],[15,91,22,31,"o"],[15,92,22,31],[15,95,22,31,"Object"],[15,101,22,31],[15,102,22,31,"getOwnPropertySymbols"],[15,123,22,31],[15,124,22,31,"e"],[15,125,22,31],[15,128,22,31,"r"],[15,129,22,31],[15,134,22,31,"o"],[15,135,22,31],[15,138,22,31,"o"],[15,139,22,31],[15,140,22,31,"filter"],[15,146,22,31],[15,157,22,31,"r"],[15,158,22,31],[15,169,22,31,"Object"],[15,175,22,31],[15,176,22,31,"getOwnPropertyDescriptor"],[15,200,22,31],[15,201,22,31,"e"],[15,202,22,31],[15,204,22,31,"r"],[15,205,22,31],[15,207,22,31,"enumerable"],[15,217,22,31],[15,224,22,31,"t"],[15,225,22,31],[15,226,22,31,"push"],[15,230,22,31],[15,231,22,31,"apply"],[15,236,22,31],[15,237,22,31,"t"],[15,238,22,31],[15,240,22,31,"o"],[15,241,22,31],[15,253,22,31,"t"],[15,254,22,31],[16,2,22,31],[16,11,22,31,"_objectSpread"],[16,25,22,31,"e"],[16,26,22,31],[16,39,22,31,"r"],[16,40,22,31],[16,46,22,31,"r"],[16,47,22,31],[16,50,22,31,"arguments"],[16,59,22,31],[16,60,22,31,"length"],[16,66,22,31],[16,68,22,31,"r"],[16,69,22,31],[16,79,22,31,"t"],[16,80,22,31],[16,91,22,31,"arguments"],[16,100,22,31],[16,101,22,31,"r"],[16,102,22,31],[16,106,22,31,"arguments"],[16,115,22,31],[16,116,22,31,"r"],[16,117,22,31],[16,125,22,31,"r"],[16,126,22,31],[16,133,22,31,"ownKeys"],[16,140,22,31],[16,141,22,31,"Object"],[16,147,22,31],[16,148,22,31,"t"],[16,149,22,31],[16,156,22,31,"forEach"],[16,163,22,31],[16,174,22,31,"r"],[16,175,22,31],[16,183,22,31,"_defineProperty2"],[16,199,22,31],[16,200,22,31,"default"],[16,207,22,31],[16,209,22,31,"e"],[16,210,22,31],[16,212,22,31,"r"],[16,213,22,31],[16,215,22,31,"t"],[16,216,22,31],[16,217,22,31,"r"],[16,218,22,31],[16,227,22,31,"Object"],[16,233,22,31],[16,234,22,31,"getOwnPropertyDescriptors"],[16,259,22,31],[16,262,22,31,"Object"],[16,268,22,31],[16,269,22,31,"defineProperties"],[16,285,22,31],[16,286,22,31,"e"],[16,287,22,31],[16,289,22,31,"Object"],[16,295,22,31],[16,296,22,31,"getOwnPropertyDescriptors"],[16,321,22,31],[16,322,22,31,"t"],[16,323,22,31],[16,328,22,31,"ownKeys"],[16,335,22,31],[16,336,22,31,"Object"],[16,342,22,31],[16,343,22,31,"t"],[16,344,22,31],[16,347,22,31,"forEach"],[16,354,22,31],[16,365,22,31,"r"],[16,366,22,31],[16,370,22,31,"Object"],[16,376,22,31],[16,377,22,31,"defineProperty"],[16,391,22,31],[16,392,22,31,"e"],[16,393,22,31],[16,395,22,31,"r"],[16,396,22,31],[16,398,22,31,"Object"],[16,404,22,31],[16,405,22,31,"getOwnPropertyDescriptor"],[16,429,22,31],[16,430,22,31,"t"],[16,431,22,31],[16,433,22,31,"r"],[16,434,22,31],[16,451,22,31,"e"],[16,452,22,31],[16,456,1,0],[17,0,2,0],[18,0,3,0],[19,0,4,0],[20,0,5,0],[21,0,6,0],[22,0,7,0],[23,0,8,0],[24,0,9,0],[25,2,24,0],[25,6,24,6,"extractSingleTouch"],[25,24,24,24],[25,27,24,27],[25,36,24,6,"extractSingleTouch"],[25,54,24,24,"extractSingleTouch"],[25,55,24,28,"nativeEvent"],[25,66,35,1],[25,68,35,6],[26,4,36,2],[26,8,36,8,"touches"],[26,15,36,15],[26,18,36,18,"nativeEvent"],[26,29,36,29],[26,30,36,30,"touches"],[26,37,36,37],[27,4,37,2],[27,8,37,8,"changedTouches"],[27,22,37,22],[27,25,37,25,"nativeEvent"],[27,36,37,36],[27,37,37,37,"changedTouches"],[27,51,37,51],[28,4,38,2],[28,8,38,8,"hasTouches"],[28,18,38,18],[28,21,38,21,"touches"],[28,28,38,28],[28,32,38,32,"touches"],[28,39,38,39],[28,40,38,40,"length"],[28,46,38,46],[28,49,38,49],[28,50,38,50],[29,4,39,2],[29,8,39,8,"hasChangedTouches"],[29,25,39,25],[29,28,39,28,"changedTouches"],[29,42,39,42],[29,46,39,46,"changedTouches"],[29,60,39,60],[29,61,39,61,"length"],[29,67,39,67],[29,70,39,70],[29,71,39,71],[30,4,41,2],[30,11,41,9],[30,12,41,10,"hasTouches"],[30,22,41,20],[30,26,41,24,"hasChangedTouches"],[30,43,41,41],[30,46,42,6,"changedTouches"],[30,60,42,20],[30,61,42,21],[30,62,42,22],[30,63,42,23],[30,66,43,6,"hasTouches"],[30,76,43,16],[30,79,44,6,"touches"],[30,86,44,13],[30,87,44,14],[30,88,44,15],[30,89,44,16],[30,92,45,6,"nativeEvent"],[30,103,45,17],[31,2,46,0],[31,3,46,1],[33,2,48,0],[34,0,49,0],[35,0,50,0],[36,0,51,0],[37,0,52,0],[38,0,53,0],[39,0,54,0],[40,0,55,0],[41,0,56,0],[42,0,57,0],[43,0,58,0],[44,0,59,0],[45,0,60,0],[46,0,61,0],[47,0,62,0],[48,0,63,0],[49,0,64,0],[50,0,65,0],[51,0,66,0],[52,0,67,0],[53,0,68,0],[54,0,69,0],[55,0,70,0],[56,0,71,0],[57,0,72,0],[58,0,73,0],[59,0,74,0],[60,0,75,0],[61,0,76,0],[62,0,77,0],[63,0,78,0],[64,0,79,0],[65,0,80,0],[66,0,81,0],[67,0,82,0],[68,0,83,0],[69,0,84,0],[70,0,85,0],[71,0,86,0],[72,0,87,0],[73,0,88,0],[74,0,89,0],[75,0,90,0],[76,0,91,0],[77,0,92,0],[78,0,93,0],[79,0,94,0],[80,0,95,0],[81,0,96,0],[82,0,97,0],[83,0,98,0],[84,0,99,0],[85,0,100,0],[86,0,101,0],[87,0,102,0],[88,0,103,0],[89,0,104,0],[90,0,105,0],[91,0,106,0],[92,0,107,0],[93,0,108,0],[94,0,109,0],[95,0,110,0],[96,0,111,0],[97,0,112,0],[98,0,113,0],[99,0,114,0],[100,0,115,0],[101,0,116,0],[102,0,117,0],[103,0,118,0],[104,0,119,0],[105,0,120,0],[106,0,121,0],[107,0,122,0],[108,0,123,0],[109,0,124,0],[110,0,125,0],[111,0,126,0],[112,0,127,0],[113,0,128,0],[114,0,129,0],[115,0,130,0],[116,0,131,0],[118,2,133,0],[119,0,134,0],[120,0,135,0],[122,2,137,0],[122,6,137,6,"States"],[122,12,137,12],[122,15,137,15],[123,4,138,2,"NOT_RESPONDER"],[123,17,138,15],[123,19,138,17],[123,34,138,32],[124,4,138,34],[125,4,139,2,"RESPONDER_INACTIVE_PRESS_IN"],[125,31,139,29],[125,33,139,31],[125,62,139,60],[126,4,139,62],[127,4,140,2,"RESPONDER_INACTIVE_PRESS_OUT"],[127,32,140,30],[127,34,140,32],[127,64,140,62],[128,4,140,64],[129,4,141,2,"RESPONDER_ACTIVE_PRESS_IN"],[129,29,141,27],[129,31,141,29],[129,58,141,56],[130,4,141,58],[131,4,142,2,"RESPONDER_ACTIVE_PRESS_OUT"],[131,30,142,28],[131,32,142,30],[131,60,142,58],[132,4,142,60],[133,4,143,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[133,34,143,32],[133,36,143,34],[133,68,143,66],[134,4,143,68],[135,4,144,2,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[135,35,144,33],[135,37,144,35],[135,70,144,68],[136,4,144,70],[137,4,145,2,"ERROR"],[137,9,145,7],[137,11,145,9],[138,2,146,0],[138,3,146,1],[139,2,158,0],[140,0,159,0],[141,0,160,0],[143,2,162,0],[143,6,162,6,"baseStatesConditions"],[143,26,162,26],[143,29,162,29],[144,4,163,2,"NOT_RESPONDER"],[144,17,163,15],[144,19,163,17],[144,24,163,22],[145,4,164,2,"RESPONDER_INACTIVE_PRESS_IN"],[145,31,164,29],[145,33,164,31],[145,38,164,36],[146,4,165,2,"RESPONDER_INACTIVE_PRESS_OUT"],[146,32,165,30],[146,34,165,32],[146,39,165,37],[147,4,166,2,"RESPONDER_ACTIVE_PRESS_IN"],[147,29,166,27],[147,31,166,29],[147,36,166,34],[148,4,167,2,"RESPONDER_ACTIVE_PRESS_OUT"],[148,30,167,28],[148,32,167,30],[148,37,167,35],[149,4,168,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[149,34,168,32],[149,36,168,34],[149,41,168,39],[150,4,169,2,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[150,35,169,33],[150,37,169,35],[150,42,169,40],[151,4,170,2,"ERROR"],[151,9,170,7],[151,11,170,9],[152,2,171,0],[152,3,171,1],[153,2,173,0],[153,6,173,6,"IsActive"],[153,14,173,14],[153,17,173,14,"_objectSpread"],[153,30,173,14],[153,31,173,14,"_objectSpread"],[153,44,173,14],[153,49,174,5,"baseStatesConditions"],[153,69,174,25],[154,4,175,2,"RESPONDER_ACTIVE_PRESS_OUT"],[154,30,175,28],[154,32,175,30],[154,36,175,34],[155,4,176,2,"RESPONDER_ACTIVE_PRESS_IN"],[155,29,176,27],[155,31,176,29],[156,2,176,33],[156,4,177,1],[158,2,179,0],[159,0,180,0],[160,0,181,0],[161,0,182,0],[162,2,183,0],[162,6,183,6,"IsPressingIn"],[162,18,183,18],[162,21,183,18,"_objectSpread"],[162,34,183,18],[162,35,183,18,"_objectSpread"],[162,48,183,18],[162,53,184,5,"baseStatesConditions"],[162,73,184,25],[163,4,185,2,"RESPONDER_INACTIVE_PRESS_IN"],[163,31,185,29],[163,33,185,31],[163,37,185,35],[164,4,186,2,"RESPONDER_ACTIVE_PRESS_IN"],[164,29,186,27],[164,31,186,29],[164,35,186,33],[165,4,187,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[165,34,187,32],[165,36,187,34],[166,2,187,38],[166,4,188,1],[167,2,190,0],[167,6,190,6,"IsLongPressingIn"],[167,22,190,22],[167,25,190,22,"_objectSpread"],[167,38,190,22],[167,39,190,22,"_objectSpread"],[167,52,190,22],[167,57,191,5,"baseStatesConditions"],[167,77,191,25],[168,4,192,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[168,34,192,32],[168,36,192,34],[169,2,192,38],[169,4,193,1],[171,2,195,0],[172,0,196,0],[173,0,197,0],[174,2,198,0],[174,6,198,6,"Signals"],[174,13,198,13],[174,16,198,16],[175,4,199,2,"DELAY"],[175,9,199,7],[175,11,199,9],[175,18,199,16],[176,4,200,2,"RESPONDER_GRANT"],[176,19,200,17],[176,21,200,19],[176,38,200,36],[177,4,201,2,"RESPONDER_RELEASE"],[177,21,201,19],[177,23,201,21],[177,42,201,40],[178,4,202,2,"RESPONDER_TERMINATED"],[178,24,202,22],[178,26,202,24],[178,48,202,46],[179,4,203,2,"ENTER_PRESS_RECT"],[179,20,203,18],[179,22,203,20],[179,40,203,38],[180,4,204,2,"LEAVE_PRESS_RECT"],[180,20,204,18],[180,22,204,20],[180,40,204,38],[181,4,205,2,"LONG_PRESS_DETECTED"],[181,23,205,21],[181,25,205,23],[182,2,206,0],[182,3,206,1],[183,2,217,0],[184,0,218,0],[185,0,219,0],[186,2,220,0],[186,6,220,6,"Transitions"],[186,17,220,17],[186,20,220,20],[187,4,221,2,"NOT_RESPONDER"],[187,17,221,15],[187,19,221,17],[188,6,222,4,"DELAY"],[188,11,222,9],[188,13,222,11,"States"],[188,19,222,17],[188,20,222,18,"ERROR"],[188,25,222,23],[189,6,223,4,"RESPONDER_GRANT"],[189,21,223,19],[189,23,223,21,"States"],[189,29,223,27],[189,30,223,28,"RESPONDER_INACTIVE_PRESS_IN"],[189,57,223,55],[190,6,224,4,"RESPONDER_RELEASE"],[190,23,224,21],[190,25,224,23,"States"],[190,31,224,29],[190,32,224,30,"ERROR"],[190,37,224,35],[191,6,225,4,"RESPONDER_TERMINATED"],[191,26,225,24],[191,28,225,26,"States"],[191,34,225,32],[191,35,225,33,"ERROR"],[191,40,225,38],[192,6,226,4,"ENTER_PRESS_RECT"],[192,22,226,20],[192,24,226,22,"States"],[192,30,226,28],[192,31,226,29,"ERROR"],[192,36,226,34],[193,6,227,4,"LEAVE_PRESS_RECT"],[193,22,227,20],[193,24,227,22,"States"],[193,30,227,28],[193,31,227,29,"ERROR"],[193,36,227,34],[194,6,228,4,"LONG_PRESS_DETECTED"],[194,25,228,23],[194,27,228,25,"States"],[194,33,228,31],[194,34,228,32,"ERROR"],[195,4,229,2],[195,5,229,3],[196,4,230,2,"RESPONDER_INACTIVE_PRESS_IN"],[196,31,230,29],[196,33,230,31],[197,6,231,4,"DELAY"],[197,11,231,9],[197,13,231,11,"States"],[197,19,231,17],[197,20,231,18,"RESPONDER_ACTIVE_PRESS_IN"],[197,45,231,43],[198,6,232,4,"RESPONDER_GRANT"],[198,21,232,19],[198,23,232,21,"States"],[198,29,232,27],[198,30,232,28,"ERROR"],[198,35,232,33],[199,6,233,4,"RESPONDER_RELEASE"],[199,23,233,21],[199,25,233,23,"States"],[199,31,233,29],[199,32,233,30,"NOT_RESPONDER"],[199,45,233,43],[200,6,234,4,"RESPONDER_TERMINATED"],[200,26,234,24],[200,28,234,26,"States"],[200,34,234,32],[200,35,234,33,"NOT_RESPONDER"],[200,48,234,46],[201,6,235,4,"ENTER_PRESS_RECT"],[201,22,235,20],[201,24,235,22,"States"],[201,30,235,28],[201,31,235,29,"RESPONDER_INACTIVE_PRESS_IN"],[201,58,235,56],[202,6,236,4,"LEAVE_PRESS_RECT"],[202,22,236,20],[202,24,236,22,"States"],[202,30,236,28],[202,31,236,29,"RESPONDER_INACTIVE_PRESS_OUT"],[202,59,236,57],[203,6,237,4,"LONG_PRESS_DETECTED"],[203,25,237,23],[203,27,237,25,"States"],[203,33,237,31],[203,34,237,32,"ERROR"],[204,4,238,2],[204,5,238,3],[205,4,239,2,"RESPONDER_INACTIVE_PRESS_OUT"],[205,32,239,30],[205,34,239,32],[206,6,240,4,"DELAY"],[206,11,240,9],[206,13,240,11,"States"],[206,19,240,17],[206,20,240,18,"RESPONDER_ACTIVE_PRESS_OUT"],[206,46,240,44],[207,6,241,4,"RESPONDER_GRANT"],[207,21,241,19],[207,23,241,21,"States"],[207,29,241,27],[207,30,241,28,"ERROR"],[207,35,241,33],[208,6,242,4,"RESPONDER_RELEASE"],[208,23,242,21],[208,25,242,23,"States"],[208,31,242,29],[208,32,242,30,"NOT_RESPONDER"],[208,45,242,43],[209,6,243,4,"RESPONDER_TERMINATED"],[209,26,243,24],[209,28,243,26,"States"],[209,34,243,32],[209,35,243,33,"NOT_RESPONDER"],[209,48,243,46],[210,6,244,4,"ENTER_PRESS_RECT"],[210,22,244,20],[210,24,244,22,"States"],[210,30,244,28],[210,31,244,29,"RESPONDER_INACTIVE_PRESS_IN"],[210,58,244,56],[211,6,245,4,"LEAVE_PRESS_RECT"],[211,22,245,20],[211,24,245,22,"States"],[211,30,245,28],[211,31,245,29,"RESPONDER_INACTIVE_PRESS_OUT"],[211,59,245,57],[212,6,246,4,"LONG_PRESS_DETECTED"],[212,25,246,23],[212,27,246,25,"States"],[212,33,246,31],[212,34,246,32,"ERROR"],[213,4,247,2],[213,5,247,3],[214,4,248,2,"RESPONDER_ACTIVE_PRESS_IN"],[214,29,248,27],[214,31,248,29],[215,6,249,4,"DELAY"],[215,11,249,9],[215,13,249,11,"States"],[215,19,249,17],[215,20,249,18,"ERROR"],[215,25,249,23],[216,6,250,4,"RESPONDER_GRANT"],[216,21,250,19],[216,23,250,21,"States"],[216,29,250,27],[216,30,250,28,"ERROR"],[216,35,250,33],[217,6,251,4,"RESPONDER_RELEASE"],[217,23,251,21],[217,25,251,23,"States"],[217,31,251,29],[217,32,251,30,"NOT_RESPONDER"],[217,45,251,43],[218,6,252,4,"RESPONDER_TERMINATED"],[218,26,252,24],[218,28,252,26,"States"],[218,34,252,32],[218,35,252,33,"NOT_RESPONDER"],[218,48,252,46],[219,6,253,4,"ENTER_PRESS_RECT"],[219,22,253,20],[219,24,253,22,"States"],[219,30,253,28],[219,31,253,29,"RESPONDER_ACTIVE_PRESS_IN"],[219,56,253,54],[220,6,254,4,"LEAVE_PRESS_RECT"],[220,22,254,20],[220,24,254,22,"States"],[220,30,254,28],[220,31,254,29,"RESPONDER_ACTIVE_PRESS_OUT"],[220,57,254,55],[221,6,255,4,"LONG_PRESS_DETECTED"],[221,25,255,23],[221,27,255,25,"States"],[221,33,255,31],[221,34,255,32,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[222,4,256,2],[222,5,256,3],[223,4,257,2,"RESPONDER_ACTIVE_PRESS_OUT"],[223,30,257,28],[223,32,257,30],[224,6,258,4,"DELAY"],[224,11,258,9],[224,13,258,11,"States"],[224,19,258,17],[224,20,258,18,"ERROR"],[224,25,258,23],[225,6,259,4,"RESPONDER_GRANT"],[225,21,259,19],[225,23,259,21,"States"],[225,29,259,27],[225,30,259,28,"ERROR"],[225,35,259,33],[226,6,260,4,"RESPONDER_RELEASE"],[226,23,260,21],[226,25,260,23,"States"],[226,31,260,29],[226,32,260,30,"NOT_RESPONDER"],[226,45,260,43],[227,6,261,4,"RESPONDER_TERMINATED"],[227,26,261,24],[227,28,261,26,"States"],[227,34,261,32],[227,35,261,33,"NOT_RESPONDER"],[227,48,261,46],[228,6,262,4,"ENTER_PRESS_RECT"],[228,22,262,20],[228,24,262,22,"States"],[228,30,262,28],[228,31,262,29,"RESPONDER_ACTIVE_PRESS_IN"],[228,56,262,54],[229,6,263,4,"LEAVE_PRESS_RECT"],[229,22,263,20],[229,24,263,22,"States"],[229,30,263,28],[229,31,263,29,"RESPONDER_ACTIVE_PRESS_OUT"],[229,57,263,55],[230,6,264,4,"LONG_PRESS_DETECTED"],[230,25,264,23],[230,27,264,25,"States"],[230,33,264,31],[230,34,264,32,"ERROR"],[231,4,265,2],[231,5,265,3],[232,4,266,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[232,34,266,32],[232,36,266,34],[233,6,267,4,"DELAY"],[233,11,267,9],[233,13,267,11,"States"],[233,19,267,17],[233,20,267,18,"ERROR"],[233,25,267,23],[234,6,268,4,"RESPONDER_GRANT"],[234,21,268,19],[234,23,268,21,"States"],[234,29,268,27],[234,30,268,28,"ERROR"],[234,35,268,33],[235,6,269,4,"RESPONDER_RELEASE"],[235,23,269,21],[235,25,269,23,"States"],[235,31,269,29],[235,32,269,30,"NOT_RESPONDER"],[235,45,269,43],[236,6,270,4,"RESPONDER_TERMINATED"],[236,26,270,24],[236,28,270,26,"States"],[236,34,270,32],[236,35,270,33,"NOT_RESPONDER"],[236,48,270,46],[237,6,271,4,"ENTER_PRESS_RECT"],[237,22,271,20],[237,24,271,22,"States"],[237,30,271,28],[237,31,271,29,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[237,61,271,59],[238,6,272,4,"LEAVE_PRESS_RECT"],[238,22,272,20],[238,24,272,22,"States"],[238,30,272,28],[238,31,272,29,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[238,62,272,60],[239,6,273,4,"LONG_PRESS_DETECTED"],[239,25,273,23],[239,27,273,25,"States"],[239,33,273,31],[239,34,273,32,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[240,4,274,2],[240,5,274,3],[241,4,275,2,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[241,35,275,33],[241,37,275,35],[242,6,276,4,"DELAY"],[242,11,276,9],[242,13,276,11,"States"],[242,19,276,17],[242,20,276,18,"ERROR"],[242,25,276,23],[243,6,277,4,"RESPONDER_GRANT"],[243,21,277,19],[243,23,277,21,"States"],[243,29,277,27],[243,30,277,28,"ERROR"],[243,35,277,33],[244,6,278,4,"RESPONDER_RELEASE"],[244,23,278,21],[244,25,278,23,"States"],[244,31,278,29],[244,32,278,30,"NOT_RESPONDER"],[244,45,278,43],[245,6,279,4,"RESPONDER_TERMINATED"],[245,26,279,24],[245,28,279,26,"States"],[245,34,279,32],[245,35,279,33,"NOT_RESPONDER"],[245,48,279,46],[246,6,280,4,"ENTER_PRESS_RECT"],[246,22,280,20],[246,24,280,22,"States"],[246,30,280,28],[246,31,280,29,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[246,61,280,59],[247,6,281,4,"LEAVE_PRESS_RECT"],[247,22,281,20],[247,24,281,22,"States"],[247,30,281,28],[247,31,281,29,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[247,62,281,60],[248,6,282,4,"LONG_PRESS_DETECTED"],[248,25,282,23],[248,27,282,25,"States"],[248,33,282,31],[248,34,282,32,"ERROR"],[249,4,283,2],[249,5,283,3],[250,4,284,2,"error"],[250,9,284,7],[250,11,284,9],[251,6,285,4,"DELAY"],[251,11,285,9],[251,13,285,11,"States"],[251,19,285,17],[251,20,285,18,"NOT_RESPONDER"],[251,33,285,31],[252,6,286,4,"RESPONDER_GRANT"],[252,21,286,19],[252,23,286,21,"States"],[252,29,286,27],[252,30,286,28,"RESPONDER_INACTIVE_PRESS_IN"],[252,57,286,55],[253,6,287,4,"RESPONDER_RELEASE"],[253,23,287,21],[253,25,287,23,"States"],[253,31,287,29],[253,32,287,30,"NOT_RESPONDER"],[253,45,287,43],[254,6,288,4,"RESPONDER_TERMINATED"],[254,26,288,24],[254,28,288,26,"States"],[254,34,288,32],[254,35,288,33,"NOT_RESPONDER"],[254,48,288,46],[255,6,289,4,"ENTER_PRESS_RECT"],[255,22,289,20],[255,24,289,22,"States"],[255,30,289,28],[255,31,289,29,"NOT_RESPONDER"],[255,44,289,42],[256,6,290,4,"LEAVE_PRESS_RECT"],[256,22,290,20],[256,24,290,22,"States"],[256,30,290,28],[256,31,290,29,"NOT_RESPONDER"],[256,44,290,42],[257,6,291,4,"LONG_PRESS_DETECTED"],[257,25,291,23],[257,27,291,25,"States"],[257,33,291,31],[257,34,291,32,"NOT_RESPONDER"],[258,4,292,2],[259,2,293,0],[259,3,293,1],[261,2,295,0],[262,2,296,0],[263,2,297,0],[264,2,298,0],[264,6,298,6,"HIGHLIGHT_DELAY_MS"],[264,24,298,24],[264,27,298,27],[264,30,298,30],[265,2,300,0],[265,6,300,6,"PRESS_EXPAND_PX"],[265,21,300,21],[265,24,300,24],[265,26,300,26],[266,2,302,0],[266,6,302,6,"LONG_PRESS_THRESHOLD"],[266,26,302,26],[266,29,302,29],[266,32,302,32],[267,2,304,0],[267,6,304,6,"LONG_PRESS_DELAY_MS"],[267,25,304,25],[267,28,304,28,"LONG_PRESS_THRESHOLD"],[267,48,304,48],[267,51,304,51,"HIGHLIGHT_DELAY_MS"],[267,69,304,69],[268,2,306,0],[268,6,306,6,"LONG_PRESS_ALLOWED_MOVEMENT"],[268,33,306,33],[268,36,306,36],[268,38,306,38],[270,2,308,0],[272,2,310,0],[273,0,311,0],[274,0,312,0],[275,0,313,0],[276,0,314,0],[277,0,315,0],[278,0,316,0],[279,0,317,0],[280,0,318,0],[281,0,319,0],[282,0,320,0],[283,0,321,0],[284,0,322,0],[285,0,323,0],[286,0,324,0],[287,0,325,0],[288,0,326,0],[289,0,327,0],[290,0,328,0],[291,0,329,0],[292,0,330,0],[293,0,331,0],[294,0,332,0],[295,0,333,0],[296,0,334,0],[297,0,335,0],[298,0,336,0],[299,0,337,0],[300,0,338,0],[301,0,339,0],[302,0,340,0],[303,0,341,0],[304,0,342,0],[305,0,343,0],[306,0,344,0],[307,0,345,0],[308,0,346,0],[309,0,347,0],[310,0,348,0],[311,0,349,0],[312,0,350,0],[313,0,351,0],[314,0,352,0],[315,0,353,0],[316,0,354,0],[317,0,355,0],[318,0,356,0],[319,0,357,0],[320,0,358,0],[321,0,359,0],[322,0,360,0],[323,0,361,0],[324,0,362,0],[325,0,363,0],[326,0,364,0],[327,0,365,0],[328,0,366,0],[329,0,367,0],[330,0,368,0],[331,0,369,0],[332,0,370,0],[333,0,371,0],[334,0,372,0],[335,0,373,0],[336,2,374,0],[336,6,374,6,"TouchableMixin"],[336,20,374,20],[336,23,374,23],[337,4,375,2,"componentDidMount"],[337,21,375,19],[337,23,375,21],[337,32,375,21,"componentDidMount"],[337,50,375,21],[337,52,375,33],[338,6,376,4],[338,10,376,8],[338,11,376,9,"Platform"],[338,28,376,17],[338,29,376,18,"isTV"],[338,33,376,22],[338,35,376,24],[339,8,377,6],[340,6,378,4],[341,4,379,2],[341,5,379,3],[342,4,381,2],[343,0,382,0],[344,0,383,0],[345,4,384,2],[346,0,385,0],[347,4,386,2,"componentWillUnmount"],[347,24,386,22],[347,26,386,24],[347,35,386,24,"componentWillUnmount"],[347,56,386,24],[347,58,386,36],[348,6,387,4],[348,10,387,8],[348,11,387,9,"touchableDelayTimeout"],[348,32,387,30],[348,36,387,34,"clearTimeout"],[348,48,387,46],[348,49,387,47],[348,53,387,51],[348,54,387,52,"touchableDelayTimeout"],[348,75,387,73],[348,76,387,74],[349,6,388,4],[349,10,388,8],[349,11,388,9,"longPressDelayTimeout"],[349,32,388,30],[349,36,388,34,"clearTimeout"],[349,48,388,46],[349,49,388,47],[349,53,388,51],[349,54,388,52,"longPressDelayTimeout"],[349,75,388,73],[349,76,388,74],[350,6,389,4],[350,10,389,8],[350,11,389,9,"pressOutDelayTimeout"],[350,31,389,29],[350,35,389,33,"clearTimeout"],[350,47,389,45],[350,48,389,46],[350,52,389,50],[350,53,389,51,"pressOutDelayTimeout"],[350,73,389,71],[350,74,389,72],[351,4,390,2],[351,5,390,3],[352,4,392,2],[353,0,393,0],[354,0,394,0],[355,0,395,0],[356,0,396,0],[357,0,397,0],[358,0,398,0],[359,4,399,2,"touchableGetInitialState"],[359,28,399,26],[359,30,399,28],[359,39,399,28,"touchableGetInitialState"],[359,64,399,28],[359,66,404,4],[360,6,405,4],[360,13,405,11],[361,8,406,6,"touchable"],[361,17,406,15],[361,19,406,17],[362,10,406,18,"touchState"],[362,20,406,28],[362,22,406,30,"undefined"],[362,31,406,39],[363,10,406,41,"responderID"],[363,21,406,52],[363,23,406,54],[364,8,406,58],[365,6,407,4],[365,7,407,5],[366,4,408,2],[366,5,408,3],[367,4,410,2],[368,4,411,2],[369,0,412,0],[370,0,413,0],[371,4,414,2],[372,0,415,0],[373,4,416,2,"touchableHandleResponderTerminationRequest"],[373,46,416,44],[373,48,416,46],[373,57,416,46,"touchableHandleResponderTerminationRequest"],[373,100,416,46],[373,102,416,63],[374,6,417,4],[374,13,417,11],[374,14,417,12],[374,18,417,16],[374,19,417,17,"props"],[374,24,417,22],[374,25,417,23,"rejectResponderTermination"],[374,51,417,49],[375,4,418,2],[375,5,418,3],[376,4,420,2],[377,0,421,0],[378,0,422,0],[379,4,423,2],[380,0,424,0],[381,4,425,2,"touchableHandleStartShouldSetResponder"],[381,42,425,40],[381,44,425,42],[381,53,425,42,"touchableHandleStartShouldSetResponder"],[381,92,425,42],[381,94,425,59],[382,6,426,4],[382,13,426,11],[382,14,426,12],[382,18,426,16],[382,19,426,17,"props"],[382,24,426,22],[382,25,426,23,"disabled"],[382,33,426,31],[383,4,427,2],[383,5,427,3],[384,4,429,2],[385,0,430,0],[386,0,431,0],[387,4,432,2,"touchableLongPressCancelsPress"],[387,34,432,32],[387,36,432,34],[387,45,432,34,"touchableLongPressCancelsPress"],[387,76,432,34],[387,78,432,55],[388,6,433,4],[388,13,433,11],[388,17,433,15],[389,4,434,2],[389,5,434,3],[390,4,436,2],[391,0,437,0],[392,0,438,0],[393,0,439,0],[394,0,440,0],[395,4,441,2],[396,0,442,0],[397,4,443,2,"touchableHandleResponderGrant"],[397,33,443,31],[397,35,443,33],[397,44,443,33,"touchableHandleResponderGrant"],[397,74,443,43,"e"],[397,75,443,56],[397,77,443,58],[398,6,444,4],[398,10,444,10,"dispatchID"],[398,20,444,20],[398,23,444,23,"e"],[398,24,444,24],[398,25,444,25,"currentTarget"],[398,38,444,38],[399,6,445,4],[400,6,446,4],[401,6,447,4],[402,6,448,4,"e"],[402,7,448,5],[402,8,448,6,"persist"],[402,15,448,13],[402,16,448,14],[402,17,448,15],[403,6,450,4],[403,10,450,8],[403,11,450,9,"pressOutDelayTimeout"],[403,31,450,29],[403,35,450,33,"clearTimeout"],[403,47,450,45],[403,48,450,46],[403,52,450,50],[403,53,450,51,"pressOutDelayTimeout"],[403,73,450,71],[403,74,450,72],[404,6,451,4],[404,10,451,8],[404,11,451,9,"pressOutDelayTimeout"],[404,31,451,29],[404,34,451,32],[404,38,451,36],[405,6,453,4],[405,10,453,8],[405,11,453,9,"state"],[405,16,453,14],[405,17,453,15,"touchable"],[405,26,453,24],[405,27,453,25,"touchState"],[405,37,453,35],[405,40,453,38,"States"],[405,46,453,44],[405,47,453,45,"NOT_RESPONDER"],[405,60,453,58],[406,6,454,4],[406,10,454,8],[406,11,454,9,"state"],[406,16,454,14],[406,17,454,15,"touchable"],[406,26,454,24],[406,27,454,25,"responderID"],[406,38,454,36],[406,41,454,39,"dispatchID"],[406,51,454,49],[407,6,455,4],[407,10,455,8],[407,11,455,9,"_receiveSignal"],[407,25,455,23],[407,26,455,24,"Signals"],[407,33,455,31],[407,34,455,32,"RESPONDER_GRANT"],[407,49,455,47],[407,51,455,49,"e"],[407,52,455,50],[407,53,455,51],[408,6,456,4],[408,10,456,8,"delayMS"],[408,17,456,15],[408,20,457,6],[408,24,457,10],[408,25,457,11,"touchableGetHighlightDelayMS"],[408,53,457,39],[408,58,457,44,"undefined"],[408,67,457,53],[408,70,458,10,"Math"],[408,74,458,14],[408,75,458,15,"max"],[408,78,458,18],[408,79,458,19],[408,83,458,23],[408,84,458,24,"touchableGetHighlightDelayMS"],[408,112,458,52],[408,113,458,53],[408,114,458,54],[408,116,458,56],[408,117,458,57],[408,118,458,58],[408,121,459,10,"HIGHLIGHT_DELAY_MS"],[408,139,459,28],[409,6,460,4,"delayMS"],[409,13,460,11],[409,16,460,14,"isNaN"],[409,21,460,19],[409,22,460,20,"delayMS"],[409,29,460,27],[409,30,460,28],[409,33,460,31,"HIGHLIGHT_DELAY_MS"],[409,51,460,49],[409,54,460,52,"delayMS"],[409,61,460,59],[410,6,461,4],[410,10,461,8,"delayMS"],[410,17,461,15],[410,22,461,20],[410,23,461,21],[410,25,461,23],[411,8,462,6],[411,12,462,10],[411,13,462,11,"touchableDelayTimeout"],[411,34,462,32],[411,37,462,35,"setTimeout"],[411,47,462,45],[411,48,463,8],[411,52,463,12],[411,53,463,13,"_handleDelay"],[411,65,463,25],[411,66,463,26,"bind"],[411,70,463,30],[411,71,463,31],[411,75,463,35],[411,77,463,37,"e"],[411,78,463,38],[411,79,463,39],[411,81,464,8,"delayMS"],[411,88,465,6],[411,89,465,7],[412,6,466,4],[412,7,466,5],[412,13,466,11],[413,8,467,6],[413,12,467,10],[413,13,467,11,"_handleDelay"],[413,25,467,23],[413,26,467,24,"e"],[413,27,467,25],[413,28,467,26],[414,6,468,4],[415,6,470,4],[415,10,470,8,"longDelayMS"],[415,21,470,19],[415,24,471,6],[415,28,471,10],[415,29,471,11,"touchableGetLongPressDelayMS"],[415,57,471,39],[415,62,471,44,"undefined"],[415,71,471,53],[415,74,472,10,"Math"],[415,78,472,14],[415,79,472,15,"max"],[415,82,472,18],[415,83,472,19],[415,87,472,23],[415,88,472,24,"touchableGetLongPressDelayMS"],[415,116,472,52],[415,117,472,53],[415,118,472,54],[415,120,472,56],[415,122,472,58],[415,123,472,59],[415,126,473,10,"LONG_PRESS_DELAY_MS"],[415,145,473,29],[416,6,474,4,"longDelayMS"],[416,17,474,15],[416,20,474,18,"isNaN"],[416,25,474,23],[416,26,474,24,"longDelayMS"],[416,37,474,35],[416,38,474,36],[416,41,474,39,"LONG_PRESS_DELAY_MS"],[416,60,474,58],[416,63,474,61,"longDelayMS"],[416,74,474,72],[417,6,475,4],[417,10,475,8],[417,11,475,9,"longPressDelayTimeout"],[417,32,475,30],[417,35,475,33,"setTimeout"],[417,45,475,43],[417,46,476,6],[417,50,476,10],[417,51,476,11,"_handleLongDelay"],[417,67,476,27],[417,68,476,28,"bind"],[417,72,476,32],[417,73,476,33],[417,77,476,37],[417,79,476,39,"e"],[417,80,476,40],[417,81,476,41],[417,83,477,6,"longDelayMS"],[417,94,477,17],[417,97,477,20,"delayMS"],[417,104,478,4],[417,105,478,5],[418,4,479,2],[418,5,479,3],[419,4,481,2],[420,0,482,0],[421,0,483,0],[422,4,484,2],[423,0,485,0],[424,4,486,2,"touchableHandleResponderRelease"],[424,35,486,33],[424,37,486,35],[424,46,486,35,"touchableHandleResponderRelease"],[424,78,486,45,"e"],[424,79,486,58],[424,81,486,60],[425,6,487,4],[425,10,487,8],[425,11,487,9,"pressInLocation"],[425,26,487,24],[425,29,487,27],[425,33,487,31],[426,6,488,4],[426,10,488,8],[426,11,488,9,"_receiveSignal"],[426,25,488,23],[426,26,488,24,"Signals"],[426,33,488,31],[426,34,488,32,"RESPONDER_RELEASE"],[426,51,488,49],[426,53,488,51,"e"],[426,54,488,52],[426,55,488,53],[427,4,489,2],[427,5,489,3],[428,4,491,2],[429,0,492,0],[430,0,493,0],[431,4,494,2],[432,0,495,0],[433,4,496,2,"touchableHandleResponderTerminate"],[433,37,496,35],[433,39,496,37],[433,48,496,37,"touchableHandleResponderTerminate"],[433,82,496,47,"e"],[433,83,496,60],[433,85,496,62],[434,6,497,4],[434,10,497,8],[434,11,497,9,"pressInLocation"],[434,26,497,24],[434,29,497,27],[434,33,497,31],[435,6,498,4],[435,10,498,8],[435,11,498,9,"_receiveSignal"],[435,25,498,23],[435,26,498,24,"Signals"],[435,33,498,31],[435,34,498,32,"RESPONDER_TERMINATED"],[435,54,498,52],[435,56,498,54,"e"],[435,57,498,55],[435,58,498,56],[436,4,499,2],[436,5,499,3],[437,4,501,2],[438,0,502,0],[439,0,503,0],[440,4,504,2],[441,0,505,0],[442,4,506,2,"touchableHandleResponderMove"],[442,32,506,30],[442,34,506,32],[442,43,506,32,"touchableHandleResponderMove"],[442,72,506,42,"e"],[442,73,506,55],[442,75,506,57],[443,6,507,4],[444,6,508,4],[444,10,508,8],[444,11,508,9],[444,15,508,13],[444,16,508,14,"state"],[444,21,508,19],[444,22,508,20,"touchable"],[444,31,508,29],[444,32,508,30,"positionOnActivate"],[444,50,508,48],[444,52,508,50],[445,8,509,6],[446,6,510,4],[447,6,512,4],[447,10,512,10,"positionOnActivate"],[447,28,512,28],[447,31,512,31],[447,35,512,35],[447,36,512,36,"state"],[447,41,512,41],[447,42,512,42,"touchable"],[447,51,512,51],[447,52,512,52,"positionOnActivate"],[447,70,512,70],[448,6,513,4],[448,10,513,10,"dimensionsOnActivate"],[448,30,513,30],[448,33,513,33],[448,37,513,37],[448,38,513,38,"state"],[448,43,513,43],[448,44,513,44,"touchable"],[448,53,513,53],[448,54,513,54,"dimensionsOnActivate"],[448,74,513,74],[449,6,514,4],[449,10,514,10,"pressRectOffset"],[449,25,514,25],[449,28,514,28],[449,32,514,32],[449,33,514,33,"touchableGetPressRectOffset"],[449,60,514,60],[449,63,515,8],[449,67,515,12],[449,68,515,13,"touchableGetPressRectOffset"],[449,95,515,40],[449,96,515,41],[449,97,515,42],[449,100,516,8],[450,8,517,10,"left"],[450,12,517,14],[450,14,517,16,"PRESS_EXPAND_PX"],[450,29,517,31],[451,8,518,10,"right"],[451,13,518,15],[451,15,518,17,"PRESS_EXPAND_PX"],[451,30,518,32],[452,8,519,10,"top"],[452,11,519,13],[452,13,519,15,"PRESS_EXPAND_PX"],[452,28,519,30],[453,8,520,10,"bottom"],[453,14,520,16],[453,16,520,18,"PRESS_EXPAND_PX"],[454,6,521,8],[454,7,521,9],[455,6,523,4],[455,10,523,8,"pressExpandLeft"],[455,25,523,23],[455,28,523,26,"pressRectOffset"],[455,43,523,41],[455,44,523,42,"left"],[455,48,523,46],[456,6,524,4],[456,10,524,8,"pressExpandTop"],[456,24,524,22],[456,27,524,25,"pressRectOffset"],[456,42,524,40],[456,43,524,41,"top"],[456,46,524,44],[457,6,525,4],[457,10,525,8,"pressExpandRight"],[457,26,525,24],[457,29,525,27,"pressRectOffset"],[457,44,525,42],[457,45,525,43,"right"],[457,50,525,48],[458,6,526,4],[458,10,526,8,"pressExpandBottom"],[458,27,526,25],[458,30,526,28,"pressRectOffset"],[458,45,526,43],[458,46,526,44,"bottom"],[458,52,526,50],[459,6,528,4],[459,10,528,10,"hitSlop"],[459,17,528,17],[459,20,528,20],[459,24,528,24],[459,25,528,25,"touchableGetHitSlop"],[459,44,528,44],[459,47,529,8],[459,51,529,12],[459,52,529,13,"touchableGetHitSlop"],[459,71,529,32],[459,72,529,33],[459,73,529,34],[459,76,530,8],[459,80,530,12],[460,6,532,4],[460,10,532,8,"hitSlop"],[460,17,532,15],[460,19,532,17],[461,8,533,6,"pressExpandLeft"],[461,23,533,21],[461,27,533,25,"hitSlop"],[461,34,533,32],[461,35,533,33,"left"],[461,39,533,37],[461,43,533,41],[461,44,533,42],[462,8,534,6,"pressExpandTop"],[462,22,534,20],[462,26,534,24,"hitSlop"],[462,33,534,31],[462,34,534,32,"top"],[462,37,534,35],[462,41,534,39],[462,42,534,40],[463,8,535,6,"pressExpandRight"],[463,24,535,22],[463,28,535,26,"hitSlop"],[463,35,535,33],[463,36,535,34,"right"],[463,41,535,39],[463,45,535,43],[463,46,535,44],[464,8,536,6,"pressExpandBottom"],[464,25,536,23],[464,29,536,27,"hitSlop"],[464,36,536,34],[464,37,536,35,"bottom"],[464,43,536,41],[464,47,536,45],[464,48,536,46],[465,6,537,4],[466,6,539,4],[466,10,539,10,"touch"],[466,15,539,15],[466,18,539,18,"extractSingleTouch"],[466,36,539,36],[466,37,539,37,"e"],[466,38,539,38],[466,39,539,39,"nativeEvent"],[466,50,539,50],[466,51,539,51],[467,6,540,4],[467,10,540,10,"pageX"],[467,15,540,15],[467,18,540,18,"touch"],[467,23,540,23],[467,27,540,27,"touch"],[467,32,540,32],[467,33,540,33,"pageX"],[467,38,540,38],[468,6,541,4],[468,10,541,10,"pageY"],[468,15,541,15],[468,18,541,18,"touch"],[468,23,541,23],[468,27,541,27,"touch"],[468,32,541,32],[468,33,541,33,"pageY"],[468,38,541,38],[469,6,543,4],[469,10,543,8],[469,14,543,12],[469,15,543,13,"pressInLocation"],[469,30,543,28],[469,32,543,30],[470,8,544,6],[470,12,544,12,"movedDistance"],[470,25,544,25],[470,28,544,28],[470,32,544,32],[470,33,544,33,"_getDistanceBetweenPoints"],[470,58,544,58],[470,59,545,8,"pageX"],[470,64,545,13],[470,66,546,8,"pageY"],[470,71,546,13],[470,73,547,8],[470,77,547,12],[470,78,547,13,"pressInLocation"],[470,93,547,28],[470,94,547,29,"pageX"],[470,99,547,34],[470,101,548,8],[470,105,548,12],[470,106,548,13,"pressInLocation"],[470,121,548,28],[470,122,548,29,"pageY"],[470,127,549,6],[470,128,549,7],[471,8,550,6],[471,12,550,10,"movedDistance"],[471,25,550,23],[471,28,550,26,"LONG_PRESS_ALLOWED_MOVEMENT"],[471,55,550,53],[471,57,550,55],[472,10,551,8],[472,14,551,12],[472,15,551,13,"_cancelLongPressDelayTimeout"],[472,43,551,41],[472,44,551,42],[472,45,551,43],[473,8,552,6],[474,6,553,4],[475,6,555,4],[475,10,555,10,"isTouchWithinActive"],[475,29,555,29],[475,32,556,6,"pageX"],[475,37,556,11],[475,40,556,14,"positionOnActivate"],[475,58,556,32],[475,59,556,33,"left"],[475,63,556,37],[475,66,556,40,"pressExpandLeft"],[475,81,556,55],[475,85,557,6,"pageY"],[475,90,557,11],[475,93,557,14,"positionOnActivate"],[475,111,557,32],[475,112,557,33,"top"],[475,115,557,36],[475,118,557,39,"pressExpandTop"],[475,132,557,53],[475,136,558,6,"pageX"],[475,141,558,11],[475,144,559,8,"positionOnActivate"],[475,162,559,26],[475,163,559,27,"left"],[475,167,559,31],[475,170,560,10,"dimensionsOnActivate"],[475,190,560,30],[475,191,560,31,"width"],[475,196,560,36],[475,199,561,10,"pressExpandRight"],[475,215,561,26],[475,219,562,6,"pageY"],[475,224,562,11],[475,227,563,8,"positionOnActivate"],[475,245,563,26],[475,246,563,27,"top"],[475,249,563,30],[475,252,564,10,"dimensionsOnActivate"],[475,272,564,30],[475,273,564,31,"height"],[475,279,564,37],[475,282,565,10,"pressExpandBottom"],[475,299,565,27],[476,6,566,4],[476,10,566,8,"isTouchWithinActive"],[476,29,566,27],[476,31,566,29],[477,8,567,6],[477,12,567,12,"prevState"],[477,21,567,21],[477,24,567,24],[477,28,567,28],[477,29,567,29,"state"],[477,34,567,34],[477,35,567,35,"touchable"],[477,44,567,44],[477,45,567,45,"touchState"],[477,55,567,55],[478,8,568,6],[478,12,568,10],[478,13,568,11,"_receiveSignal"],[478,27,568,25],[478,28,568,26,"Signals"],[478,35,568,33],[478,36,568,34,"ENTER_PRESS_RECT"],[478,52,568,50],[478,54,568,52,"e"],[478,55,568,53],[478,56,568,54],[479,8,569,6],[479,12,569,12,"curState"],[479,20,569,20],[479,23,569,23],[479,27,569,27],[479,28,569,28,"state"],[479,33,569,33],[479,34,569,34,"touchable"],[479,43,569,43],[479,44,569,44,"touchState"],[479,54,569,54],[480,8,570,6],[480,12,571,8,"curState"],[480,20,571,16],[480,25,571,21,"States"],[480,31,571,27],[480,32,571,28,"RESPONDER_INACTIVE_PRESS_IN"],[480,59,571,55],[480,63,572,8,"prevState"],[480,72,572,17],[480,77,572,22,"States"],[480,83,572,28],[480,84,572,29,"RESPONDER_INACTIVE_PRESS_IN"],[480,111,572,56],[480,113,573,8],[481,10,574,8],[482,10,575,8],[482,14,575,12],[482,15,575,13,"_cancelLongPressDelayTimeout"],[482,43,575,41],[482,44,575,42],[482,45,575,43],[483,8,576,6],[484,6,577,4],[484,7,577,5],[484,13,577,11],[485,8,578,6],[485,12,578,10],[485,13,578,11,"_cancelLongPressDelayTimeout"],[485,41,578,39],[485,42,578,40],[485,43,578,41],[486,8,579,6],[486,12,579,10],[486,13,579,11,"_receiveSignal"],[486,27,579,25],[486,28,579,26,"Signals"],[486,35,579,33],[486,36,579,34,"LEAVE_PRESS_RECT"],[486,52,579,50],[486,54,579,52,"e"],[486,55,579,53],[486,56,579,54],[487,6,580,4],[488,4,581,2],[488,5,581,3],[489,4,583,2],[490,0,584,0],[491,0,585,0],[492,0,586,0],[493,0,587,0],[494,0,588,0],[495,0,589,0],[496,0,590,0],[497,4,591,2],[498,0,592,0],[499,4,593,2,"touchableHandleFocus"],[499,24,593,22],[499,26,593,24],[499,35,593,24,"touchableHandleFocus"],[499,56,593,34,"e"],[499,57,593,42],[499,59,593,44],[500,6,594,4],[500,10,594,8],[500,11,594,9,"props"],[500,16,594,14],[500,17,594,15,"onFocus"],[500,24,594,22],[500,28,594,26],[500,32,594,30],[500,33,594,31,"props"],[500,38,594,36],[500,39,594,37,"onFocus"],[500,46,594,44],[500,47,594,45,"e"],[500,48,594,46],[500,49,594,47],[501,4,595,2],[501,5,595,3],[502,4,597,2],[503,0,598,0],[504,0,599,0],[505,0,600,0],[506,0,601,0],[507,0,602,0],[508,0,603,0],[509,0,604,0],[510,4,605,2],[511,0,606,0],[512,4,607,2,"touchableHandleBlur"],[512,23,607,21],[512,25,607,23],[512,34,607,23,"touchableHandleBlur"],[512,54,607,33,"e"],[512,55,607,41],[512,57,607,43],[513,6,608,4],[513,10,608,8],[513,11,608,9,"props"],[513,16,608,14],[513,17,608,15,"onBlur"],[513,23,608,21],[513,27,608,25],[513,31,608,29],[513,32,608,30,"props"],[513,37,608,35],[513,38,608,36,"onBlur"],[513,44,608,42],[513,45,608,43,"e"],[513,46,608,44],[513,47,608,45],[514,4,609,2],[514,5,609,3],[515,4,611,2],[517,4,613,2],[518,0,614,0],[519,0,615,0],[520,0,616,0],[521,0,617,0],[522,0,618,0],[523,0,619,0],[524,0,620,0],[526,4,622,2],[527,0,623,0],[528,0,624,0],[529,0,625,0],[530,0,626,0],[531,0,627,0],[532,0,628,0],[533,0,629,0],[534,0,630,0],[535,0,631,0],[536,0,632,0],[537,0,633,0],[539,4,635,2],[540,0,636,0],[541,0,637,0],[542,0,638,0],[543,0,639,0],[544,0,640,0],[545,0,641,0],[546,0,642,0],[548,4,644,2],[549,0,645,0],[550,0,646,0],[551,0,647,0],[552,0,648,0],[553,0,649,0],[554,0,650,0],[555,0,651,0],[556,0,652,0],[557,0,653,0],[558,0,654,0],[559,0,655,0],[560,0,656,0],[562,4,658,2],[563,0,659,0],[564,0,660,0],[565,0,661,0],[566,0,662,0],[567,0,663,0],[569,4,665,2],[570,0,666,0],[571,0,667,0],[572,0,668,0],[573,0,669,0],[574,0,670,0],[575,0,671,0],[577,4,673,2],[579,4,675,2],[580,0,676,0],[581,0,677,0],[582,0,678,0],[583,0,679,0],[584,0,680,0],[585,0,681,0],[586,0,682,0],[587,0,683,0],[588,0,684,0],[589,0,685,0],[590,0,686,0],[591,4,687,2],[592,0,688,0],[593,4,689,2,"_remeasureMetricsOnActivation"],[593,33,689,31],[593,35,689,33],[593,44,689,33,"_remeasureMetricsOnActivation"],[593,74,689,33],[593,76,689,45],[594,6,690,4],[594,10,690,10,"responderID"],[594,21,690,21],[594,24,690,24],[594,28,690,28],[594,29,690,29,"state"],[594,34,690,34],[594,35,690,35,"touchable"],[594,44,690,44],[594,45,690,45,"responderID"],[594,56,690,56],[595,6,691,4],[595,10,691,8,"responderID"],[595,21,691,19],[595,25,691,23],[595,29,691,27],[595,31,691,29],[596,8,692,6],[597,6,693,4],[598,6,695,4],[598,10,695,8],[598,17,695,15,"responderID"],[598,28,695,26],[598,33,695,31],[598,41,695,39],[598,43,695,41],[599,8,696,6,"UIManager"],[599,26,696,15],[599,27,696,16,"measure"],[599,34,696,23],[599,35,696,24,"responderID"],[599,46,696,35],[599,48,696,37],[599,52,696,41],[599,53,696,42,"_handleQueryLayout"],[599,71,696,60],[599,72,696,61],[600,6,697,4],[600,7,697,5],[600,13,697,11],[601,8,698,6,"responderID"],[601,19,698,17],[601,20,698,18,"measure"],[601,27,698,25],[601,28,698,26],[601,32,698,30],[601,33,698,31,"_handleQueryLayout"],[601,51,698,49],[601,52,698,50],[602,6,699,4],[603,4,700,2],[603,5,700,3],[604,4,702,2],[605,0,703,0],[606,4,704,2,"_handleQueryLayout"],[606,22,704,20],[606,24,704,22],[606,33,704,22,"_handleQueryLayout"],[606,52,705,4,"l"],[606,53,705,13],[606,55,706,4,"t"],[606,56,706,13],[606,58,707,4,"w"],[606,59,707,13],[606,61,708,4,"h"],[606,62,708,13],[606,64,709,4,"globalX"],[606,71,709,19],[606,73,710,4,"globalY"],[606,80,710,19],[606,82,711,4],[607,6,712,4],[608,6,713,4],[608,10,713,8],[608,11,713,9,"l"],[608,12,713,10],[608,16,713,14],[608,17,713,15,"t"],[608,18,713,16],[608,22,713,20],[608,23,713,21,"w"],[608,24,713,22],[608,28,713,26],[608,29,713,27,"h"],[608,30,713,28],[608,34,713,32],[608,35,713,33,"globalX"],[608,42,713,40],[608,46,713,44],[608,47,713,45,"globalY"],[608,54,713,52],[608,56,713,54],[609,8,714,6],[610,6,715,4],[611,6,716,4],[611,10,716,8],[611,11,716,9,"state"],[611,16,716,14],[611,17,716,15,"touchable"],[611,26,716,24],[611,27,716,25,"positionOnActivate"],[611,45,716,43],[611,49,717,6,"Position"],[611,66,717,14],[611,67,717,15,"release"],[611,74,717,22],[611,75,717,23],[611,79,717,27],[611,80,717,28,"state"],[611,85,717,33],[611,86,717,34,"touchable"],[611,95,717,43],[611,96,717,44,"positionOnActivate"],[611,114,717,62],[611,115,717,63],[612,6,718,4],[612,10,718,8],[612,11,718,9,"state"],[612,16,718,14],[612,17,718,15,"touchable"],[612,26,718,24],[612,27,718,25,"dimensionsOnActivate"],[612,47,718,45],[612,51,719,6,"BoundingDimensions"],[612,78,719,24],[612,79,719,25,"release"],[612,86,719,32],[612,87,719,33],[612,91,719,37],[612,92,719,38,"state"],[612,97,719,43],[612,98,719,44,"touchable"],[612,107,719,53],[612,108,719,54,"dimensionsOnActivate"],[612,128,719,74],[612,129,719,75],[613,6,720,4],[613,10,720,8],[613,11,720,9,"state"],[613,16,720,14],[613,17,720,15,"touchable"],[613,26,720,24],[613,27,720,25,"positionOnActivate"],[613,45,720,43],[613,48,720,46,"Position"],[613,65,720,54],[613,66,720,55,"getPooled"],[613,75,720,64],[613,76,721,6,"globalX"],[613,83,721,13],[613,85,722,6,"globalY"],[613,92,723,4],[613,93,723,5],[614,6,724,4],[614,10,724,8],[614,11,724,9,"state"],[614,16,724,14],[614,17,724,15,"touchable"],[614,26,724,24],[614,27,724,25,"dimensionsOnActivate"],[614,47,724,45],[614,50,724,48,"BoundingDimensions"],[614,77,724,66],[614,78,724,67,"getPooled"],[614,87,724,76],[614,88,725,6,"w"],[614,89,725,7],[614,91,726,6,"h"],[614,92,727,4],[614,93,727,5],[615,4,728,2],[615,5,728,3],[616,4,730,2],[617,0,731,0],[618,4,732,2,"_handleDelay"],[618,16,732,14],[618,18,732,16],[618,27,732,16,"_handleDelay"],[618,40,732,26,"e"],[618,41,732,39],[618,43,732,41],[619,6,733,4],[619,10,733,8],[619,11,733,9,"touchableDelayTimeout"],[619,32,733,30],[619,35,733,33],[619,39,733,37],[620,6,734,4],[620,10,734,8],[620,11,734,9,"_receiveSignal"],[620,25,734,23],[620,26,734,24,"Signals"],[620,33,734,31],[620,34,734,32,"DELAY"],[620,39,734,37],[620,41,734,39,"e"],[620,42,734,40],[620,43,734,41],[621,4,735,2],[621,5,735,3],[622,4,737,2],[623,0,738,0],[624,4,739,2,"_handleLongDelay"],[624,20,739,18],[624,22,739,20],[624,31,739,20,"_handleLongDelay"],[624,48,739,30,"e"],[624,49,739,43],[624,51,739,45],[625,6,740,4],[625,10,740,8],[625,11,740,9,"longPressDelayTimeout"],[625,32,740,30],[625,35,740,33],[625,39,740,37],[626,6,741,4],[626,10,741,10,"curState"],[626,18,741,18],[626,21,741,21],[626,25,741,25],[626,26,741,26,"state"],[626,31,741,31],[626,32,741,32,"touchable"],[626,41,741,41],[626,42,741,42,"touchState"],[626,52,741,52],[627,6,742,4],[627,10,743,6,"curState"],[627,18,743,14],[627,23,743,19,"States"],[627,29,743,25],[627,30,743,26,"RESPONDER_ACTIVE_PRESS_IN"],[627,55,743,51],[627,59,744,6,"curState"],[627,67,744,14],[627,72,744,19,"States"],[627,78,744,25],[627,79,744,26,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[627,109,744,56],[627,111,745,6],[628,8,746,6],[628,12,746,10],[628,13,746,11,"_receiveSignal"],[628,27,746,25],[628,28,746,26,"Signals"],[628,35,746,33],[628,36,746,34,"LONG_PRESS_DETECTED"],[628,55,746,53],[628,57,746,55,"e"],[628,58,746,56],[628,59,746,57],[629,6,747,4],[630,4,748,2],[630,5,748,3],[631,4,750,2],[632,0,751,0],[633,0,752,0],[634,0,753,0],[635,0,754,0],[636,0,755,0],[637,0,756,0],[638,0,757,0],[639,4,758,2],[640,0,759,0],[641,4,760,2,"_receiveSignal"],[641,18,760,16],[641,20,760,18],[641,29,760,18,"_receiveSignal"],[641,44,760,28,"signal"],[641,50,760,42],[641,52,760,44,"e"],[641,53,760,57],[641,55,760,59],[642,6,761,4],[642,10,761,10,"responderID"],[642,21,761,21],[642,24,761,24],[642,28,761,28],[642,29,761,29,"state"],[642,34,761,34],[642,35,761,35,"touchable"],[642,44,761,44],[642,45,761,45,"responderID"],[642,56,761,56],[643,6,762,4],[643,10,762,10,"curState"],[643,18,762,18],[643,21,762,21],[643,25,762,25],[643,26,762,26,"state"],[643,31,762,31],[643,32,762,32,"touchable"],[643,41,762,41],[643,42,762,42,"touchState"],[643,52,762,52],[644,6,763,4],[644,10,763,10,"nextState"],[644,19,763,19],[644,22,763,22,"Transitions"],[644,33,763,33],[644,34,763,34,"curState"],[644,42,763,42],[644,43,763,43],[644,47,763,47,"Transitions"],[644,58,763,58],[644,59,763,59,"curState"],[644,67,763,67],[644,68,763,68],[644,69,763,69,"signal"],[644,75,763,75],[644,76,763,76],[645,6,764,4],[645,10,764,8],[645,11,764,9,"responderID"],[645,22,764,20],[645,26,764,24,"signal"],[645,32,764,30],[645,37,764,35,"Signals"],[645,44,764,42],[645,45,764,43,"RESPONDER_RELEASE"],[645,62,764,60],[645,64,764,62],[646,8,765,6],[647,6,766,4],[648,6,767,4],[648,10,767,8],[648,11,767,9,"nextState"],[648,20,767,18],[648,22,767,20],[649,8,768,6],[649,14,768,12],[649,18,768,16,"Error"],[649,23,768,21],[649,24,769,8],[649,47,769,31],[649,50,770,10,"signal"],[649,56,770,16],[649,59,771,10],[649,73,771,24],[649,76,772,10,"curState"],[649,84,772,18],[649,87,773,10],[649,116,773,39],[649,119,774,10],[649,126,774,17],[649,130,774,21],[649,131,774,22,"state"],[649,136,774,27],[649,137,774,28,"touchable"],[649,146,774,37],[649,147,774,38,"responderID"],[649,158,774,49],[649,163,775,8],[649,171,775,16],[649,174,776,12],[649,178,776,16],[649,179,776,17,"state"],[649,184,776,22],[649,185,776,23,"touchable"],[649,194,776,32],[649,195,776,33,"responderID"],[649,206,776,44],[649,209,777,12],[649,225,777,28],[649,228,777,31],[649,231,778,6],[649,232,778,7],[650,6,779,4],[651,6,780,4],[651,10,780,8,"nextState"],[651,19,780,17],[651,24,780,22,"States"],[651,30,780,28],[651,31,780,29,"ERROR"],[651,36,780,34],[651,38,780,36],[652,8,781,6],[652,14,781,12],[652,18,781,16,"Error"],[652,23,781,21],[652,24,782,8],[652,60,782,44],[652,63,783,10,"curState"],[652,71,783,18],[652,74,784,10],[652,82,784,18],[652,85,785,10,"signal"],[652,91,785,16],[652,94,786,10],[652,113,786,29],[652,116,787,10],[652,123,787,17],[652,127,787,21],[652,128,787,22,"state"],[652,133,787,27],[652,134,787,28,"touchable"],[652,143,787,37],[652,144,787,38,"responderID"],[652,155,787,49],[652,160,788,8],[652,168,788,16],[652,171,789,12],[652,175,789,16],[652,176,789,17,"state"],[652,181,789,22],[652,182,789,23,"touchable"],[652,191,789,32],[652,192,789,33,"responderID"],[652,203,789,44],[652,206,790,12],[652,226,790,32],[652,229,790,35],[652,232,791,6],[652,233,791,7],[653,6,792,4],[654,6,793,4],[654,10,793,8,"curState"],[654,18,793,16],[654,23,793,21,"nextState"],[654,32,793,30],[654,34,793,32],[655,8,794,6],[655,12,794,10],[655,13,794,11,"_performSideEffectsForTransition"],[655,45,794,43],[655,46,794,44,"curState"],[655,54,794,52],[655,56,794,54,"nextState"],[655,65,794,63],[655,67,794,65,"signal"],[655,73,794,71],[655,75,794,73,"e"],[655,76,794,74],[655,77,794,75],[656,8,795,6],[656,12,795,10],[656,13,795,11,"state"],[656,18,795,16],[656,19,795,17,"touchable"],[656,28,795,26],[656,29,795,27,"touchState"],[656,39,795,37],[656,42,795,40,"nextState"],[656,51,795,49],[657,6,796,4],[658,4,797,2],[658,5,797,3],[659,4,799,2],[660,0,800,0],[661,4,801,2,"_cancelLongPressDelayTimeout"],[661,32,801,30],[661,34,801,32],[661,43,801,32,"_cancelLongPressDelayTimeout"],[661,72,801,32],[661,74,801,44],[662,6,802,4],[662,10,802,8],[662,11,802,9,"longPressDelayTimeout"],[662,32,802,30],[662,36,802,34,"clearTimeout"],[662,48,802,46],[662,49,802,47],[662,53,802,51],[662,54,802,52,"longPressDelayTimeout"],[662,75,802,73],[662,76,802,74],[663,6,803,4],[663,10,803,8],[663,11,803,9,"longPressDelayTimeout"],[663,32,803,30],[663,35,803,33],[663,39,803,37],[664,4,804,2],[664,5,804,3],[665,4,806,2,"_isHighlight"],[665,16,806,14],[665,18,806,16],[665,27,806,16,"_isHighlight"],[665,40,806,26,"state"],[665,45,806,38],[665,47,806,49],[666,6,807,4],[666,13,808,6,"state"],[666,18,808,11],[666,23,808,16,"States"],[666,29,808,22],[666,30,808,23,"RESPONDER_ACTIVE_PRESS_IN"],[666,55,808,48],[666,59,809,6,"state"],[666,64,809,11],[666,69,809,16,"States"],[666,75,809,22],[666,76,809,23,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[666,106,809,53],[667,4,811,2],[667,5,811,3],[668,4,813,2],[669,0,814,0],[670,4,815,2,"_savePressInLocation"],[670,24,815,22],[670,26,815,24],[670,35,815,24,"_savePressInLocation"],[670,56,815,34,"e"],[670,57,815,47],[670,59,815,49],[671,6,816,4],[671,10,816,10,"touch"],[671,15,816,15],[671,18,816,18,"extractSingleTouch"],[671,36,816,36],[671,37,816,37,"e"],[671,38,816,38],[671,39,816,39,"nativeEvent"],[671,50,816,50],[671,51,816,51],[672,6,817,4],[672,10,817,10,"pageX"],[672,15,817,15],[672,18,817,18,"touch"],[672,23,817,23],[672,27,817,27,"touch"],[672,32,817,32],[672,33,817,33,"pageX"],[672,38,817,38],[673,6,818,4],[673,10,818,10,"pageY"],[673,15,818,15],[673,18,818,18,"touch"],[673,23,818,23],[673,27,818,27,"touch"],[673,32,818,32],[673,33,818,33,"pageY"],[673,38,818,38],[674,6,819,4],[674,10,819,10,"locationX"],[674,19,819,19],[674,22,819,22,"touch"],[674,27,819,27],[674,31,819,31,"touch"],[674,36,819,36],[674,37,819,37,"locationX"],[674,46,819,46],[675,6,820,4],[675,10,820,10,"locationY"],[675,19,820,19],[675,22,820,22,"touch"],[675,27,820,27],[675,31,820,31,"touch"],[675,36,820,36],[675,37,820,37,"locationY"],[675,46,820,46],[676,6,821,4],[676,10,821,8],[676,11,821,9,"pressInLocation"],[676,26,821,24],[676,29,821,27],[677,8,821,28,"pageX"],[677,13,821,33],[677,15,821,28,"pageX"],[677,20,821,33],[678,8,821,35,"pageY"],[678,13,821,40],[678,15,821,35,"pageY"],[678,20,821,40],[679,8,821,42,"locationX"],[679,17,821,51],[679,19,821,42,"locationX"],[679,28,821,51],[680,8,821,53,"locationY"],[680,17,821,62],[680,19,821,53,"locationY"],[681,6,821,62],[681,7,821,63],[682,4,822,2],[682,5,822,3],[683,4,824,2,"_getDistanceBetweenPoints"],[683,29,824,27],[683,31,824,29],[683,40,824,29,"_getDistanceBetweenPoints"],[683,66,825,4,"aX"],[683,68,825,14],[683,70,826,4,"aY"],[683,72,826,14],[683,74,827,4,"bX"],[683,76,827,14],[683,78,828,4,"bY"],[683,80,828,14],[683,82,829,12],[684,6,830,4],[684,10,830,10,"deltaX"],[684,16,830,16],[684,19,830,19,"aX"],[684,21,830,21],[684,24,830,24,"bX"],[684,26,830,26],[685,6,831,4],[685,10,831,10,"deltaY"],[685,16,831,16],[685,19,831,19,"aY"],[685,21,831,21],[685,24,831,24,"bY"],[685,26,831,26],[686,6,832,4],[686,13,832,11,"Math"],[686,17,832,15],[686,18,832,16,"sqrt"],[686,22,832,20],[686,23,832,21,"deltaX"],[686,29,832,27],[686,32,832,30,"deltaX"],[686,38,832,36],[686,41,832,39,"deltaY"],[686,47,832,45],[686,50,832,48,"deltaY"],[686,56,832,54],[686,57,832,55],[687,4,833,2],[687,5,833,3],[688,4,835,2],[689,0,836,0],[690,0,837,0],[691,0,838,0],[692,0,839,0],[693,0,840,0],[694,0,841,0],[695,0,842,0],[696,0,843,0],[697,0,844,0],[698,0,845,0],[699,4,846,2],[700,0,847,0],[701,4,848,2,"_performSideEffectsForTransition"],[701,36,848,34],[701,38,848,36],[701,47,848,36,"_performSideEffectsForTransition"],[701,80,849,4,"curState"],[701,88,849,19],[701,90,850,4,"nextState"],[701,99,850,20],[701,101,851,4,"signal"],[701,107,851,18],[701,109,852,4,"e"],[701,110,852,17],[701,112,853,4],[702,6,854,4],[702,10,854,10,"curIsHighlight"],[702,24,854,24],[702,27,854,27],[702,31,854,31],[702,32,854,32,"_isHighlight"],[702,44,854,44],[702,45,854,45,"curState"],[702,53,854,53],[702,54,854,54],[703,6,855,4],[703,10,855,10,"newIsHighlight"],[703,24,855,24],[703,27,855,27],[703,31,855,31],[703,32,855,32,"_isHighlight"],[703,44,855,44],[703,45,855,45,"nextState"],[703,54,855,54],[703,55,855,55],[704,6,857,4],[704,10,857,10,"isFinalSignal"],[704,23,857,23],[704,26,858,6,"signal"],[704,32,858,12],[704,37,858,17,"Signals"],[704,44,858,24],[704,45,858,25,"RESPONDER_TERMINATED"],[704,65,858,45],[704,69,859,6,"signal"],[704,75,859,12],[704,80,859,17,"Signals"],[704,87,859,24],[704,88,859,25,"RESPONDER_RELEASE"],[704,105,859,42],[705,6,861,4],[705,10,861,8,"isFinalSignal"],[705,23,861,21],[705,25,861,23],[706,8,862,6],[706,12,862,10],[706,13,862,11,"_cancelLongPressDelayTimeout"],[706,41,862,39],[706,42,862,40],[706,43,862,41],[707,6,863,4],[708,6,865,4],[708,10,865,10,"isInitialTransition"],[708,29,865,29],[708,32,866,6,"curState"],[708,40,866,14],[708,45,866,19,"States"],[708,51,866,25],[708,52,866,26,"NOT_RESPONDER"],[708,65,866,39],[708,69,867,6,"nextState"],[708,78,867,15],[708,83,867,20,"States"],[708,89,867,26],[708,90,867,27,"RESPONDER_INACTIVE_PRESS_IN"],[708,117,867,54],[709,6,869,4],[709,10,869,10,"isActiveTransition"],[709,28,869,28],[709,31,869,31],[709,32,869,32,"IsActive"],[709,40,869,40],[709,41,869,41,"curState"],[709,49,869,49],[709,50,869,50],[709,54,869,54,"IsActive"],[709,62,869,62],[709,63,869,63,"nextState"],[709,72,869,72],[709,73,869,73],[710,6,870,4],[710,10,870,8,"isInitialTransition"],[710,29,870,27],[710,33,870,31,"isActiveTransition"],[710,51,870,49],[710,53,870,51],[711,8,871,6],[711,12,871,10],[711,13,871,11,"_remeasureMetricsOnActivation"],[711,42,871,40],[711,43,871,41],[711,44,871,42],[712,6,872,4],[713,6,874,4],[713,10,874,8,"IsPressingIn"],[713,22,874,20],[713,23,874,21,"curState"],[713,31,874,29],[713,32,874,30],[713,36,874,34,"signal"],[713,42,874,40],[713,47,874,45,"Signals"],[713,54,874,52],[713,55,874,53,"LONG_PRESS_DETECTED"],[713,74,874,72],[713,76,874,74],[714,8,875,6],[714,12,875,10],[714,13,875,11,"touchableHandleLongPress"],[714,37,875,35],[714,41,875,39],[714,45,875,43],[714,46,875,44,"touchableHandleLongPress"],[714,70,875,68],[714,71,875,69,"e"],[714,72,875,70],[714,73,875,71],[715,6,876,4],[716,6,878,4],[716,10,878,8,"newIsHighlight"],[716,24,878,22],[716,28,878,26],[716,29,878,27,"curIsHighlight"],[716,43,878,41],[716,45,878,43],[717,8,879,6],[717,12,879,10],[717,13,879,11,"_startHighlight"],[717,28,879,26],[717,29,879,27,"e"],[717,30,879,28],[717,31,879,29],[718,6,880,4],[718,7,880,5],[718,13,880,11],[718,17,880,15],[718,18,880,16,"newIsHighlight"],[718,32,880,30],[718,36,880,34,"curIsHighlight"],[718,50,880,48],[718,52,880,50],[719,8,881,6],[719,12,881,10],[719,13,881,11,"_endHighlight"],[719,26,881,24],[719,27,881,25,"e"],[719,28,881,26],[719,29,881,27],[720,6,882,4],[721,6,884,4],[721,10,884,8,"IsPressingIn"],[721,22,884,20],[721,23,884,21,"curState"],[721,31,884,29],[721,32,884,30],[721,36,884,34,"signal"],[721,42,884,40],[721,47,884,45,"Signals"],[721,54,884,52],[721,55,884,53,"RESPONDER_RELEASE"],[721,72,884,70],[721,74,884,72],[722,8,885,6],[722,12,885,12,"hasLongPressHandler"],[722,31,885,31],[722,34,885,34],[722,35,885,35],[722,36,885,36],[722,40,885,40],[722,41,885,41,"props"],[722,46,885,46],[722,47,885,47,"onLongPress"],[722,58,885,58],[723,8,886,6],[723,12,886,12,"pressIsLongButStillCallOnPress"],[723,42,886,42],[723,45,887,8,"IsLongPressingIn"],[723,61,887,24],[723,62,887,25,"curState"],[723,70,887,33],[723,71,887,34],[724,8,887,38],[725,8,888,9],[725,9,888,10,"hasLongPressHandler"],[725,28,888,29],[725,32,888,33],[725,33,888,34],[725,37,888,38],[725,38,888,39,"touchableLongPressCancelsPress"],[725,68,888,69],[725,69,888,70],[725,70,888,71],[725,71,888,72],[725,72,888,73],[725,73,888,74],[727,8,890,6],[727,12,890,12,"shouldInvokePress"],[727,29,890,29],[727,32,891,8],[727,33,891,9,"IsLongPressingIn"],[727,49,891,25],[727,50,891,26,"curState"],[727,58,891,34],[727,59,891,35],[727,63,891,39,"pressIsLongButStillCallOnPress"],[727,93,891,69],[728,8,892,6],[728,12,892,10,"shouldInvokePress"],[728,29,892,27],[728,33,892,31],[728,37,892,35],[728,38,892,36,"touchableHandlePress"],[728,58,892,56],[728,60,892,58],[729,10,893,8],[729,14,893,12],[729,15,893,13,"newIsHighlight"],[729,29,893,27],[729,33,893,31],[729,34,893,32,"curIsHighlight"],[729,48,893,46],[729,50,893,48],[730,12,894,10],[731,12,895,10],[731,16,895,14],[731,17,895,15,"_startHighlight"],[731,32,895,30],[731,33,895,31,"e"],[731,34,895,32],[731,35,895,33],[732,12,896,10],[732,16,896,14],[732,17,896,15,"_endHighlight"],[732,30,896,28],[732,31,896,29,"e"],[732,32,896,30],[732,33,896,31],[733,10,897,8],[734,10,898,8],[734,14,898,12,"Platform"],[734,31,898,20],[734,32,898,21,"OS"],[734,34,898,23],[734,39,898,28],[734,48,898,37],[734,52,898,41],[734,53,898,42],[734,57,898,46],[734,58,898,47,"props"],[734,63,898,52],[734,64,898,53,"touchSoundDisabled"],[734,82,898,71],[734,84,898,73],[735,12,899,10,"SoundManager"],[735,33,899,22],[735,34,899,23,"playTouchSound"],[735,48,899,37],[735,49,899,38],[735,50,899,39],[736,10,900,8],[737,10,901,8],[737,14,901,12],[737,15,901,13,"touchableHandlePress"],[737,35,901,33],[737,36,901,34,"e"],[737,37,901,35],[737,38,901,36],[738,8,902,6],[739,6,903,4],[740,6,905,4],[740,10,905,8],[740,11,905,9,"touchableDelayTimeout"],[740,32,905,30],[740,36,905,34,"clearTimeout"],[740,48,905,46],[740,49,905,47],[740,53,905,51],[740,54,905,52,"touchableDelayTimeout"],[740,75,905,73],[740,76,905,74],[741,6,906,4],[741,10,906,8],[741,11,906,9,"touchableDelayTimeout"],[741,32,906,30],[741,35,906,33],[741,39,906,37],[742,4,907,2],[742,5,907,3],[743,4,909,2],[744,0,910,0],[745,4,911,2,"_startHighlight"],[745,19,911,17],[745,21,911,19],[745,30,911,19,"_startHighlight"],[745,46,911,29,"e"],[745,47,911,42],[745,49,911,44],[746,6,912,4],[746,10,912,8],[746,11,912,9,"_savePressInLocation"],[746,31,912,29],[746,32,912,30,"e"],[746,33,912,31],[746,34,912,32],[747,6,913,4],[747,10,913,8],[747,11,913,9,"touchableHandleActivePressIn"],[747,39,913,37],[747,43,913,41],[747,47,913,45],[747,48,913,46,"touchableHandleActivePressIn"],[747,76,913,74],[747,77,913,75,"e"],[747,78,913,76],[747,79,913,77],[748,4,914,2],[748,5,914,3],[749,4,916,2],[750,0,917,0],[751,4,918,2,"_endHighlight"],[751,17,918,15],[751,19,918,17],[751,28,918,17,"_endHighlight"],[751,42,918,27,"e"],[751,43,918,40],[751,45,918,42],[752,6,918,42],[752,10,918,42,"_this"],[752,15,918,42],[753,6,919,4],[753,10,919,8],[753,14,919,12],[753,15,919,13,"touchableHandleActivePressOut"],[753,44,919,42],[753,46,919,44],[754,8,920,6],[754,12,921,8],[754,16,921,12],[754,17,921,13,"touchableGetPressOutDelayMS"],[754,44,921,40],[754,48,922,8],[754,52,922,12],[754,53,922,13,"touchableGetPressOutDelayMS"],[754,80,922,40],[754,81,922,41],[754,82,922,42],[754,84,923,8],[755,10,924,8],[755,14,924,12],[755,15,924,13,"pressOutDelayTimeout"],[755,35,924,33],[755,38,924,36,"setTimeout"],[755,48,924,46],[755,49,924,47],[755,61,924,53],[756,12,925,10,"_this"],[756,17,925,14],[756,18,925,15,"touchableHandleActivePressOut"],[756,47,925,44],[756,48,925,45,"e"],[756,49,925,46],[756,50,925,47],[757,10,926,8],[757,11,926,9],[757,13,926,11],[757,17,926,15],[757,18,926,16,"touchableGetPressOutDelayMS"],[757,45,926,43],[757,46,926,44],[757,47,926,45],[757,48,926,46],[758,8,927,6],[758,9,927,7],[758,15,927,13],[759,10,928,8],[759,14,928,12],[759,15,928,13,"touchableHandleActivePressOut"],[759,44,928,42],[759,45,928,43,"e"],[759,46,928,44],[759,47,928,45],[760,8,929,6],[761,6,930,4],[762,4,931,2],[762,5,931,3],[763,4,933,2,"withoutDefaultFocusAndBlur"],[763,30,933,28],[763,32,933,31],[763,33,933,32],[764,2,934,0],[764,3,934,1],[766,2,936,0],[767,0,937,0],[768,0,938,0],[769,0,939,0],[770,0,940,0],[771,0,941,0],[772,2,942,0],[772,6,943,2,"touchableHandleFocus"],[772,26,943,22],[772,29,946,4,"TouchableMixin"],[772,43,946,18],[772,44,943,2,"touchableHandleFocus"],[772,64,943,22],[773,4,944,2,"touchableHandleBlur"],[773,23,944,21],[773,26,946,4,"TouchableMixin"],[773,40,946,18],[773,41,944,2,"touchableHandleBlur"],[773,60,944,21],[774,4,945,5,"TouchableMixinWithoutDefaultFocusAndBlur"],[774,44,945,45],[774,51,945,45,"_objectWithoutProperties2"],[774,76,945,45],[774,77,945,45,"default"],[774,84,945,45],[774,86,946,4,"TouchableMixin"],[774,100,946,18],[775,2,947,0,"TouchableMixin"],[775,16,947,14],[775,17,947,15,"withoutDefaultFocusAndBlur"],[775,43,947,41],[775,46,948,2,"TouchableMixinWithoutDefaultFocusAndBlur"],[775,86,948,42],[776,2,950,0],[776,6,950,6,"Touchable"],[776,15,950,30],[776,18,950,33],[777,4,951,2,"Mixin"],[777,9,951,7],[777,11,951,9,"TouchableMixin"],[777,25,951,23],[778,4,952,2],[779,0,953,0],[780,0,954,0],[781,4,955,2,"renderDebugView"],[781,19,955,17],[781,21,955,19],[781,30,955,19,"renderDebugView"],[781,46,955,19,"_ref"],[781,50,955,19],[781,52,962,27],[782,6,962,27],[782,10,956,4,"color"],[782,15,956,9],[782,18,956,9,"_ref"],[782,22,956,9],[782,23,956,4,"color"],[782,28,956,9],[783,8,957,4,"hitSlop"],[783,15,957,11],[783,18,957,11,"_ref"],[783,22,957,11],[783,23,957,4,"hitSlop"],[783,30,957,11],[784,6,963,4],[784,10,963,8,"__DEV__"],[784,17,963,15],[784,19,963,17],[785,8,964,6],[785,28,964,13],[785,32,964,13,"_jsxRuntime"],[785,43,964,13],[785,44,964,13,"jsx"],[785,47,964,13],[785,49,964,14,"_PressabilityDebug"],[785,67,964,14],[785,68,964,14,"PressabilityDebugView"],[785,89,964,35],[786,10,964,36,"color"],[786,15,964,41],[786,17,964,43,"color"],[786,22,964,49],[787,10,964,50,"hitSlop"],[787,17,964,57],[787,19,964,59,"hitSlop"],[788,8,964,67],[788,9,964,69],[788,10,964,70],[789,6,965,4],[790,6,966,4],[790,13,966,11],[790,17,966,15],[791,4,967,2],[792,2,968,0],[792,3,968,1],[793,2,970,0,"module"],[793,8,970,6],[793,9,970,7,"exports"],[793,16,970,14],[793,19,970,17,"Touchable"],[793,28,970,26],[794,0,970,27]],"functionMap":{"names":["<global>","extractSingleTouch","TouchableMixin.componentDidMount","TouchableMixin.componentWillUnmount","TouchableMixin.touchableGetInitialState","TouchableMixin.touchableHandleResponderTerminationRequest","TouchableMixin.touchableHandleStartShouldSetResponder","TouchableMixin.touchableLongPressCancelsPress","TouchableMixin.touchableHandleResponderGrant","TouchableMixin.touchableHandleResponderRelease","TouchableMixin.touchableHandleResponderTerminate","TouchableMixin.touchableHandleResponderMove","TouchableMixin.touchableHandleFocus","TouchableMixin.touchableHandleBlur","TouchableMixin._remeasureMetricsOnActivation","TouchableMixin._handleQueryLayout","TouchableMixin._handleDelay","TouchableMixin._handleLongDelay","TouchableMixin._receiveSignal","TouchableMixin._cancelLongPressDelayTimeout","TouchableMixin._isHighlight","TouchableMixin._savePressInLocation","TouchableMixin._getDistanceBetweenPoints","TouchableMixin._performSideEffectsForTransition","TouchableMixin._startHighlight","TouchableMixin._endHighlight","setTimeout$argument_0","renderDebugView"],"mappings":"AAA;2BCuB;CDsB;qBEyU;GFI;wBGO;GHI;4BIS;GJS;8CKQ;GLE;0CMO;GNE;kCOK;GPE;iCQS;GRoC;mCSO;GTG;qCUO;GVG;gCWO;GX2E;wBYY;GZE;uBaY;GbE;iCcgF;GdW;sBeI;GfwB;gBgBI;GhBG;oBiBI;GjBS;kBkBY;GlBqC;gCmBI;GnBG;gBoBE;GpBK;wBqBI;GrBO;6BsBE;GtBS;oCuBe;GvB2D;mBwBI;GxBG;iByBI;+CCM;SDE;GzBK;mB2BwB;G3BY"}},"type":"js/module"}]}