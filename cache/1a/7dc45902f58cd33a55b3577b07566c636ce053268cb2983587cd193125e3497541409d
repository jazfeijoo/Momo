{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":37,"index":37}}],"key":"llq4nuOBKCCL4A7IFpRswh14toM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n  var RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n  // <function-token> <sequence> )\n  module.exports = {\n    name: 'Function',\n    structure: {\n      name: String,\n      children: [[]]\n    },\n    parse: function parse(readSequence, recognizer) {\n      var start = this.scanner.tokenStart;\n      var name = this.consumeFunctionName();\n      var nameLowerCase = name.toLowerCase();\n      var children;\n      children = recognizer.hasOwnProperty(nameLowerCase) ? recognizer[nameLowerCase].call(this, recognizer) : readSequence.call(this, recognizer);\n      if (!this.scanner.eof) {\n        this.eat(RIGHTPARENTHESIS);\n      }\n      return {\n        type: 'Function',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: name,\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.chunk(node.name);\n      this.chunk('(');\n      this.children(node);\n      this.chunk(')');\n    },\n    walkContext: 'function'\n  };\n});","lineCount":36,"map":[[2,2,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,25,1,18,"_dependencyMap"],[2,39,1,18],[2,61,1,36],[2,62,1,37],[2,63,1,38,"TYPE"],[2,67,1,42],[3,2,3,0],[3,6,3,4,"RIGHTPARENTHESIS"],[3,22,3,20],[3,25,3,23,"TYPE"],[3,29,3,27],[3,30,3,28,"RightParenthesis"],[3,46,3,44],[5,2,5,0],[6,2,6,0,"module"],[6,8,6,6],[6,9,6,7,"exports"],[6,16,6,14],[6,19,6,17],[7,4,7,4,"name"],[7,8,7,8],[7,10,7,10],[7,20,7,20],[8,4,8,4,"structure"],[8,13,8,13],[8,15,8,15],[9,6,9,8,"name"],[9,10,9,12],[9,12,9,14,"String"],[9,18,9,20],[10,6,10,8,"children"],[10,14,10,16],[10,16,10,18],[10,17,10,19],[10,19,10,21],[11,4,11,4],[11,5,11,5],[12,4,12,4,"parse"],[12,9,12,9],[12,11,12,11],[12,20,12,11,"parse"],[12,26,12,20,"readSequence"],[12,38,12,32],[12,40,12,34,"recognizer"],[12,50,12,44],[12,52,12,46],[13,6,13,8],[13,10,13,12,"start"],[13,15,13,17],[13,18,13,20],[13,22,13,24],[13,23,13,25,"scanner"],[13,30,13,32],[13,31,13,33,"tokenStart"],[13,41,13,43],[14,6,14,8],[14,10,14,12,"name"],[14,14,14,16],[14,17,14,19],[14,21,14,23],[14,22,14,24,"consumeFunctionName"],[14,41,14,43],[14,42,14,44],[14,43,14,45],[15,6,15,8],[15,10,15,12,"nameLowerCase"],[15,23,15,25],[15,26,15,28,"name"],[15,30,15,32],[15,31,15,33,"toLowerCase"],[15,42,15,44],[15,43,15,45],[15,44,15,46],[16,6,16,8],[16,10,16,12,"children"],[16,18,16,20],[17,6,18,8,"children"],[17,14,18,16],[17,17,18,19,"recognizer"],[17,27,18,29],[17,28,18,30,"hasOwnProperty"],[17,42,18,44],[17,43,18,45,"nameLowerCase"],[17,56,18,58],[17,57,18,59],[17,60,19,14,"recognizer"],[17,70,19,24],[17,71,19,25,"nameLowerCase"],[17,84,19,38],[17,85,19,39],[17,86,19,40,"call"],[17,90,19,44],[17,91,19,45],[17,95,19,49],[17,97,19,51,"recognizer"],[17,107,19,61],[17,108,19,62],[17,111,20,14,"readSequence"],[17,123,20,26],[17,124,20,27,"call"],[17,128,20,31],[17,129,20,32],[17,133,20,36],[17,135,20,38,"recognizer"],[17,145,20,48],[17,146,20,49],[18,6,22,8],[18,10,22,12],[18,11,22,13],[18,15,22,17],[18,16,22,18,"scanner"],[18,23,22,25],[18,24,22,26,"eof"],[18,27,22,29],[18,29,22,31],[19,8,23,12],[19,12,23,16],[19,13,23,17,"eat"],[19,16,23,20],[19,17,23,21,"RIGHTPARENTHESIS"],[19,33,23,37],[19,34,23,38],[20,6,24,8],[21,6,26,8],[21,13,26,15],[22,8,27,12,"type"],[22,12,27,16],[22,14,27,18],[22,24,27,28],[23,8,28,12,"loc"],[23,11,28,15],[23,13,28,17],[23,17,28,21],[23,18,28,22,"getLocation"],[23,29,28,33],[23,30,28,34,"start"],[23,35,28,39],[23,37,28,41],[23,41,28,45],[23,42,28,46,"scanner"],[23,49,28,53],[23,50,28,54,"tokenStart"],[23,60,28,64],[23,61,28,65],[24,8,29,12,"name"],[24,12,29,16],[24,14,29,18,"name"],[24,18,29,22],[25,8,30,12,"children"],[25,16,30,20],[25,18,30,22,"children"],[26,6,31,8],[26,7,31,9],[27,4,32,4],[27,5,32,5],[28,4,33,4,"generate"],[28,12,33,12],[28,14,33,14],[28,23,33,14,"generate"],[28,32,33,23,"node"],[28,36,33,27],[28,38,33,29],[29,6,34,8],[29,10,34,12],[29,11,34,13,"chunk"],[29,16,34,18],[29,17,34,19,"node"],[29,21,34,23],[29,22,34,24,"name"],[29,26,34,28],[29,27,34,29],[30,6,35,8],[30,10,35,12],[30,11,35,13,"chunk"],[30,16,35,18],[30,17,35,19],[30,20,35,22],[30,21,35,23],[31,6,36,8],[31,10,36,12],[31,11,36,13,"children"],[31,19,36,21],[31,20,36,22,"node"],[31,24,36,26],[31,25,36,27],[32,6,37,8],[32,10,37,12],[32,11,37,13,"chunk"],[32,16,37,18],[32,17,37,19],[32,20,37,22],[32,21,37,23],[33,4,38,4],[33,5,38,5],[34,4,39,4,"walkContext"],[34,15,39,15],[34,17,39,17],[35,2,40,0],[35,3,40,1],[36,0,40,2]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCW;KDoB;cEC;KFK"}},"type":"js/module"}]}