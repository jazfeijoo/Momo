{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"query-string","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":0,"index":94},"end":{"line":6,"column":44,"index":138}}],"key":"GFSDDT7dIJnvWSebFhtcKgwXBCQ="}},{"name":"./fromEntries","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0,"index":140},"end":{"line":8,"column":40,"index":180}}],"key":"d+ic4Sb74EHMEZTFDxW8pFJcVt0="}},{"name":"./validatePathConfig","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":239},"end":{"line":10,"column":54,"index":293}}],"key":"cg7LCOlFjZ3IP0CYIpbP6C+VR6g="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getPathFromState;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n  var queryString = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"query-string\"));\n  var _fromEntries = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./fromEntries\"));\n  var _validatePathConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./validatePathConfig\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  var getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n    }\n    if (options) {\n      (0, _validatePathConfig.default)(options);\n    }\n\n    // Create a normalized configs object which will be easier to use\n    var configs = options != null && options.screens ? createNormalizedConfigs(options == null ? void 0 : options.screens) : {};\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var pattern;\n      var focusedParams;\n      var focusedRoute = getActiveRoute(state);\n      var currentOptions = configs;\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function _loop2() {\n        pattern = currentOptions[route.name].pattern;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _currentOptions$route;\n          var stringify = (_currentOptions$route = currentOptions[route.name]) == null ? void 0 : _currentOptions$route.stringify;\n          var currentParams = (0, _fromEntries.default)(Object.entries(route.params).map(function (_ref) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n            return [key, stringify != null && stringify[key] ? stringify[key](value) : String(value)];\n          }));\n          if (pattern) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            var _pattern;\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = _objectSpread({}, currentParams);\n            (_pattern = pattern) == null ? void 0 : _pattern.split('/').filter(function (p) {\n              return p.startsWith(':');\n            })\n            // eslint-disable-next-line no-loop-func\n            .forEach(function (p) {\n              var name = getParamName(p);\n\n              // Remove the params present in the pattern since we'll only use the rest for query string\n              if (focusedParams) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete focusedParams[name];\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (pattern === undefined) {\n        pattern = nestedRouteNames.join('/');\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += pattern.split('/').map(function (p) {\n          var name = getParamName(p);\n\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (p === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (p.startsWith(':')) {\n            var _value = allParams[name];\n            if (_value === undefined && p.endsWith('?')) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n            return encodeURIComponent(_value);\n          }\n          return encodeURIComponent(p);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams) {\n        focusedParams = focusedRoute.params;\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n    return path;\n  }\n  var getParamName = function getParamName(pattern) {\n    return pattern.replace(/^:/, '').replace(/\\?$/, '');\n  };\n  var joinPaths = function joinPaths() {\n    var _ref3;\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n    return (_ref3 = []).concat.apply(_ref3, (0, _toConsumableArray2.default)(paths.map(function (p) {\n      return p.split('/');\n    }))).filter(Boolean).join('/');\n  };\n  var createConfigItem = function createConfigItem(config, parentPattern) {\n    var _pattern3;\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _pattern2 = parentPattern ? joinPaths(parentPattern, config) : config;\n      return {\n        pattern: _pattern2\n      };\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var pattern;\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n    pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n    var screens = config.screens ? createNormalizedConfigs(config.screens, pattern) : undefined;\n    return {\n      // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n      pattern: (_pattern3 = pattern) == null ? void 0 : _pattern3.split('/').filter(Boolean).join('/'),\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n  var createNormalizedConfigs = function createNormalizedConfigs(options, pattern) {\n    return (0, _fromEntries.default)(Object.entries(options).map(function (_ref4) {\n      var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n        name = _ref5[0],\n        c = _ref5[1];\n      var result = createConfigItem(c, pattern);\n      return [name, result];\n    }));\n  };\n});","lineCount":239,"map":[[10,2,6,0],[10,6,6,0,"queryString"],[10,17,6,0],[10,20,6,0,"_interopRequireWildcard"],[10,43,6,0],[10,44,6,0,"_$$_REQUIRE"],[10,55,6,0],[10,56,6,0,"_dependencyMap"],[10,70,6,0],[11,2,8,0],[11,6,8,0,"_fromEntries"],[11,18,8,0],[11,21,8,0,"_interopRequireDefault"],[11,43,8,0],[11,44,8,0,"_$$_REQUIRE"],[11,55,8,0],[11,56,8,0,"_dependencyMap"],[11,70,8,0],[12,2,10,0],[12,6,10,0,"_validatePathConfig"],[12,25,10,0],[12,28,10,0,"_interopRequireDefault"],[12,50,10,0],[12,51,10,0,"_$$_REQUIRE"],[12,62,10,0],[12,63,10,0,"_dependencyMap"],[12,77,10,0],[13,2,10,54],[13,11,10,54,"_getRequireWildcardCache"],[13,36,10,54,"nodeInterop"],[13,47,10,54],[13,62,10,54,"WeakMap"],[13,69,10,54],[13,103,10,54,"cacheBabelInterop"],[13,120,10,54],[13,127,10,54,"WeakMap"],[13,134,10,54],[13,142,10,54,"cacheNodeInterop"],[13,158,10,54],[13,165,10,54,"WeakMap"],[13,172,10,54],[13,184,10,54,"_getRequireWildcardCache"],[13,208,10,54],[13,220,10,54,"_getRequireWildcardCache"],[13,245,10,54,"nodeInterop"],[13,256,10,54],[13,267,10,54,"nodeInterop"],[13,278,10,54],[13,281,10,54,"cacheNodeInterop"],[13,297,10,54],[13,300,10,54,"cacheBabelInterop"],[13,317,10,54],[13,322,10,54,"nodeInterop"],[13,333,10,54],[14,2,10,54],[14,11,10,54,"_interopRequireWildcard"],[14,35,10,54,"obj"],[14,38,10,54],[14,40,10,54,"nodeInterop"],[14,51,10,54],[14,60,10,54,"nodeInterop"],[14,71,10,54],[14,75,10,54,"obj"],[14,78,10,54],[14,82,10,54,"obj"],[14,85,10,54],[14,86,10,54,"__esModule"],[14,96,10,54],[14,107,10,54,"obj"],[14,110,10,54],[14,118,10,54,"obj"],[14,121,10,54],[14,141,10,54,"obj"],[14,144,10,54],[14,168,10,54,"obj"],[14,171,10,54],[14,199,10,54,"default"],[14,206,10,54],[14,208,10,54,"obj"],[14,211,10,54],[14,221,10,54,"cache"],[14,226,10,54],[14,229,10,54,"_getRequireWildcardCache"],[14,253,10,54],[14,254,10,54,"nodeInterop"],[14,265,10,54],[14,272,10,54,"cache"],[14,277,10,54],[14,281,10,54,"cache"],[14,286,10,54],[14,287,10,54,"has"],[14,290,10,54],[14,291,10,54,"obj"],[14,294,10,54],[14,306,10,54,"cache"],[14,311,10,54],[14,312,10,54,"get"],[14,315,10,54],[14,316,10,54,"obj"],[14,319,10,54],[14,328,10,54,"newObj"],[14,334,10,54],[14,345,10,54,"hasPropertyDescriptor"],[14,366,10,54],[14,369,10,54,"Object"],[14,375,10,54],[14,376,10,54,"defineProperty"],[14,390,10,54],[14,394,10,54,"Object"],[14,400,10,54],[14,401,10,54,"getOwnPropertyDescriptor"],[14,425,10,54],[14,436,10,54,"key"],[14,439,10,54],[14,443,10,54,"obj"],[14,446,10,54],[14,454,10,54,"key"],[14,457,10,54],[14,475,10,54,"Object"],[14,481,10,54],[14,482,10,54,"prototype"],[14,491,10,54],[14,492,10,54,"hasOwnProperty"],[14,506,10,54],[14,507,10,54,"call"],[14,511,10,54],[14,512,10,54,"obj"],[14,515,10,54],[14,517,10,54,"key"],[14,520,10,54],[14,529,10,54,"desc"],[14,533,10,54],[14,536,10,54,"hasPropertyDescriptor"],[14,557,10,54],[14,560,10,54,"Object"],[14,566,10,54],[14,567,10,54,"getOwnPropertyDescriptor"],[14,591,10,54],[14,592,10,54,"obj"],[14,595,10,54],[14,597,10,54,"key"],[14,600,10,54],[14,614,10,54,"desc"],[14,618,10,54],[14,623,10,54,"desc"],[14,627,10,54],[14,628,10,54,"get"],[14,631,10,54],[14,635,10,54,"desc"],[14,639,10,54],[14,640,10,54,"set"],[14,643,10,54],[14,648,10,54,"Object"],[14,654,10,54],[14,655,10,54,"defineProperty"],[14,669,10,54],[14,670,10,54,"newObj"],[14,676,10,54],[14,678,10,54,"key"],[14,681,10,54],[14,683,10,54,"desc"],[14,687,10,54],[14,699,10,54,"newObj"],[14,705,10,54],[14,706,10,54,"key"],[14,709,10,54],[14,713,10,54,"obj"],[14,716,10,54],[14,717,10,54,"key"],[14,720,10,54],[14,729,10,54,"newObj"],[14,735,10,54],[14,736,10,54,"default"],[14,743,10,54],[14,746,10,54,"obj"],[14,749,10,54],[14,755,10,54,"cache"],[14,760,10,54],[14,764,10,54,"cache"],[14,769,10,54],[14,770,10,54,"set"],[14,773,10,54],[14,774,10,54,"obj"],[14,777,10,54],[14,779,10,54,"newObj"],[14,785,10,54],[14,797,10,54,"newObj"],[14,803,10,54],[15,2,10,54],[15,11,10,54,"ownKeys"],[15,19,10,54,"e"],[15,20,10,54],[15,22,10,54,"r"],[15,23,10,54],[15,31,10,54,"t"],[15,32,10,54],[15,35,10,54,"Object"],[15,41,10,54],[15,42,10,54,"keys"],[15,46,10,54],[15,47,10,54,"e"],[15,48,10,54],[15,55,10,54,"Object"],[15,61,10,54],[15,62,10,54,"getOwnPropertySymbols"],[15,83,10,54],[15,91,10,54,"o"],[15,92,10,54],[15,95,10,54,"Object"],[15,101,10,54],[15,102,10,54,"getOwnPropertySymbols"],[15,123,10,54],[15,124,10,54,"e"],[15,125,10,54],[15,128,10,54,"r"],[15,129,10,54],[15,134,10,54,"o"],[15,135,10,54],[15,138,10,54,"o"],[15,139,10,54],[15,140,10,54,"filter"],[15,146,10,54],[15,157,10,54,"r"],[15,158,10,54],[15,169,10,54,"Object"],[15,175,10,54],[15,176,10,54,"getOwnPropertyDescriptor"],[15,200,10,54],[15,201,10,54,"e"],[15,202,10,54],[15,204,10,54,"r"],[15,205,10,54],[15,207,10,54,"enumerable"],[15,217,10,54],[15,224,10,54,"t"],[15,225,10,54],[15,226,10,54,"push"],[15,230,10,54],[15,231,10,54,"apply"],[15,236,10,54],[15,237,10,54,"t"],[15,238,10,54],[15,240,10,54,"o"],[15,241,10,54],[15,253,10,54,"t"],[15,254,10,54],[16,2,10,54],[16,11,10,54,"_objectSpread"],[16,25,10,54,"e"],[16,26,10,54],[16,39,10,54,"r"],[16,40,10,54],[16,46,10,54,"r"],[16,47,10,54],[16,50,10,54,"arguments"],[16,59,10,54],[16,60,10,54,"length"],[16,66,10,54],[16,68,10,54,"r"],[16,69,10,54],[16,79,10,54,"t"],[16,80,10,54],[16,91,10,54,"arguments"],[16,100,10,54],[16,101,10,54,"r"],[16,102,10,54],[16,106,10,54,"arguments"],[16,115,10,54],[16,116,10,54,"r"],[16,117,10,54],[16,125,10,54,"r"],[16,126,10,54],[16,133,10,54,"ownKeys"],[16,140,10,54],[16,141,10,54,"Object"],[16,147,10,54],[16,148,10,54,"t"],[16,149,10,54],[16,156,10,54,"forEach"],[16,163,10,54],[16,174,10,54,"r"],[16,175,10,54],[16,183,10,54,"_defineProperty2"],[16,199,10,54],[16,200,10,54,"default"],[16,207,10,54],[16,209,10,54,"e"],[16,210,10,54],[16,212,10,54,"r"],[16,213,10,54],[16,215,10,54,"t"],[16,216,10,54],[16,217,10,54,"r"],[16,218,10,54],[16,227,10,54,"Object"],[16,233,10,54],[16,234,10,54,"getOwnPropertyDescriptors"],[16,259,10,54],[16,262,10,54,"Object"],[16,268,10,54],[16,269,10,54,"defineProperties"],[16,285,10,54],[16,286,10,54,"e"],[16,287,10,54],[16,289,10,54,"Object"],[16,295,10,54],[16,296,10,54,"getOwnPropertyDescriptors"],[16,321,10,54],[16,322,10,54,"t"],[16,323,10,54],[16,328,10,54,"ownKeys"],[16,335,10,54],[16,336,10,54,"Object"],[16,342,10,54],[16,343,10,54,"t"],[16,344,10,54],[16,347,10,54,"forEach"],[16,354,10,54],[16,365,10,54,"r"],[16,366,10,54],[16,370,10,54,"Object"],[16,376,10,54],[16,377,10,54,"defineProperty"],[16,391,10,54],[16,392,10,54,"e"],[16,393,10,54],[16,395,10,54,"r"],[16,396,10,54],[16,398,10,54,"Object"],[16,404,10,54],[16,405,10,54,"getOwnPropertyDescriptor"],[16,429,10,54],[16,430,10,54,"t"],[16,431,10,54],[16,433,10,54,"r"],[16,434,10,54],[16,451,10,54,"e"],[16,452,10,54],[17,2,27,0],[17,6,27,6,"getActiveRoute"],[17,20,27,20],[17,23,27,23],[17,32,27,6,"getActiveRoute"],[17,46,27,20,"getActiveRoute"],[17,47,27,24,"state"],[17,52,27,36],[17,54,27,76],[18,4,28,2],[18,8,28,8,"route"],[18,13,28,13],[18,16,29,4],[18,23,29,11,"state"],[18,28,29,16],[18,29,29,17,"index"],[18,34,29,22],[18,39,29,27],[18,47,29,35],[18,50,30,8,"state"],[18,55,30,13],[18,56,30,14,"routes"],[18,62,30,20],[18,63,30,21,"state"],[18,68,30,26],[18,69,30,27,"index"],[18,74,30,32],[18,75,30,33],[18,78,31,8,"state"],[18,83,31,13],[18,84,31,14,"routes"],[18,90,31,20],[18,91,31,21,"state"],[18,96,31,26],[18,97,31,27,"routes"],[18,103,31,33],[18,104,31,34,"length"],[18,110,31,40],[18,113,31,43],[18,114,31,44],[18,115,31,45],[19,4,33,2],[19,8,33,6,"route"],[19,13,33,11],[19,14,33,12,"state"],[19,19,33,17],[19,21,33,19],[20,6,34,4],[20,13,34,11,"getActiveRoute"],[20,27,34,25],[20,28,34,26,"route"],[20,33,34,31],[20,34,34,32,"state"],[20,39,34,37],[20,40,34,38],[21,4,35,2],[22,4,37,2],[22,11,37,9,"route"],[22,16,37,14],[23,2,38,0],[23,3,38,1],[25,2,40,0],[26,0,41,0],[27,0,42,0],[28,0,43,0],[29,0,44,0],[30,0,45,0],[31,0,46,0],[32,0,47,0],[33,0,48,0],[34,0,49,0],[35,0,50,0],[36,0,51,0],[37,0,52,0],[38,0,53,0],[39,0,54,0],[40,0,55,0],[41,0,56,0],[42,0,57,0],[43,0,58,0],[44,0,59,0],[45,0,60,0],[46,0,61,0],[47,0,62,0],[48,0,63,0],[49,0,64,0],[50,0,65,0],[51,0,66,0],[52,0,67,0],[53,0,68,0],[54,2,69,15],[54,11,69,24,"getPathFromState"],[54,27,69,40,"getPathFromState"],[54,28,70,2,"state"],[54,33,70,14],[54,35,71,2,"options"],[54,42,71,30],[54,44,72,10],[55,4,73,2],[55,8,73,6,"state"],[55,13,73,11],[55,17,73,15],[55,21,73,19],[55,23,73,21],[56,6,74,4],[56,12,74,10,"Error"],[56,17,74,15],[56,18,75,6],[56,97,76,4],[56,98,76,5],[57,4,77,2],[58,4,79,2],[58,8,79,6,"options"],[58,15,79,13],[58,17,79,15],[59,6,80,4],[59,10,80,4,"validatePathConfig"],[59,37,80,22],[59,39,80,23,"options"],[59,46,80,30],[59,47,80,31],[60,4,81,2],[62,4,83,2],[63,4,84,2],[63,8,84,8,"configs"],[63,15,84,43],[63,18,84,46,"options"],[63,25,84,53],[63,37,84,46,"options"],[63,44,84,53],[63,45,84,55,"screens"],[63,52,84,62],[63,55,85,6,"createNormalizedConfigs"],[63,78,85,29],[63,79,85,30,"options"],[63,86,85,37],[63,106,85,30,"options"],[63,113,85,37],[63,114,85,39,"screens"],[63,121,85,46],[63,122,85,47],[63,125,86,6],[63,126,86,7],[63,127,86,8],[64,4,88,2],[64,8,88,6,"path"],[64,12,88,10],[64,15,88,13],[64,18,88,16],[65,4,89,2],[65,8,89,6,"current"],[65,15,89,32],[65,18,89,35,"state"],[65,23,89,40],[66,4,91,2],[66,8,91,8,"allParams"],[66,17,91,38],[66,20,91,41],[66,21,91,42],[66,22,91,43],[67,4,91,44],[67,8,91,44,"_loop"],[67,13,91,44],[67,25,91,44,"_loop"],[67,31,91,44],[67,33,93,18],[68,6,94,4],[68,10,94,8,"index"],[68,15,94,13],[68,18,94,16],[68,25,94,23,"current"],[68,32,94,30],[68,33,94,31,"index"],[68,38,94,36],[68,43,94,41],[68,51,94,49],[68,54,94,52,"current"],[68,61,94,59],[68,62,94,60,"index"],[68,67,94,65],[68,70,94,68],[68,71,94,69],[69,6,95,4],[69,10,95,8,"route"],[69,15,95,13],[69,18,95,16,"current"],[69,25,95,23],[69,26,95,24,"routes"],[69,32,95,30],[69,33,95,31,"index"],[69,38,95,36],[69,39,97,5],[70,6,99,4],[70,10,99,8,"pattern"],[70,17,99,35],[71,6,101,4],[71,10,101,8,"focusedParams"],[71,23,101,54],[72,6,102,4],[72,10,102,8,"focusedRoute"],[72,22,102,20],[72,25,102,23,"getActiveRoute"],[72,39,102,37],[72,40,102,38,"state"],[72,45,102,43],[72,46,102,44],[73,6,103,4],[73,10,103,8,"currentOptions"],[73,24,103,22],[73,27,103,25,"configs"],[73,34,103,32],[75,6,105,4],[76,6,106,4],[76,10,106,8,"nestedRouteNames"],[76,26,106,24],[76,29,106,27],[76,31,106,29],[77,6,108,4],[77,10,108,8,"hasNext"],[77,17,108,15],[77,20,108,18],[77,24,108,22],[78,6,108,23],[78,10,108,23,"_loop2"],[78,16,108,23],[78,28,108,23,"_loop2"],[78,35,108,23],[78,37,110,52],[79,8,111,6,"pattern"],[79,15,111,13],[79,18,111,16,"currentOptions"],[79,32,111,30],[79,33,111,31,"route"],[79,38,111,36],[79,39,111,37,"name"],[79,43,111,41],[79,44,111,42],[79,45,111,43,"pattern"],[79,52,111,50],[80,8,113,6,"nestedRouteNames"],[80,24,113,22],[80,25,113,23,"push"],[80,29,113,27],[80,30,113,28,"route"],[80,35,113,33],[80,36,113,34,"name"],[80,40,113,38],[80,41,113,39],[81,8,115,6],[81,12,115,10,"route"],[81,17,115,15],[81,18,115,16,"params"],[81,24,115,22],[81,26,115,24],[82,10,115,24],[82,14,115,24,"_currentOptions$route"],[82,35,115,24],[83,10,116,8],[83,14,116,14,"stringify"],[83,23,116,23],[83,27,116,23,"_currentOptions$route"],[83,48,116,23],[83,51,116,26,"currentOptions"],[83,65,116,40],[83,66,116,41,"route"],[83,71,116,46],[83,72,116,47,"name"],[83,76,116,51],[83,77,116,52],[83,98,116,26,"_currentOptions$route"],[83,119,116,26],[83,120,116,54,"stringify"],[83,129,116,63],[84,10,118,8],[84,14,118,14,"currentParams"],[84,27,118,27],[84,30,118,30],[84,34,118,30,"fromEntries"],[84,54,118,41],[84,56,119,10,"Object"],[84,62,119,16],[84,63,119,17,"entries"],[84,70,119,24],[84,71,119,25,"route"],[84,76,119,30],[84,77,119,31,"params"],[84,83,119,37],[84,84,119,38],[84,85,119,39,"map"],[84,88,119,42],[84,89,119,43],[84,99,119,43,"_ref"],[84,103,119,43],[85,12,119,43],[85,16,119,43,"_ref2"],[85,21,119,43],[85,28,119,43,"_slicedToArray2"],[85,43,119,43],[85,44,119,43,"default"],[85,51,119,43],[85,53,119,43,"_ref"],[85,57,119,43],[86,14,119,45,"key"],[86,17,119,48],[86,20,119,48,"_ref2"],[86,25,119,48],[87,14,119,50,"value"],[87,19,119,55],[87,22,119,55,"_ref2"],[87,27,119,55],[88,12,119,55],[88,19,119,61],[88,20,120,12,"key"],[88,23,120,15],[88,25,121,12,"stringify"],[88,34,121,21],[88,46,121,12,"stringify"],[88,55,121,21],[88,56,121,24,"key"],[88,59,121,27],[88,60,121,28],[88,63,121,31,"stringify"],[88,72,121,40],[88,73,121,41,"key"],[88,76,121,44],[88,77,121,45],[88,78,121,46,"value"],[88,83,121,51],[88,84,121,52],[88,87,121,55,"String"],[88,93,121,61],[88,94,121,62,"value"],[88,99,121,67],[88,100,121,68],[88,101,122,11],[89,10,122,11],[89,12,123,8],[89,13,123,9],[90,10,125,8],[90,14,125,12,"pattern"],[90,21,125,19],[90,23,125,21],[91,12,126,10,"Object"],[91,18,126,16],[91,19,126,17,"assign"],[91,25,126,23],[91,26,126,24,"allParams"],[91,35,126,33],[91,37,126,35,"currentParams"],[91,50,126,48],[91,51,126,49],[92,10,127,8],[93,10,129,8],[93,14,129,12,"focusedRoute"],[93,26,129,24],[93,31,129,29,"route"],[93,36,129,34],[93,38,129,36],[94,12,129,36],[94,16,129,36,"_pattern"],[94,24,129,36],[95,12,130,10],[96,12,131,10],[97,12,132,10,"focusedParams"],[97,25,132,23],[97,28,132,23,"_objectSpread"],[97,41,132,23],[97,46,132,31,"currentParams"],[97,59,132,44],[97,60,132,46],[98,12,134,10],[98,13,134,10,"_pattern"],[98,21,134,10],[98,24,134,10,"pattern"],[98,31,134,17],[98,52,134,10,"_pattern"],[98,60,134,10],[98,61,135,14,"split"],[98,66,135,19],[98,67,135,20],[98,70,135,23],[98,71,135,24],[98,72,136,13,"filter"],[98,78,136,19],[98,79,136,20],[98,89,136,21,"p"],[98,90,136,22],[99,14,136,22],[99,21,136,27,"p"],[99,22,136,28],[99,23,136,29,"startsWith"],[99,33,136,39],[99,34,136,40],[99,37,136,43],[99,38,136,44],[100,12,136,44],[101,12,137,12],[102,12,137,12],[102,13,138,13,"forEach"],[102,20,138,20],[102,21,138,21],[102,31,138,22,"p"],[102,32,138,23],[102,34,138,28],[103,14,139,14],[103,18,139,20,"name"],[103,22,139,24],[103,25,139,27,"getParamName"],[103,37,139,39],[103,38,139,40,"p"],[103,39,139,41],[103,40,139,42],[105,14,141,14],[106,14,142,14],[106,18,142,18,"focusedParams"],[106,31,142,31],[106,33,142,33],[107,16,143,16],[108,16,144,16],[108,23,144,23,"focusedParams"],[108,36,144,36],[108,37,144,37,"name"],[108,41,144,41],[108,42,144,42],[109,14,145,14],[110,12,146,12],[110,13,146,13],[110,14,146,14],[111,10,147,8],[112,8,148,6],[114,8,150,6],[115,8,151,6],[115,12,151,10],[115,13,151,11,"currentOptions"],[115,27,151,25],[115,28,151,26,"route"],[115,33,151,31],[115,34,151,32,"name"],[115,38,151,36],[115,39,151,37],[115,40,151,38,"screens"],[115,47,151,45],[115,51,151,49,"route"],[115,56,151,54],[115,57,151,55,"state"],[115,62,151,60],[115,67,151,65,"undefined"],[115,76,151,74],[115,78,151,76],[116,10,152,8,"hasNext"],[116,17,152,15],[116,20,152,18],[116,25,152,23],[117,8,153,6],[117,9,153,7],[117,15,153,13],[118,10,154,8,"index"],[118,15,154,13],[118,18,155,10],[118,25,155,17,"route"],[118,30,155,22],[118,31,155,23,"state"],[118,36,155,28],[118,37,155,29,"index"],[118,42,155,34],[118,47,155,39],[118,55,155,47],[118,58,156,14,"route"],[118,63,156,19],[118,64,156,20,"state"],[118,69,156,25],[118,70,156,26,"index"],[118,75,156,31],[118,78,157,14,"route"],[118,83,157,19],[118,84,157,20,"state"],[118,89,157,25],[118,90,157,26,"routes"],[118,96,157,32],[118,97,157,33,"length"],[118,103,157,39],[118,106,157,42],[118,107,157,43],[119,10,159,8],[119,14,159,14,"nextRoute"],[119,23,159,23],[119,26,159,26,"route"],[119,31,159,31],[119,32,159,32,"state"],[119,37,159,37],[119,38,159,38,"routes"],[119,44,159,44],[119,45,159,45,"index"],[119,50,159,50],[119,51,159,51],[120,10,160,8],[120,14,160,14,"nestedConfig"],[120,26,160,26],[120,29,160,29,"currentOptions"],[120,43,160,43],[120,44,160,44,"route"],[120,49,160,49],[120,50,160,50,"name"],[120,54,160,54],[120,55,160,55],[120,56,160,56,"screens"],[120,63,160,63],[122,10,162,8],[123,10,163,8],[123,14,163,12,"nestedConfig"],[123,26,163,24],[123,30,163,28,"nextRoute"],[123,39,163,37],[123,40,163,38,"name"],[123,44,163,42],[123,48,163,46,"nestedConfig"],[123,60,163,58],[123,62,163,60],[124,12,164,10,"route"],[124,17,164,15],[124,20,164,18,"nextRoute"],[124,29,164,64],[125,12,165,10,"currentOptions"],[125,26,165,24],[125,29,165,27,"nestedConfig"],[125,41,165,39],[126,10,166,8],[126,11,166,9],[126,17,166,15],[127,12,167,10],[128,12,168,10,"hasNext"],[128,19,168,17],[128,22,168,20],[128,27,168,25],[129,10,169,8],[130,8,170,6],[131,6,171,4],[131,7,171,5],[132,6,110,4],[132,13,110,11,"route"],[132,18,110,16],[132,19,110,17,"name"],[132,23,110,21],[132,27,110,25,"currentOptions"],[132,41,110,39],[132,45,110,43,"hasNext"],[132,52,110,50],[133,8,110,50,"_loop2"],[133,14,110,50],[134,6,110,50],[135,6,173,4],[135,10,173,8,"pattern"],[135,17,173,15],[135,22,173,20,"undefined"],[135,31,173,29],[135,33,173,31],[136,8,174,6,"pattern"],[136,15,174,13],[136,18,174,16,"nestedRouteNames"],[136,34,174,32],[136,35,174,33,"join"],[136,39,174,37],[136,40,174,38],[136,43,174,41],[136,44,174,42],[137,6,175,4],[138,6,177,4],[138,10,177,8,"currentOptions"],[138,24,177,22],[138,25,177,23,"route"],[138,30,177,28],[138,31,177,29,"name"],[138,35,177,33],[138,36,177,34],[138,41,177,39,"undefined"],[138,50,177,48],[138,52,177,50],[139,8,178,6,"path"],[139,12,178,10],[139,16,178,14,"pattern"],[139,23,178,21],[139,24,179,9,"split"],[139,29,179,14],[139,30,179,15],[139,33,179,18],[139,34,179,19],[139,35,180,9,"map"],[139,38,180,12],[139,39,180,13],[139,49,180,14,"p"],[139,50,180,15],[139,52,180,20],[140,10,181,10],[140,14,181,16,"name"],[140,18,181,20],[140,21,181,23,"getParamName"],[140,33,181,35],[140,34,181,36,"p"],[140,35,181,37],[140,36,181,38],[142,10,183,10],[143,10,184,10],[144,10,185,10],[145,10,186,10],[145,14,186,14,"p"],[145,15,186,15],[145,20,186,20],[145,23,186,23],[145,25,186,25],[146,12,187,12],[146,19,187,19,"route"],[146,24,187,24],[146,25,187,25,"name"],[146,29,187,29],[147,10,188,10],[149,10,190,10],[150,10,191,10],[150,14,191,14,"p"],[150,15,191,15],[150,16,191,16,"startsWith"],[150,26,191,26],[150,27,191,27],[150,30,191,30],[150,31,191,31],[150,33,191,33],[151,12,192,12],[151,16,192,18,"value"],[151,22,192,23],[151,25,192,26,"allParams"],[151,34,192,35],[151,35,192,36,"name"],[151,39,192,40],[151,40,192,41],[152,12,194,12],[152,16,194,16,"value"],[152,22,194,21],[152,27,194,26,"undefined"],[152,36,194,35],[152,40,194,39,"p"],[152,41,194,40],[152,42,194,41,"endsWith"],[152,50,194,49],[152,51,194,50],[152,54,194,53],[152,55,194,54],[152,57,194,56],[153,14,195,14],[154,14,196,14],[154,21,196,21],[154,23,196,23],[155,12,197,12],[156,12,199,12],[156,19,199,19,"encodeURIComponent"],[156,37,199,37],[156,38,199,38,"value"],[156,44,199,43],[156,45,199,44],[157,10,200,10],[158,10,202,10],[158,17,202,17,"encodeURIComponent"],[158,35,202,35],[158,36,202,36,"p"],[158,37,202,37],[158,38,202,38],[159,8,203,8],[159,9,203,9],[159,10,203,10],[159,11,204,9,"join"],[159,15,204,13],[159,16,204,14],[159,19,204,17],[159,20,204,18],[160,6,205,4],[160,7,205,5],[160,13,205,11],[161,8,206,6,"path"],[161,12,206,10],[161,16,206,14,"encodeURIComponent"],[161,34,206,32],[161,35,206,33,"route"],[161,40,206,38],[161,41,206,39,"name"],[161,45,206,43],[161,46,206,44],[162,6,207,4],[163,6,209,4],[163,10,209,8],[163,11,209,9,"focusedParams"],[163,24,209,22],[163,26,209,24],[164,8,210,6,"focusedParams"],[164,21,210,19],[164,24,210,22,"focusedRoute"],[164,36,210,34],[164,37,210,35,"params"],[164,43,210,41],[165,6,211,4],[166,6,213,4],[166,10,213,8,"route"],[166,15,213,13],[166,16,213,14,"state"],[166,21,213,19],[166,23,213,21],[167,8,214,6,"path"],[167,12,214,10],[167,16,214,14],[167,19,214,17],[168,6,215,4],[168,7,215,5],[168,13,215,11],[168,17,215,15,"focusedParams"],[168,30,215,28],[168,32,215,30],[169,8,216,6],[169,13,216,11],[169,17,216,15,"param"],[169,22,216,20],[169,26,216,24,"focusedParams"],[169,39,216,37],[169,41,216,39],[170,10,217,8],[170,14,217,12,"focusedParams"],[170,27,217,25],[170,28,217,26,"param"],[170,33,217,31],[170,34,217,32],[170,39,217,37],[170,50,217,48],[170,52,217,50],[171,12,218,10],[172,12,219,10],[172,19,219,17,"focusedParams"],[172,32,219,30],[172,33,219,31,"param"],[172,38,219,36],[172,39,219,37],[173,10,220,8],[174,8,221,6],[175,8,223,6],[175,12,223,12,"query"],[175,17,223,17],[175,20,223,20,"queryString"],[175,31,223,31],[175,32,223,32,"stringify"],[175,41,223,41],[175,42,223,42,"focusedParams"],[175,55,223,55],[175,57,223,57],[176,10,223,59,"sort"],[176,14,223,63],[176,16,223,65],[177,8,223,71],[177,9,223,72],[177,10,223,73],[178,8,225,6],[178,12,225,10,"query"],[178,17,225,15],[178,19,225,17],[179,10,226,8,"path"],[179,14,226,12],[179,18,226,17],[179,22,226,20,"query"],[179,27,226,26],[179,29,226,27],[180,8,227,6],[181,6,228,4],[182,6,230,4,"current"],[182,13,230,11],[182,16,230,14,"route"],[182,21,230,19],[182,22,230,20,"state"],[182,27,230,25],[183,4,231,2],[183,5,231,3],[184,4,93,2],[184,11,93,9,"current"],[184,18,93,16],[185,6,93,16,"_loop"],[185,11,93,16],[186,4,93,16],[188,4,233,2],[189,4,234,2,"path"],[189,8,234,6],[189,11,234,9,"path"],[189,15,234,13],[189,16,234,14,"replace"],[189,23,234,21],[189,24,234,22],[189,30,234,28],[189,32,234,30],[189,35,234,33],[189,36,234,34],[190,4,235,2,"path"],[190,8,235,6],[190,11,235,9,"path"],[190,15,235,13],[190,16,235,14,"length"],[190,22,235,20],[190,25,235,23],[190,26,235,24],[190,29,235,27,"path"],[190,33,235,31],[190,34,235,32,"replace"],[190,41,235,39],[190,42,235,40],[190,47,235,45],[190,49,235,47],[190,51,235,49],[190,52,235,50],[190,55,235,53,"path"],[190,59,235,57],[191,4,237,2],[191,11,237,9,"path"],[191,15,237,13],[192,2,238,0],[193,2,240,0],[193,6,240,6,"getParamName"],[193,18,240,18],[193,21,240,21],[193,30,240,6,"getParamName"],[193,42,240,18,"getParamName"],[193,43,240,22,"pattern"],[193,50,240,37],[194,4,240,37],[194,11,241,2,"pattern"],[194,18,241,9],[194,19,241,10,"replace"],[194,26,241,17],[194,27,241,18],[194,31,241,22],[194,33,241,24],[194,35,241,26],[194,36,241,27],[194,37,241,28,"replace"],[194,44,241,35],[194,45,241,36],[194,50,241,41],[194,52,241,43],[194,54,241,45],[194,55,241,46],[195,2,241,46],[196,2,243,0],[196,6,243,6,"joinPaths"],[196,15,243,15],[196,18,243,18],[196,27,243,6,"joinPaths"],[196,36,243,15,"joinPaths"],[196,37,243,15],[197,4,243,15],[197,8,243,15,"_ref3"],[197,13,243,15],[198,4,243,15],[198,13,243,15,"_len"],[198,17,243,15],[198,20,243,15,"arguments"],[198,29,243,15],[198,30,243,15,"length"],[198,36,243,15],[198,38,243,22,"paths"],[198,43,243,27],[198,50,243,27,"Array"],[198,55,243,27],[198,56,243,27,"_len"],[198,60,243,27],[198,63,243,27,"_key"],[198,67,243,27],[198,73,243,27,"_key"],[198,77,243,27],[198,80,243,27,"_len"],[198,84,243,27],[198,86,243,27,"_key"],[198,90,243,27],[199,6,243,22,"paths"],[199,11,243,27],[199,12,243,27,"_key"],[199,16,243,27],[199,20,243,27,"arguments"],[199,29,243,27],[199,30,243,27,"_key"],[199,34,243,27],[200,4,243,27],[201,4,243,27],[201,11,244,2],[201,12,244,2,"_ref3"],[201,17,244,2],[201,20,244,3],[201,22,244,5],[201,24,245,5,"concat"],[201,30,245,11],[201,31,245,11,"apply"],[201,36,245,11],[201,37,245,11,"_ref3"],[201,42,245,11],[201,48,245,11,"_toConsumableArray2"],[201,67,245,11],[201,68,245,11,"default"],[201,75,245,11],[201,77,245,15,"paths"],[201,82,245,20],[201,83,245,21,"map"],[201,86,245,24],[201,87,245,25],[201,97,245,26,"p"],[201,98,245,27],[202,6,245,27],[202,13,245,32,"p"],[202,14,245,33],[202,15,245,34,"split"],[202,20,245,39],[202,21,245,40],[202,24,245,43],[202,25,245,44],[203,4,245,44],[203,6,245,45],[203,8,245,46],[203,9,246,5,"filter"],[203,15,246,11],[203,16,246,12,"Boolean"],[203,23,246,19],[203,24,246,20],[203,25,247,5,"join"],[203,29,247,9],[203,30,247,10],[203,33,247,13],[203,34,247,14],[204,2,247,14],[205,2,249,0],[205,6,249,6,"createConfigItem"],[205,22,249,22],[205,25,249,25],[205,34,249,6,"createConfigItem"],[205,50,249,22,"createConfigItem"],[205,51,250,2,"config"],[205,57,250,37],[205,59,251,2,"parentPattern"],[205,72,251,24],[205,74,252,17],[206,4,252,17],[206,8,252,17,"_pattern3"],[206,17,252,17],[207,4,253,2],[207,8,253,6],[207,15,253,13,"config"],[207,21,253,19],[207,26,253,24],[207,34,253,32],[207,36,253,34],[208,6,254,4],[209,6,255,4],[209,10,255,10,"pattern"],[209,19,255,17],[209,22,255,20,"parentPattern"],[209,35,255,33],[209,38,255,36,"joinPaths"],[209,47,255,45],[209,48,255,46,"parentPattern"],[209,61,255,59],[209,63,255,61,"config"],[209,69,255,67],[209,70,255,68],[209,73,255,71,"config"],[209,79,255,77],[210,6,257,4],[210,13,257,11],[211,8,257,13,"pattern"],[211,15,257,20],[211,17,257,13,"pattern"],[212,6,257,21],[212,7,257,22],[213,4,258,2],[215,4,260,2],[216,4,261,2],[217,4,262,2],[217,8,262,6,"pattern"],[217,15,262,33],[218,4,264,2],[218,8,264,6,"config"],[218,14,264,12],[218,15,264,13,"exact"],[218,20,264,18],[218,24,264,22,"config"],[218,30,264,28],[218,31,264,29,"path"],[218,35,264,33],[218,40,264,38,"undefined"],[218,49,264,47],[218,51,264,49],[219,6,265,4],[219,12,265,10],[219,16,265,14,"Error"],[219,21,265,19],[219,22,266,6],[219,172,267,4],[219,173,267,5],[220,4,268,2],[221,4,270,2,"pattern"],[221,11,270,9],[221,14,271,4,"config"],[221,20,271,10],[221,21,271,11,"exact"],[221,26,271,16],[221,31,271,21],[221,35,271,25],[221,38,272,8,"joinPaths"],[221,47,272,17],[221,48,272,18,"parentPattern"],[221,61,272,31],[221,65,272,35],[221,67,272,37],[221,69,272,39,"config"],[221,75,272,45],[221,76,272,46,"path"],[221,80,272,50],[221,84,272,54],[221,86,272,56],[221,87,272,57],[221,90,273,8,"config"],[221,96,273,14],[221,97,273,15,"path"],[221,101,273,19],[221,105,273,23],[221,107,273,25],[222,4,275,2],[222,8,275,8,"screens"],[222,15,275,15],[222,18,275,18,"config"],[222,24,275,24],[222,25,275,25,"screens"],[222,32,275,32],[222,35,276,6,"createNormalizedConfigs"],[222,58,276,29],[222,59,276,30,"config"],[222,65,276,36],[222,66,276,37,"screens"],[222,73,276,44],[222,75,276,46,"pattern"],[222,82,276,53],[222,83,276,54],[222,86,277,6,"undefined"],[222,95,277,15],[223,4,279,2],[223,11,279,9],[224,6,280,4],[225,6,281,4,"pattern"],[225,13,281,11],[225,16,281,11,"_pattern3"],[225,25,281,11],[225,28,281,13,"pattern"],[225,35,281,20],[225,56,281,13,"_pattern3"],[225,65,281,13],[225,66,281,22,"split"],[225,71,281,27],[225,72,281,28],[225,75,281,31],[225,76,281,32],[225,77,281,33,"filter"],[225,83,281,39],[225,84,281,40,"Boolean"],[225,91,281,47],[225,92,281,48],[225,93,281,49,"join"],[225,97,281,53],[225,98,281,54],[225,101,281,57],[225,102,281,58],[226,6,282,4,"stringify"],[226,15,282,13],[226,17,282,15,"config"],[226,23,282,21],[226,24,282,22,"stringify"],[226,33,282,31],[227,6,283,4,"screens"],[227,13,283,11],[227,15,283,4,"screens"],[228,4,284,2],[228,5,284,3],[229,2,285,0],[229,3,285,1],[230,2,287,0],[230,6,287,6,"createNormalizedConfigs"],[230,29,287,29],[230,32,287,32],[230,41,287,6,"createNormalizedConfigs"],[230,64,287,29,"createNormalizedConfigs"],[230,65,288,2,"options"],[230,72,288,32],[230,74,289,2,"pattern"],[230,81,289,18],[231,4,289,18],[231,11,291,2],[231,15,291,2,"fromEntries"],[231,35,291,13],[231,37,292,4,"Object"],[231,43,292,10],[231,44,292,11,"entries"],[231,51,292,18],[231,52,292,19,"options"],[231,59,292,26],[231,60,292,27],[231,61,292,28,"map"],[231,64,292,31],[231,65,292,32],[231,75,292,32,"_ref4"],[231,80,292,32],[231,82,292,47],[232,6,292,47],[232,10,292,47,"_ref5"],[232,15,292,47],[232,22,292,47,"_slicedToArray2"],[232,37,292,47],[232,38,292,47,"default"],[232,45,292,47],[232,47,292,47,"_ref4"],[232,52,292,47],[233,8,292,34,"name"],[233,12,292,38],[233,15,292,38,"_ref5"],[233,20,292,38],[234,8,292,40,"c"],[234,9,292,41],[234,12,292,41,"_ref5"],[234,17,292,41],[235,6,293,6],[235,10,293,12,"result"],[235,16,293,18],[235,19,293,21,"createConfigItem"],[235,35,293,37],[235,36,293,38,"c"],[235,37,293,39],[235,39,293,41,"pattern"],[235,46,293,48],[235,47,293,49],[236,6,295,6],[236,13,295,13],[236,14,295,14,"name"],[236,18,295,18],[236,20,295,20,"result"],[236,26,295,26],[236,27,295,27],[237,4,296,4],[237,5,296,5],[237,6,297,2],[237,7,297,3],[238,2,297,3],[239,0,297,4]],"functionMap":{"names":["<global>","getActiveRoute","getPathFromState","Object.entries.map$argument_0","pattern.split.filter$argument_0","pattern.split.filter.forEach$argument_0","pattern.split.map$argument_0","getParamName","joinPaths","paths.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBC0B;CDW;eE+B;2CCkD;WDG;oBEc,wBF;qBGE;aHQ;aIkC;SJuB;CFmC;qBOE;8CPC;kBQE;yBCE,mBD;cRE;yBUE;CVoC;gCWE;gCRK;KQI;GXC"}},"type":"js/module"}]}