{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":51,"column":38,"index":1917}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":51,"column":38,"index":1917}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"expo-asset","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"h1flaGV4Ama4nvRaXHxJNVs4lcs="}},{"name":"expo-constants","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":39,"index":75}}],"key":"2TquPknmjb1g5OMuvQ0eTuioYjU="}},{"name":"expo-modules-core","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":47,"index":123}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":124},"end":{"line":4,"column":40,"index":164}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./ExpoFontLoader","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":0,"index":165},"end":{"line":5,"column":46,"index":211}}],"key":"KK+yT+oF8ktP56kCbQmPR1OEhiQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fontFamilyNeedsScoping = fontFamilyNeedsScoping;\n  exports.getAssetForSource = getAssetForSource;\n  exports.getNativeFontName = getNativeFontName;\n  exports.loadSingleFontAsync = loadSingleFontAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoAsset = _$$_REQUIRE(_dependencyMap[2], \"expo-asset\");\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n  var _expoModulesCore = _$$_REQUIRE(_dependencyMap[4], \"expo-modules-core\");\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n  var _ExpoFontLoader = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./ExpoFontLoader\"));\n  var isInClient = _expoConstants.default.appOwnership === 'expo';\n  var isInIOSStandalone = _expoConstants.default.appOwnership === 'standalone' && _reactNative.Platform.OS === 'ios';\n  function fontFamilyNeedsScoping(name) {\n    return (isInClient || isInIOSStandalone) && !_expoConstants.default.systemFonts.includes(name) && name !== 'System' && !name.includes(_expoConstants.default.sessionId);\n  }\n  function getAssetForSource(source) {\n    if (source instanceof _expoAsset.Asset) {\n      return source;\n    }\n    if (typeof source === 'string') {\n      return _expoAsset.Asset.fromURI(source);\n    } else if (typeof source === 'number') {\n      return _expoAsset.Asset.fromModule(source);\n    } else if (typeof source === 'object' && typeof source.uri !== 'undefined') {\n      return getAssetForSource(source.uri);\n    }\n    // @ts-ignore Error: Type 'string' is not assignable to type 'Asset'\n    // We can't have a string here, we would have thrown an error if !isWeb\n    // or returned Asset.fromModule if isWeb.\n    return source;\n  }\n  function loadSingleFontAsync(_x, _x2) {\n    return _loadSingleFontAsync.apply(this, arguments);\n  }\n  function _loadSingleFontAsync() {\n    _loadSingleFontAsync = (0, _asyncToGenerator2.default)(function* (name, input) {\n      var asset = input;\n      if (!asset.downloadAsync) {\n        throw new _expoModulesCore.CodedError(`ERR_FONT_SOURCE`, '`loadSingleFontAsync` expected resource of type `Asset` from expo-asset on native');\n      }\n      yield asset.downloadAsync();\n      if (!asset.downloaded) {\n        throw new _expoModulesCore.CodedError(`ERR_DOWNLOAD`, `Failed to download asset for font \"${name}\"`);\n      }\n      yield _ExpoFontLoader.default.loadAsync(getNativeFontName(name), asset.localUri);\n    });\n    return _loadSingleFontAsync.apply(this, arguments);\n  }\n  function getNativeFontName(name) {\n    if (fontFamilyNeedsScoping(name)) {\n      return `${_expoConstants.default.sessionId}-${name}`;\n    } else {\n      return name;\n    }\n  }\n});","lineCount":61,"map":[[11,2,1,0],[11,6,1,0,"_expoAsset"],[11,16,1,0],[11,19,1,0,"_$$_REQUIRE"],[11,30,1,0],[11,31,1,0,"_dependencyMap"],[11,45,1,0],[12,2,2,0],[12,6,2,0,"_expoConstants"],[12,20,2,0],[12,23,2,0,"_interopRequireDefault"],[12,45,2,0],[12,46,2,0,"_$$_REQUIRE"],[12,57,2,0],[12,58,2,0,"_dependencyMap"],[12,72,2,0],[13,2,3,0],[13,6,3,0,"_expoModulesCore"],[13,22,3,0],[13,25,3,0,"_$$_REQUIRE"],[13,36,3,0],[13,37,3,0,"_dependencyMap"],[13,51,3,0],[14,2,4,0],[14,6,4,0,"_reactNative"],[14,18,4,0],[14,21,4,0,"_$$_REQUIRE"],[14,32,4,0],[14,33,4,0,"_dependencyMap"],[14,47,4,0],[15,2,5,0],[15,6,5,0,"_ExpoFontLoader"],[15,21,5,0],[15,24,5,0,"_interopRequireDefault"],[15,46,5,0],[15,47,5,0,"_$$_REQUIRE"],[15,58,5,0],[15,59,5,0,"_dependencyMap"],[15,73,5,0],[16,2,6,0],[16,6,6,6,"isInClient"],[16,16,6,16],[16,19,6,19,"Constants"],[16,41,6,28],[16,42,6,29,"appOwnership"],[16,54,6,41],[16,59,6,46],[16,65,6,52],[17,2,7,0],[17,6,7,6,"isInIOSStandalone"],[17,23,7,23],[17,26,7,26,"Constants"],[17,48,7,35],[17,49,7,36,"appOwnership"],[17,61,7,48],[17,66,7,53],[17,78,7,65],[17,82,7,69,"Platform"],[17,103,7,77],[17,104,7,78,"OS"],[17,106,7,80],[17,111,7,85],[17,116,7,90],[18,2,8,7],[18,11,8,16,"fontFamilyNeedsScoping"],[18,33,8,38,"fontFamilyNeedsScoping"],[18,34,8,39,"name"],[18,38,8,43],[18,40,8,45],[19,4,9,4],[19,11,9,12],[19,12,9,13,"isInClient"],[19,22,9,23],[19,26,9,27,"isInIOSStandalone"],[19,43,9,44],[19,48,10,8],[19,49,10,9,"Constants"],[19,71,10,18],[19,72,10,19,"systemFonts"],[19,83,10,30],[19,84,10,31,"includes"],[19,92,10,39],[19,93,10,40,"name"],[19,97,10,44],[19,98,10,45],[19,102,11,8,"name"],[19,106,11,12],[19,111,11,17],[19,119,11,25],[19,123,12,8],[19,124,12,9,"name"],[19,128,12,13],[19,129,12,14,"includes"],[19,137,12,22],[19,138,12,23,"Constants"],[19,160,12,32],[19,161,12,33,"sessionId"],[19,170,12,42],[19,171,12,43],[20,2,13,0],[21,2,14,7],[21,11,14,16,"getAssetForSource"],[21,28,14,33,"getAssetForSource"],[21,29,14,34,"source"],[21,35,14,40],[21,37,14,42],[22,4,15,4],[22,8,15,8,"source"],[22,14,15,14],[22,26,15,26,"Asset"],[22,42,15,31],[22,44,15,33],[23,6,16,8],[23,13,16,15,"source"],[23,19,16,21],[24,4,17,4],[25,4,18,4],[25,8,18,8],[25,15,18,15,"source"],[25,21,18,21],[25,26,18,26],[25,34,18,34],[25,36,18,36],[26,6,19,8],[26,13,19,15,"Asset"],[26,29,19,20],[26,30,19,21,"fromURI"],[26,37,19,28],[26,38,19,29,"source"],[26,44,19,35],[26,45,19,36],[27,4,20,4],[27,5,20,5],[27,11,21,9],[27,15,21,13],[27,22,21,20,"source"],[27,28,21,26],[27,33,21,31],[27,41,21,39],[27,43,21,41],[28,6,22,8],[28,13,22,15,"Asset"],[28,29,22,20],[28,30,22,21,"fromModule"],[28,40,22,31],[28,41,22,32,"source"],[28,47,22,38],[28,48,22,39],[29,4,23,4],[29,5,23,5],[29,11,24,9],[29,15,24,13],[29,22,24,20,"source"],[29,28,24,26],[29,33,24,31],[29,41,24,39],[29,45,24,43],[29,52,24,50,"source"],[29,58,24,56],[29,59,24,57,"uri"],[29,62,24,60],[29,67,24,65],[29,78,24,76],[29,80,24,78],[30,6,25,8],[30,13,25,15,"getAssetForSource"],[30,30,25,32],[30,31,25,33,"source"],[30,37,25,39],[30,38,25,40,"uri"],[30,41,25,43],[30,42,25,44],[31,4,26,4],[32,4,27,4],[33,4,28,4],[34,4,29,4],[35,4,30,4],[35,11,30,11,"source"],[35,17,30,17],[36,2,31,0],[37,2,31,1],[37,11,32,22,"loadSingleFontAsync"],[37,30,32,41,"loadSingleFontAsync"],[37,31,32,41,"_x"],[37,33,32,41],[37,35,32,41,"_x2"],[37,38,32,41],[38,4,32,41],[38,11,32,41,"_loadSingleFontAsync"],[38,31,32,41],[38,32,32,41,"apply"],[38,37,32,41],[38,44,32,41,"arguments"],[38,53,32,41],[39,2,32,41],[40,2,32,41],[40,11,32,41,"_loadSingleFontAsync"],[40,32,32,41],[41,4,32,41,"_loadSingleFontAsync"],[41,24,32,41],[41,31,32,41,"_asyncToGenerator2"],[41,49,32,41],[41,50,32,41,"default"],[41,57,32,41],[41,59,32,7],[41,70,32,42,"name"],[41,74,32,46],[41,76,32,48,"input"],[41,81,32,53],[41,83,32,55],[42,6,33,4],[42,10,33,10,"asset"],[42,15,33,15],[42,18,33,18,"input"],[42,23,33,23],[43,6,34,4],[43,10,34,8],[43,11,34,9,"asset"],[43,16,34,14],[43,17,34,15,"downloadAsync"],[43,30,34,28],[43,32,34,30],[44,8,35,8],[44,14,35,14],[44,18,35,18,"CodedError"],[44,45,35,28],[44,46,35,30],[44,63,35,46],[44,65,35,48],[44,148,35,131],[44,149,35,132],[45,6,36,4],[46,6,37,4],[46,12,37,10,"asset"],[46,17,37,15],[46,18,37,16,"downloadAsync"],[46,31,37,29],[46,32,37,30],[46,33,37,31],[47,6,38,4],[47,10,38,8],[47,11,38,9,"asset"],[47,16,38,14],[47,17,38,15,"downloaded"],[47,27,38,25],[47,29,38,27],[48,8,39,8],[48,14,39,14],[48,18,39,18,"CodedError"],[48,45,39,28],[48,46,39,30],[48,60,39,43],[48,62,39,46],[48,100,39,83,"name"],[48,104,39,88],[48,107,39,90],[48,108,39,91],[49,6,40,4],[50,6,41,4],[50,12,41,10,"ExpoFontLoader"],[50,35,41,24],[50,36,41,25,"loadAsync"],[50,45,41,34],[50,46,41,35,"getNativeFontName"],[50,63,41,52],[50,64,41,53,"name"],[50,68,41,57],[50,69,41,58],[50,71,41,60,"asset"],[50,76,41,65],[50,77,41,66,"localUri"],[50,85,41,74],[50,86,41,75],[51,4,42,0],[51,5,42,1],[52,4,42,1],[52,11,42,1,"_loadSingleFontAsync"],[52,31,42,1],[52,32,42,1,"apply"],[52,37,42,1],[52,44,42,1,"arguments"],[52,53,42,1],[53,2,42,1],[54,2,43,7],[54,11,43,16,"getNativeFontName"],[54,28,43,33,"getNativeFontName"],[54,29,43,34,"name"],[54,33,43,38],[54,35,43,40],[55,4,44,4],[55,8,44,8,"fontFamilyNeedsScoping"],[55,30,44,30],[55,31,44,31,"name"],[55,35,44,35],[55,36,44,36],[55,38,44,38],[56,6,45,8],[56,13,45,16],[56,16,45,18,"Constants"],[56,38,45,27],[56,39,45,28,"sessionId"],[56,48,45,38],[56,52,45,41,"name"],[56,56,45,46],[56,58,45,47],[57,4,46,4],[57,5,46,5],[57,11,47,9],[58,6,48,8],[58,13,48,15,"name"],[58,17,48,19],[59,4,49,4],[60,2,50,0],[61,0,50,1]],"functionMap":{"names":["<global>","fontFamilyNeedsScoping","getAssetForSource","loadSingleFontAsync","getNativeFontName"],"mappings":"AAA;OCO;CDK;OEC;CFiB;OGC;CHU;OIC;CJO"}},"type":"js/module"}]}