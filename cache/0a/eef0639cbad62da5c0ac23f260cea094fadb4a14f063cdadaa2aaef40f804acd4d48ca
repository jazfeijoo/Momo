{"dependencies":[{"name":"./Utilities/deepFreezeAndThrowOnMutationInDev","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":42,"index":279},"end":{"line":13,"column":98,"index":335}}],"key":"zLczKFLKeDS62gYfpDjh2yXdOgQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0], \"./Utilities/deepFreezeAndThrowOnMutationInDev\");\n\n  /**\n   * A collection of Unicode sequences for various characters and emoji.\n   *\n   *  - More explicit than using the sequences directly in code.\n   *  - Source code should be limited to ASCII.\n   *  - Less chance of typos.\n   */\n  var UTFSequence = deepFreezeAndThrowOnMutationInDev({\n    BOM: \"\\uFEFF\",\n    // byte order mark\n    BULLET: \"\\u2022\",\n    // bullet: &#8226;\n    BULLET_SP: \"\\xA0\\u2022\\xA0\",\n    // &nbsp;&#8226;&nbsp;\n    MIDDOT: \"\\xB7\",\n    // normal middle dot: &middot;\n    MIDDOT_SP: \"\\xA0\\xB7\\xA0\",\n    // &nbsp;&middot;&nbsp;\n    MIDDOT_KATAKANA: \"\\u30FB\",\n    // katakana middle dot\n    MDASH: \"\\u2014\",\n    // em dash: &mdash;\n    MDASH_SP: \"\\xA0\\u2014\\xA0\",\n    // &nbsp;&mdash;&nbsp;\n    NDASH: \"\\u2013\",\n    // en dash: &ndash;\n    NDASH_SP: \"\\xA0\\u2013\\xA0\",\n    // &nbsp;&ndash;&nbsp;\n    NEWLINE: \"\\n\",\n    NBSP: \"\\xA0\",\n    // non-breaking space: &nbsp;\n    PIZZA: \"\\uD83C\\uDF55\",\n    TRIANGLE_LEFT: \"\\u25C0\",\n    // black left-pointing triangle\n    TRIANGLE_RIGHT: \"\\u25B6\" // black right-pointing triangle\n  });\n  var _default = exports.default = UTFSequence;\n});","lineCount":57,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13,"exports"],[17,9,11,13],[17,10,11,13,"default"],[17,17,11,13],[18,2,13,0],[18,6,13,6,"deepFreezeAndThrowOnMutationInDev"],[18,39,13,39],[18,42,13,42,"require"],[18,53,13,49],[18,54,13,49,"_dependencyMap"],[18,68,13,49],[18,120,13,97],[18,121,13,98],[20,2,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,2,22,0],[27,6,22,6,"UTFSequence"],[27,17,38,2],[27,20,38,5,"deepFreezeAndThrowOnMutationInDev"],[27,53,38,38],[27,54,38,39],[28,4,39,2,"BOM"],[28,7,39,5],[28,9,39,7],[28,17,39,15],[29,4,39,17],[30,4,40,2,"BULLET"],[30,10,40,8],[30,12,40,10],[30,20,40,18],[31,4,40,20],[32,4,41,2,"BULLET_SP"],[32,13,41,11],[32,15,41,13],[32,31,41,33],[33,4,41,35],[34,4,42,2,"MIDDOT"],[34,10,42,8],[34,12,42,10],[34,18,42,18],[35,4,42,20],[36,4,43,2,"MIDDOT_SP"],[36,13,43,11],[36,15,43,13],[36,29,43,33],[37,4,43,35],[38,4,44,2,"MIDDOT_KATAKANA"],[38,19,44,17],[38,21,44,19],[38,29,44,27],[39,4,44,29],[40,4,45,2,"MDASH"],[40,9,45,7],[40,11,45,9],[40,19,45,17],[41,4,45,19],[42,4,46,2,"MDASH_SP"],[42,12,46,10],[42,14,46,12],[42,30,46,32],[43,4,46,34],[44,4,47,2,"NDASH"],[44,9,47,7],[44,11,47,9],[44,19,47,17],[45,4,47,19],[46,4,48,2,"NDASH_SP"],[46,12,48,10],[46,14,48,12],[46,30,48,32],[47,4,48,34],[48,4,49,2,"NEWLINE"],[48,11,49,9],[48,13,49,11],[48,17,49,19],[49,4,50,2,"NBSP"],[49,8,50,6],[49,10,50,8],[49,16,50,16],[50,4,50,18],[51,4,51,2,"PIZZA"],[51,9,51,7],[51,11,51,9],[51,25,51,23],[52,4,52,2,"TRIANGLE_LEFT"],[52,17,52,15],[52,19,52,17],[52,27,52,25],[53,4,52,27],[54,4,53,2,"TRIANGLE_RIGHT"],[54,18,53,16],[54,20,53,18],[54,28,53,26],[54,29,53,28],[55,2,54,0],[55,3,54,1],[55,4,54,2],[56,2,54,3],[56,6,54,3,"_default"],[56,14,54,3],[56,17,54,3,"exports"],[56,24,54,3],[56,25,54,3,"default"],[56,32,54,3],[56,35,56,15,"UTFSequence"],[56,46,56,26],[57,0,56,26]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}