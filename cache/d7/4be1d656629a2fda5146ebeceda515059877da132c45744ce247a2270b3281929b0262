{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":134,"column":0,"index":3687}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":300},"end":{"line":13,"column":68,"index":368}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":369},"end":{"line":14,"column":45,"index":414}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeIntentAndroid","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":415},"end":{"line":15,"column":56,"index":471}}],"key":"EfutOvh8LBxg20WgvOtCRMg1gOY="}},{"name":"./NativeLinkingManager","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":472},"end":{"line":16,"column":58,"index":530}}],"key":"Vh03zqRMdPDBgLxWsoiPiqdaAAE="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":531},"end":{"line":17,"column":34,"index":565}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"nullthrows","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":566},"end":{"line":18,"column":36,"index":602}}],"key":"3yYZ/IFwZXE7GnlKPSAzr74cRoo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _NativeEventEmitter2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../EventEmitter/NativeEventEmitter\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../Utilities/Platform\"));\n  var _NativeIntentAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./NativeIntentAndroid\"));\n  var _NativeLinkingManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./NativeLinkingManager\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"invariant\"));\n  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"nullthrows\"));\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } } /**\n                                                                                                                                                                                                                                                                                                                                             * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                                                                                                                                                                                                                                                             *\n                                                                                                                                                                                                                                                                                                                                             * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                                                                                             * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                             *\n                                                                                                                                                                                                                                                                                                                                             * @format\n                                                                                                                                                                                                                                                                                                                                             * \n                                                                                                                                                                                                                                                                                                                                             */\n  /**\n   * `Linking` gives you a general interface to interact with both incoming\n   * and outgoing app links.\n   *\n   * See https://reactnative.dev/docs/linking\n   */\n  var Linking = /*#__PURE__*/function (_NativeEventEmitter) {\n    (0, _inherits2.default)(Linking, _NativeEventEmitter);\n    var _super = _createSuper(Linking);\n    function Linking() {\n      (0, _classCallCheck2.default)(this, Linking);\n      return _super.call(this, _Platform.default.OS === 'ios' ? (0, _nullthrows.default)(_NativeLinkingManager.default) : undefined);\n    }\n\n    /**\n     * Add a handler to Linking changes by listening to the `url` event type\n     * and providing the handler\n     *\n     * See https://reactnative.dev/docs/linking#addeventlistener\n     */\n    (0, _createClass2.default)(Linking, [{\n      key: \"addEventListener\",\n      value: function addEventListener(eventType, listener, context) {\n        return this.addListener(eventType, listener);\n      }\n\n      /**\n       * Try to open the given `url` with any of the installed apps.\n       *\n       * See https://reactnative.dev/docs/linking#openurl\n       */\n    }, {\n      key: \"openURL\",\n      value: function openURL(url) {\n        this._validateURL(url);\n        if (_Platform.default.OS === 'android') {\n          return (0, _nullthrows.default)(_NativeIntentAndroid.default).openURL(url);\n        } else {\n          return (0, _nullthrows.default)(_NativeLinkingManager.default).openURL(url);\n        }\n      }\n\n      /**\n       * Determine whether or not an installed app can handle a given URL.\n       *\n       * See https://reactnative.dev/docs/linking#canopenurl\n       */\n    }, {\n      key: \"canOpenURL\",\n      value: function canOpenURL(url) {\n        this._validateURL(url);\n        if (_Platform.default.OS === 'android') {\n          return (0, _nullthrows.default)(_NativeIntentAndroid.default).canOpenURL(url);\n        } else {\n          return (0, _nullthrows.default)(_NativeLinkingManager.default).canOpenURL(url);\n        }\n      }\n\n      /**\n       * Open app settings.\n       *\n       * See https://reactnative.dev/docs/linking#opensettings\n       */\n    }, {\n      key: \"openSettings\",\n      value: function openSettings() {\n        if (_Platform.default.OS === 'android') {\n          return (0, _nullthrows.default)(_NativeIntentAndroid.default).openSettings();\n        } else {\n          return (0, _nullthrows.default)(_NativeLinkingManager.default).openSettings();\n        }\n      }\n\n      /**\n       * If the app launch was triggered by an app link,\n       * it will give the link url, otherwise it will give `null`\n       *\n       * See https://reactnative.dev/docs/linking#getinitialurl\n       */\n    }, {\n      key: \"getInitialURL\",\n      value: function getInitialURL() {\n        return _Platform.default.OS === 'android' ? (0, _nullthrows.default)(_NativeIntentAndroid.default).getInitialURL() : (0, _nullthrows.default)(_NativeLinkingManager.default).getInitialURL();\n      }\n\n      /*\n       * Launch an Android intent with extras (optional)\n       *\n       * @platform android\n       *\n       * See https://reactnative.dev/docs/linking#sendintent\n       */\n    }, {\n      key: \"sendIntent\",\n      value: function sendIntent(action, extras) {\n        if (_Platform.default.OS === 'android') {\n          return (0, _nullthrows.default)(_NativeIntentAndroid.default).sendIntent(action, extras);\n        } else {\n          return new Promise(function (resolve, reject) {\n            return reject(new Error('Unsupported'));\n          });\n        }\n      }\n    }, {\n      key: \"_validateURL\",\n      value: function _validateURL(url) {\n        (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n        (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n      }\n    }]);\n    return Linking;\n  }(_NativeEventEmitter2.default);\n  module.exports = new Linking();\n});","lineCount":137,"map":[[8,2,13,0],[8,6,13,0,"_NativeEventEmitter2"],[8,26,13,0],[8,29,13,0,"_interopRequireDefault"],[8,51,13,0],[8,52,13,0,"_$$_REQUIRE"],[8,63,13,0],[8,64,13,0,"_dependencyMap"],[8,78,13,0],[9,2,14,0],[9,6,14,0,"_Platform"],[9,15,14,0],[9,18,14,0,"_interopRequireDefault"],[9,40,14,0],[9,41,14,0,"_$$_REQUIRE"],[9,52,14,0],[9,53,14,0,"_dependencyMap"],[9,67,14,0],[10,2,15,0],[10,6,15,0,"_NativeIntentAndroid"],[10,26,15,0],[10,29,15,0,"_interopRequireDefault"],[10,51,15,0],[10,52,15,0,"_$$_REQUIRE"],[10,63,15,0],[10,64,15,0,"_dependencyMap"],[10,78,15,0],[11,2,16,0],[11,6,16,0,"_NativeLinkingManager"],[11,27,16,0],[11,30,16,0,"_interopRequireDefault"],[11,52,16,0],[11,53,16,0,"_$$_REQUIRE"],[11,64,16,0],[11,65,16,0,"_dependencyMap"],[11,79,16,0],[12,2,17,0],[12,6,17,0,"_invariant"],[12,16,17,0],[12,19,17,0,"_interopRequireDefault"],[12,41,17,0],[12,42,17,0,"_$$_REQUIRE"],[12,53,17,0],[12,54,17,0,"_dependencyMap"],[12,68,17,0],[13,2,18,0],[13,6,18,0,"_nullthrows"],[13,17,18,0],[13,20,18,0,"_interopRequireDefault"],[13,42,18,0],[13,43,18,0,"_$$_REQUIRE"],[13,54,18,0],[13,55,18,0,"_dependencyMap"],[13,69,18,0],[14,2,18,36],[14,11,18,36,"_createSuper"],[14,24,18,36,"Derived"],[14,31,18,36],[14,39,18,36,"hasNativeReflectConstruct"],[14,64,18,36],[14,67,18,36,"_isNativeReflectConstruct"],[14,92,18,36],[14,112,18,36,"_createSuperInternal"],[14,133,18,36],[14,141,18,36,"Super"],[14,146,18,36],[14,153,18,36,"_getPrototypeOf2"],[14,169,18,36],[14,170,18,36,"default"],[14,177,18,36],[14,179,18,36,"Derived"],[14,186,18,36],[14,189,18,36,"result"],[14,195,18,36],[14,201,18,36,"hasNativeReflectConstruct"],[14,226,18,36],[14,234,18,36,"NewTarget"],[14,243,18,36],[14,250,18,36,"_getPrototypeOf2"],[14,266,18,36],[14,267,18,36,"default"],[14,274,18,36],[14,282,18,36,"constructor"],[14,293,18,36],[14,295,18,36,"result"],[14,301,18,36],[14,304,18,36,"Reflect"],[14,311,18,36],[14,312,18,36,"construct"],[14,321,18,36],[14,322,18,36,"Super"],[14,327,18,36],[14,329,18,36,"arguments"],[14,338,18,36],[14,340,18,36,"NewTarget"],[14,349,18,36],[14,361,18,36,"result"],[14,367,18,36],[14,370,18,36,"Super"],[14,375,18,36],[14,376,18,36,"apply"],[14,381,18,36],[14,388,18,36,"arguments"],[14,397,18,36],[14,413,18,36,"_possibleConstructorReturn2"],[14,440,18,36],[14,441,18,36,"default"],[14,448,18,36],[14,456,18,36,"result"],[14,462,18,36],[15,2,18,36],[15,11,18,36,"_isNativeReflectConstruct"],[15,37,18,36],[15,52,18,36,"Reflect"],[15,59,18,36],[15,80,18,36,"Reflect"],[15,87,18,36],[15,88,18,36,"construct"],[15,97,18,36],[15,117,18,36,"Reflect"],[15,124,18,36],[15,125,18,36,"construct"],[15,134,18,36],[15,135,18,36,"sham"],[15,139,18,36],[15,166,18,36,"Proxy"],[15,171,18,36],[15,207,18,36,"Boolean"],[15,214,18,36],[15,215,18,36,"prototype"],[15,224,18,36],[15,225,18,36,"valueOf"],[15,232,18,36],[15,233,18,36,"call"],[15,237,18,36],[15,238,18,36,"Reflect"],[15,245,18,36],[15,246,18,36,"construct"],[15,255,18,36],[15,256,18,36,"Boolean"],[15,263,18,36],[15,309,18,36,"e"],[15,310,18,36],[15,332,1,0],[16,0,2,0],[17,0,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,2,24,0],[25,0,25,0],[26,0,26,0],[27,0,27,0],[28,0,28,0],[29,0,29,0],[30,2,24,0],[30,6,30,6,"Linking"],[30,13,30,13],[30,39,30,13,"_NativeEventEmitter"],[30,58,30,13],[31,4,30,13],[31,8,30,13,"_inherits2"],[31,18,30,13],[31,19,30,13,"default"],[31,26,30,13],[31,28,30,13,"Linking"],[31,35,30,13],[31,37,30,13,"_NativeEventEmitter"],[31,56,30,13],[32,4,30,13],[32,8,30,13,"_super"],[32,14,30,13],[32,17,30,13,"_createSuper"],[32,29,30,13],[32,30,30,13,"Linking"],[32,37,30,13],[33,4,31,2],[33,13,31,2,"Linking"],[33,21,31,2],[33,23,31,16],[34,6,31,16],[34,10,31,16,"_classCallCheck2"],[34,26,31,16],[34,27,31,16,"default"],[34,34,31,16],[34,42,31,16,"Linking"],[34,49,31,16],[35,6,31,16],[35,13,31,16,"_super"],[35,19,31,16],[35,20,31,16,"call"],[35,24,31,16],[35,31,32,10,"Platform"],[35,48,32,18],[35,49,32,19,"OS"],[35,51,32,21],[35,56,32,26],[35,61,32,31],[35,64,32,34],[35,68,32,34,"nullthrows"],[35,87,32,44],[35,89,32,45,"NativeLinkingManager"],[35,118,32,65],[35,119,32,66],[35,122,32,69,"undefined"],[35,131,32,78],[36,4,33,2],[38,4,35,2],[39,0,36,0],[40,0,37,0],[41,0,38,0],[42,0,39,0],[43,0,40,0],[44,4,35,2],[44,8,35,2,"_createClass2"],[44,21,35,2],[44,22,35,2,"default"],[44,29,35,2],[44,31,35,2,"Linking"],[44,38,35,2],[45,6,35,2,"key"],[45,9,35,2],[46,6,35,2,"value"],[46,11,35,2],[46,13,41,2],[46,22,41,2,"addEventListener"],[46,39,42,4,"eventType"],[46,48,42,16],[46,50,43,4,"listener"],[46,58,43,68],[46,60,44,4,"context"],[46,67,44,23],[46,69,45,23],[47,8,46,4],[47,15,46,11],[47,19,46,15],[47,20,46,16,"addListener"],[47,31,46,27],[47,32,46,28,"eventType"],[47,41,46,37],[47,43,46,39,"listener"],[47,51,46,47],[47,52,46,48],[48,6,47,2],[50,6,49,2],[51,0,50,0],[52,0,51,0],[53,0,52,0],[54,0,53,0],[55,4,49,2],[56,6,49,2,"key"],[56,9,49,2],[57,6,49,2,"value"],[57,11,49,2],[57,13,54,2],[57,22,54,2,"openURL"],[57,30,54,10,"url"],[57,33,54,21],[57,35,54,38],[58,8,55,4],[58,12,55,8],[58,13,55,9,"_validateURL"],[58,25,55,21],[58,26,55,22,"url"],[58,29,55,25],[58,30,55,26],[59,8,56,4],[59,12,56,8,"Platform"],[59,29,56,16],[59,30,56,17,"OS"],[59,32,56,19],[59,37,56,24],[59,46,56,33],[59,48,56,35],[60,10,57,6],[60,17,57,13],[60,21,57,13,"nullthrows"],[60,40,57,23],[60,42,57,24,"NativeIntentAndroid"],[60,70,57,43],[60,71,57,44],[60,72,57,45,"openURL"],[60,79,57,52],[60,80,57,53,"url"],[60,83,57,56],[60,84,57,57],[61,8,58,4],[61,9,58,5],[61,15,58,11],[62,10,59,6],[62,17,59,13],[62,21,59,13,"nullthrows"],[62,40,59,23],[62,42,59,24,"NativeLinkingManager"],[62,71,59,44],[62,72,59,45],[62,73,59,46,"openURL"],[62,80,59,53],[62,81,59,54,"url"],[62,84,59,57],[62,85,59,58],[63,8,60,4],[64,6,61,2],[66,6,63,2],[67,0,64,0],[68,0,65,0],[69,0,66,0],[70,0,67,0],[71,4,63,2],[72,6,63,2,"key"],[72,9,63,2],[73,6,63,2,"value"],[73,11,63,2],[73,13,68,2],[73,22,68,2,"canOpenURL"],[73,33,68,13,"url"],[73,36,68,24],[73,38,68,44],[74,8,69,4],[74,12,69,8],[74,13,69,9,"_validateURL"],[74,25,69,21],[74,26,69,22,"url"],[74,29,69,25],[74,30,69,26],[75,8,70,4],[75,12,70,8,"Platform"],[75,29,70,16],[75,30,70,17,"OS"],[75,32,70,19],[75,37,70,24],[75,46,70,33],[75,48,70,35],[76,10,71,6],[76,17,71,13],[76,21,71,13,"nullthrows"],[76,40,71,23],[76,42,71,24,"NativeIntentAndroid"],[76,70,71,43],[76,71,71,44],[76,72,71,45,"canOpenURL"],[76,82,71,55],[76,83,71,56,"url"],[76,86,71,59],[76,87,71,60],[77,8,72,4],[77,9,72,5],[77,15,72,11],[78,10,73,6],[78,17,73,13],[78,21,73,13,"nullthrows"],[78,40,73,23],[78,42,73,24,"NativeLinkingManager"],[78,71,73,44],[78,72,73,45],[78,73,73,46,"canOpenURL"],[78,83,73,56],[78,84,73,57,"url"],[78,87,73,60],[78,88,73,61],[79,8,74,4],[80,6,75,2],[82,6,77,2],[83,0,78,0],[84,0,79,0],[85,0,80,0],[86,0,81,0],[87,4,77,2],[88,6,77,2,"key"],[88,9,77,2],[89,6,77,2,"value"],[89,11,77,2],[89,13,82,2],[89,22,82,2,"openSettings"],[89,35,82,2],[89,37,82,32],[90,8,83,4],[90,12,83,8,"Platform"],[90,29,83,16],[90,30,83,17,"OS"],[90,32,83,19],[90,37,83,24],[90,46,83,33],[90,48,83,35],[91,10,84,6],[91,17,84,13],[91,21,84,13,"nullthrows"],[91,40,84,23],[91,42,84,24,"NativeIntentAndroid"],[91,70,84,43],[91,71,84,44],[91,72,84,45,"openSettings"],[91,84,84,57],[91,85,84,58],[91,86,84,59],[92,8,85,4],[92,9,85,5],[92,15,85,11],[93,10,86,6],[93,17,86,13],[93,21,86,13,"nullthrows"],[93,40,86,23],[93,42,86,24,"NativeLinkingManager"],[93,71,86,44],[93,72,86,45],[93,73,86,46,"openSettings"],[93,85,86,58],[93,86,86,59],[93,87,86,60],[94,8,87,4],[95,6,88,2],[97,6,90,2],[98,0,91,0],[99,0,92,0],[100,0,93,0],[101,0,94,0],[102,0,95,0],[103,4,90,2],[104,6,90,2,"key"],[104,9,90,2],[105,6,90,2,"value"],[105,11,90,2],[105,13,96,2],[105,22,96,2,"getInitialURL"],[105,36,96,2],[105,38,96,36],[106,8,97,4],[106,15,97,11,"Platform"],[106,32,97,19],[106,33,97,20,"OS"],[106,35,97,22],[106,40,97,27],[106,49,97,36],[106,52,98,8],[106,56,98,8,"nullthrows"],[106,75,98,18],[106,77,98,19,"NativeIntentAndroid"],[106,105,98,38],[106,106,98,39],[106,107,98,40,"getInitialURL"],[106,120,98,53],[106,121,98,54],[106,122,98,55],[106,125,99,8],[106,129,99,8,"nullthrows"],[106,148,99,18],[106,150,99,19,"NativeLinkingManager"],[106,179,99,39],[106,180,99,40],[106,181,99,41,"getInitialURL"],[106,194,99,54],[106,195,99,55],[106,196,99,56],[107,6,100,2],[109,6,102,2],[110,0,103,0],[111,0,104,0],[112,0,105,0],[113,0,106,0],[114,0,107,0],[115,0,108,0],[116,4,102,2],[117,6,102,2,"key"],[117,9,102,2],[118,6,102,2,"value"],[118,11,102,2],[118,13,109,2],[118,22,109,2,"sendIntent"],[118,33,110,4,"action"],[118,39,110,18],[118,41,111,4,"extras"],[118,47,115,6],[118,49,116,19],[119,8,117,4],[119,12,117,8,"Platform"],[119,29,117,16],[119,30,117,17,"OS"],[119,32,117,19],[119,37,117,24],[119,46,117,33],[119,48,117,35],[120,10,118,6],[120,17,118,13],[120,21,118,13,"nullthrows"],[120,40,118,23],[120,42,118,24,"NativeIntentAndroid"],[120,70,118,43],[120,71,118,44],[120,72,118,45,"sendIntent"],[120,82,118,55],[120,83,118,56,"action"],[120,89,118,62],[120,91,118,64,"extras"],[120,97,118,70],[120,98,118,71],[121,8,119,4],[121,9,119,5],[121,15,119,11],[122,10,120,6],[122,17,120,13],[122,21,120,17,"Promise"],[122,28,120,24],[122,29,120,25],[122,39,120,26,"resolve"],[122,46,120,33],[122,48,120,35,"reject"],[122,54,120,41],[123,12,120,41],[123,19,120,46,"reject"],[123,25,120,52],[123,26,120,53],[123,30,120,57,"Error"],[123,35,120,62],[123,36,120,63],[123,49,120,76],[123,50,120,77],[123,51,120,78],[124,10,120,78],[124,12,120,79],[125,8,121,4],[126,6,122,2],[127,4,122,3],[128,6,122,3,"key"],[128,9,122,3],[129,6,122,3,"value"],[129,11,122,3],[129,13,124,2],[129,22,124,2,"_validateURL"],[129,35,124,15,"url"],[129,38,124,26],[129,40,124,34],[130,8,125,4],[130,12,125,4,"invariant"],[130,30,125,13],[130,32,126,6],[130,39,126,13,"url"],[130,42,126,16],[130,47,126,21],[130,55,126,29],[130,57,127,6],[130,97,127,46],[130,100,127,49,"url"],[130,103,128,4],[130,104,128,5],[131,8,129,4],[131,12,129,4,"invariant"],[131,30,129,13],[131,32,129,14,"url"],[131,35,129,17],[131,37,129,19],[131,67,129,49],[131,68,129,50],[132,6,130,2],[133,4,130,3],[134,4,130,3],[134,11,130,3,"Linking"],[134,18,130,3],[135,2,130,3],[135,4,30,22,"NativeEventEmitter"],[135,32,30,40],[136,2,133,0,"module"],[136,8,133,6],[136,9,133,7,"exports"],[136,16,133,14],[136,19,133,18],[136,23,133,22,"Linking"],[136,30,133,29],[136,31,133,30],[136,32,133,41],[137,0,133,42]],"functionMap":{"names":["<global>","Linking","constructor","addEventListener","openURL","canOpenURL","openSettings","getInitialURL","sendIntent","Promise$argument_0","_validateURL"],"mappings":"AAA;AC6B;ECC;GDE;EEQ;GFM;EGO;GHO;EIO;GJO;EKO;GLM;EMQ;GNI;EOS;yBCW,qDD;GPE;ESE;GTM;CDC"}},"type":"js/module"}]}