{"dependencies":[{"name":"./tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":16,"index":16},"end":{"line":1,"column":38,"index":38}}],"key":"5ubwVysDXJDcCgf6Za92aNwkk5g="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var Tokenizer = _$$_REQUIRE(_dependencyMap[0], \"./tokenizer\");\n  var TAB = 9;\n  var N = 10;\n  var F = 12;\n  var R = 13;\n  var SPACE = 32;\n  var EXCLAMATIONMARK = 33; // !\n  var NUMBERSIGN = 35; // #\n  var AMPERSAND = 38; // &\n  var APOSTROPHE = 39; // '\n  var LEFTPARENTHESIS = 40; // (\n  var RIGHTPARENTHESIS = 41; // )\n  var ASTERISK = 42; // *\n  var PLUSSIGN = 43; // +\n  var COMMA = 44; // ,\n  var HYPERMINUS = 45; // -\n  var LESSTHANSIGN = 60; // <\n  var GREATERTHANSIGN = 62; // >\n  var QUESTIONMARK = 63; // ?\n  var COMMERCIALAT = 64; // @\n  var LEFTSQUAREBRACKET = 91; // [\n  var RIGHTSQUAREBRACKET = 93; // ]\n  var LEFTCURLYBRACKET = 123; // {\n  var VERTICALLINE = 124; // |\n  var RIGHTCURLYBRACKET = 125; // }\n  var INFINITY = 8734; // ∞\n  var NAME_CHAR = createCharMap(function (ch) {\n    return /[a-zA-Z0-9\\-]/.test(ch);\n  });\n  var COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n  };\n  function createCharMap(fn) {\n    var array = typeof Uint32Array === 'function' ? new Uint32Array(128) : new Array(128);\n    for (var i = 0; i < 128; i++) {\n      array[i] = fn(String.fromCharCode(i)) ? 1 : 0;\n    }\n    return array;\n  }\n  function scanSpaces(tokenizer) {\n    return tokenizer.substringToPos(tokenizer.findWsEnd(tokenizer.pos));\n  }\n  function scanWord(tokenizer) {\n    var end = tokenizer.pos;\n    for (; end < tokenizer.str.length; end++) {\n      var code = tokenizer.str.charCodeAt(end);\n      if (code >= 128 || NAME_CHAR[code] === 0) {\n        break;\n      }\n    }\n    if (tokenizer.pos === end) {\n      tokenizer.error('Expect a keyword');\n    }\n    return tokenizer.substringToPos(end);\n  }\n  function scanNumber(tokenizer) {\n    var end = tokenizer.pos;\n    for (; end < tokenizer.str.length; end++) {\n      var code = tokenizer.str.charCodeAt(end);\n      if (code < 48 || code > 57) {\n        break;\n      }\n    }\n    if (tokenizer.pos === end) {\n      tokenizer.error('Expect a number');\n    }\n    return tokenizer.substringToPos(end);\n  }\n  function scanString(tokenizer) {\n    var end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\n    if (end === -1) {\n      tokenizer.pos = tokenizer.str.length;\n      tokenizer.error('Expect an apostrophe');\n    }\n    return tokenizer.substringToPos(end + 1);\n  }\n  function readMultiplierRange(tokenizer) {\n    var min = null;\n    var max = null;\n    tokenizer.eat(LEFTCURLYBRACKET);\n    min = scanNumber(tokenizer);\n    if (tokenizer.charCode() === COMMA) {\n      tokenizer.pos++;\n      if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\n        max = scanNumber(tokenizer);\n      }\n    } else {\n      max = min;\n    }\n    tokenizer.eat(RIGHTCURLYBRACKET);\n    return {\n      min: Number(min),\n      max: max ? Number(max) : 0\n    };\n  }\n  function readMultiplier(tokenizer) {\n    var range = null;\n    var comma = false;\n    switch (tokenizer.charCode()) {\n      case ASTERISK:\n        tokenizer.pos++;\n        range = {\n          min: 0,\n          max: 0\n        };\n        break;\n      case PLUSSIGN:\n        tokenizer.pos++;\n        range = {\n          min: 1,\n          max: 0\n        };\n        break;\n      case QUESTIONMARK:\n        tokenizer.pos++;\n        range = {\n          min: 0,\n          max: 1\n        };\n        break;\n      case NUMBERSIGN:\n        tokenizer.pos++;\n        comma = true;\n        if (tokenizer.charCode() === LEFTCURLYBRACKET) {\n          range = readMultiplierRange(tokenizer);\n        } else {\n          range = {\n            min: 1,\n            max: 0\n          };\n        }\n        break;\n      case LEFTCURLYBRACKET:\n        range = readMultiplierRange(tokenizer);\n        break;\n      default:\n        return null;\n    }\n    return {\n      type: 'Multiplier',\n      comma: comma,\n      min: range.min,\n      max: range.max,\n      term: null\n    };\n  }\n  function maybeMultiplied(tokenizer, node) {\n    var multiplier = readMultiplier(tokenizer);\n    if (multiplier !== null) {\n      multiplier.term = node;\n      return multiplier;\n    }\n    return node;\n  }\n  function maybeToken(tokenizer) {\n    var ch = tokenizer.peek();\n    if (ch === '') {\n      return null;\n    }\n    return {\n      type: 'Token',\n      value: ch\n    };\n  }\n  function readProperty(tokenizer) {\n    var name;\n    tokenizer.eat(LESSTHANSIGN);\n    tokenizer.eat(APOSTROPHE);\n    name = scanWord(tokenizer);\n    tokenizer.eat(APOSTROPHE);\n    tokenizer.eat(GREATERTHANSIGN);\n    return maybeMultiplied(tokenizer, {\n      type: 'Property',\n      name: name\n    });\n  }\n\n  // https://drafts.csswg.org/css-values-3/#numeric-ranges\n  // 4.1. Range Restrictions and Range Definition Notation\n  //\n  // Range restrictions can be annotated in the numeric type notation using CSS bracketed\n  // range notation—[min,max]—within the angle brackets, after the identifying keyword,\n  // indicating a closed range between (and including) min and max.\n  // For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\n  function readTypeRange(tokenizer) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    var min = null; // -Infinity\n    var max = null; // Infinity\n    var sign = 1;\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    if (tokenizer.charCode() === HYPERMINUS) {\n      tokenizer.peek();\n      sign = -1;\n    }\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\n      tokenizer.peek();\n    } else {\n      min = sign * Number(scanNumber(tokenizer));\n    }\n    scanSpaces(tokenizer);\n    tokenizer.eat(COMMA);\n    scanSpaces(tokenizer);\n    if (tokenizer.charCode() === INFINITY) {\n      tokenizer.peek();\n    } else {\n      sign = 1;\n      if (tokenizer.charCode() === HYPERMINUS) {\n        tokenizer.peek();\n        sign = -1;\n      }\n      max = sign * Number(scanNumber(tokenizer));\n    }\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    // If no range is indicated, either by using the bracketed range notation\n    // or in the property description, then [−∞,∞] is assumed.\n    if (min === null && max === null) {\n      return null;\n    }\n    return {\n      type: 'Range',\n      min: min,\n      max: max\n    };\n  }\n  function readType(tokenizer) {\n    var name;\n    var opts = null;\n    tokenizer.eat(LESSTHANSIGN);\n    name = scanWord(tokenizer);\n    if (tokenizer.charCode() === LEFTPARENTHESIS && tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\n      tokenizer.pos += 2;\n      name += '()';\n    }\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\n      scanSpaces(tokenizer);\n      opts = readTypeRange(tokenizer);\n    }\n    tokenizer.eat(GREATERTHANSIGN);\n    return maybeMultiplied(tokenizer, {\n      type: 'Type',\n      name: name,\n      opts: opts\n    });\n  }\n  function readKeywordOrFunction(tokenizer) {\n    var name;\n    name = scanWord(tokenizer);\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\n      tokenizer.pos++;\n      return {\n        type: 'Function',\n        name: name\n      };\n    }\n    return maybeMultiplied(tokenizer, {\n      type: 'Keyword',\n      name: name\n    });\n  }\n  function regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n      return {\n        type: 'Group',\n        terms: terms,\n        combinator: combinator,\n        disallowEmpty: false,\n        explicit: false\n      };\n    }\n    combinators = Object.keys(combinators).sort(function (a, b) {\n      return COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b];\n    });\n    while (combinators.length > 0) {\n      var combinator = combinators.shift();\n      for (var i = 0, subgroupStart = 0; i < terms.length; i++) {\n        var term = terms[i];\n        if (term.type === 'Combinator') {\n          if (term.value === combinator) {\n            if (subgroupStart === -1) {\n              subgroupStart = i - 1;\n            }\n            terms.splice(i, 1);\n            i--;\n          } else {\n            if (subgroupStart !== -1 && i - subgroupStart > 1) {\n              terms.splice(subgroupStart, i - subgroupStart, createGroup(terms.slice(subgroupStart, i), combinator));\n              i = subgroupStart + 1;\n            }\n            subgroupStart = -1;\n          }\n        }\n      }\n      if (subgroupStart !== -1 && combinators.length) {\n        terms.splice(subgroupStart, i - subgroupStart, createGroup(terms.slice(subgroupStart, i), combinator));\n      }\n    }\n    return combinator;\n  }\n  function readImplicitGroup(tokenizer) {\n    var terms = [];\n    var combinators = {};\n    var token;\n    var prevToken = null;\n    var prevTokenPos = tokenizer.pos;\n    while (token = peek(tokenizer)) {\n      if (token.type !== 'Spaces') {\n        if (token.type === 'Combinator') {\n          // check for combinator in group beginning and double combinator sequence\n          if (prevToken === null || prevToken.type === 'Combinator') {\n            tokenizer.pos = prevTokenPos;\n            tokenizer.error('Unexpected combinator');\n          }\n          combinators[token.value] = true;\n        } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n          combinators[' '] = true; // a b\n          terms.push({\n            type: 'Combinator',\n            value: ' '\n          });\n        }\n        terms.push(token);\n        prevToken = token;\n        prevTokenPos = tokenizer.pos;\n      }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n      tokenizer.pos -= prevTokenPos;\n      tokenizer.error('Unexpected combinator');\n    }\n    return {\n      type: 'Group',\n      terms: terms,\n      combinator: regroupTerms(terms, combinators) || ' ',\n      disallowEmpty: false,\n      explicit: false\n    };\n  }\n  function readGroup(tokenizer) {\n    var result;\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(tokenizer);\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n    result.explicit = true;\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\n      tokenizer.pos++;\n      result.disallowEmpty = true;\n    }\n    return result;\n  }\n  function peek(tokenizer) {\n    var code = tokenizer.charCode();\n    if (code < 128 && NAME_CHAR[code] === 1) {\n      return readKeywordOrFunction(tokenizer);\n    }\n    switch (code) {\n      case RIGHTSQUAREBRACKET:\n        // don't eat, stop scan a group\n        break;\n      case LEFTSQUAREBRACKET:\n        return maybeMultiplied(tokenizer, readGroup(tokenizer));\n      case LESSTHANSIGN:\n        return tokenizer.nextCharCode() === APOSTROPHE ? readProperty(tokenizer) : readType(tokenizer);\n      case VERTICALLINE:\n        return {\n          type: 'Combinator',\n          value: tokenizer.substringToPos(tokenizer.nextCharCode() === VERTICALLINE ? tokenizer.pos + 2 : tokenizer.pos + 1)\n        };\n      case AMPERSAND:\n        tokenizer.pos++;\n        tokenizer.eat(AMPERSAND);\n        return {\n          type: 'Combinator',\n          value: '&&'\n        };\n      case COMMA:\n        tokenizer.pos++;\n        return {\n          type: 'Comma'\n        };\n      case APOSTROPHE:\n        return maybeMultiplied(tokenizer, {\n          type: 'String',\n          value: scanString(tokenizer)\n        });\n      case SPACE:\n      case TAB:\n      case N:\n      case R:\n      case F:\n        return {\n          type: 'Spaces',\n          value: scanSpaces(tokenizer)\n        };\n      case COMMERCIALAT:\n        code = tokenizer.nextCharCode();\n        if (code < 128 && NAME_CHAR[code] === 1) {\n          tokenizer.pos++;\n          return {\n            type: 'AtKeyword',\n            name: scanWord(tokenizer)\n          };\n        }\n        return maybeToken(tokenizer);\n      case ASTERISK:\n      case PLUSSIGN:\n      case QUESTIONMARK:\n      case NUMBERSIGN:\n      case EXCLAMATIONMARK:\n        // prohibited tokens (used as a multiplier start)\n        break;\n      case LEFTCURLYBRACKET:\n        // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n        // check next char isn't a number, because it's likely a disjoined multiplier\n        code = tokenizer.nextCharCode();\n        if (code < 48 || code > 57) {\n          return maybeToken(tokenizer);\n        }\n        break;\n      default:\n        return maybeToken(tokenizer);\n    }\n  }\n  function parse(source) {\n    var tokenizer = new Tokenizer(source);\n    var result = readImplicitGroup(tokenizer);\n    if (tokenizer.pos !== source.length) {\n      tokenizer.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n      result = result.terms[0];\n    }\n    return result;\n  }\n\n  // warm up parse to elimitate code branches that never execute\n  // fix soft deoptimizations (insufficient type feedback)\n  parse('[a&&<b>#|<\\'c\\'>*||e() f{2} /,(% g#{1,2} h{2,})]!');\n  module.exports = parse;\n});","lineCount":448,"map":[[2,2,1,0],[2,6,1,4,"Tokenizer"],[2,15,1,13],[2,18,1,16,"require"],[2,29,1,23],[2,30,1,23,"_dependencyMap"],[2,44,1,23],[2,62,1,37],[2,63,1,38],[3,2,2,0],[3,6,2,4,"TAB"],[3,9,2,7],[3,12,2,10],[3,13,2,11],[4,2,3,0],[4,6,3,4,"N"],[4,7,3,5],[4,10,3,8],[4,12,3,10],[5,2,4,0],[5,6,4,4,"F"],[5,7,4,5],[5,10,4,8],[5,12,4,10],[6,2,5,0],[6,6,5,4,"R"],[6,7,5,5],[6,10,5,8],[6,12,5,10],[7,2,6,0],[7,6,6,4,"SPACE"],[7,11,6,9],[7,14,6,12],[7,16,6,14],[8,2,7,0],[8,6,7,4,"EXCLAMATIONMARK"],[8,21,7,19],[8,24,7,22],[8,26,7,24],[8,27,7,25],[8,28,7,29],[9,2,8,0],[9,6,8,4,"NUMBERSIGN"],[9,16,8,14],[9,19,8,17],[9,21,8,19],[9,22,8,20],[9,23,8,29],[10,2,9,0],[10,6,9,4,"AMPERSAND"],[10,15,9,13],[10,18,9,16],[10,20,9,18],[10,21,9,19],[10,22,9,29],[11,2,10,0],[11,6,10,4,"APOSTROPHE"],[11,16,10,14],[11,19,10,17],[11,21,10,19],[11,22,10,20],[11,23,10,29],[12,2,11,0],[12,6,11,4,"LEFTPARENTHESIS"],[12,21,11,19],[12,24,11,22],[12,26,11,24],[12,27,11,25],[12,28,11,29],[13,2,12,0],[13,6,12,4,"RIGHTPARENTHESIS"],[13,22,12,20],[13,25,12,23],[13,27,12,25],[13,28,12,26],[13,29,12,29],[14,2,13,0],[14,6,13,4,"ASTERISK"],[14,14,13,12],[14,17,13,15],[14,19,13,17],[14,20,13,18],[14,21,13,29],[15,2,14,0],[15,6,14,4,"PLUSSIGN"],[15,14,14,12],[15,17,14,15],[15,19,14,17],[15,20,14,18],[15,21,14,29],[16,2,15,0],[16,6,15,4,"COMMA"],[16,11,15,9],[16,14,15,12],[16,16,15,14],[16,17,15,15],[16,18,15,29],[17,2,16,0],[17,6,16,4,"HYPERMINUS"],[17,16,16,14],[17,19,16,17],[17,21,16,19],[17,22,16,20],[17,23,16,29],[18,2,17,0],[18,6,17,4,"LESSTHANSIGN"],[18,18,17,16],[18,21,17,19],[18,23,17,21],[18,24,17,22],[18,25,17,29],[19,2,18,0],[19,6,18,4,"GREATERTHANSIGN"],[19,21,18,19],[19,24,18,22],[19,26,18,24],[19,27,18,25],[19,28,18,29],[20,2,19,0],[20,6,19,4,"QUESTIONMARK"],[20,18,19,16],[20,21,19,19],[20,23,19,21],[20,24,19,22],[20,25,19,29],[21,2,20,0],[21,6,20,4,"COMMERCIALAT"],[21,18,20,16],[21,21,20,19],[21,23,20,21],[21,24,20,22],[21,25,20,29],[22,2,21,0],[22,6,21,4,"LEFTSQUAREBRACKET"],[22,23,21,21],[22,26,21,24],[22,28,21,26],[22,29,21,27],[22,30,21,29],[23,2,22,0],[23,6,22,4,"RIGHTSQUAREBRACKET"],[23,24,22,22],[23,27,22,25],[23,29,22,27],[23,30,22,28],[23,31,22,29],[24,2,23,0],[24,6,23,4,"LEFTCURLYBRACKET"],[24,22,23,20],[24,25,23,23],[24,28,23,26],[24,29,23,27],[24,30,23,29],[25,2,24,0],[25,6,24,4,"VERTICALLINE"],[25,18,24,16],[25,21,24,19],[25,24,24,22],[25,25,24,23],[25,26,24,29],[26,2,25,0],[26,6,25,4,"RIGHTCURLYBRACKET"],[26,23,25,21],[26,26,25,24],[26,29,25,27],[26,30,25,28],[26,31,25,29],[27,2,26,0],[27,6,26,4,"INFINITY"],[27,14,26,12],[27,17,26,15],[27,21,26,19],[27,22,26,20],[27,23,26,29],[28,2,27,0],[28,6,27,4,"NAME_CHAR"],[28,15,27,13],[28,18,27,16,"createCharMap"],[28,31,27,29],[28,32,27,30],[28,42,27,39,"ch"],[28,44,27,41],[28,46,27,43],[29,4,28,4],[29,11,28,11],[29,26,28,26],[29,27,28,27,"test"],[29,31,28,31],[29,32,28,32,"ch"],[29,34,28,34],[29,35,28,35],[30,2,29,0],[30,3,29,1],[30,4,29,2],[31,2,30,0],[31,6,30,4,"COMBINATOR_PRECEDENCE"],[31,27,30,25],[31,30,30,28],[32,4,31,4],[32,7,31,7],[32,9,31,9],[32,10,31,10],[33,4,32,4],[33,8,32,8],[33,10,32,10],[33,11,32,11],[34,4,33,4],[34,8,33,8],[34,10,33,10],[34,11,33,11],[35,4,34,4],[35,7,34,7],[35,9,34,9],[36,2,35,0],[36,3,35,1],[37,2,37,0],[37,11,37,9,"createCharMap"],[37,24,37,22,"createCharMap"],[37,25,37,23,"fn"],[37,27,37,25],[37,29,37,27],[38,4,38,4],[38,8,38,8,"array"],[38,13,38,13],[38,16,38,16],[38,23,38,23,"Uint32Array"],[38,34,38,34],[38,39,38,39],[38,49,38,49],[38,52,38,52],[38,56,38,56,"Uint32Array"],[38,67,38,67],[38,68,38,68],[38,71,38,71],[38,72,38,72],[38,75,38,75],[38,79,38,79,"Array"],[38,84,38,84],[38,85,38,85],[38,88,38,88],[38,89,38,89],[39,4,39,4],[39,9,39,9],[39,13,39,13,"i"],[39,14,39,14],[39,17,39,17],[39,18,39,18],[39,20,39,20,"i"],[39,21,39,21],[39,24,39,24],[39,27,39,27],[39,29,39,29,"i"],[39,30,39,30],[39,32,39,32],[39,34,39,34],[40,6,40,8,"array"],[40,11,40,13],[40,12,40,14,"i"],[40,13,40,15],[40,14,40,16],[40,17,40,19,"fn"],[40,19,40,21],[40,20,40,22,"String"],[40,26,40,28],[40,27,40,29,"fromCharCode"],[40,39,40,41],[40,40,40,42,"i"],[40,41,40,43],[40,42,40,44],[40,43,40,45],[40,46,40,48],[40,47,40,49],[40,50,40,52],[40,51,40,53],[41,4,41,4],[42,4,42,4],[42,11,42,11,"array"],[42,16,42,16],[43,2,43,0],[44,2,45,0],[44,11,45,9,"scanSpaces"],[44,21,45,19,"scanSpaces"],[44,22,45,20,"tokenizer"],[44,31,45,29],[44,33,45,31],[45,4,46,4],[45,11,46,11,"tokenizer"],[45,20,46,20],[45,21,46,21,"substringToPos"],[45,35,46,35],[45,36,47,8,"tokenizer"],[45,45,47,17],[45,46,47,18,"findWsEnd"],[45,55,47,27],[45,56,47,28,"tokenizer"],[45,65,47,37],[45,66,47,38,"pos"],[45,69,47,41],[45,70,48,4],[45,71,48,5],[46,2,49,0],[47,2,51,0],[47,11,51,9,"scanWord"],[47,19,51,17,"scanWord"],[47,20,51,18,"tokenizer"],[47,29,51,27],[47,31,51,29],[48,4,52,4],[48,8,52,8,"end"],[48,11,52,11],[48,14,52,14,"tokenizer"],[48,23,52,23],[48,24,52,24,"pos"],[48,27,52,27],[49,4,54,4],[49,11,54,11,"end"],[49,14,54,14],[49,17,54,17,"tokenizer"],[49,26,54,26],[49,27,54,27,"str"],[49,30,54,30],[49,31,54,31,"length"],[49,37,54,37],[49,39,54,39,"end"],[49,42,54,42],[49,44,54,44],[49,46,54,46],[50,6,55,8],[50,10,55,12,"code"],[50,14,55,16],[50,17,55,19,"tokenizer"],[50,26,55,28],[50,27,55,29,"str"],[50,30,55,32],[50,31,55,33,"charCodeAt"],[50,41,55,43],[50,42,55,44,"end"],[50,45,55,47],[50,46,55,48],[51,6,56,8],[51,10,56,12,"code"],[51,14,56,16],[51,18,56,20],[51,21,56,23],[51,25,56,27,"NAME_CHAR"],[51,34,56,36],[51,35,56,37,"code"],[51,39,56,41],[51,40,56,42],[51,45,56,47],[51,46,56,48],[51,48,56,50],[52,8,57,12],[53,6,58,8],[54,4,59,4],[55,4,61,4],[55,8,61,8,"tokenizer"],[55,17,61,17],[55,18,61,18,"pos"],[55,21,61,21],[55,26,61,26,"end"],[55,29,61,29],[55,31,61,31],[56,6,62,8,"tokenizer"],[56,15,62,17],[56,16,62,18,"error"],[56,21,62,23],[56,22,62,24],[56,40,62,42],[56,41,62,43],[57,4,63,4],[58,4,65,4],[58,11,65,11,"tokenizer"],[58,20,65,20],[58,21,65,21,"substringToPos"],[58,35,65,35],[58,36,65,36,"end"],[58,39,65,39],[58,40,65,40],[59,2,66,0],[60,2,68,0],[60,11,68,9,"scanNumber"],[60,21,68,19,"scanNumber"],[60,22,68,20,"tokenizer"],[60,31,68,29],[60,33,68,31],[61,4,69,4],[61,8,69,8,"end"],[61,11,69,11],[61,14,69,14,"tokenizer"],[61,23,69,23],[61,24,69,24,"pos"],[61,27,69,27],[62,4,71,4],[62,11,71,11,"end"],[62,14,71,14],[62,17,71,17,"tokenizer"],[62,26,71,26],[62,27,71,27,"str"],[62,30,71,30],[62,31,71,31,"length"],[62,37,71,37],[62,39,71,39,"end"],[62,42,71,42],[62,44,71,44],[62,46,71,46],[63,6,72,8],[63,10,72,12,"code"],[63,14,72,16],[63,17,72,19,"tokenizer"],[63,26,72,28],[63,27,72,29,"str"],[63,30,72,32],[63,31,72,33,"charCodeAt"],[63,41,72,43],[63,42,72,44,"end"],[63,45,72,47],[63,46,72,48],[64,6,73,8],[64,10,73,12,"code"],[64,14,73,16],[64,17,73,19],[64,19,73,21],[64,23,73,25,"code"],[64,27,73,29],[64,30,73,32],[64,32,73,34],[64,34,73,36],[65,8,74,12],[66,6,75,8],[67,4,76,4],[68,4,78,4],[68,8,78,8,"tokenizer"],[68,17,78,17],[68,18,78,18,"pos"],[68,21,78,21],[68,26,78,26,"end"],[68,29,78,29],[68,31,78,31],[69,6,79,8,"tokenizer"],[69,15,79,17],[69,16,79,18,"error"],[69,21,79,23],[69,22,79,24],[69,39,79,41],[69,40,79,42],[70,4,80,4],[71,4,82,4],[71,11,82,11,"tokenizer"],[71,20,82,20],[71,21,82,21,"substringToPos"],[71,35,82,35],[71,36,82,36,"end"],[71,39,82,39],[71,40,82,40],[72,2,83,0],[73,2,85,0],[73,11,85,9,"scanString"],[73,21,85,19,"scanString"],[73,22,85,20,"tokenizer"],[73,31,85,29],[73,33,85,31],[74,4,86,4],[74,8,86,8,"end"],[74,11,86,11],[74,14,86,14,"tokenizer"],[74,23,86,23],[74,24,86,24,"str"],[74,27,86,27],[74,28,86,28,"indexOf"],[74,35,86,35],[74,36,86,36],[74,40,86,40],[74,42,86,42,"tokenizer"],[74,51,86,51],[74,52,86,52,"pos"],[74,55,86,55],[74,58,86,58],[74,59,86,59],[74,60,86,60],[75,4,88,4],[75,8,88,8,"end"],[75,11,88,11],[75,16,88,16],[75,17,88,17],[75,18,88,18],[75,20,88,20],[76,6,89,8,"tokenizer"],[76,15,89,17],[76,16,89,18,"pos"],[76,19,89,21],[76,22,89,24,"tokenizer"],[76,31,89,33],[76,32,89,34,"str"],[76,35,89,37],[76,36,89,38,"length"],[76,42,89,44],[77,6,90,8,"tokenizer"],[77,15,90,17],[77,16,90,18,"error"],[77,21,90,23],[77,22,90,24],[77,44,90,46],[77,45,90,47],[78,4,91,4],[79,4,93,4],[79,11,93,11,"tokenizer"],[79,20,93,20],[79,21,93,21,"substringToPos"],[79,35,93,35],[79,36,93,36,"end"],[79,39,93,39],[79,42,93,42],[79,43,93,43],[79,44,93,44],[80,2,94,0],[81,2,96,0],[81,11,96,9,"readMultiplierRange"],[81,30,96,28,"readMultiplierRange"],[81,31,96,29,"tokenizer"],[81,40,96,38],[81,42,96,40],[82,4,97,4],[82,8,97,8,"min"],[82,11,97,11],[82,14,97,14],[82,18,97,18],[83,4,98,4],[83,8,98,8,"max"],[83,11,98,11],[83,14,98,14],[83,18,98,18],[84,4,100,4,"tokenizer"],[84,13,100,13],[84,14,100,14,"eat"],[84,17,100,17],[84,18,100,18,"LEFTCURLYBRACKET"],[84,34,100,34],[84,35,100,35],[85,4,102,4,"min"],[85,7,102,7],[85,10,102,10,"scanNumber"],[85,20,102,20],[85,21,102,21,"tokenizer"],[85,30,102,30],[85,31,102,31],[86,4,104,4],[86,8,104,8,"tokenizer"],[86,17,104,17],[86,18,104,18,"charCode"],[86,26,104,26],[86,27,104,27],[86,28,104,28],[86,33,104,33,"COMMA"],[86,38,104,38],[86,40,104,40],[87,6,105,8,"tokenizer"],[87,15,105,17],[87,16,105,18,"pos"],[87,19,105,21],[87,21,105,23],[88,6,106,8],[88,10,106,12,"tokenizer"],[88,19,106,21],[88,20,106,22,"charCode"],[88,28,106,30],[88,29,106,31],[88,30,106,32],[88,35,106,37,"RIGHTCURLYBRACKET"],[88,52,106,54],[88,54,106,56],[89,8,107,12,"max"],[89,11,107,15],[89,14,107,18,"scanNumber"],[89,24,107,28],[89,25,107,29,"tokenizer"],[89,34,107,38],[89,35,107,39],[90,6,108,8],[91,4,109,4],[91,5,109,5],[91,11,109,11],[92,6,110,8,"max"],[92,9,110,11],[92,12,110,14,"min"],[92,15,110,17],[93,4,111,4],[94,4,113,4,"tokenizer"],[94,13,113,13],[94,14,113,14,"eat"],[94,17,113,17],[94,18,113,18,"RIGHTCURLYBRACKET"],[94,35,113,35],[94,36,113,36],[95,4,115,4],[95,11,115,11],[96,6,116,8,"min"],[96,9,116,11],[96,11,116,13,"Number"],[96,17,116,19],[96,18,116,20,"min"],[96,21,116,23],[96,22,116,24],[97,6,117,8,"max"],[97,9,117,11],[97,11,117,13,"max"],[97,14,117,16],[97,17,117,19,"Number"],[97,23,117,25],[97,24,117,26,"max"],[97,27,117,29],[97,28,117,30],[97,31,117,33],[98,4,118,4],[98,5,118,5],[99,2,119,0],[100,2,121,0],[100,11,121,9,"readMultiplier"],[100,25,121,23,"readMultiplier"],[100,26,121,24,"tokenizer"],[100,35,121,33],[100,37,121,35],[101,4,122,4],[101,8,122,8,"range"],[101,13,122,13],[101,16,122,16],[101,20,122,20],[102,4,123,4],[102,8,123,8,"comma"],[102,13,123,13],[102,16,123,16],[102,21,123,21],[103,4,125,4],[103,12,125,12,"tokenizer"],[103,21,125,21],[103,22,125,22,"charCode"],[103,30,125,30],[103,31,125,31],[103,32,125,32],[104,6,126,8],[104,11,126,13,"ASTERISK"],[104,19,126,21],[105,8,127,12,"tokenizer"],[105,17,127,21],[105,18,127,22,"pos"],[105,21,127,25],[105,23,127,27],[106,8,129,12,"range"],[106,13,129,17],[106,16,129,20],[107,10,130,16,"min"],[107,13,130,19],[107,15,130,21],[107,16,130,22],[108,10,131,16,"max"],[108,13,131,19],[108,15,131,21],[109,8,132,12],[109,9,132,13],[110,8,134,12],[111,6,136,8],[111,11,136,13,"PLUSSIGN"],[111,19,136,21],[112,8,137,12,"tokenizer"],[112,17,137,21],[112,18,137,22,"pos"],[112,21,137,25],[112,23,137,27],[113,8,139,12,"range"],[113,13,139,17],[113,16,139,20],[114,10,140,16,"min"],[114,13,140,19],[114,15,140,21],[114,16,140,22],[115,10,141,16,"max"],[115,13,141,19],[115,15,141,21],[116,8,142,12],[116,9,142,13],[117,8,144,12],[118,6,146,8],[118,11,146,13,"QUESTIONMARK"],[118,23,146,25],[119,8,147,12,"tokenizer"],[119,17,147,21],[119,18,147,22,"pos"],[119,21,147,25],[119,23,147,27],[120,8,149,12,"range"],[120,13,149,17],[120,16,149,20],[121,10,150,16,"min"],[121,13,150,19],[121,15,150,21],[121,16,150,22],[122,10,151,16,"max"],[122,13,151,19],[122,15,151,21],[123,8,152,12],[123,9,152,13],[124,8,154,12],[125,6,156,8],[125,11,156,13,"NUMBERSIGN"],[125,21,156,23],[126,8,157,12,"tokenizer"],[126,17,157,21],[126,18,157,22,"pos"],[126,21,157,25],[126,23,157,27],[127,8,159,12,"comma"],[127,13,159,17],[127,16,159,20],[127,20,159,24],[128,8,161,12],[128,12,161,16,"tokenizer"],[128,21,161,25],[128,22,161,26,"charCode"],[128,30,161,34],[128,31,161,35],[128,32,161,36],[128,37,161,41,"LEFTCURLYBRACKET"],[128,53,161,57],[128,55,161,59],[129,10,162,16,"range"],[129,15,162,21],[129,18,162,24,"readMultiplierRange"],[129,37,162,43],[129,38,162,44,"tokenizer"],[129,47,162,53],[129,48,162,54],[130,8,163,12],[130,9,163,13],[130,15,163,19],[131,10,164,16,"range"],[131,15,164,21],[131,18,164,24],[132,12,165,20,"min"],[132,15,165,23],[132,17,165,25],[132,18,165,26],[133,12,166,20,"max"],[133,15,166,23],[133,17,166,25],[134,10,167,16],[134,11,167,17],[135,8,168,12],[136,8,170,12],[137,6,172,8],[137,11,172,13,"LEFTCURLYBRACKET"],[137,27,172,29],[138,8,173,12,"range"],[138,13,173,17],[138,16,173,20,"readMultiplierRange"],[138,35,173,39],[138,36,173,40,"tokenizer"],[138,45,173,49],[138,46,173,50],[139,8,174,12],[140,6,176,8],[141,8,177,12],[141,15,177,19],[141,19,177,23],[142,4,178,4],[143,4,180,4],[143,11,180,11],[144,6,181,8,"type"],[144,10,181,12],[144,12,181,14],[144,24,181,26],[145,6,182,8,"comma"],[145,11,182,13],[145,13,182,15,"comma"],[145,18,182,20],[146,6,183,8,"min"],[146,9,183,11],[146,11,183,13,"range"],[146,16,183,18],[146,17,183,19,"min"],[146,20,183,22],[147,6,184,8,"max"],[147,9,184,11],[147,11,184,13,"range"],[147,16,184,18],[147,17,184,19,"max"],[147,20,184,22],[148,6,185,8,"term"],[148,10,185,12],[148,12,185,14],[149,4,186,4],[149,5,186,5],[150,2,187,0],[151,2,189,0],[151,11,189,9,"maybeMultiplied"],[151,26,189,24,"maybeMultiplied"],[151,27,189,25,"tokenizer"],[151,36,189,34],[151,38,189,36,"node"],[151,42,189,40],[151,44,189,42],[152,4,190,4],[152,8,190,8,"multiplier"],[152,18,190,18],[152,21,190,21,"readMultiplier"],[152,35,190,35],[152,36,190,36,"tokenizer"],[152,45,190,45],[152,46,190,46],[153,4,192,4],[153,8,192,8,"multiplier"],[153,18,192,18],[153,23,192,23],[153,27,192,27],[153,29,192,29],[154,6,193,8,"multiplier"],[154,16,193,18],[154,17,193,19,"term"],[154,21,193,23],[154,24,193,26,"node"],[154,28,193,30],[155,6,194,8],[155,13,194,15,"multiplier"],[155,23,194,25],[156,4,195,4],[157,4,197,4],[157,11,197,11,"node"],[157,15,197,15],[158,2,198,0],[159,2,200,0],[159,11,200,9,"maybeToken"],[159,21,200,19,"maybeToken"],[159,22,200,20,"tokenizer"],[159,31,200,29],[159,33,200,31],[160,4,201,4],[160,8,201,8,"ch"],[160,10,201,10],[160,13,201,13,"tokenizer"],[160,22,201,22],[160,23,201,23,"peek"],[160,27,201,27],[160,28,201,28],[160,29,201,29],[161,4,203,4],[161,8,203,8,"ch"],[161,10,203,10],[161,15,203,15],[161,17,203,17],[161,19,203,19],[162,6,204,8],[162,13,204,15],[162,17,204,19],[163,4,205,4],[164,4,207,4],[164,11,207,11],[165,6,208,8,"type"],[165,10,208,12],[165,12,208,14],[165,19,208,21],[166,6,209,8,"value"],[166,11,209,13],[166,13,209,15,"ch"],[167,4,210,4],[167,5,210,5],[168,2,211,0],[169,2,213,0],[169,11,213,9,"readProperty"],[169,23,213,21,"readProperty"],[169,24,213,22,"tokenizer"],[169,33,213,31],[169,35,213,33],[170,4,214,4],[170,8,214,8,"name"],[170,12,214,12],[171,4,216,4,"tokenizer"],[171,13,216,13],[171,14,216,14,"eat"],[171,17,216,17],[171,18,216,18,"LESSTHANSIGN"],[171,30,216,30],[171,31,216,31],[172,4,217,4,"tokenizer"],[172,13,217,13],[172,14,217,14,"eat"],[172,17,217,17],[172,18,217,18,"APOSTROPHE"],[172,28,217,28],[172,29,217,29],[173,4,219,4,"name"],[173,8,219,8],[173,11,219,11,"scanWord"],[173,19,219,19],[173,20,219,20,"tokenizer"],[173,29,219,29],[173,30,219,30],[174,4,221,4,"tokenizer"],[174,13,221,13],[174,14,221,14,"eat"],[174,17,221,17],[174,18,221,18,"APOSTROPHE"],[174,28,221,28],[174,29,221,29],[175,4,222,4,"tokenizer"],[175,13,222,13],[175,14,222,14,"eat"],[175,17,222,17],[175,18,222,18,"GREATERTHANSIGN"],[175,33,222,33],[175,34,222,34],[176,4,224,4],[176,11,224,11,"maybeMultiplied"],[176,26,224,26],[176,27,224,27,"tokenizer"],[176,36,224,36],[176,38,224,38],[177,6,225,8,"type"],[177,10,225,12],[177,12,225,14],[177,22,225,24],[178,6,226,8,"name"],[178,10,226,12],[178,12,226,14,"name"],[179,4,227,4],[179,5,227,5],[179,6,227,6],[180,2,228,0],[182,2,230,0],[183,2,231,0],[184,2,232,0],[185,2,233,0],[186,2,234,0],[187,2,235,0],[188,2,236,0],[189,2,237,0],[189,11,237,9,"readTypeRange"],[189,24,237,22,"readTypeRange"],[189,25,237,23,"tokenizer"],[189,34,237,32],[189,36,237,34],[190,4,238,4],[191,4,239,4],[191,8,239,8,"min"],[191,11,239,11],[191,14,239,14],[191,18,239,18],[191,19,239,19],[191,20,239,20],[192,4,240,4],[192,8,240,8,"max"],[192,11,240,11],[192,14,240,14],[192,18,240,18],[192,19,240,19],[192,20,240,20],[193,4,241,4],[193,8,241,8,"sign"],[193,12,241,12],[193,15,241,15],[193,16,241,16],[194,4,243,4,"tokenizer"],[194,13,243,13],[194,14,243,14,"eat"],[194,17,243,17],[194,18,243,18,"LEFTSQUAREBRACKET"],[194,35,243,35],[194,36,243,36],[195,4,245,4],[195,8,245,8,"tokenizer"],[195,17,245,17],[195,18,245,18,"charCode"],[195,26,245,26],[195,27,245,27],[195,28,245,28],[195,33,245,33,"HYPERMINUS"],[195,43,245,43],[195,45,245,45],[196,6,246,8,"tokenizer"],[196,15,246,17],[196,16,246,18,"peek"],[196,20,246,22],[196,21,246,23],[196,22,246,24],[197,6,247,8,"sign"],[197,10,247,12],[197,13,247,15],[197,14,247,16],[197,15,247,17],[198,4,248,4],[199,4,250,4],[199,8,250,8,"sign"],[199,12,250,12],[199,16,250,16],[199,17,250,17],[199,18,250,18],[199,22,250,22,"tokenizer"],[199,31,250,31],[199,32,250,32,"charCode"],[199,40,250,40],[199,41,250,41],[199,42,250,42],[199,47,250,47,"INFINITY"],[199,55,250,55],[199,57,250,57],[200,6,251,8,"tokenizer"],[200,15,251,17],[200,16,251,18,"peek"],[200,20,251,22],[200,21,251,23],[200,22,251,24],[201,4,252,4],[201,5,252,5],[201,11,252,11],[202,6,253,8,"min"],[202,9,253,11],[202,12,253,14,"sign"],[202,16,253,18],[202,19,253,21,"Number"],[202,25,253,27],[202,26,253,28,"scanNumber"],[202,36,253,38],[202,37,253,39,"tokenizer"],[202,46,253,48],[202,47,253,49],[202,48,253,50],[203,4,254,4],[204,4,256,4,"scanSpaces"],[204,14,256,14],[204,15,256,15,"tokenizer"],[204,24,256,24],[204,25,256,25],[205,4,257,4,"tokenizer"],[205,13,257,13],[205,14,257,14,"eat"],[205,17,257,17],[205,18,257,18,"COMMA"],[205,23,257,23],[205,24,257,24],[206,4,258,4,"scanSpaces"],[206,14,258,14],[206,15,258,15,"tokenizer"],[206,24,258,24],[206,25,258,25],[207,4,260,4],[207,8,260,8,"tokenizer"],[207,17,260,17],[207,18,260,18,"charCode"],[207,26,260,26],[207,27,260,27],[207,28,260,28],[207,33,260,33,"INFINITY"],[207,41,260,41],[207,43,260,43],[208,6,261,8,"tokenizer"],[208,15,261,17],[208,16,261,18,"peek"],[208,20,261,22],[208,21,261,23],[208,22,261,24],[209,4,262,4],[209,5,262,5],[209,11,262,11],[210,6,263,8,"sign"],[210,10,263,12],[210,13,263,15],[210,14,263,16],[211,6,265,8],[211,10,265,12,"tokenizer"],[211,19,265,21],[211,20,265,22,"charCode"],[211,28,265,30],[211,29,265,31],[211,30,265,32],[211,35,265,37,"HYPERMINUS"],[211,45,265,47],[211,47,265,49],[212,8,266,12,"tokenizer"],[212,17,266,21],[212,18,266,22,"peek"],[212,22,266,26],[212,23,266,27],[212,24,266,28],[213,8,267,12,"sign"],[213,12,267,16],[213,15,267,19],[213,16,267,20],[213,17,267,21],[214,6,268,8],[215,6,270,8,"max"],[215,9,270,11],[215,12,270,14,"sign"],[215,16,270,18],[215,19,270,21,"Number"],[215,25,270,27],[215,26,270,28,"scanNumber"],[215,36,270,38],[215,37,270,39,"tokenizer"],[215,46,270,48],[215,47,270,49],[215,48,270,50],[216,4,271,4],[217,4,273,4,"tokenizer"],[217,13,273,13],[217,14,273,14,"eat"],[217,17,273,17],[217,18,273,18,"RIGHTSQUAREBRACKET"],[217,36,273,36],[217,37,273,37],[219,4,275,4],[220,4,276,4],[221,4,277,4],[221,8,277,8,"min"],[221,11,277,11],[221,16,277,16],[221,20,277,20],[221,24,277,24,"max"],[221,27,277,27],[221,32,277,32],[221,36,277,36],[221,38,277,38],[222,6,278,8],[222,13,278,15],[222,17,278,19],[223,4,279,4],[224,4,281,4],[224,11,281,11],[225,6,282,8,"type"],[225,10,282,12],[225,12,282,14],[225,19,282,21],[226,6,283,8,"min"],[226,9,283,11],[226,11,283,13,"min"],[226,14,283,16],[227,6,284,8,"max"],[227,9,284,11],[227,11,284,13,"max"],[228,4,285,4],[228,5,285,5],[229,2,286,0],[230,2,288,0],[230,11,288,9,"readType"],[230,19,288,17,"readType"],[230,20,288,18,"tokenizer"],[230,29,288,27],[230,31,288,29],[231,4,289,4],[231,8,289,8,"name"],[231,12,289,12],[232,4,290,4],[232,8,290,8,"opts"],[232,12,290,12],[232,15,290,15],[232,19,290,19],[233,4,292,4,"tokenizer"],[233,13,292,13],[233,14,292,14,"eat"],[233,17,292,17],[233,18,292,18,"LESSTHANSIGN"],[233,30,292,30],[233,31,292,31],[234,4,293,4,"name"],[234,8,293,8],[234,11,293,11,"scanWord"],[234,19,293,19],[234,20,293,20,"tokenizer"],[234,29,293,29],[234,30,293,30],[235,4,295,4],[235,8,295,8,"tokenizer"],[235,17,295,17],[235,18,295,18,"charCode"],[235,26,295,26],[235,27,295,27],[235,28,295,28],[235,33,295,33,"LEFTPARENTHESIS"],[235,48,295,48],[235,52,296,8,"tokenizer"],[235,61,296,17],[235,62,296,18,"nextCharCode"],[235,74,296,30],[235,75,296,31],[235,76,296,32],[235,81,296,37,"RIGHTPARENTHESIS"],[235,97,296,53],[235,99,296,55],[236,6,297,8,"tokenizer"],[236,15,297,17],[236,16,297,18,"pos"],[236,19,297,21],[236,23,297,25],[236,24,297,26],[237,6,298,8,"name"],[237,10,298,12],[237,14,298,16],[237,18,298,20],[238,4,299,4],[239,4,301,4],[239,8,301,8,"tokenizer"],[239,17,301,17],[239,18,301,18,"charCodeAt"],[239,28,301,28],[239,29,301,29,"tokenizer"],[239,38,301,38],[239,39,301,39,"findWsEnd"],[239,48,301,48],[239,49,301,49,"tokenizer"],[239,58,301,58],[239,59,301,59,"pos"],[239,62,301,62],[239,63,301,63],[239,64,301,64],[239,69,301,69,"LEFTSQUAREBRACKET"],[239,86,301,86],[239,88,301,88],[240,6,302,8,"scanSpaces"],[240,16,302,18],[240,17,302,19,"tokenizer"],[240,26,302,28],[240,27,302,29],[241,6,303,8,"opts"],[241,10,303,12],[241,13,303,15,"readTypeRange"],[241,26,303,28],[241,27,303,29,"tokenizer"],[241,36,303,38],[241,37,303,39],[242,4,304,4],[243,4,306,4,"tokenizer"],[243,13,306,13],[243,14,306,14,"eat"],[243,17,306,17],[243,18,306,18,"GREATERTHANSIGN"],[243,33,306,33],[243,34,306,34],[244,4,308,4],[244,11,308,11,"maybeMultiplied"],[244,26,308,26],[244,27,308,27,"tokenizer"],[244,36,308,36],[244,38,308,38],[245,6,309,8,"type"],[245,10,309,12],[245,12,309,14],[245,18,309,20],[246,6,310,8,"name"],[246,10,310,12],[246,12,310,14,"name"],[246,16,310,18],[247,6,311,8,"opts"],[247,10,311,12],[247,12,311,14,"opts"],[248,4,312,4],[248,5,312,5],[248,6,312,6],[249,2,313,0],[250,2,315,0],[250,11,315,9,"readKeywordOrFunction"],[250,32,315,30,"readKeywordOrFunction"],[250,33,315,31,"tokenizer"],[250,42,315,40],[250,44,315,42],[251,4,316,4],[251,8,316,8,"name"],[251,12,316,12],[252,4,318,4,"name"],[252,8,318,8],[252,11,318,11,"scanWord"],[252,19,318,19],[252,20,318,20,"tokenizer"],[252,29,318,29],[252,30,318,30],[253,4,320,4],[253,8,320,8,"tokenizer"],[253,17,320,17],[253,18,320,18,"charCode"],[253,26,320,26],[253,27,320,27],[253,28,320,28],[253,33,320,33,"LEFTPARENTHESIS"],[253,48,320,48],[253,50,320,50],[254,6,321,8,"tokenizer"],[254,15,321,17],[254,16,321,18,"pos"],[254,19,321,21],[254,21,321,23],[255,6,323,8],[255,13,323,15],[256,8,324,12,"type"],[256,12,324,16],[256,14,324,18],[256,24,324,28],[257,8,325,12,"name"],[257,12,325,16],[257,14,325,18,"name"],[258,6,326,8],[258,7,326,9],[259,4,327,4],[260,4,329,4],[260,11,329,11,"maybeMultiplied"],[260,26,329,26],[260,27,329,27,"tokenizer"],[260,36,329,36],[260,38,329,38],[261,6,330,8,"type"],[261,10,330,12],[261,12,330,14],[261,21,330,23],[262,6,331,8,"name"],[262,10,331,12],[262,12,331,14,"name"],[263,4,332,4],[263,5,332,5],[263,6,332,6],[264,2,333,0],[265,2,335,0],[265,11,335,9,"regroupTerms"],[265,23,335,21,"regroupTerms"],[265,24,335,22,"terms"],[265,29,335,27],[265,31,335,29,"combinators"],[265,42,335,40],[265,44,335,42],[266,4,336,4],[266,13,336,13,"createGroup"],[266,24,336,24,"createGroup"],[266,25,336,25,"terms"],[266,30,336,30],[266,32,336,32,"combinator"],[266,42,336,42],[266,44,336,44],[267,6,337,8],[267,13,337,15],[268,8,338,12,"type"],[268,12,338,16],[268,14,338,18],[268,21,338,25],[269,8,339,12,"terms"],[269,13,339,17],[269,15,339,19,"terms"],[269,20,339,24],[270,8,340,12,"combinator"],[270,18,340,22],[270,20,340,24,"combinator"],[270,30,340,34],[271,8,341,12,"disallowEmpty"],[271,21,341,25],[271,23,341,27],[271,28,341,32],[272,8,342,12,"explicit"],[272,16,342,20],[272,18,342,22],[273,6,343,8],[273,7,343,9],[274,4,344,4],[275,4,346,4,"combinators"],[275,15,346,15],[275,18,346,18,"Object"],[275,24,346,24],[275,25,346,25,"keys"],[275,29,346,29],[275,30,346,30,"combinators"],[275,41,346,41],[275,42,346,42],[275,43,346,43,"sort"],[275,47,346,47],[275,48,346,48],[275,58,346,57,"a"],[275,59,346,58],[275,61,346,60,"b"],[275,62,346,61],[275,64,346,63],[276,6,347,8],[276,13,347,15,"COMBINATOR_PRECEDENCE"],[276,34,347,36],[276,35,347,37,"a"],[276,36,347,38],[276,37,347,39],[276,40,347,42,"COMBINATOR_PRECEDENCE"],[276,61,347,63],[276,62,347,64,"b"],[276,63,347,65],[276,64,347,66],[277,4,348,4],[277,5,348,5],[277,6,348,6],[278,4,350,4],[278,11,350,11,"combinators"],[278,22,350,22],[278,23,350,23,"length"],[278,29,350,29],[278,32,350,32],[278,33,350,33],[278,35,350,35],[279,6,351,8],[279,10,351,12,"combinator"],[279,20,351,22],[279,23,351,25,"combinators"],[279,34,351,36],[279,35,351,37,"shift"],[279,40,351,42],[279,41,351,43],[279,42,351,44],[280,6,352,8],[280,11,352,13],[280,15,352,17,"i"],[280,16,352,18],[280,19,352,21],[280,20,352,22],[280,22,352,24,"subgroupStart"],[280,35,352,37],[280,38,352,40],[280,39,352,41],[280,41,352,43,"i"],[280,42,352,44],[280,45,352,47,"terms"],[280,50,352,52],[280,51,352,53,"length"],[280,57,352,59],[280,59,352,61,"i"],[280,60,352,62],[280,62,352,64],[280,64,352,66],[281,8,353,12],[281,12,353,16,"term"],[281,16,353,20],[281,19,353,23,"terms"],[281,24,353,28],[281,25,353,29,"i"],[281,26,353,30],[281,27,353,31],[282,8,354,12],[282,12,354,16,"term"],[282,16,354,20],[282,17,354,21,"type"],[282,21,354,25],[282,26,354,30],[282,38,354,42],[282,40,354,44],[283,10,355,16],[283,14,355,20,"term"],[283,18,355,24],[283,19,355,25,"value"],[283,24,355,30],[283,29,355,35,"combinator"],[283,39,355,45],[283,41,355,47],[284,12,356,20],[284,16,356,24,"subgroupStart"],[284,29,356,37],[284,34,356,42],[284,35,356,43],[284,36,356,44],[284,38,356,46],[285,14,357,24,"subgroupStart"],[285,27,357,37],[285,30,357,40,"i"],[285,31,357,41],[285,34,357,44],[285,35,357,45],[286,12,358,20],[287,12,359,20,"terms"],[287,17,359,25],[287,18,359,26,"splice"],[287,24,359,32],[287,25,359,33,"i"],[287,26,359,34],[287,28,359,36],[287,29,359,37],[287,30,359,38],[288,12,360,20,"i"],[288,13,360,21],[288,15,360,23],[289,10,361,16],[289,11,361,17],[289,17,361,23],[290,12,362,20],[290,16,362,24,"subgroupStart"],[290,29,362,37],[290,34,362,42],[290,35,362,43],[290,36,362,44],[290,40,362,48,"i"],[290,41,362,49],[290,44,362,52,"subgroupStart"],[290,57,362,65],[290,60,362,68],[290,61,362,69],[290,63,362,71],[291,14,363,24,"terms"],[291,19,363,29],[291,20,363,30,"splice"],[291,26,363,36],[291,27,364,28,"subgroupStart"],[291,40,364,41],[291,42,365,28,"i"],[291,43,365,29],[291,46,365,32,"subgroupStart"],[291,59,365,45],[291,61,366,28,"createGroup"],[291,72,366,39],[291,73,366,40,"terms"],[291,78,366,45],[291,79,366,46,"slice"],[291,84,366,51],[291,85,366,52,"subgroupStart"],[291,98,366,65],[291,100,366,67,"i"],[291,101,366,68],[291,102,366,69],[291,104,366,71,"combinator"],[291,114,366,81],[291,115,367,24],[291,116,367,25],[292,14,368,24,"i"],[292,15,368,25],[292,18,368,28,"subgroupStart"],[292,31,368,41],[292,34,368,44],[292,35,368,45],[293,12,369,20],[294,12,370,20,"subgroupStart"],[294,25,370,33],[294,28,370,36],[294,29,370,37],[294,30,370,38],[295,10,371,16],[296,8,372,12],[297,6,373,8],[298,6,375,8],[298,10,375,12,"subgroupStart"],[298,23,375,25],[298,28,375,30],[298,29,375,31],[298,30,375,32],[298,34,375,36,"combinators"],[298,45,375,47],[298,46,375,48,"length"],[298,52,375,54],[298,54,375,56],[299,8,376,12,"terms"],[299,13,376,17],[299,14,376,18,"splice"],[299,20,376,24],[299,21,377,16,"subgroupStart"],[299,34,377,29],[299,36,378,16,"i"],[299,37,378,17],[299,40,378,20,"subgroupStart"],[299,53,378,33],[299,55,379,16,"createGroup"],[299,66,379,27],[299,67,379,28,"terms"],[299,72,379,33],[299,73,379,34,"slice"],[299,78,379,39],[299,79,379,40,"subgroupStart"],[299,92,379,53],[299,94,379,55,"i"],[299,95,379,56],[299,96,379,57],[299,98,379,59,"combinator"],[299,108,379,69],[299,109,380,12],[299,110,380,13],[300,6,381,8],[301,4,382,4],[302,4,384,4],[302,11,384,11,"combinator"],[302,21,384,21],[303,2,385,0],[304,2,387,0],[304,11,387,9,"readImplicitGroup"],[304,28,387,26,"readImplicitGroup"],[304,29,387,27,"tokenizer"],[304,38,387,36],[304,40,387,38],[305,4,388,4],[305,8,388,8,"terms"],[305,13,388,13],[305,16,388,16],[305,18,388,18],[306,4,389,4],[306,8,389,8,"combinators"],[306,19,389,19],[306,22,389,22],[306,23,389,23],[306,24,389,24],[307,4,390,4],[307,8,390,8,"token"],[307,13,390,13],[308,4,391,4],[308,8,391,8,"prevToken"],[308,17,391,17],[308,20,391,20],[308,24,391,24],[309,4,392,4],[309,8,392,8,"prevTokenPos"],[309,20,392,20],[309,23,392,23,"tokenizer"],[309,32,392,32],[309,33,392,33,"pos"],[309,36,392,36],[310,4,394,4],[310,11,394,11,"token"],[310,16,394,16],[310,19,394,19,"peek"],[310,23,394,23],[310,24,394,24,"tokenizer"],[310,33,394,33],[310,34,394,34],[310,36,394,36],[311,6,395,8],[311,10,395,12,"token"],[311,15,395,17],[311,16,395,18,"type"],[311,20,395,22],[311,25,395,27],[311,33,395,35],[311,35,395,37],[312,8,396,12],[312,12,396,16,"token"],[312,17,396,21],[312,18,396,22,"type"],[312,22,396,26],[312,27,396,31],[312,39,396,43],[312,41,396,45],[313,10,397,16],[314,10,398,16],[314,14,398,20,"prevToken"],[314,23,398,29],[314,28,398,34],[314,32,398,38],[314,36,398,42,"prevToken"],[314,45,398,51],[314,46,398,52,"type"],[314,50,398,56],[314,55,398,61],[314,67,398,73],[314,69,398,75],[315,12,399,20,"tokenizer"],[315,21,399,29],[315,22,399,30,"pos"],[315,25,399,33],[315,28,399,36,"prevTokenPos"],[315,40,399,48],[316,12,400,20,"tokenizer"],[316,21,400,29],[316,22,400,30,"error"],[316,27,400,35],[316,28,400,36],[316,51,400,59],[316,52,400,60],[317,10,401,16],[318,10,403,16,"combinators"],[318,21,403,27],[318,22,403,28,"token"],[318,27,403,33],[318,28,403,34,"value"],[318,33,403,39],[318,34,403,40],[318,37,403,43],[318,41,403,47],[319,8,404,12],[319,9,404,13],[319,15,404,19],[319,19,404,23,"prevToken"],[319,28,404,32],[319,33,404,37],[319,37,404,41],[319,41,404,45,"prevToken"],[319,50,404,54],[319,51,404,55,"type"],[319,55,404,59],[319,60,404,64],[319,72,404,76],[319,74,404,78],[320,10,405,16,"combinators"],[320,21,405,27],[320,22,405,28],[320,25,405,31],[320,26,405,32],[320,29,405,35],[320,33,405,39],[320,34,405,40],[320,35,405,42],[321,10,406,16,"terms"],[321,15,406,21],[321,16,406,22,"push"],[321,20,406,26],[321,21,406,27],[322,12,407,20,"type"],[322,16,407,24],[322,18,407,26],[322,30,407,38],[323,12,408,20,"value"],[323,17,408,25],[323,19,408,27],[324,10,409,16],[324,11,409,17],[324,12,409,18],[325,8,410,12],[326,8,412,12,"terms"],[326,13,412,17],[326,14,412,18,"push"],[326,18,412,22],[326,19,412,23,"token"],[326,24,412,28],[326,25,412,29],[327,8,413,12,"prevToken"],[327,17,413,21],[327,20,413,24,"token"],[327,25,413,29],[328,8,414,12,"prevTokenPos"],[328,20,414,24],[328,23,414,27,"tokenizer"],[328,32,414,36],[328,33,414,37,"pos"],[328,36,414,40],[329,6,415,8],[330,4,416,4],[332,4,418,4],[333,4,419,4],[333,8,419,8,"prevToken"],[333,17,419,17],[333,22,419,22],[333,26,419,26],[333,30,419,30,"prevToken"],[333,39,419,39],[333,40,419,40,"type"],[333,44,419,44],[333,49,419,49],[333,61,419,61],[333,63,419,63],[334,6,420,8,"tokenizer"],[334,15,420,17],[334,16,420,18,"pos"],[334,19,420,21],[334,23,420,25,"prevTokenPos"],[334,35,420,37],[335,6,421,8,"tokenizer"],[335,15,421,17],[335,16,421,18,"error"],[335,21,421,23],[335,22,421,24],[335,45,421,47],[335,46,421,48],[336,4,422,4],[337,4,424,4],[337,11,424,11],[338,6,425,8,"type"],[338,10,425,12],[338,12,425,14],[338,19,425,21],[339,6,426,8,"terms"],[339,11,426,13],[339,13,426,15,"terms"],[339,18,426,20],[340,6,427,8,"combinator"],[340,16,427,18],[340,18,427,20,"regroupTerms"],[340,30,427,32],[340,31,427,33,"terms"],[340,36,427,38],[340,38,427,40,"combinators"],[340,49,427,51],[340,50,427,52],[340,54,427,56],[340,57,427,59],[341,6,428,8,"disallowEmpty"],[341,19,428,21],[341,21,428,23],[341,26,428,28],[342,6,429,8,"explicit"],[342,14,429,16],[342,16,429,18],[343,4,430,4],[343,5,430,5],[344,2,431,0],[345,2,433,0],[345,11,433,9,"readGroup"],[345,20,433,18,"readGroup"],[345,21,433,19,"tokenizer"],[345,30,433,28],[345,32,433,30],[346,4,434,4],[346,8,434,8,"result"],[346,14,434,14],[347,4,436,4,"tokenizer"],[347,13,436,13],[347,14,436,14,"eat"],[347,17,436,17],[347,18,436,18,"LEFTSQUAREBRACKET"],[347,35,436,35],[347,36,436,36],[348,4,437,4,"result"],[348,10,437,10],[348,13,437,13,"readImplicitGroup"],[348,30,437,30],[348,31,437,31,"tokenizer"],[348,40,437,40],[348,41,437,41],[349,4,438,4,"tokenizer"],[349,13,438,13],[349,14,438,14,"eat"],[349,17,438,17],[349,18,438,18,"RIGHTSQUAREBRACKET"],[349,36,438,36],[349,37,438,37],[350,4,440,4,"result"],[350,10,440,10],[350,11,440,11,"explicit"],[350,19,440,19],[350,22,440,22],[350,26,440,26],[351,4,442,4],[351,8,442,8,"tokenizer"],[351,17,442,17],[351,18,442,18,"charCode"],[351,26,442,26],[351,27,442,27],[351,28,442,28],[351,33,442,33,"EXCLAMATIONMARK"],[351,48,442,48],[351,50,442,50],[352,6,443,8,"tokenizer"],[352,15,443,17],[352,16,443,18,"pos"],[352,19,443,21],[352,21,443,23],[353,6,444,8,"result"],[353,12,444,14],[353,13,444,15,"disallowEmpty"],[353,26,444,28],[353,29,444,31],[353,33,444,35],[354,4,445,4],[355,4,447,4],[355,11,447,11,"result"],[355,17,447,17],[356,2,448,0],[357,2,450,0],[357,11,450,9,"peek"],[357,15,450,13,"peek"],[357,16,450,14,"tokenizer"],[357,25,450,23],[357,27,450,25],[358,4,451,4],[358,8,451,8,"code"],[358,12,451,12],[358,15,451,15,"tokenizer"],[358,24,451,24],[358,25,451,25,"charCode"],[358,33,451,33],[358,34,451,34],[358,35,451,35],[359,4,453,4],[359,8,453,8,"code"],[359,12,453,12],[359,15,453,15],[359,18,453,18],[359,22,453,22,"NAME_CHAR"],[359,31,453,31],[359,32,453,32,"code"],[359,36,453,36],[359,37,453,37],[359,42,453,42],[359,43,453,43],[359,45,453,45],[360,6,454,8],[360,13,454,15,"readKeywordOrFunction"],[360,34,454,36],[360,35,454,37,"tokenizer"],[360,44,454,46],[360,45,454,47],[361,4,455,4],[362,4,457,4],[362,12,457,12,"code"],[362,16,457,16],[363,6,458,8],[363,11,458,13,"RIGHTSQUAREBRACKET"],[363,29,458,31],[364,8,459,12],[365,8,460,12],[366,6,462,8],[366,11,462,13,"LEFTSQUAREBRACKET"],[366,28,462,30],[367,8,463,12],[367,15,463,19,"maybeMultiplied"],[367,30,463,34],[367,31,463,35,"tokenizer"],[367,40,463,44],[367,42,463,46,"readGroup"],[367,51,463,55],[367,52,463,56,"tokenizer"],[367,61,463,65],[367,62,463,66],[367,63,463,67],[368,6,465,8],[368,11,465,13,"LESSTHANSIGN"],[368,23,465,25],[369,8,466,12],[369,15,466,19,"tokenizer"],[369,24,466,28],[369,25,466,29,"nextCharCode"],[369,37,466,41],[369,38,466,42],[369,39,466,43],[369,44,466,48,"APOSTROPHE"],[369,54,466,58],[369,57,467,18,"readProperty"],[369,69,467,30],[369,70,467,31,"tokenizer"],[369,79,467,40],[369,80,467,41],[369,83,468,18,"readType"],[369,91,468,26],[369,92,468,27,"tokenizer"],[369,101,468,36],[369,102,468,37],[370,6,470,8],[370,11,470,13,"VERTICALLINE"],[370,23,470,25],[371,8,471,12],[371,15,471,19],[372,10,472,16,"type"],[372,14,472,20],[372,16,472,22],[372,28,472,34],[373,10,473,16,"value"],[373,15,473,21],[373,17,473,23,"tokenizer"],[373,26,473,32],[373,27,473,33,"substringToPos"],[373,41,473,47],[373,42,474,20,"tokenizer"],[373,51,474,29],[373,52,474,30,"nextCharCode"],[373,64,474,42],[373,65,474,43],[373,66,474,44],[373,71,474,49,"VERTICALLINE"],[373,83,474,61],[373,86,475,26,"tokenizer"],[373,95,475,35],[373,96,475,36,"pos"],[373,99,475,39],[373,102,475,42],[373,103,475,43],[373,106,476,26,"tokenizer"],[373,115,476,35],[373,116,476,36,"pos"],[373,119,476,39],[373,122,476,42],[373,123,477,16],[374,8,478,12],[374,9,478,13],[375,6,480,8],[375,11,480,13,"AMPERSAND"],[375,20,480,22],[376,8,481,12,"tokenizer"],[376,17,481,21],[376,18,481,22,"pos"],[376,21,481,25],[376,23,481,27],[377,8,482,12,"tokenizer"],[377,17,482,21],[377,18,482,22,"eat"],[377,21,482,25],[377,22,482,26,"AMPERSAND"],[377,31,482,35],[377,32,482,36],[378,8,484,12],[378,15,484,19],[379,10,485,16,"type"],[379,14,485,20],[379,16,485,22],[379,28,485,34],[380,10,486,16,"value"],[380,15,486,21],[380,17,486,23],[381,8,487,12],[381,9,487,13],[382,6,489,8],[382,11,489,13,"COMMA"],[382,16,489,18],[383,8,490,12,"tokenizer"],[383,17,490,21],[383,18,490,22,"pos"],[383,21,490,25],[383,23,490,27],[384,8,491,12],[384,15,491,19],[385,10,492,16,"type"],[385,14,492,20],[385,16,492,22],[386,8,493,12],[386,9,493,13],[387,6,495,8],[387,11,495,13,"APOSTROPHE"],[387,21,495,23],[388,8,496,12],[388,15,496,19,"maybeMultiplied"],[388,30,496,34],[388,31,496,35,"tokenizer"],[388,40,496,44],[388,42,496,46],[389,10,497,16,"type"],[389,14,497,20],[389,16,497,22],[389,24,497,30],[390,10,498,16,"value"],[390,15,498,21],[390,17,498,23,"scanString"],[390,27,498,33],[390,28,498,34,"tokenizer"],[390,37,498,43],[391,8,499,12],[391,9,499,13],[391,10,499,14],[392,6,501,8],[392,11,501,13,"SPACE"],[392,16,501,18],[393,6,502,8],[393,11,502,13,"TAB"],[393,14,502,16],[394,6,503,8],[394,11,503,13,"N"],[394,12,503,14],[395,6,504,8],[395,11,504,13,"R"],[395,12,504,14],[396,6,505,8],[396,11,505,13,"F"],[396,12,505,14],[397,8,506,12],[397,15,506,19],[398,10,507,16,"type"],[398,14,507,20],[398,16,507,22],[398,24,507,30],[399,10,508,16,"value"],[399,15,508,21],[399,17,508,23,"scanSpaces"],[399,27,508,33],[399,28,508,34,"tokenizer"],[399,37,508,43],[400,8,509,12],[400,9,509,13],[401,6,511,8],[401,11,511,13,"COMMERCIALAT"],[401,23,511,25],[402,8,512,12,"code"],[402,12,512,16],[402,15,512,19,"tokenizer"],[402,24,512,28],[402,25,512,29,"nextCharCode"],[402,37,512,41],[402,38,512,42],[402,39,512,43],[403,8,514,12],[403,12,514,16,"code"],[403,16,514,20],[403,19,514,23],[403,22,514,26],[403,26,514,30,"NAME_CHAR"],[403,35,514,39],[403,36,514,40,"code"],[403,40,514,44],[403,41,514,45],[403,46,514,50],[403,47,514,51],[403,49,514,53],[404,10,515,16,"tokenizer"],[404,19,515,25],[404,20,515,26,"pos"],[404,23,515,29],[404,25,515,31],[405,10,516,16],[405,17,516,23],[406,12,517,20,"type"],[406,16,517,24],[406,18,517,26],[406,29,517,37],[407,12,518,20,"name"],[407,16,518,24],[407,18,518,26,"scanWord"],[407,26,518,34],[407,27,518,35,"tokenizer"],[407,36,518,44],[408,10,519,16],[408,11,519,17],[409,8,520,12],[410,8,522,12],[410,15,522,19,"maybeToken"],[410,25,522,29],[410,26,522,30,"tokenizer"],[410,35,522,39],[410,36,522,40],[411,6,524,8],[411,11,524,13,"ASTERISK"],[411,19,524,21],[412,6,525,8],[412,11,525,13,"PLUSSIGN"],[412,19,525,21],[413,6,526,8],[413,11,526,13,"QUESTIONMARK"],[413,23,526,25],[414,6,527,8],[414,11,527,13,"NUMBERSIGN"],[414,21,527,23],[415,6,528,8],[415,11,528,13,"EXCLAMATIONMARK"],[415,26,528,28],[416,8,529,12],[417,8,530,12],[418,6,532,8],[418,11,532,13,"LEFTCURLYBRACKET"],[418,27,532,29],[419,8,533,12],[420,8,534,12],[421,8,535,12,"code"],[421,12,535,16],[421,15,535,19,"tokenizer"],[421,24,535,28],[421,25,535,29,"nextCharCode"],[421,37,535,41],[421,38,535,42],[421,39,535,43],[422,8,537,12],[422,12,537,16,"code"],[422,16,537,20],[422,19,537,23],[422,21,537,25],[422,25,537,29,"code"],[422,29,537,33],[422,32,537,36],[422,34,537,38],[422,36,537,40],[423,10,538,16],[423,17,538,23,"maybeToken"],[423,27,538,33],[423,28,538,34,"tokenizer"],[423,37,538,43],[423,38,538,44],[424,8,539,12],[425,8,541,12],[426,6,543,8],[427,8,544,12],[427,15,544,19,"maybeToken"],[427,25,544,29],[427,26,544,30,"tokenizer"],[427,35,544,39],[427,36,544,40],[428,4,545,4],[429,2,546,0],[430,2,548,0],[430,11,548,9,"parse"],[430,16,548,14,"parse"],[430,17,548,15,"source"],[430,23,548,21],[430,25,548,23],[431,4,549,4],[431,8,549,8,"tokenizer"],[431,17,549,17],[431,20,549,20],[431,24,549,24,"Tokenizer"],[431,33,549,33],[431,34,549,34,"source"],[431,40,549,40],[431,41,549,41],[432,4,550,4],[432,8,550,8,"result"],[432,14,550,14],[432,17,550,17,"readImplicitGroup"],[432,34,550,34],[432,35,550,35,"tokenizer"],[432,44,550,44],[432,45,550,45],[433,4,552,4],[433,8,552,8,"tokenizer"],[433,17,552,17],[433,18,552,18,"pos"],[433,21,552,21],[433,26,552,26,"source"],[433,32,552,32],[433,33,552,33,"length"],[433,39,552,39],[433,41,552,41],[434,6,553,8,"tokenizer"],[434,15,553,17],[434,16,553,18,"error"],[434,21,553,23],[434,22,553,24],[434,40,553,42],[434,41,553,43],[435,4,554,4],[437,4,556,4],[438,4,557,4],[438,8,557,8,"result"],[438,14,557,14],[438,15,557,15,"terms"],[438,20,557,20],[438,21,557,21,"length"],[438,27,557,27],[438,32,557,32],[438,33,557,33],[438,37,557,37,"result"],[438,43,557,43],[438,44,557,44,"terms"],[438,49,557,49],[438,50,557,50],[438,51,557,51],[438,52,557,52],[438,53,557,53,"type"],[438,57,557,57],[438,62,557,62],[438,69,557,69],[438,71,557,71],[439,6,558,8,"result"],[439,12,558,14],[439,15,558,17,"result"],[439,21,558,23],[439,22,558,24,"terms"],[439,27,558,29],[439,28,558,30],[439,29,558,31],[439,30,558,32],[440,4,559,4],[441,4,561,4],[441,11,561,11,"result"],[441,17,561,17],[442,2,562,0],[444,2,564,0],[445,2,565,0],[446,2,566,0,"parse"],[446,7,566,5],[446,8,566,6],[446,59,566,57],[446,60,566,58],[447,2,568,0,"module"],[447,8,568,6],[447,9,568,7,"exports"],[447,16,568,14],[447,19,568,17,"parse"],[447,24,568,22],[448,0,568,23]],"functionMap":{"names":["<global>","createCharMap$argument_0","createCharMap","scanSpaces","scanWord","scanNumber","scanString","readMultiplierRange","readMultiplier","maybeMultiplied","maybeToken","readProperty","readTypeRange","readType","readKeywordOrFunction","regroupTerms","createGroup","Object.keys.sort$argument_0","readImplicitGroup","readGroup","peek","parse"],"mappings":"AAA;8BC0B;CDE;AEQ;CFM;AGE;CHI;AIE;CJe;AKE;CLe;AME;CNS;AOE;CPuB;AQE;CRkE;ASE;CTS;AUE;CVW;AWE;CXe;AYS;CZiD;AaE;CbyB;AcE;CdkB;AeE;ICC;KDQ;gDEE;KFE;CfqC;AkBE;ClB4C;AmBE;CnBe;AoBE;CpBgG;AqBE;CrBc"}},"type":"js/module"}]}