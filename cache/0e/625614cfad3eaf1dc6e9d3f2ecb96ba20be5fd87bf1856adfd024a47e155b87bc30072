{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":43,"index":43}},{"start":{"line":2,"column":14,"index":70},"end":{"line":2,"column":40,"index":96}},{"start":{"line":3,"column":11,"index":117},"end":{"line":3,"column":37,"index":143}},{"start":{"line":4,"column":11,"index":161},"end":{"line":4,"column":37,"index":187}}],"key":"llq4nuOBKCCL4A7IFpRswh14toM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var isHexDigit = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").isHexDigit;\n  var cmpChar = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpChar;\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n  var NAME = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").NAME;\n  var IDENT = TYPE.Ident;\n  var NUMBER = TYPE.Number;\n  var DIMENSION = TYPE.Dimension;\n  var PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\n  var HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n  var QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n  var U = 0x0075; // U+0075 LATIN SMALL LETTER U (u)\n\n  function eatHexSequence(offset, allowDash) {\n    for (var pos = this.scanner.tokenStart + offset, len = 0; pos < this.scanner.tokenEnd; pos++) {\n      var code = this.scanner.source.charCodeAt(pos);\n      if (code === HYPHENMINUS && allowDash && len !== 0) {\n        if (eatHexSequence.call(this, offset + len + 1, false) === 0) {\n          this.error();\n        }\n        return -1;\n      }\n      if (!isHexDigit(code)) {\n        this.error(allowDash && len !== 0 ? 'HyphenMinus' + (len < 6 ? ' or hex digit' : '') + ' is expected' : len < 6 ? 'Hex digit is expected' : 'Unexpected input', pos);\n      }\n      if (++len > 6) {\n        this.error('Too many hex digits', pos);\n      }\n      ;\n    }\n    this.scanner.next();\n    return len;\n  }\n  function eatQuestionMarkSequence(max) {\n    var count = 0;\n    while (this.scanner.isDelim(QUESTIONMARK)) {\n      if (++count > max) {\n        this.error('Too many question marks');\n      }\n      this.scanner.next();\n    }\n  }\n  function startsWith(code) {\n    if (this.scanner.source.charCodeAt(this.scanner.tokenStart) !== code) {\n      this.error(NAME[code] + ' is expected');\n    }\n  }\n\n  // https://drafts.csswg.org/css-syntax/#urange\n  // Informally, the <urange> production has three forms:\n  // U+0001\n  //      Defines a range consisting of a single code point, in this case the code point \"1\".\n  // U+0001-00ff\n  //      Defines a range of codepoints between the first and the second value, in this case\n  //      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n  // U+00??\n  //      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n  //      in this case defining the same as the value U+0000-00ff.\n  // In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n  //\n  // <urange> =\n  //   u '+' <ident-token> '?'* |\n  //   u <dimension-token> '?'* |\n  //   u <number-token> '?'* |\n  //   u <number-token> <dimension-token> |\n  //   u <number-token> <number-token> |\n  //   u '+' '?'+\n  function scanUnicodeRange() {\n    var hexLength = 0;\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (this.scanner.isDelim(PLUSSIGN)) {\n      this.scanner.next();\n      if (this.scanner.tokenType === IDENT) {\n        hexLength = eatHexSequence.call(this, 0, true);\n        if (hexLength > 0) {\n          eatQuestionMarkSequence.call(this, 6 - hexLength);\n        }\n        return;\n      }\n      if (this.scanner.isDelim(QUESTIONMARK)) {\n        this.scanner.next();\n        eatQuestionMarkSequence.call(this, 5);\n        return;\n      }\n      this.error('Hex digit or question mark is expected');\n      return;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (this.scanner.tokenType === NUMBER) {\n      startsWith.call(this, PLUSSIGN);\n      hexLength = eatHexSequence.call(this, 1, true);\n      if (this.scanner.isDelim(QUESTIONMARK)) {\n        eatQuestionMarkSequence.call(this, 6 - hexLength);\n        return;\n      }\n      if (this.scanner.tokenType === DIMENSION || this.scanner.tokenType === NUMBER) {\n        startsWith.call(this, HYPHENMINUS);\n        eatHexSequence.call(this, 1, false);\n        return;\n      }\n      return;\n    }\n\n    // u <dimension-token> '?'*\n    if (this.scanner.tokenType === DIMENSION) {\n      startsWith.call(this, PLUSSIGN);\n      hexLength = eatHexSequence.call(this, 1, true);\n      if (hexLength > 0) {\n        eatQuestionMarkSequence.call(this, 6 - hexLength);\n      }\n      return;\n    }\n    this.error();\n  }\n  module.exports = {\n    name: 'UnicodeRange',\n    structure: {\n      value: String\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n\n      // U or u\n      if (!cmpChar(this.scanner.source, start, U)) {\n        this.error('U is expected');\n      }\n      if (!cmpChar(this.scanner.source, start + 1, PLUSSIGN)) {\n        this.error('Plus sign is expected');\n      }\n      this.scanner.next();\n      scanUnicodeRange.call(this);\n      return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        value: this.scanner.substrToCursor(start)\n      };\n    },\n    generate: function generate(node) {\n      this.chunk(node.value);\n    }\n  };\n});","lineCount":147,"map":[[2,2,1,0],[2,6,1,4,"isHexDigit"],[2,16,1,14],[2,19,1,17,"require"],[2,30,1,24],[2,31,1,24,"_dependencyMap"],[2,45,1,24],[2,67,1,42],[2,68,1,43],[2,69,1,44,"isHexDigit"],[2,79,1,54],[3,2,2,0],[3,6,2,4,"cmpChar"],[3,13,2,11],[3,16,2,14,"require"],[3,27,2,21],[3,28,2,21,"_dependencyMap"],[3,42,2,21],[3,64,2,39],[3,65,2,40],[3,66,2,41,"cmpChar"],[3,73,2,48],[4,2,3,0],[4,6,3,4,"TYPE"],[4,10,3,8],[4,13,3,11,"require"],[4,24,3,18],[4,25,3,18,"_dependencyMap"],[4,39,3,18],[4,61,3,36],[4,62,3,37],[4,63,3,38,"TYPE"],[4,67,3,42],[5,2,4,0],[5,6,4,4,"NAME"],[5,10,4,8],[5,13,4,11,"require"],[5,24,4,18],[5,25,4,18,"_dependencyMap"],[5,39,4,18],[5,61,4,36],[5,62,4,37],[5,63,4,38,"NAME"],[5,67,4,42],[6,2,6,0],[6,6,6,4,"IDENT"],[6,11,6,9],[6,14,6,12,"TYPE"],[6,18,6,16],[6,19,6,17,"Ident"],[6,24,6,22],[7,2,7,0],[7,6,7,4,"NUMBER"],[7,12,7,10],[7,15,7,13,"TYPE"],[7,19,7,17],[7,20,7,18,"Number"],[7,26,7,24],[8,2,8,0],[8,6,8,4,"DIMENSION"],[8,15,8,13],[8,18,8,16,"TYPE"],[8,22,8,20],[8,23,8,21,"Dimension"],[8,32,8,30],[9,2,9,0],[9,6,9,4,"PLUSSIGN"],[9,14,9,12],[9,17,9,15],[9,23,9,21],[9,24,9,22],[9,25,9,27],[10,2,10,0],[10,6,10,4,"HYPHENMINUS"],[10,17,10,15],[10,20,10,18],[10,26,10,24],[10,27,10,25],[10,28,10,27],[11,2,11,0],[11,6,11,4,"QUESTIONMARK"],[11,18,11,16],[11,21,11,19],[11,27,11,25],[11,28,11,26],[11,29,11,27],[12,2,12,0],[12,6,12,4,"U"],[12,7,12,5],[12,10,12,8],[12,16,12,14],[12,17,12,15],[12,18,12,27],[14,2,14,0],[14,11,14,9,"eatHexSequence"],[14,25,14,23,"eatHexSequence"],[14,26,14,24,"offset"],[14,32,14,30],[14,34,14,32,"allowDash"],[14,43,14,41],[14,45,14,43],[15,4,15,4],[15,9,15,9],[15,13,15,13,"pos"],[15,16,15,16],[15,19,15,19],[15,23,15,23],[15,24,15,24,"scanner"],[15,31,15,31],[15,32,15,32,"tokenStart"],[15,42,15,42],[15,45,15,45,"offset"],[15,51,15,51],[15,53,15,53,"len"],[15,56,15,56],[15,59,15,59],[15,60,15,60],[15,62,15,62,"pos"],[15,65,15,65],[15,68,15,68],[15,72,15,72],[15,73,15,73,"scanner"],[15,80,15,80],[15,81,15,81,"tokenEnd"],[15,89,15,89],[15,91,15,91,"pos"],[15,94,15,94],[15,96,15,96],[15,98,15,98],[16,6,16,8],[16,10,16,12,"code"],[16,14,16,16],[16,17,16,19],[16,21,16,23],[16,22,16,24,"scanner"],[16,29,16,31],[16,30,16,32,"source"],[16,36,16,38],[16,37,16,39,"charCodeAt"],[16,47,16,49],[16,48,16,50,"pos"],[16,51,16,53],[16,52,16,54],[17,6,18,8],[17,10,18,12,"code"],[17,14,18,16],[17,19,18,21,"HYPHENMINUS"],[17,30,18,32],[17,34,18,36,"allowDash"],[17,43,18,45],[17,47,18,49,"len"],[17,50,18,52],[17,55,18,57],[17,56,18,58],[17,58,18,60],[18,8,19,12],[18,12,19,16,"eatHexSequence"],[18,26,19,30],[18,27,19,31,"call"],[18,31,19,35],[18,32,19,36],[18,36,19,40],[18,38,19,42,"offset"],[18,44,19,48],[18,47,19,51,"len"],[18,50,19,54],[18,53,19,57],[18,54,19,58],[18,56,19,60],[18,61,19,65],[18,62,19,66],[18,67,19,71],[18,68,19,72],[18,70,19,74],[19,10,20,16],[19,14,20,20],[19,15,20,21,"error"],[19,20,20,26],[19,21,20,27],[19,22,20,28],[20,8,21,12],[21,8,23,12],[21,15,23,19],[21,16,23,20],[21,17,23,21],[22,6,24,8],[23,6,26,8],[23,10,26,12],[23,11,26,13,"isHexDigit"],[23,21,26,23],[23,22,26,24,"code"],[23,26,26,28],[23,27,26,29],[23,29,26,31],[24,8,27,12],[24,12,27,16],[24,13,27,17,"error"],[24,18,27,22],[24,19,28,16,"allowDash"],[24,28,28,25],[24,32,28,29,"len"],[24,35,28,32],[24,40,28,37],[24,41,28,38],[24,44,29,22],[24,57,29,35],[24,61,29,39,"len"],[24,64,29,42],[24,67,29,45],[24,68,29,46],[24,71,29,49],[24,86,29,64],[24,89,29,67],[24,91,29,69],[24,92,29,70],[24,95,29,73],[24,109,29,87],[24,112,30,23,"len"],[24,115,30,26],[24,118,30,29],[24,119,30,30],[24,122,30,33],[24,145,30,56],[24,148,30,59],[24,166,30,78],[24,168,31,16,"pos"],[24,171,32,12],[24,172,32,13],[25,6,33,8],[26,6,35,8],[26,10,35,12],[26,12,35,14,"len"],[26,15,35,17],[26,18,35,20],[26,19,35,21],[26,21,35,23],[27,8,36,12],[27,12,36,16],[27,13,36,17,"error"],[27,18,36,22],[27,19,36,23],[27,40,36,44],[27,42,36,46,"pos"],[27,45,36,49],[27,46,36,50],[28,6,37,8],[29,6,37,9],[30,4,38,4],[31,4,40,4],[31,8,40,8],[31,9,40,9,"scanner"],[31,16,40,16],[31,17,40,17,"next"],[31,21,40,21],[31,22,40,22],[31,23,40,23],[32,4,41,4],[32,11,41,11,"len"],[32,14,41,14],[33,2,42,0],[34,2,44,0],[34,11,44,9,"eatQuestionMarkSequence"],[34,34,44,32,"eatQuestionMarkSequence"],[34,35,44,33,"max"],[34,38,44,36],[34,40,44,38],[35,4,45,4],[35,8,45,8,"count"],[35,13,45,13],[35,16,45,16],[35,17,45,17],[36,4,47,4],[36,11,47,11],[36,15,47,15],[36,16,47,16,"scanner"],[36,23,47,23],[36,24,47,24,"isDelim"],[36,31,47,31],[36,32,47,32,"QUESTIONMARK"],[36,44,47,44],[36,45,47,45],[36,47,47,47],[37,6,48,8],[37,10,48,12],[37,12,48,14,"count"],[37,17,48,19],[37,20,48,22,"max"],[37,23,48,25],[37,25,48,27],[38,8,49,12],[38,12,49,16],[38,13,49,17,"error"],[38,18,49,22],[38,19,49,23],[38,44,49,48],[38,45,49,49],[39,6,50,8],[40,6,52,8],[40,10,52,12],[40,11,52,13,"scanner"],[40,18,52,20],[40,19,52,21,"next"],[40,23,52,25],[40,24,52,26],[40,25,52,27],[41,4,53,4],[42,2,54,0],[43,2,56,0],[43,11,56,9,"startsWith"],[43,21,56,19,"startsWith"],[43,22,56,20,"code"],[43,26,56,24],[43,28,56,26],[44,4,57,4],[44,8,57,8],[44,12,57,12],[44,13,57,13,"scanner"],[44,20,57,20],[44,21,57,21,"source"],[44,27,57,27],[44,28,57,28,"charCodeAt"],[44,38,57,38],[44,39,57,39],[44,43,57,43],[44,44,57,44,"scanner"],[44,51,57,51],[44,52,57,52,"tokenStart"],[44,62,57,62],[44,63,57,63],[44,68,57,68,"code"],[44,72,57,72],[44,74,57,74],[45,6,58,8],[45,10,58,12],[45,11,58,13,"error"],[45,16,58,18],[45,17,58,19,"NAME"],[45,21,58,23],[45,22,58,24,"code"],[45,26,58,28],[45,27,58,29],[45,30,58,32],[45,44,58,46],[45,45,58,47],[46,4,59,4],[47,2,60,0],[49,2,62,0],[50,2,63,0],[51,2,64,0],[52,2,65,0],[53,2,66,0],[54,2,67,0],[55,2,68,0],[56,2,69,0],[57,2,70,0],[58,2,71,0],[59,2,72,0],[60,2,73,0],[61,2,74,0],[62,2,75,0],[63,2,76,0],[64,2,77,0],[65,2,78,0],[66,2,79,0],[67,2,80,0],[68,2,81,0],[68,11,81,9,"scanUnicodeRange"],[68,27,81,25,"scanUnicodeRange"],[68,28,81,25],[68,30,81,28],[69,4,82,4],[69,8,82,8,"hexLength"],[69,17,82,17],[69,20,82,20],[69,21,82,21],[71,4,84,4],[72,4,85,4],[73,4,86,4],[73,8,86,8],[73,12,86,12],[73,13,86,13,"scanner"],[73,20,86,20],[73,21,86,21,"isDelim"],[73,28,86,28],[73,29,86,29,"PLUSSIGN"],[73,37,86,37],[73,38,86,38],[73,40,86,40],[74,6,87,8],[74,10,87,12],[74,11,87,13,"scanner"],[74,18,87,20],[74,19,87,21,"next"],[74,23,87,25],[74,24,87,26],[74,25,87,27],[75,6,89,8],[75,10,89,12],[75,14,89,16],[75,15,89,17,"scanner"],[75,22,89,24],[75,23,89,25,"tokenType"],[75,32,89,34],[75,37,89,39,"IDENT"],[75,42,89,44],[75,44,89,46],[76,8,90,12,"hexLength"],[76,17,90,21],[76,20,90,24,"eatHexSequence"],[76,34,90,38],[76,35,90,39,"call"],[76,39,90,43],[76,40,90,44],[76,44,90,48],[76,46,90,50],[76,47,90,51],[76,49,90,53],[76,53,90,57],[76,54,90,58],[77,8,91,12],[77,12,91,16,"hexLength"],[77,21,91,25],[77,24,91,28],[77,25,91,29],[77,27,91,31],[78,10,92,16,"eatQuestionMarkSequence"],[78,33,92,39],[78,34,92,40,"call"],[78,38,92,44],[78,39,92,45],[78,43,92,49],[78,45,92,51],[78,46,92,52],[78,49,92,55,"hexLength"],[78,58,92,64],[78,59,92,65],[79,8,93,12],[80,8,94,12],[81,6,95,8],[82,6,97,8],[82,10,97,12],[82,14,97,16],[82,15,97,17,"scanner"],[82,22,97,24],[82,23,97,25,"isDelim"],[82,30,97,32],[82,31,97,33,"QUESTIONMARK"],[82,43,97,45],[82,44,97,46],[82,46,97,48],[83,8,98,12],[83,12,98,16],[83,13,98,17,"scanner"],[83,20,98,24],[83,21,98,25,"next"],[83,25,98,29],[83,26,98,30],[83,27,98,31],[84,8,99,12,"eatQuestionMarkSequence"],[84,31,99,35],[84,32,99,36,"call"],[84,36,99,40],[84,37,99,41],[84,41,99,45],[84,43,99,47],[84,44,99,48],[84,45,99,49],[85,8,100,12],[86,6,101,8],[87,6,103,8],[87,10,103,12],[87,11,103,13,"error"],[87,16,103,18],[87,17,103,19],[87,57,103,59],[87,58,103,60],[88,6,104,8],[89,4,105,4],[91,4,107,4],[92,4,108,4],[93,4,109,4],[94,4,110,4],[94,8,110,8],[94,12,110,12],[94,13,110,13,"scanner"],[94,20,110,20],[94,21,110,21,"tokenType"],[94,30,110,30],[94,35,110,35,"NUMBER"],[94,41,110,41],[94,43,110,43],[95,6,111,8,"startsWith"],[95,16,111,18],[95,17,111,19,"call"],[95,21,111,23],[95,22,111,24],[95,26,111,28],[95,28,111,30,"PLUSSIGN"],[95,36,111,38],[95,37,111,39],[96,6,112,8,"hexLength"],[96,15,112,17],[96,18,112,20,"eatHexSequence"],[96,32,112,34],[96,33,112,35,"call"],[96,37,112,39],[96,38,112,40],[96,42,112,44],[96,44,112,46],[96,45,112,47],[96,47,112,49],[96,51,112,53],[96,52,112,54],[97,6,114,8],[97,10,114,12],[97,14,114,16],[97,15,114,17,"scanner"],[97,22,114,24],[97,23,114,25,"isDelim"],[97,30,114,32],[97,31,114,33,"QUESTIONMARK"],[97,43,114,45],[97,44,114,46],[97,46,114,48],[98,8,115,12,"eatQuestionMarkSequence"],[98,31,115,35],[98,32,115,36,"call"],[98,36,115,40],[98,37,115,41],[98,41,115,45],[98,43,115,47],[98,44,115,48],[98,47,115,51,"hexLength"],[98,56,115,60],[98,57,115,61],[99,8,116,12],[100,6,117,8],[101,6,119,8],[101,10,119,12],[101,14,119,16],[101,15,119,17,"scanner"],[101,22,119,24],[101,23,119,25,"tokenType"],[101,32,119,34],[101,37,119,39,"DIMENSION"],[101,46,119,48],[101,50,120,12],[101,54,120,16],[101,55,120,17,"scanner"],[101,62,120,24],[101,63,120,25,"tokenType"],[101,72,120,34],[101,77,120,39,"NUMBER"],[101,83,120,45],[101,85,120,47],[102,8,121,12,"startsWith"],[102,18,121,22],[102,19,121,23,"call"],[102,23,121,27],[102,24,121,28],[102,28,121,32],[102,30,121,34,"HYPHENMINUS"],[102,41,121,45],[102,42,121,46],[103,8,122,12,"eatHexSequence"],[103,22,122,26],[103,23,122,27,"call"],[103,27,122,31],[103,28,122,32],[103,32,122,36],[103,34,122,38],[103,35,122,39],[103,37,122,41],[103,42,122,46],[103,43,122,47],[104,8,123,12],[105,6,124,8],[106,6,126,8],[107,4,127,4],[109,4,129,4],[110,4,130,4],[110,8,130,8],[110,12,130,12],[110,13,130,13,"scanner"],[110,20,130,20],[110,21,130,21,"tokenType"],[110,30,130,30],[110,35,130,35,"DIMENSION"],[110,44,130,44],[110,46,130,46],[111,6,131,8,"startsWith"],[111,16,131,18],[111,17,131,19,"call"],[111,21,131,23],[111,22,131,24],[111,26,131,28],[111,28,131,30,"PLUSSIGN"],[111,36,131,38],[111,37,131,39],[112,6,132,8,"hexLength"],[112,15,132,17],[112,18,132,20,"eatHexSequence"],[112,32,132,34],[112,33,132,35,"call"],[112,37,132,39],[112,38,132,40],[112,42,132,44],[112,44,132,46],[112,45,132,47],[112,47,132,49],[112,51,132,53],[112,52,132,54],[113,6,134,8],[113,10,134,12,"hexLength"],[113,19,134,21],[113,22,134,24],[113,23,134,25],[113,25,134,27],[114,8,135,12,"eatQuestionMarkSequence"],[114,31,135,35],[114,32,135,36,"call"],[114,36,135,40],[114,37,135,41],[114,41,135,45],[114,43,135,47],[114,44,135,48],[114,47,135,51,"hexLength"],[114,56,135,60],[114,57,135,61],[115,6,136,8],[116,6,138,8],[117,4,139,4],[118,4,141,4],[118,8,141,8],[118,9,141,9,"error"],[118,14,141,14],[118,15,141,15],[118,16,141,16],[119,2,142,0],[120,2,144,0,"module"],[120,8,144,6],[120,9,144,7,"exports"],[120,16,144,14],[120,19,144,17],[121,4,145,4,"name"],[121,8,145,8],[121,10,145,10],[121,24,145,24],[122,4,146,4,"structure"],[122,13,146,13],[122,15,146,15],[123,6,147,8,"value"],[123,11,147,13],[123,13,147,15,"String"],[124,4,148,4],[124,5,148,5],[125,4,149,4,"parse"],[125,9,149,9],[125,11,149,11],[125,20,149,11,"parse"],[125,26,149,11],[125,28,149,22],[126,6,150,8],[126,10,150,12,"start"],[126,15,150,17],[126,18,150,20],[126,22,150,24],[126,23,150,25,"scanner"],[126,30,150,32],[126,31,150,33,"tokenStart"],[126,41,150,43],[128,6,152,8],[129,6,153,8],[129,10,153,12],[129,11,153,13,"cmpChar"],[129,18,153,20],[129,19,153,21],[129,23,153,25],[129,24,153,26,"scanner"],[129,31,153,33],[129,32,153,34,"source"],[129,38,153,40],[129,40,153,42,"start"],[129,45,153,47],[129,47,153,49,"U"],[129,48,153,50],[129,49,153,51],[129,51,153,53],[130,8,154,12],[130,12,154,16],[130,13,154,17,"error"],[130,18,154,22],[130,19,154,23],[130,34,154,38],[130,35,154,39],[131,6,155,8],[132,6,157,8],[132,10,157,12],[132,11,157,13,"cmpChar"],[132,18,157,20],[132,19,157,21],[132,23,157,25],[132,24,157,26,"scanner"],[132,31,157,33],[132,32,157,34,"source"],[132,38,157,40],[132,40,157,42,"start"],[132,45,157,47],[132,48,157,50],[132,49,157,51],[132,51,157,53,"PLUSSIGN"],[132,59,157,61],[132,60,157,62],[132,62,157,64],[133,8,158,12],[133,12,158,16],[133,13,158,17,"error"],[133,18,158,22],[133,19,158,23],[133,42,158,46],[133,43,158,47],[134,6,159,8],[135,6,161,8],[135,10,161,12],[135,11,161,13,"scanner"],[135,18,161,20],[135,19,161,21,"next"],[135,23,161,25],[135,24,161,26],[135,25,161,27],[136,6,162,8,"scanUnicodeRange"],[136,22,162,24],[136,23,162,25,"call"],[136,27,162,29],[136,28,162,30],[136,32,162,34],[136,33,162,35],[137,6,164,8],[137,13,164,15],[138,8,165,12,"type"],[138,12,165,16],[138,14,165,18],[138,28,165,32],[139,8,166,12,"loc"],[139,11,166,15],[139,13,166,17],[139,17,166,21],[139,18,166,22,"getLocation"],[139,29,166,33],[139,30,166,34,"start"],[139,35,166,39],[139,37,166,41],[139,41,166,45],[139,42,166,46,"scanner"],[139,49,166,53],[139,50,166,54,"tokenStart"],[139,60,166,64],[139,61,166,65],[140,8,167,12,"value"],[140,13,167,17],[140,15,167,19],[140,19,167,23],[140,20,167,24,"scanner"],[140,27,167,31],[140,28,167,32,"substrToCursor"],[140,42,167,46],[140,43,167,47,"start"],[140,48,167,52],[141,6,168,8],[141,7,168,9],[142,4,169,4],[142,5,169,5],[143,4,170,4,"generate"],[143,12,170,12],[143,14,170,14],[143,23,170,14,"generate"],[143,32,170,23,"node"],[143,36,170,27],[143,38,170,29],[144,6,171,8],[144,10,171,12],[144,11,171,13,"chunk"],[144,16,171,18],[144,17,171,19,"node"],[144,21,171,23],[144,22,171,24,"value"],[144,27,171,29],[144,28,171,30],[145,4,172,4],[146,2,173,0],[146,3,173,1],[147,0,173,2]],"functionMap":{"names":["<global>","eatHexSequence","eatQuestionMarkSequence","startsWith","scanUnicodeRange","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACa;CD4B;AEE;CFU;AGE;CHI;AIqB;CJ6D;WKO;KLoB;cMC;KNE"}},"type":"js/module"}]}