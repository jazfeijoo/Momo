{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":183,"column":0,"index":5105}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":183,"column":0,"index":5105}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":183,"column":0,"index":5105}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":183,"column":0,"index":5105}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./NativeBlobModule","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":300},"end":{"line":13,"column":50,"index":350}}],"key":"8yhexf66+KMPl6M2NPjj2sFxaVw="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":351},"end":{"line":14,"column":34,"index":385}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"./Blob","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":13,"index":400},"end":{"line":16,"column":30,"index":417}}],"key":"EbjXBySE25qcfnrYju25x5GaG3k="}},{"name":"./BlobRegistry","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":21,"index":440},"end":{"line":17,"column":46,"index":465}}],"key":"J79JGfKe/FiysxfBPf87zeBV7Ns="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _NativeBlobModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./NativeBlobModule\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"invariant\"));\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         * @format\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                         */\n  var Blob = _$$_REQUIRE(_dependencyMap[6], \"./Blob\");\n  var BlobRegistry = _$$_REQUIRE(_dependencyMap[7], \"./BlobRegistry\");\n\n  /*eslint-disable no-bitwise */\n  /*eslint-disable eqeqeq */\n\n  /**\n   * Based on the rfc4122-compliant solution posted at\n   * http://stackoverflow.com/questions/105034\n   */\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  // **Temporary workaround**\n  // TODO(#24654): Use turbomodules for the Blob module.\n  // Blob collector is a jsi::HostObject that is used by native to know\n  // when the a Blob instance is deallocated. This allows to free the\n  // underlying native resources. This is a hack to workaround the fact\n  // that the current bridge infra doesn't allow to track js objects\n  // deallocation. Ideally the whole Blob object should be a jsi::HostObject.\n  function createBlobCollector(blobId) {\n    if (global.__blobCollectorProvider == null) {\n      return null;\n    } else {\n      return global.__blobCollectorProvider(blobId);\n    }\n  }\n\n  /**\n   * Module to manage blobs. Wrapper around the native blob module.\n   */\n  var BlobManager = /*#__PURE__*/function () {\n    function BlobManager() {\n      (0, _classCallCheck2.default)(this, BlobManager);\n    }\n    (0, _createClass2.default)(BlobManager, null, [{\n      key: \"createFromParts\",\n      value:\n      /**\n       * Create blob from existing array of blobs.\n       */\n      function createFromParts(parts, options) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        var blobId = uuidv4();\n        var items = parts.map(function (part) {\n          if (part instanceof ArrayBuffer || global.ArrayBufferView && part instanceof global.ArrayBufferView) {\n            throw new Error(\"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\");\n          }\n          if (part instanceof Blob) {\n            return {\n              data: part.data,\n              type: 'blob'\n            };\n          } else {\n            return {\n              data: String(part),\n              type: 'string'\n            };\n          }\n        });\n        var size = items.reduce(function (acc, curr) {\n          if (curr.type === 'string') {\n            return acc + global.unescape(encodeURI(curr.data)).length;\n          } else {\n            return acc + curr.data.size;\n          }\n        }, 0);\n        _NativeBlobModule.default.createFromParts(items, blobId);\n        return BlobManager.createFromOptions({\n          blobId: blobId,\n          offset: 0,\n          size: size,\n          type: options ? options.type : '',\n          lastModified: options ? options.lastModified : Date.now()\n        });\n      }\n\n      /**\n       * Create blob instance from blob data from native.\n       * Used internally by modules like XHR, WebSocket, etc.\n       */\n    }, {\n      key: \"createFromOptions\",\n      value: function createFromOptions(options) {\n        BlobRegistry.register(options.blobId);\n        // $FlowFixMe[prop-missing]\n        return Object.assign(Object.create(Blob.prototype), {\n          data:\n          // Reuse the collector instance when creating from an existing blob.\n          // This will make sure that the underlying resource is only deallocated\n          // when all blobs that refer to it are deallocated.\n          options.__collector == null ? _objectSpread(_objectSpread({}, options), {}, {\n            __collector: createBlobCollector(options.blobId)\n          }) : options\n        });\n      }\n\n      /**\n       * Deallocate resources for a blob.\n       */\n    }, {\n      key: \"release\",\n      value: function release(blobId) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        BlobRegistry.unregister(blobId);\n        if (BlobRegistry.has(blobId)) {\n          return;\n        }\n        _NativeBlobModule.default.release(blobId);\n      }\n\n      /**\n       * Inject the blob content handler in the networking module to support blob\n       * requests and responses.\n       */\n    }, {\n      key: \"addNetworkingHandler\",\n      value: function addNetworkingHandler() {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        _NativeBlobModule.default.addNetworkingHandler();\n      }\n\n      /**\n       * Indicate the websocket should return a blob for incoming binary\n       * messages.\n       */\n    }, {\n      key: \"addWebSocketHandler\",\n      value: function addWebSocketHandler(socketId) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        _NativeBlobModule.default.addWebSocketHandler(socketId);\n      }\n\n      /**\n       * Indicate the websocket should no longer return a blob for incoming\n       * binary messages.\n       */\n    }, {\n      key: \"removeWebSocketHandler\",\n      value: function removeWebSocketHandler(socketId) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        _NativeBlobModule.default.removeWebSocketHandler(socketId);\n      }\n\n      /**\n       * Send a blob message to a websocket.\n       */\n    }, {\n      key: \"sendOverSocket\",\n      value: function sendOverSocket(blob, socketId) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        _NativeBlobModule.default.sendOverSocket(blob.data, socketId);\n      }\n    }]);\n    return BlobManager;\n  }();\n  /**\n   * If the native blob module is available.\n   */\n  BlobManager.isAvailable = !!_NativeBlobModule.default;\n  module.exports = BlobManager;\n});","lineCount":184,"map":[[6,2,13,0],[6,6,13,0,"_NativeBlobModule"],[6,23,13,0],[6,26,13,0,"_interopRequireDefault"],[6,48,13,0],[6,49,13,0,"_$$_REQUIRE"],[6,60,13,0],[6,61,13,0,"_dependencyMap"],[6,75,13,0],[7,2,14,0],[7,6,14,0,"_invariant"],[7,16,14,0],[7,19,14,0,"_interopRequireDefault"],[7,41,14,0],[7,42,14,0,"_$$_REQUIRE"],[7,53,14,0],[7,54,14,0,"_dependencyMap"],[7,68,14,0],[8,2,14,34],[8,11,14,34,"ownKeys"],[8,19,14,34,"e"],[8,20,14,34],[8,22,14,34,"r"],[8,23,14,34],[8,31,14,34,"t"],[8,32,14,34],[8,35,14,34,"Object"],[8,41,14,34],[8,42,14,34,"keys"],[8,46,14,34],[8,47,14,34,"e"],[8,48,14,34],[8,55,14,34,"Object"],[8,61,14,34],[8,62,14,34,"getOwnPropertySymbols"],[8,83,14,34],[8,91,14,34,"o"],[8,92,14,34],[8,95,14,34,"Object"],[8,101,14,34],[8,102,14,34,"getOwnPropertySymbols"],[8,123,14,34],[8,124,14,34,"e"],[8,125,14,34],[8,128,14,34,"r"],[8,129,14,34],[8,134,14,34,"o"],[8,135,14,34],[8,138,14,34,"o"],[8,139,14,34],[8,140,14,34,"filter"],[8,146,14,34],[8,157,14,34,"r"],[8,158,14,34],[8,169,14,34,"Object"],[8,175,14,34],[8,176,14,34,"getOwnPropertyDescriptor"],[8,200,14,34],[8,201,14,34,"e"],[8,202,14,34],[8,204,14,34,"r"],[8,205,14,34],[8,207,14,34,"enumerable"],[8,217,14,34],[8,224,14,34,"t"],[8,225,14,34],[8,226,14,34,"push"],[8,230,14,34],[8,231,14,34,"apply"],[8,236,14,34],[8,237,14,34,"t"],[8,238,14,34],[8,240,14,34,"o"],[8,241,14,34],[8,253,14,34,"t"],[8,254,14,34],[9,2,14,34],[9,11,14,34,"_objectSpread"],[9,25,14,34,"e"],[9,26,14,34],[9,39,14,34,"r"],[9,40,14,34],[9,46,14,34,"r"],[9,47,14,34],[9,50,14,34,"arguments"],[9,59,14,34],[9,60,14,34,"length"],[9,66,14,34],[9,68,14,34,"r"],[9,69,14,34],[9,79,14,34,"t"],[9,80,14,34],[9,91,14,34,"arguments"],[9,100,14,34],[9,101,14,34,"r"],[9,102,14,34],[9,106,14,34,"arguments"],[9,115,14,34],[9,116,14,34,"r"],[9,117,14,34],[9,125,14,34,"r"],[9,126,14,34],[9,133,14,34,"ownKeys"],[9,140,14,34],[9,141,14,34,"Object"],[9,147,14,34],[9,148,14,34,"t"],[9,149,14,34],[9,156,14,34,"forEach"],[9,163,14,34],[9,174,14,34,"r"],[9,175,14,34],[9,183,14,34,"_defineProperty2"],[9,199,14,34],[9,200,14,34,"default"],[9,207,14,34],[9,209,14,34,"e"],[9,210,14,34],[9,212,14,34,"r"],[9,213,14,34],[9,215,14,34,"t"],[9,216,14,34],[9,217,14,34,"r"],[9,218,14,34],[9,227,14,34,"Object"],[9,233,14,34],[9,234,14,34,"getOwnPropertyDescriptors"],[9,259,14,34],[9,262,14,34,"Object"],[9,268,14,34],[9,269,14,34,"defineProperties"],[9,285,14,34],[9,286,14,34,"e"],[9,287,14,34],[9,289,14,34,"Object"],[9,295,14,34],[9,296,14,34,"getOwnPropertyDescriptors"],[9,321,14,34],[9,322,14,34,"t"],[9,323,14,34],[9,328,14,34,"ownKeys"],[9,335,14,34],[9,336,14,34,"Object"],[9,342,14,34],[9,343,14,34,"t"],[9,344,14,34],[9,347,14,34,"forEach"],[9,354,14,34],[9,365,14,34,"r"],[9,366,14,34],[9,370,14,34,"Object"],[9,376,14,34],[9,377,14,34,"defineProperty"],[9,391,14,34],[9,392,14,34,"e"],[9,393,14,34],[9,395,14,34,"r"],[9,396,14,34],[9,398,14,34,"Object"],[9,404,14,34],[9,405,14,34,"getOwnPropertyDescriptor"],[9,429,14,34],[9,430,14,34,"t"],[9,431,14,34],[9,433,14,34,"r"],[9,434,14,34],[9,451,14,34,"e"],[9,452,14,34],[9,456,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,2,16,0],[18,6,16,6,"Blob"],[18,10,16,10],[18,13,16,13,"require"],[18,24,16,20],[18,25,16,20,"_dependencyMap"],[18,39,16,20],[18,52,16,29],[18,53,16,30],[19,2,17,0],[19,6,17,6,"BlobRegistry"],[19,18,17,18],[19,21,17,21,"require"],[19,32,17,28],[19,33,17,28,"_dependencyMap"],[19,47,17,28],[19,68,17,45],[19,69,17,46],[21,2,19,0],[22,2,20,0],[24,2,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,2,26,0],[28,11,26,9,"uuidv4"],[28,17,26,15,"uuidv4"],[28,18,26,15],[28,20,26,26],[29,4,27,2],[29,11,27,9],[29,49,27,47],[29,50,27,48,"replace"],[29,57,27,55],[29,58,27,56],[29,65,27,63],[29,67,27,65],[29,77,27,65,"c"],[29,78,27,66],[29,80,27,70],[30,6,28,4],[30,10,28,10,"r"],[30,11,28,11],[30,14,28,15,"Math"],[30,18,28,19],[30,19,28,20,"random"],[30,25,28,26],[30,26,28,27],[30,27,28,28],[30,30,28,31],[30,32,28,33],[30,35,28,37],[30,36,28,38],[31,8,29,6,"v"],[31,9,29,7],[31,12,29,10,"c"],[31,13,29,11],[31,17,29,15],[31,20,29,18],[31,23,29,21,"r"],[31,24,29,22],[31,27,29,26,"r"],[31,28,29,27],[31,31,29,30],[31,34,29,33],[31,37,29,37],[31,40,29,40],[32,6,30,4],[32,13,30,11,"v"],[32,14,30,12],[32,15,30,13,"toString"],[32,23,30,21],[32,24,30,22],[32,26,30,24],[32,27,30,25],[33,4,31,2],[33,5,31,3],[33,6,31,4],[34,2,32,0],[36,2,34,0],[37,2,35,0],[38,2,36,0],[39,2,37,0],[40,2,38,0],[41,2,39,0],[42,2,40,0],[43,2,41,0],[43,11,41,9,"createBlobCollector"],[43,30,41,28,"createBlobCollector"],[43,31,41,29,"blobId"],[43,37,41,43],[43,39,41,67],[44,4,42,2],[44,8,42,6,"global"],[44,14,42,12],[44,15,42,13,"__blobCollectorProvider"],[44,38,42,36],[44,42,42,40],[44,46,42,44],[44,48,42,46],[45,6,43,4],[45,13,43,11],[45,17,43,15],[46,4,44,2],[46,5,44,3],[46,11,44,9],[47,6,45,4],[47,13,45,11,"global"],[47,19,45,17],[47,20,45,18,"__blobCollectorProvider"],[47,43,45,41],[47,44,45,42,"blobId"],[47,50,45,48],[47,51,45,49],[48,4,46,2],[49,2,47,0],[51,2,49,0],[52,0,50,0],[53,0,51,0],[54,2,49,0],[54,6,52,6,"BlobManager"],[54,17,52,17],[55,4,52,17],[55,13,52,17,"BlobManager"],[55,25,52,17],[56,6,52,17],[56,10,52,17,"_classCallCheck2"],[56,26,52,17],[56,27,52,17,"default"],[56,34,52,17],[56,42,52,17,"BlobManager"],[56,53,52,17],[57,4,52,17],[58,4,52,17],[58,8,52,17,"_createClass2"],[58,21,52,17],[58,22,52,17,"default"],[58,29,52,17],[58,31,52,17,"BlobManager"],[58,42,52,17],[59,6,52,17,"key"],[59,9,52,17],[60,6,52,17,"value"],[60,11,52,17],[61,6,58,2],[62,0,59,0],[63,0,60,0],[64,6,61,2],[64,15,61,2,"createFromParts"],[64,31,62,4,"parts"],[64,36,62,31],[64,38,63,4,"options"],[64,45,63,25],[64,47,64,10],[65,8,65,4],[65,12,65,4,"invariant"],[65,30,65,13],[65,32,65,14,"NativeBlobModule"],[65,57,65,30],[65,59,65,32],[65,91,65,64],[65,92,65,65],[66,8,67,4],[66,12,67,10,"blobId"],[66,18,67,16],[66,21,67,19,"uuidv4"],[66,27,67,25],[66,28,67,26],[66,29,67,27],[67,8,68,4],[67,12,68,10,"items"],[67,17,68,15],[67,20,68,18,"parts"],[67,25,68,23],[67,26,68,24,"map"],[67,29,68,27],[67,30,68,28],[67,40,68,28,"part"],[67,44,68,32],[67,46,68,36],[68,10,69,6],[68,14,70,8,"part"],[68,18,70,12],[68,30,70,24,"ArrayBuffer"],[68,41,70,35],[68,45,71,9,"global"],[68,51,71,15],[68,52,71,16,"ArrayBufferView"],[68,67,71,31],[68,71,71,35,"part"],[68,75,71,39],[68,87,71,51,"global"],[68,93,71,57],[68,94,71,58,"ArrayBufferView"],[68,109,71,74],[68,111,72,8],[69,12,73,8],[69,18,73,14],[69,22,73,18,"Error"],[69,27,73,23],[69,28,74,10],[69,103,75,8],[69,104,75,9],[70,10,76,6],[71,10,77,6],[71,14,77,10,"part"],[71,18,77,14],[71,30,77,26,"Blob"],[71,34,77,30],[71,36,77,32],[72,12,78,8],[72,19,78,15],[73,14,79,10,"data"],[73,18,79,14],[73,20,79,16,"part"],[73,24,79,20],[73,25,79,21,"data"],[73,29,79,25],[74,14,80,10,"type"],[74,18,80,14],[74,20,80,16],[75,12,81,8],[75,13,81,9],[76,10,82,6],[76,11,82,7],[76,17,82,13],[77,12,83,8],[77,19,83,15],[78,14,84,10,"data"],[78,18,84,14],[78,20,84,16,"String"],[78,26,84,22],[78,27,84,23,"part"],[78,31,84,27],[78,32,84,28],[79,14,85,10,"type"],[79,18,85,14],[79,20,85,16],[80,12,86,8],[80,13,86,9],[81,10,87,6],[82,8,88,4],[82,9,88,5],[82,10,88,6],[83,8,89,4],[83,12,89,10,"size"],[83,16,89,14],[83,19,89,17,"items"],[83,24,89,22],[83,25,89,23,"reduce"],[83,31,89,29],[83,32,89,30],[83,42,89,31,"acc"],[83,45,89,34],[83,47,89,36,"curr"],[83,51,89,40],[83,53,89,45],[84,10,90,6],[84,14,90,10,"curr"],[84,18,90,14],[84,19,90,15,"type"],[84,23,90,19],[84,28,90,24],[84,36,90,32],[84,38,90,34],[85,12,91,8],[85,19,91,15,"acc"],[85,22,91,18],[85,25,91,21,"global"],[85,31,91,27],[85,32,91,28,"unescape"],[85,40,91,36],[85,41,91,37,"encodeURI"],[85,50,91,46],[85,51,91,47,"curr"],[85,55,91,51],[85,56,91,52,"data"],[85,60,91,56],[85,61,91,57],[85,62,91,58],[85,63,91,59,"length"],[85,69,91,65],[86,10,92,6],[86,11,92,7],[86,17,92,13],[87,12,93,8],[87,19,93,15,"acc"],[87,22,93,18],[87,25,93,21,"curr"],[87,29,93,25],[87,30,93,26,"data"],[87,34,93,30],[87,35,93,31,"size"],[87,39,93,35],[88,10,94,6],[89,8,95,4],[89,9,95,5],[89,11,95,7],[89,12,95,8],[89,13,95,9],[90,8,97,4,"NativeBlobModule"],[90,33,97,20],[90,34,97,21,"createFromParts"],[90,49,97,36],[90,50,97,37,"items"],[90,55,97,42],[90,57,97,44,"blobId"],[90,63,97,50],[90,64,97,51],[91,8,99,4],[91,15,99,11,"BlobManager"],[91,26,99,22],[91,27,99,23,"createFromOptions"],[91,44,99,40],[91,45,99,41],[92,10,100,6,"blobId"],[92,16,100,12],[92,18,100,6,"blobId"],[92,24,100,12],[93,10,101,6,"offset"],[93,16,101,12],[93,18,101,14],[93,19,101,15],[94,10,102,6,"size"],[94,14,102,10],[94,16,102,6,"size"],[94,20,102,10],[95,10,103,6,"type"],[95,14,103,10],[95,16,103,12,"options"],[95,23,103,19],[95,26,103,22,"options"],[95,33,103,29],[95,34,103,30,"type"],[95,38,103,34],[95,41,103,37],[95,43,103,39],[96,10,104,6,"lastModified"],[96,22,104,18],[96,24,104,20,"options"],[96,31,104,27],[96,34,104,30,"options"],[96,41,104,37],[96,42,104,38,"lastModified"],[96,54,104,50],[96,57,104,53,"Date"],[96,61,104,57],[96,62,104,58,"now"],[96,65,104,61],[96,66,104,62],[97,8,105,4],[97,9,105,5],[97,10,105,6],[98,6,106,2],[100,6,108,2],[101,0,109,0],[102,0,110,0],[103,0,111,0],[104,4,108,2],[105,6,108,2,"key"],[105,9,108,2],[106,6,108,2,"value"],[106,11,108,2],[106,13,112,2],[106,22,112,2,"createFromOptions"],[106,40,112,27,"options"],[106,47,112,44],[106,49,112,52],[107,8,113,4,"BlobRegistry"],[107,20,113,16],[107,21,113,17,"register"],[107,29,113,25],[107,30,113,26,"options"],[107,37,113,33],[107,38,113,34,"blobId"],[107,44,113,40],[107,45,113,41],[108,8,114,4],[109,8,115,4],[109,15,115,11,"Object"],[109,21,115,17],[109,22,115,18,"assign"],[109,28,115,24],[109,29,115,25,"Object"],[109,35,115,31],[109,36,115,32,"create"],[109,42,115,38],[109,43,115,39,"Blob"],[109,47,115,43],[109,48,115,44,"prototype"],[109,57,115,53],[109,58,115,54],[109,60,115,56],[110,10,116,6,"data"],[110,14,116,10],[111,10,117,8],[112,10,118,8],[113,10,119,8],[114,10,120,8,"options"],[114,17,120,15],[114,18,120,16,"__collector"],[114,29,120,27],[114,33,120,31],[114,37,120,35],[114,40,120,35,"_objectSpread"],[114,53,120,35],[114,54,120,35,"_objectSpread"],[114,67,120,35],[114,72,122,17,"options"],[114,79,122,24],[115,12,123,14,"__collector"],[115,23,123,25],[115,25,123,27,"createBlobCollector"],[115,44,123,46],[115,45,123,47,"options"],[115,52,123,54],[115,53,123,55,"blobId"],[115,59,123,61],[116,10,123,62],[116,15,125,12,"options"],[117,8,126,4],[117,9,126,5],[117,10,126,6],[118,6,127,2],[120,6,129,2],[121,0,130,0],[122,0,131,0],[123,4,129,2],[124,6,129,2,"key"],[124,9,129,2],[125,6,129,2,"value"],[125,11,129,2],[125,13,132,2],[125,22,132,2,"release"],[125,30,132,17,"blobId"],[125,36,132,31],[125,38,132,39],[126,8,133,4],[126,12,133,4,"invariant"],[126,30,133,13],[126,32,133,14,"NativeBlobModule"],[126,57,133,30],[126,59,133,32],[126,91,133,64],[126,92,133,65],[127,8,135,4,"BlobRegistry"],[127,20,135,16],[127,21,135,17,"unregister"],[127,31,135,27],[127,32,135,28,"blobId"],[127,38,135,34],[127,39,135,35],[128,8,136,4],[128,12,136,8,"BlobRegistry"],[128,24,136,20],[128,25,136,21,"has"],[128,28,136,24],[128,29,136,25,"blobId"],[128,35,136,31],[128,36,136,32],[128,38,136,34],[129,10,137,6],[130,8,138,4],[131,8,139,4,"NativeBlobModule"],[131,33,139,20],[131,34,139,21,"release"],[131,41,139,28],[131,42,139,29,"blobId"],[131,48,139,35],[131,49,139,36],[132,6,140,2],[134,6,142,2],[135,0,143,0],[136,0,144,0],[137,0,145,0],[138,4,142,2],[139,6,142,2,"key"],[139,9,142,2],[140,6,142,2,"value"],[140,11,142,2],[140,13,146,2],[140,22,146,2,"addNetworkingHandler"],[140,43,146,2],[140,45,146,38],[141,8,147,4],[141,12,147,4,"invariant"],[141,30,147,13],[141,32,147,14,"NativeBlobModule"],[141,57,147,30],[141,59,147,32],[141,91,147,64],[141,92,147,65],[142,8,149,4,"NativeBlobModule"],[142,33,149,20],[142,34,149,21,"addNetworkingHandler"],[142,54,149,41],[142,55,149,42],[142,56,149,43],[143,6,150,2],[145,6,152,2],[146,0,153,0],[147,0,154,0],[148,0,155,0],[149,4,152,2],[150,6,152,2,"key"],[150,9,152,2],[151,6,152,2,"value"],[151,11,152,2],[151,13,156,2],[151,22,156,2,"addWebSocketHandler"],[151,42,156,29,"socketId"],[151,50,156,45],[151,52,156,53],[152,8,157,4],[152,12,157,4,"invariant"],[152,30,157,13],[152,32,157,14,"NativeBlobModule"],[152,57,157,30],[152,59,157,32],[152,91,157,64],[152,92,157,65],[153,8,159,4,"NativeBlobModule"],[153,33,159,20],[153,34,159,21,"addWebSocketHandler"],[153,53,159,40],[153,54,159,41,"socketId"],[153,62,159,49],[153,63,159,50],[154,6,160,2],[156,6,162,2],[157,0,163,0],[158,0,164,0],[159,0,165,0],[160,4,162,2],[161,6,162,2,"key"],[161,9,162,2],[162,6,162,2,"value"],[162,11,162,2],[162,13,166,2],[162,22,166,2,"removeWebSocketHandler"],[162,45,166,32,"socketId"],[162,53,166,48],[162,55,166,56],[163,8,167,4],[163,12,167,4,"invariant"],[163,30,167,13],[163,32,167,14,"NativeBlobModule"],[163,57,167,30],[163,59,167,32],[163,91,167,64],[163,92,167,65],[164,8,169,4,"NativeBlobModule"],[164,33,169,20],[164,34,169,21,"removeWebSocketHandler"],[164,56,169,43],[164,57,169,44,"socketId"],[164,65,169,52],[164,66,169,53],[165,6,170,2],[167,6,172,2],[168,0,173,0],[169,0,174,0],[170,4,172,2],[171,6,172,2,"key"],[171,9,172,2],[172,6,172,2,"value"],[172,11,172,2],[172,13,175,2],[172,22,175,2,"sendOverSocket"],[172,37,175,24,"blob"],[172,41,175,34],[172,43,175,36,"socketId"],[172,51,175,52],[172,53,175,60],[173,8,176,4],[173,12,176,4,"invariant"],[173,30,176,13],[173,32,176,14,"NativeBlobModule"],[173,57,176,30],[173,59,176,32],[173,91,176,64],[173,92,176,65],[174,8,178,4,"NativeBlobModule"],[174,33,178,20],[174,34,178,21,"sendOverSocket"],[174,48,178,35],[174,49,178,36,"blob"],[174,53,178,40],[174,54,178,41,"data"],[174,58,178,45],[174,60,178,47,"socketId"],[174,68,178,55],[174,69,178,56],[175,6,179,2],[176,4,179,3],[177,4,179,3],[177,11,179,3,"BlobManager"],[177,22,179,3],[178,2,179,3],[179,2,53,2],[180,0,54,0],[181,0,55,0],[182,2,52,6,"BlobManager"],[182,13,52,17],[182,14,56,9,"isAvailable"],[182,25,56,20],[182,28,56,32],[182,29,56,33],[182,30,56,34,"NativeBlobModule"],[182,55,56,50],[183,2,182,0,"module"],[183,8,182,6],[183,9,182,7,"exports"],[183,16,182,14],[183,19,182,17,"BlobManager"],[183,30,182,28],[184,0,182,29]],"functionMap":{"names":["<global>","uuidv4","xxxxxxxxXxxx4xxxYxxxXxxxxxxxxxxx.replace$argument_1","createBlobCollector","BlobManager","createFromParts","parts.map$argument_0","items.reduce$argument_0","createFromOptions","release","addNetworkingHandler","addWebSocketHandler","removeWebSocketHandler","sendOverSocket"],"mappings":"AAA;ACyB;iECC;GDI;CDC;AGS;CHM;AIK;ECS;4BCO;KDoB;8BEC;KFM;GDW;EIM;GJe;EKK;GLQ;EMM;GNI;EOM;GPI;EQM;GRI;ESK;GTI;CJC"}},"type":"js/module"}]}