{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RtlFlexMap = void 0;\n  var FLEX_PREFIX = 'flex';\n  var FLEX_ROW_PREFIX = 'row';\n  var FLEX_WRAP_PREFIX = 'wrap';\n  var FLEX_START_PREFIX = 'start';\n  var FLEX_END_PREFIX = 'end';\n  var FLEX_REVERSE_PREFIX = 'reverse';\n  /**\n   * Works with FlexBox style properties that starts with `flex` and ends with `-start` or `-end`\n   *\n   * E.g justifyContent: flex-start\n   */\n  var FlexStartEndMapper = {\n    toRTL: function toRTL(value, rtl) {\n      if (!rtl || !value.startsWith(FLEX_PREFIX)) {\n        return value;\n      }\n      var isReverse = value.endsWith(FLEX_END_PREFIX);\n      if (isReverse) {\n        return `${FLEX_PREFIX}-${FLEX_START_PREFIX}`;\n      }\n      return `${FLEX_PREFIX}-${FLEX_END_PREFIX}`;\n    }\n  };\n  /**\n   * Works with FlexBox style properties that starts with `row` and optionally ends with `-reverse`\n   *\n   * E.g flexDirection: row-reverse\n   */\n  var FlexRowMapper = {\n    toRTL: function toRTL(value, rtl) {\n      if (!rtl || !value.startsWith(FLEX_ROW_PREFIX)) {\n        return value;\n      }\n      var isReverse = value.endsWith(FLEX_REVERSE_PREFIX);\n      if (isReverse) {\n        return FLEX_ROW_PREFIX;\n      }\n      return `${FLEX_ROW_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n    }\n  };\n  /**\n   * Works with FlexBox style properties that starts with `wrap` and optionally ends with `-reverse`\n   *\n   * E.g flexWrap: wrap-reverse\n   */\n  var FlexWrapMapper = {\n    toRTL: function toRTL(value, rtl) {\n      if (!rtl || !value.startsWith(FLEX_WRAP_PREFIX)) {\n        return value;\n      }\n      var isReverse = value.endsWith(`-${FLEX_REVERSE_PREFIX}`);\n      if (isReverse) {\n        return FLEX_WRAP_PREFIX;\n      }\n      return `${FLEX_WRAP_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n    }\n  };\n  /**\n   * Matches FlexBox style properties that can affect on Layout depending on LTR/RTL mode corresponding Mappers\n   */\n  exports.RtlFlexMap = {\n    alignContent: FlexStartEndMapper,\n    alignItems: FlexStartEndMapper,\n    alignSelf: FlexStartEndMapper,\n    justifyContent: FlexStartEndMapper,\n    flexDirection: FlexRowMapper,\n    flexWrap: FlexWrapMapper\n  };\n});","lineCount":76,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"RtlFlexMap"],[7,20,3,18],[7,23,3,21],[7,28,3,26],[7,29,3,27],[8,2,4,0],[8,6,4,6,"FLEX_PREFIX"],[8,17,4,17],[8,20,4,20],[8,26,4,26],[9,2,5,0],[9,6,5,6,"FLEX_ROW_PREFIX"],[9,21,5,21],[9,24,5,24],[9,29,5,29],[10,2,6,0],[10,6,6,6,"FLEX_WRAP_PREFIX"],[10,22,6,22],[10,25,6,25],[10,31,6,31],[11,2,7,0],[11,6,7,6,"FLEX_START_PREFIX"],[11,23,7,23],[11,26,7,26],[11,33,7,33],[12,2,8,0],[12,6,8,6,"FLEX_END_PREFIX"],[12,21,8,21],[12,24,8,24],[12,29,8,29],[13,2,9,0],[13,6,9,6,"FLEX_REVERSE_PREFIX"],[13,25,9,25],[13,28,9,28],[13,37,9,37],[14,2,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,2,15,0],[19,6,15,6,"FlexStartEndMapper"],[19,24,15,24],[19,27,15,27],[20,4,16,4,"toRTL"],[20,9,16,9],[20,20,16,9,"toRTL"],[20,26,16,10,"value"],[20,31,16,15],[20,33,16,17,"rtl"],[20,36,16,20],[20,38,16,22],[21,6,17,8],[21,10,17,12],[21,11,17,13,"rtl"],[21,14,17,16],[21,18,17,20],[21,19,17,21,"value"],[21,24,17,26],[21,25,17,27,"startsWith"],[21,35,17,37],[21,36,17,38,"FLEX_PREFIX"],[21,47,17,49],[21,48,17,50],[21,50,17,52],[22,8,18,12],[22,15,18,19,"value"],[22,20,18,24],[23,6,19,8],[24,6,20,8],[24,10,20,14,"isReverse"],[24,19,20,23],[24,22,20,26,"value"],[24,27,20,31],[24,28,20,32,"endsWith"],[24,36,20,40],[24,37,20,41,"FLEX_END_PREFIX"],[24,52,20,56],[24,53,20,57],[25,6,21,8],[25,10,21,12,"isReverse"],[25,19,21,21],[25,21,21,23],[26,8,22,12],[26,15,22,20],[26,18,22,22,"FLEX_PREFIX"],[26,29,22,34],[26,33,22,37,"FLEX_START_PREFIX"],[26,50,22,55],[26,52,22,56],[27,6,23,8],[28,6,24,8],[28,13,24,16],[28,16,24,18,"FLEX_PREFIX"],[28,27,24,30],[28,31,24,33,"FLEX_END_PREFIX"],[28,46,24,49],[28,48,24,50],[29,4,25,4],[30,2,26,0],[30,3,26,1],[31,2,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,2,32,0],[36,6,32,6,"FlexRowMapper"],[36,19,32,19],[36,22,32,22],[37,4,33,4,"toRTL"],[37,9,33,9],[37,20,33,9,"toRTL"],[37,26,33,10,"value"],[37,31,33,15],[37,33,33,17,"rtl"],[37,36,33,20],[37,38,33,22],[38,6,34,8],[38,10,34,12],[38,11,34,13,"rtl"],[38,14,34,16],[38,18,34,20],[38,19,34,21,"value"],[38,24,34,26],[38,25,34,27,"startsWith"],[38,35,34,37],[38,36,34,38,"FLEX_ROW_PREFIX"],[38,51,34,53],[38,52,34,54],[38,54,34,56],[39,8,35,12],[39,15,35,19,"value"],[39,20,35,24],[40,6,36,8],[41,6,37,8],[41,10,37,14,"isReverse"],[41,19,37,23],[41,22,37,26,"value"],[41,27,37,31],[41,28,37,32,"endsWith"],[41,36,37,40],[41,37,37,41,"FLEX_REVERSE_PREFIX"],[41,56,37,60],[41,57,37,61],[42,6,38,8],[42,10,38,12,"isReverse"],[42,19,38,21],[42,21,38,23],[43,8,39,12],[43,15,39,19,"FLEX_ROW_PREFIX"],[43,30,39,34],[44,6,40,8],[45,6,41,8],[45,13,41,16],[45,16,41,18,"FLEX_ROW_PREFIX"],[45,31,41,34],[45,35,41,37,"FLEX_REVERSE_PREFIX"],[45,54,41,57],[45,56,41,58],[46,4,42,4],[47,2,43,0],[47,3,43,1],[48,2,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,2,49,0],[53,6,49,6,"FlexWrapMapper"],[53,20,49,20],[53,23,49,23],[54,4,50,4,"toRTL"],[54,9,50,9],[54,20,50,9,"toRTL"],[54,26,50,10,"value"],[54,31,50,15],[54,33,50,17,"rtl"],[54,36,50,20],[54,38,50,22],[55,6,51,8],[55,10,51,12],[55,11,51,13,"rtl"],[55,14,51,16],[55,18,51,20],[55,19,51,21,"value"],[55,24,51,26],[55,25,51,27,"startsWith"],[55,35,51,37],[55,36,51,38,"FLEX_WRAP_PREFIX"],[55,52,51,54],[55,53,51,55],[55,55,51,57],[56,8,52,12],[56,15,52,19,"value"],[56,20,52,24],[57,6,53,8],[58,6,54,8],[58,10,54,14,"isReverse"],[58,19,54,23],[58,22,54,26,"value"],[58,27,54,31],[58,28,54,32,"endsWith"],[58,36,54,40],[58,37,54,42],[58,41,54,45,"FLEX_REVERSE_PREFIX"],[58,60,54,65],[58,62,54,66],[58,63,54,67],[59,6,55,8],[59,10,55,12,"isReverse"],[59,19,55,21],[59,21,55,23],[60,8,56,12],[60,15,56,19,"FLEX_WRAP_PREFIX"],[60,31,56,35],[61,6,57,8],[62,6,58,8],[62,13,58,16],[62,16,58,18,"FLEX_WRAP_PREFIX"],[62,32,58,35],[62,36,58,38,"FLEX_REVERSE_PREFIX"],[62,55,58,58],[62,57,58,59],[63,4,59,4],[64,2,60,0],[64,3,60,1],[65,2,61,0],[66,0,62,0],[67,0,63,0],[68,2,64,0,"exports"],[68,9,64,7],[68,10,64,8,"RtlFlexMap"],[68,20,64,18],[68,23,64,21],[69,4,65,4,"alignContent"],[69,16,65,16],[69,18,65,18,"FlexStartEndMapper"],[69,36,65,36],[70,4,66,4,"alignItems"],[70,14,66,14],[70,16,66,16,"FlexStartEndMapper"],[70,34,66,34],[71,4,67,4,"alignSelf"],[71,13,67,13],[71,15,67,15,"FlexStartEndMapper"],[71,33,67,33],[72,4,68,4,"justifyContent"],[72,18,68,18],[72,20,68,20,"FlexStartEndMapper"],[72,38,68,38],[73,4,69,4,"flexDirection"],[73,17,69,17],[73,19,69,19,"FlexRowMapper"],[73,32,69,32],[74,4,70,4,"flexWrap"],[74,12,70,12],[74,14,70,14,"FlexWrapMapper"],[75,2,71,0],[75,3,71,1],[76,0,71,2]],"functionMap":{"names":["<global>","FlexStartEndMapper.toRTL","FlexRowMapper.toRTL","FlexWrapMapper.toRTL"],"mappings":"AAA;ICe;KDS;IEQ;KFS;IGQ;KHS"}},"type":"js/module"}]}