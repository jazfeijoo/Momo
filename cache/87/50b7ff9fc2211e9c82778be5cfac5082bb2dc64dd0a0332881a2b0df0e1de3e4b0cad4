{"dependencies":[{"name":"../../Components/TextInput/AndroidTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":563},"end":{"line":22,"column":112,"index":675}}],"key":"1TUKdqxiiMm1SBvRrq2vze47EXg="}},{"name":"../../Components/TextInput/RCTSingelineTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":676},"end":{"line":23,"column":113,"index":789}}],"key":"xy5EgYbiw/xdXM0MW9GrDb5OAUs="}},{"name":"../../ReactNative/RendererProxy","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":25,"index":816},"end":{"line":25,"column":67,"index":858}}],"key":"QxznglvNF7hpOO8cCvqhdE7Uo6Y="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":17,"index":877},"end":{"line":26,"column":52,"index":912}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":14,"index":928},"end":{"line":27,"column":30,"index":944}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _AndroidTextInputNativeComponent = _$$_REQUIRE(_dependencyMap[0], \"../../Components/TextInput/AndroidTextInputNativeComponent\");\n  var _RCTSingelineTextInputNativeComponent = _$$_REQUIRE(_dependencyMap[1], \"../../Components/TextInput/RCTSingelineTextInputNativeComponent\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  // This class is responsible for coordinating the \"focused\" state for\n  // TextInputs. All calls relating to the keyboard should be funneled\n  // through here.\n\n  var _require = _$$_REQUIRE(_dependencyMap[2], \"../../ReactNative/RendererProxy\"),\n    findNodeHandle = _require.findNodeHandle;\n  var Platform = _$$_REQUIRE(_dependencyMap[3], \"../../Utilities/Platform\");\n  var React = _$$_REQUIRE(_dependencyMap[4], \"react\");\n  var currentlyFocusedInputRef = null;\n  var inputs = new Set();\n  function currentlyFocusedInput() {\n    return currentlyFocusedInputRef;\n  }\n\n  /**\n   * Returns the ID of the currently focused text field, if one exists\n   * If no text field is focused it returns null\n   */\n  function currentlyFocusedField() {\n    if (__DEV__) {\n      console.error('currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput');\n    }\n    return findNodeHandle(currentlyFocusedInputRef);\n  }\n  function focusInput(textField) {\n    if (currentlyFocusedInputRef !== textField && textField != null) {\n      currentlyFocusedInputRef = textField;\n    }\n  }\n  function blurInput(textField) {\n    if (currentlyFocusedInputRef === textField && textField != null) {\n      currentlyFocusedInputRef = null;\n    }\n  }\n  function focusField(textFieldID) {\n    if (__DEV__) {\n      console.error('focusField no longer works. Use focusInput');\n    }\n    return;\n  }\n  function blurField(textFieldID) {\n    if (__DEV__) {\n      console.error('blurField no longer works. Use blurInput');\n    }\n    return;\n  }\n\n  /**\n   * @param {number} TextInputID id of the text field to focus\n   * Focuses the specified text field\n   * noop if the text field was already focused or if the field is not editable\n   */\n  function focusTextInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('focusTextInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return;\n    }\n    if (textField != null) {\n      var _textField$currentPro;\n      var fieldCanBeFocused = currentlyFocusedInputRef !== textField &&\n      // $FlowFixMe - `currentProps` is missing in `NativeMethods`\n      ((_textField$currentPro = textField.currentProps) == null ? void 0 : _textField$currentPro.editable) !== false;\n      if (!fieldCanBeFocused) {\n        return;\n      }\n      focusInput(textField);\n      if (\"android\" === 'ios') {\n        // This isn't necessarily a single line text input\n        // But commands don't actually care as long as the thing being passed in\n        // actually has a command with that name. So this should work with single\n        // and multiline text inputs. Ideally we'll merge them into one component\n        // in the future.\n        _RCTSingelineTextInputNativeComponent.Commands.focus(textField);\n      } else if (\"android\" === 'android') {\n        _AndroidTextInputNativeComponent.Commands.focus(textField);\n      }\n    }\n  }\n\n  /**\n   * @param {number} textFieldID id of the text field to unfocus\n   * Unfocuses the specified text field\n   * noop if it wasn't focused\n   */\n  function blurTextInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('blurTextInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return;\n    }\n    if (currentlyFocusedInputRef === textField && textField != null) {\n      blurInput(textField);\n      if (\"android\" === 'ios') {\n        // This isn't necessarily a single line text input\n        // But commands don't actually care as long as the thing being passed in\n        // actually has a command with that name. So this should work with single\n        // and multiline text inputs. Ideally we'll merge them into one component\n        // in the future.\n        _RCTSingelineTextInputNativeComponent.Commands.blur(textField);\n      } else if (\"android\" === 'android') {\n        _AndroidTextInputNativeComponent.Commands.blur(textField);\n      }\n    }\n  }\n  function registerInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('registerInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return;\n    }\n    inputs.add(textField);\n  }\n  function unregisterInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('unregisterInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return;\n    }\n    inputs.delete(textField);\n  }\n  function isTextInput(textField) {\n    if (typeof textField === 'number') {\n      if (__DEV__) {\n        console.error('isTextInput must be called with a host component. Passing a react tag is deprecated.');\n      }\n      return false;\n    }\n    return inputs.has(textField);\n  }\n  module.exports = {\n    currentlyFocusedInput: currentlyFocusedInput,\n    focusInput: focusInput,\n    blurInput: blurInput,\n    currentlyFocusedField: currentlyFocusedField,\n    focusField: focusField,\n    blurField: blurField,\n    focusTextInput: focusTextInput,\n    blurTextInput: blurTextInput,\n    registerInput: registerInput,\n    unregisterInput: unregisterInput,\n    isTextInput: isTextInput\n  };\n});","lineCount":161,"map":[[2,2,22,0],[2,6,22,0,"_AndroidTextInputNativeComponent"],[2,38,22,0],[2,41,22,0,"_$$_REQUIRE"],[2,52,22,0],[2,53,22,0,"_dependencyMap"],[2,67,22,0],[3,2,23,0],[3,6,23,0,"_RCTSingelineTextInputNativeComponent"],[3,43,23,0],[3,46,23,0,"_$$_REQUIRE"],[3,57,23,0],[3,58,23,0,"_dependencyMap"],[3,72,23,0],[4,2,1,0],[5,0,2,0],[6,0,3,0],[7,0,4,0],[8,0,5,0],[9,0,6,0],[10,0,7,0],[11,0,8,0],[12,0,9,0],[14,2,11,0],[15,2,12,0],[16,2,13,0],[18,2,25,0],[18,6,25,0,"_require"],[18,14,25,0],[18,17,25,25,"require"],[18,28,25,32],[18,29,25,32,"_dependencyMap"],[18,43,25,32],[18,81,25,66],[18,82,25,67],[19,4,25,7,"findNodeHandle"],[19,18,25,21],[19,21,25,21,"_require"],[19,29,25,21],[19,30,25,7,"findNodeHandle"],[19,44,25,21],[20,2,26,0],[20,6,26,6,"Platform"],[20,14,26,14],[20,17,26,17,"require"],[20,28,26,24],[20,29,26,24,"_dependencyMap"],[20,43,26,24],[20,74,26,51],[20,75,26,52],[21,2,27,0],[21,6,27,6,"React"],[21,11,27,11],[21,14,27,14,"require"],[21,25,27,21],[21,26,27,21,"_dependencyMap"],[21,40,27,21],[21,52,27,29],[21,53,27,30],[22,2,30,0],[22,6,30,4,"currentlyFocusedInputRef"],[22,30,30,43],[22,33,30,46],[22,37,30,50],[23,2,31,0],[23,6,31,6,"inputs"],[23,12,31,12],[23,15,31,15],[23,19,31,19,"Set"],[23,22,31,22],[23,23,42,3],[23,24,42,4],[24,2,44,0],[24,11,44,9,"currentlyFocusedInput"],[24,32,44,30,"currentlyFocusedInput"],[24,33,44,30],[24,35,44,48],[25,4,45,2],[25,11,45,9,"currentlyFocusedInputRef"],[25,35,45,33],[26,2,46,0],[28,2,48,0],[29,0,49,0],[30,0,50,0],[31,0,51,0],[32,2,52,0],[32,11,52,9,"currentlyFocusedField"],[32,32,52,30,"currentlyFocusedField"],[32,33,52,30],[32,35,52,42],[33,4,53,2],[33,8,53,6,"__DEV__"],[33,15,53,13],[33,17,53,15],[34,6,54,4,"console"],[34,13,54,11],[34,14,54,12,"error"],[34,19,54,17],[34,20,55,6],[34,124,56,4],[34,125,56,5],[35,4,57,2],[36,4,59,2],[36,11,59,9,"findNodeHandle"],[36,25,59,23],[36,26,59,24,"currentlyFocusedInputRef"],[36,50,59,48],[36,51,59,49],[37,2,60,0],[38,2,62,0],[38,11,62,9,"focusInput"],[38,21,62,19,"focusInput"],[38,22,62,20,"textField"],[38,31,62,44],[38,33,62,52],[39,4,63,2],[39,8,63,6,"currentlyFocusedInputRef"],[39,32,63,30],[39,37,63,35,"textField"],[39,46,63,44],[39,50,63,48,"textField"],[39,59,63,57],[39,63,63,61],[39,67,63,65],[39,69,63,67],[40,6,64,4,"currentlyFocusedInputRef"],[40,30,64,28],[40,33,64,31,"textField"],[40,42,64,40],[41,4,65,2],[42,2,66,0],[43,2,68,0],[43,11,68,9,"blurInput"],[43,20,68,18,"blurInput"],[43,21,68,19,"textField"],[43,30,68,43],[43,32,68,51],[44,4,69,2],[44,8,69,6,"currentlyFocusedInputRef"],[44,32,69,30],[44,37,69,35,"textField"],[44,46,69,44],[44,50,69,48,"textField"],[44,59,69,57],[44,63,69,61],[44,67,69,65],[44,69,69,67],[45,6,70,4,"currentlyFocusedInputRef"],[45,30,70,28],[45,33,70,31],[45,37,70,35],[46,4,71,2],[47,2,72,0],[48,2,74,0],[48,11,74,9,"focusField"],[48,21,74,19,"focusField"],[48,22,74,20,"textFieldID"],[48,33,74,40],[48,35,74,48],[49,4,75,2],[49,8,75,6,"__DEV__"],[49,15,75,13],[49,17,75,15],[50,6,76,4,"console"],[50,13,76,11],[50,14,76,12,"error"],[50,19,76,17],[50,20,76,18],[50,64,76,62],[50,65,76,63],[51,4,77,2],[52,4,79,2],[53,2,80,0],[54,2,82,0],[54,11,82,9,"blurField"],[54,20,82,18,"blurField"],[54,21,82,19,"textFieldID"],[54,32,82,39],[54,34,82,41],[55,4,83,2],[55,8,83,6,"__DEV__"],[55,15,83,13],[55,17,83,15],[56,6,84,4,"console"],[56,13,84,11],[56,14,84,12,"error"],[56,19,84,17],[56,20,84,18],[56,62,84,60],[56,63,84,61],[57,4,85,2],[58,4,87,2],[59,2,88,0],[61,2,90,0],[62,0,91,0],[63,0,92,0],[64,0,93,0],[65,0,94,0],[66,2,95,0],[66,11,95,9,"focusTextInput"],[66,25,95,23,"focusTextInput"],[66,26,95,24,"textField"],[66,35,95,48],[66,37,95,50],[67,4,96,2],[67,8,96,6],[67,15,96,13,"textField"],[67,24,96,22],[67,29,96,27],[67,37,96,35],[67,39,96,37],[68,6,97,4],[68,10,97,8,"__DEV__"],[68,17,97,15],[68,19,97,17],[69,8,98,6,"console"],[69,15,98,13],[69,16,98,14,"error"],[69,21,98,19],[69,22,99,8],[69,111,100,6],[69,112,100,7],[70,6,101,4],[71,6,103,4],[72,4,104,2],[73,4,106,2],[73,8,106,6,"textField"],[73,17,106,15],[73,21,106,19],[73,25,106,23],[73,27,106,25],[74,6,106,25],[74,10,106,25,"_textField$currentPro"],[74,31,106,25],[75,6,107,4],[75,10,107,10,"fieldCanBeFocused"],[75,27,107,27],[75,30,108,6,"currentlyFocusedInputRef"],[75,54,108,30],[75,59,108,35,"textField"],[75,68,108,44],[76,6,109,6],[77,6,110,6],[77,8,110,6,"_textField$currentPro"],[77,29,110,6],[77,32,110,6,"textField"],[77,41,110,15],[77,42,110,16,"currentProps"],[77,54,110,28],[77,75,110,6,"_textField$currentPro"],[77,96,110,6],[77,97,110,30,"editable"],[77,105,110,38],[77,111,110,43],[77,116,110,48],[78,6,112,4],[78,10,112,8],[78,11,112,9,"fieldCanBeFocused"],[78,28,112,26],[78,30,112,28],[79,8,113,6],[80,6,114,4],[81,6,115,4,"focusInput"],[81,16,115,14],[81,17,115,15,"textField"],[81,26,115,24],[81,27,115,25],[82,6,116,4],[82,10,116,8],[82,24,116,24],[82,29,116,29],[82,31,116,31],[83,8,117,6],[84,8,118,6],[85,8,119,6],[86,8,120,6],[87,8,121,6],[88,8,122,6,"iOSTextInputCommands"],[88,54,122,26],[88,55,122,27,"focus"],[88,60,122,32],[88,61,122,33,"textField"],[88,70,122,42],[88,71,122,43],[89,6,123,4],[89,7,123,5],[89,13,123,11],[89,17,123,15],[89,31,123,31],[89,40,123,40],[89,42,123,42],[90,8,124,6,"AndroidTextInputCommands"],[90,49,124,30],[90,50,124,31,"focus"],[90,55,124,36],[90,56,124,37,"textField"],[90,65,124,46],[90,66,124,47],[91,6,125,4],[92,4,126,2],[93,2,127,0],[95,2,129,0],[96,0,130,0],[97,0,131,0],[98,0,132,0],[99,0,133,0],[100,2,134,0],[100,11,134,9,"blurTextInput"],[100,24,134,22,"blurTextInput"],[100,25,134,23,"textField"],[100,34,134,47],[100,36,134,49],[101,4,135,2],[101,8,135,6],[101,15,135,13,"textField"],[101,24,135,22],[101,29,135,27],[101,37,135,35],[101,39,135,37],[102,6,136,4],[102,10,136,8,"__DEV__"],[102,17,136,15],[102,19,136,17],[103,8,137,6,"console"],[103,15,137,13],[103,16,137,14,"error"],[103,21,137,19],[103,22,138,8],[103,110,139,6],[103,111,139,7],[104,6,140,4],[105,6,142,4],[106,4,143,2],[107,4,145,2],[107,8,145,6,"currentlyFocusedInputRef"],[107,32,145,30],[107,37,145,35,"textField"],[107,46,145,44],[107,50,145,48,"textField"],[107,59,145,57],[107,63,145,61],[107,67,145,65],[107,69,145,67],[108,6,146,4,"blurInput"],[108,15,146,13],[108,16,146,14,"textField"],[108,25,146,23],[108,26,146,24],[109,6,147,4],[109,10,147,8],[109,24,147,24],[109,29,147,29],[109,31,147,31],[110,8,148,6],[111,8,149,6],[112,8,150,6],[113,8,151,6],[114,8,152,6],[115,8,153,6,"iOSTextInputCommands"],[115,54,153,26],[115,55,153,27,"blur"],[115,59,153,31],[115,60,153,32,"textField"],[115,69,153,41],[115,70,153,42],[116,6,154,4],[116,7,154,5],[116,13,154,11],[116,17,154,15],[116,31,154,31],[116,40,154,40],[116,42,154,42],[117,8,155,6,"AndroidTextInputCommands"],[117,49,155,30],[117,50,155,31,"blur"],[117,54,155,35],[117,55,155,36,"textField"],[117,64,155,45],[117,65,155,46],[118,6,156,4],[119,4,157,2],[120,2,158,0],[121,2,160,0],[121,11,160,9,"registerInput"],[121,24,160,22,"registerInput"],[121,25,160,23,"textField"],[121,34,160,46],[121,36,160,48],[122,4,161,2],[122,8,161,6],[122,15,161,13,"textField"],[122,24,161,22],[122,29,161,27],[122,37,161,35],[122,39,161,37],[123,6,162,4],[123,10,162,8,"__DEV__"],[123,17,162,15],[123,19,162,17],[124,8,163,6,"console"],[124,15,163,13],[124,16,163,14,"error"],[124,21,163,19],[124,22,164,8],[124,110,165,6],[124,111,165,7],[125,6,166,4],[126,6,168,4],[127,4,169,2],[128,4,171,2,"inputs"],[128,10,171,8],[128,11,171,9,"add"],[128,14,171,12],[128,15,171,13,"textField"],[128,24,171,22],[128,25,171,23],[129,2,172,0],[130,2,174,0],[130,11,174,9,"unregisterInput"],[130,26,174,24,"unregisterInput"],[130,27,174,25,"textField"],[130,36,174,48],[130,38,174,50],[131,4,175,2],[131,8,175,6],[131,15,175,13,"textField"],[131,24,175,22],[131,29,175,27],[131,37,175,35],[131,39,175,37],[132,6,176,4],[132,10,176,8,"__DEV__"],[132,17,176,15],[132,19,176,17],[133,8,177,6,"console"],[133,15,177,13],[133,16,177,14,"error"],[133,21,177,19],[133,22,178,8],[133,112,179,6],[133,113,179,7],[134,6,180,4],[135,6,182,4],[136,4,183,2],[137,4,184,2,"inputs"],[137,10,184,8],[137,11,184,9,"delete"],[137,17,184,15],[137,18,184,16,"textField"],[137,27,184,25],[137,28,184,26],[138,2,185,0],[139,2,187,0],[139,11,187,9,"isTextInput"],[139,22,187,20,"isTextInput"],[139,23,187,21,"textField"],[139,32,187,44],[139,34,187,55],[140,4,188,2],[140,8,188,6],[140,15,188,13,"textField"],[140,24,188,22],[140,29,188,27],[140,37,188,35],[140,39,188,37],[141,6,189,4],[141,10,189,8,"__DEV__"],[141,17,189,15],[141,19,189,17],[142,8,190,6,"console"],[142,15,190,13],[142,16,190,14,"error"],[142,21,190,19],[142,22,191,8],[142,108,192,6],[142,109,192,7],[143,6,193,4],[144,6,195,4],[144,13,195,11],[144,18,195,16],[145,4,196,2],[146,4,198,2],[146,11,198,9,"inputs"],[146,17,198,15],[146,18,198,16,"has"],[146,21,198,19],[146,22,198,20,"textField"],[146,31,198,29],[146,32,198,30],[147,2,199,0],[148,2,201,0,"module"],[148,8,201,6],[148,9,201,7,"exports"],[148,16,201,14],[148,19,201,17],[149,4,202,2,"currentlyFocusedInput"],[149,25,202,23],[149,27,202,2,"currentlyFocusedInput"],[149,48,202,23],[150,4,203,2,"focusInput"],[150,14,203,12],[150,16,203,2,"focusInput"],[150,26,203,12],[151,4,204,2,"blurInput"],[151,13,204,11],[151,15,204,2,"blurInput"],[151,24,204,11],[152,4,206,2,"currentlyFocusedField"],[152,25,206,23],[152,27,206,2,"currentlyFocusedField"],[152,48,206,23],[153,4,207,2,"focusField"],[153,14,207,12],[153,16,207,2,"focusField"],[153,26,207,12],[154,4,208,2,"blurField"],[154,13,208,11],[154,15,208,2,"blurField"],[154,24,208,11],[155,4,209,2,"focusTextInput"],[155,18,209,16],[155,20,209,2,"focusTextInput"],[155,34,209,16],[156,4,210,2,"blurTextInput"],[156,17,210,15],[156,19,210,2,"blurTextInput"],[156,32,210,15],[157,4,211,2,"registerInput"],[157,17,211,15],[157,19,211,2,"registerInput"],[157,32,211,15],[158,4,212,2,"unregisterInput"],[158,19,212,17],[158,21,212,2,"unregisterInput"],[158,36,212,17],[159,4,213,2,"isTextInput"],[159,15,213,13],[159,17,213,2,"isTextInput"],[160,2,214,0],[160,3,214,1],[161,0,214,2]],"functionMap":{"names":["<global>","currentlyFocusedInput","currentlyFocusedField","focusInput","blurInput","focusField","blurField","focusTextInput","blurTextInput","registerInput","unregisterInput","isTextInput"],"mappings":"AAA;AC2C;CDE;AEM;CFQ;AGE;CHI;AIE;CJI;AKE;CLM;AME;CNM;AOO;CPgC;AQO;CRwB;ASE;CTY;AUE;CVW;AWE;CXY"}},"type":"js/module"}]}