{"dependencies":[{"name":"../common/OffsetToLocation","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":23,"index":23},"end":{"line":1,"column":60,"index":60}}],"key":"HXgnsHWOA6zAgBW1s8JYHs5ns6A="}},{"name":"../common/SyntaxError","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":18,"index":80},"end":{"line":2,"column":50,"index":112}}],"key":"ryf3pqhqmrfcskKMPBduP7uiLlI="}},{"name":"../common/TokenStream","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":18,"index":132},"end":{"line":3,"column":50,"index":164}}],"key":"ENdWRVnyjrd3VEfJJi1X+aaQbZI="}},{"name":"../common/List","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":11,"index":177},"end":{"line":4,"column":36,"index":202}}],"key":"s8REEucKQH/rRdxXA/HW1Z+K46E="}},{"name":"../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":15,"index":219},"end":{"line":5,"column":38,"index":242}}],"key":"jdHcfLp+ZWoVoG/X76x8Q2Emsc0="}},{"name":"../tokenizer/const","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":16,"index":260},"end":{"line":6,"column":45,"index":289}}],"key":"kyBO83EWkJ1clRaNx3/HpTBziAg="}},{"name":"../tokenizer/utils","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":38,"index":329},"end":{"line":7,"column":67,"index":358}}],"key":"t7CXoFLbnCnKfKX/tgkGrd/3K4c="}},{"name":"./sequence","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":15,"index":375},"end":{"line":8,"column":36,"index":396}}],"key":"6VOhLtHtgF+p5itiTnuRdsTHhS4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var OffsetToLocation = _$$_REQUIRE(_dependencyMap[0], \"../common/OffsetToLocation\");\n  var SyntaxError = _$$_REQUIRE(_dependencyMap[1], \"../common/SyntaxError\");\n  var TokenStream = _$$_REQUIRE(_dependencyMap[2], \"../common/TokenStream\");\n  var List = _$$_REQUIRE(_dependencyMap[3], \"../common/List\");\n  var tokenize = _$$_REQUIRE(_dependencyMap[4], \"../tokenizer\");\n  var constants = _$$_REQUIRE(_dependencyMap[5], \"../tokenizer/const\");\n  var _require = _$$_REQUIRE(_dependencyMap[6], \"../tokenizer/utils\"),\n    findWhiteSpaceStart = _require.findWhiteSpaceStart,\n    cmpStr = _require.cmpStr;\n  var sequence = _$$_REQUIRE(_dependencyMap[7], \"./sequence\");\n  var noop = function noop() {};\n  var TYPE = constants.TYPE;\n  var NAME = constants.NAME;\n  var WHITESPACE = TYPE.WhiteSpace;\n  var COMMENT = TYPE.Comment;\n  var IDENT = TYPE.Ident;\n  var FUNCTION = TYPE.Function;\n  var URL = TYPE.Url;\n  var HASH = TYPE.Hash;\n  var PERCENTAGE = TYPE.Percentage;\n  var NUMBER = TYPE.Number;\n  var NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\n  var NULL = 0;\n  function createParseContext(name) {\n    return function () {\n      return this[name]();\n    };\n  }\n  function processConfig(config) {\n    var parserConfig = {\n      context: {},\n      scope: {},\n      atrule: {},\n      pseudo: {}\n    };\n    if (config.parseContext) {\n      for (var name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n          case 'function':\n            parserConfig.context[name] = config.parseContext[name];\n            break;\n          case 'string':\n            parserConfig.context[name] = createParseContext(config.parseContext[name]);\n            break;\n        }\n      }\n    }\n    if (config.scope) {\n      for (var name in config.scope) {\n        parserConfig.scope[name] = config.scope[name];\n      }\n    }\n    if (config.atrule) {\n      for (var name in config.atrule) {\n        var atrule = config.atrule[name];\n        if (atrule.parse) {\n          parserConfig.atrule[name] = atrule.parse;\n        }\n      }\n    }\n    if (config.pseudo) {\n      for (var name in config.pseudo) {\n        var pseudo = config.pseudo[name];\n        if (pseudo.parse) {\n          parserConfig.pseudo[name] = pseudo.parse;\n        }\n      }\n    }\n    if (config.node) {\n      for (var name in config.node) {\n        parserConfig[name] = config.node[name].parse;\n      }\n    }\n    return parserConfig;\n  }\n  module.exports = function createParser(config) {\n    var parser = {\n      scanner: new TokenStream(),\n      locationMap: new OffsetToLocation(),\n      filename: '<unknown>',\n      needPositions: false,\n      onParseError: noop,\n      onParseErrorThrow: false,\n      parseAtrulePrelude: true,\n      parseRulePrelude: true,\n      parseValue: true,\n      parseCustomProperty: false,\n      readSequence: sequence,\n      createList: function createList() {\n        return new List();\n      },\n      createSingleNodeList: function createSingleNodeList(node) {\n        return new List().appendData(node);\n      },\n      getFirstListNode: function getFirstListNode(list) {\n        return list && list.first();\n      },\n      getLastListNode: function getLastListNode(list) {\n        return list.last();\n      },\n      parseWithFallback: function parseWithFallback(consumer, fallback) {\n        var startToken = this.scanner.tokenIndex;\n        try {\n          return consumer.call(this);\n        } catch (e) {\n          if (this.onParseErrorThrow) {\n            throw e;\n          }\n          var fallbackNode = fallback.call(this, startToken);\n          this.onParseErrorThrow = true;\n          this.onParseError(e, fallbackNode);\n          this.onParseErrorThrow = false;\n          return fallbackNode;\n        }\n      },\n      lookupNonWSType: function lookupNonWSType(offset) {\n        do {\n          var type = this.scanner.lookupType(offset++);\n          if (type !== WHITESPACE) {\n            return type;\n          }\n        } while (type !== NULL);\n        return NULL;\n      },\n      eat: function eat(tokenType) {\n        if (this.scanner.tokenType !== tokenType) {\n          var offset = this.scanner.tokenStart;\n          var message = NAME[tokenType] + ' is expected';\n\n          // tweak message and offset\n          switch (tokenType) {\n            case IDENT:\n              // when identifier is expected but there is a function or url\n              if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {\n                offset = this.scanner.tokenEnd - 1;\n                message = 'Identifier is expected but function found';\n              } else {\n                message = 'Identifier is expected';\n              }\n              break;\n            case HASH:\n              if (this.scanner.isDelim(NUMBERSIGN)) {\n                this.scanner.next();\n                offset++;\n                message = 'Name is expected';\n              }\n              break;\n            case PERCENTAGE:\n              if (this.scanner.tokenType === NUMBER) {\n                offset = this.scanner.tokenEnd;\n                message = 'Percent sign is expected';\n              }\n              break;\n            default:\n              // when test type is part of another token show error for current position + 1\n              // e.g. eat(HYPHENMINUS) will fail on \"-foo\", but pointing on \"-\" is odd\n              if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {\n                offset = offset + 1;\n              }\n          }\n          this.error(message, offset);\n        }\n        this.scanner.next();\n      },\n      consume: function consume(tokenType) {\n        var value = this.scanner.getTokenValue();\n        this.eat(tokenType);\n        return value;\n      },\n      consumeFunctionName: function consumeFunctionName() {\n        var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);\n        this.eat(FUNCTION);\n        return name;\n      },\n      getLocation: function getLocation(start, end) {\n        if (this.needPositions) {\n          return this.locationMap.getLocationRange(start, end, this.filename);\n        }\n        return null;\n      },\n      getLocationFromList: function getLocationFromList(list) {\n        if (this.needPositions) {\n          var head = this.getFirstListNode(list);\n          var tail = this.getLastListNode(list);\n          return this.locationMap.getLocationRange(head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart, tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart, this.filename);\n        }\n        return null;\n      },\n      error: function error(message, offset) {\n        var location = typeof offset !== 'undefined' && offset < this.scanner.source.length ? this.locationMap.getLocation(offset) : this.scanner.eof ? this.locationMap.getLocation(findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1)) : this.locationMap.getLocation(this.scanner.tokenStart);\n        throw new SyntaxError(message || 'Unexpected input', this.scanner.source, location.offset, location.line, location.column);\n      }\n    };\n    config = processConfig(config || {});\n    for (var key in config) {\n      parser[key] = config[key];\n    }\n    return function (source, options) {\n      options = options || {};\n      var context = options.context || 'default';\n      var onComment = options.onComment;\n      var ast;\n      tokenize(source, parser.scanner);\n      parser.locationMap.setSource(source, options.offset, options.line, options.column);\n      parser.filename = options.filename || '<unknown>';\n      parser.needPositions = Boolean(options.positions);\n      parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;\n      parser.onParseErrorThrow = false;\n      parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n      parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n      parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n      parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n      if (!parser.context.hasOwnProperty(context)) {\n        throw new Error('Unknown context `' + context + '`');\n      }\n      if (typeof onComment === 'function') {\n        parser.scanner.forEachToken(function (type, start, end) {\n          if (type === COMMENT) {\n            var loc = parser.getLocation(start, end);\n            var value = cmpStr(source, end - 2, end, '*/') ? source.slice(start + 2, end - 2) : source.slice(start + 2, end);\n            onComment(value, loc);\n          }\n        });\n      }\n      ast = parser.context[context].call(parser, options);\n      if (!parser.scanner.eof) {\n        parser.error();\n      }\n      return ast;\n    };\n  };\n});","lineCount":233,"map":[[2,2,1,0],[2,6,1,4,"OffsetToLocation"],[2,22,1,20],[2,25,1,23,"require"],[2,36,1,30],[2,37,1,30,"_dependencyMap"],[2,51,1,30],[2,84,1,59],[2,85,1,60],[3,2,2,0],[3,6,2,4,"SyntaxError"],[3,17,2,15],[3,20,2,18,"require"],[3,31,2,25],[3,32,2,25,"_dependencyMap"],[3,46,2,25],[3,74,2,49],[3,75,2,50],[4,2,3,0],[4,6,3,4,"TokenStream"],[4,17,3,15],[4,20,3,18,"require"],[4,31,3,25],[4,32,3,25,"_dependencyMap"],[4,46,3,25],[4,74,3,49],[4,75,3,50],[5,2,4,0],[5,6,4,4,"List"],[5,10,4,8],[5,13,4,11,"require"],[5,24,4,18],[5,25,4,18,"_dependencyMap"],[5,39,4,18],[5,60,4,35],[5,61,4,36],[6,2,5,0],[6,6,5,4,"tokenize"],[6,14,5,12],[6,17,5,15,"require"],[6,28,5,22],[6,29,5,22,"_dependencyMap"],[6,43,5,22],[6,62,5,37],[6,63,5,38],[7,2,6,0],[7,6,6,4,"constants"],[7,15,6,13],[7,18,6,16,"require"],[7,29,6,23],[7,30,6,23,"_dependencyMap"],[7,44,6,23],[7,69,6,44],[7,70,6,45],[8,2,7,0],[8,6,7,0,"_require"],[8,14,7,0],[8,17,7,38,"require"],[8,28,7,45],[8,29,7,45,"_dependencyMap"],[8,43,7,45],[8,68,7,66],[8,69,7,67],[9,4,7,6,"findWhiteSpaceStart"],[9,23,7,25],[9,26,7,25,"_require"],[9,34,7,25],[9,35,7,6,"findWhiteSpaceStart"],[9,54,7,25],[10,4,7,27,"cmpStr"],[10,10,7,33],[10,13,7,33,"_require"],[10,21,7,33],[10,22,7,27,"cmpStr"],[10,28,7,33],[11,2,8,0],[11,6,8,4,"sequence"],[11,14,8,12],[11,17,8,15,"require"],[11,28,8,22],[11,29,8,22,"_dependencyMap"],[11,43,8,22],[11,60,8,35],[11,61,8,36],[12,2,9,0],[12,6,9,4,"noop"],[12,10,9,8],[12,13,9,11],[12,22,9,4,"noop"],[12,26,9,8,"noop"],[12,27,9,8],[12,29,9,22],[12,30,9,23],[12,31,9,24],[13,2,11,0],[13,6,11,4,"TYPE"],[13,10,11,8],[13,13,11,11,"constants"],[13,22,11,20],[13,23,11,21,"TYPE"],[13,27,11,25],[14,2,12,0],[14,6,12,4,"NAME"],[14,10,12,8],[14,13,12,11,"constants"],[14,22,12,20],[14,23,12,21,"NAME"],[14,27,12,25],[15,2,13,0],[15,6,13,4,"WHITESPACE"],[15,16,13,14],[15,19,13,17,"TYPE"],[15,23,13,21],[15,24,13,22,"WhiteSpace"],[15,34,13,32],[16,2,14,0],[16,6,14,4,"COMMENT"],[16,13,14,11],[16,16,14,14,"TYPE"],[16,20,14,18],[16,21,14,19,"Comment"],[16,28,14,26],[17,2,15,0],[17,6,15,4,"IDENT"],[17,11,15,9],[17,14,15,12,"TYPE"],[17,18,15,16],[17,19,15,17,"Ident"],[17,24,15,22],[18,2,16,0],[18,6,16,4,"FUNCTION"],[18,14,16,12],[18,17,16,15,"TYPE"],[18,21,16,19],[18,22,16,20,"Function"],[18,30,16,28],[19,2,17,0],[19,6,17,4,"URL"],[19,9,17,7],[19,12,17,10,"TYPE"],[19,16,17,14],[19,17,17,15,"Url"],[19,20,17,18],[20,2,18,0],[20,6,18,4,"HASH"],[20,10,18,8],[20,13,18,11,"TYPE"],[20,17,18,15],[20,18,18,16,"Hash"],[20,22,18,20],[21,2,19,0],[21,6,19,4,"PERCENTAGE"],[21,16,19,14],[21,19,19,17,"TYPE"],[21,23,19,21],[21,24,19,22,"Percentage"],[21,34,19,32],[22,2,20,0],[22,6,20,4,"NUMBER"],[22,12,20,10],[22,15,20,13,"TYPE"],[22,19,20,17],[22,20,20,18,"Number"],[22,26,20,24],[23,2,21,0],[23,6,21,4,"NUMBERSIGN"],[23,16,21,14],[23,19,21,17],[23,25,21,23],[23,26,21,24],[23,27,21,25],[24,2,22,0],[24,6,22,4,"NULL"],[24,10,22,8],[24,13,22,11],[24,14,22,12],[25,2,24,0],[25,11,24,9,"createParseContext"],[25,29,24,27,"createParseContext"],[25,30,24,28,"name"],[25,34,24,32],[25,36,24,34],[26,4,25,4],[26,11,25,11],[26,23,25,22],[27,6,26,8],[27,13,26,15],[27,17,26,19],[27,18,26,20,"name"],[27,22,26,24],[27,23,26,25],[27,24,26,26],[27,25,26,27],[28,4,27,4],[28,5,27,5],[29,2,28,0],[30,2,30,0],[30,11,30,9,"processConfig"],[30,24,30,22,"processConfig"],[30,25,30,23,"config"],[30,31,30,29],[30,33,30,31],[31,4,31,4],[31,8,31,8,"parserConfig"],[31,20,31,20],[31,23,31,23],[32,6,32,8,"context"],[32,13,32,15],[32,15,32,17],[32,16,32,18],[32,17,32,19],[33,6,33,8,"scope"],[33,11,33,13],[33,13,33,15],[33,14,33,16],[33,15,33,17],[34,6,34,8,"atrule"],[34,12,34,14],[34,14,34,16],[34,15,34,17],[34,16,34,18],[35,6,35,8,"pseudo"],[35,12,35,14],[35,14,35,16],[35,15,35,17],[36,4,36,4],[36,5,36,5],[37,4,38,4],[37,8,38,8,"config"],[37,14,38,14],[37,15,38,15,"parseContext"],[37,27,38,27],[37,29,38,29],[38,6,39,8],[38,11,39,13],[38,15,39,17,"name"],[38,19,39,21],[38,23,39,25,"config"],[38,29,39,31],[38,30,39,32,"parseContext"],[38,42,39,44],[38,44,39,46],[39,8,40,12],[39,16,40,20],[39,23,40,27,"config"],[39,29,40,33],[39,30,40,34,"parseContext"],[39,42,40,46],[39,43,40,47,"name"],[39,47,40,51],[39,48,40,52],[40,10,41,16],[40,15,41,21],[40,25,41,31],[41,12,42,20,"parserConfig"],[41,24,42,32],[41,25,42,33,"context"],[41,32,42,40],[41,33,42,41,"name"],[41,37,42,45],[41,38,42,46],[41,41,42,49,"config"],[41,47,42,55],[41,48,42,56,"parseContext"],[41,60,42,68],[41,61,42,69,"name"],[41,65,42,73],[41,66,42,74],[42,12,43,20],[43,10,45,16],[43,15,45,21],[43,23,45,29],[44,12,46,20,"parserConfig"],[44,24,46,32],[44,25,46,33,"context"],[44,32,46,40],[44,33,46,41,"name"],[44,37,46,45],[44,38,46,46],[44,41,46,49,"createParseContext"],[44,59,46,67],[44,60,46,68,"config"],[44,66,46,74],[44,67,46,75,"parseContext"],[44,79,46,87],[44,80,46,88,"name"],[44,84,46,92],[44,85,46,93],[44,86,46,94],[45,12,47,20],[46,8,48,12],[47,6,49,8],[48,4,50,4],[49,4,52,4],[49,8,52,8,"config"],[49,14,52,14],[49,15,52,15,"scope"],[49,20,52,20],[49,22,52,22],[50,6,53,8],[50,11,53,13],[50,15,53,17,"name"],[50,19,53,21],[50,23,53,25,"config"],[50,29,53,31],[50,30,53,32,"scope"],[50,35,53,37],[50,37,53,39],[51,8,54,12,"parserConfig"],[51,20,54,24],[51,21,54,25,"scope"],[51,26,54,30],[51,27,54,31,"name"],[51,31,54,35],[51,32,54,36],[51,35,54,39,"config"],[51,41,54,45],[51,42,54,46,"scope"],[51,47,54,51],[51,48,54,52,"name"],[51,52,54,56],[51,53,54,57],[52,6,55,8],[53,4,56,4],[54,4,58,4],[54,8,58,8,"config"],[54,14,58,14],[54,15,58,15,"atrule"],[54,21,58,21],[54,23,58,23],[55,6,59,8],[55,11,59,13],[55,15,59,17,"name"],[55,19,59,21],[55,23,59,25,"config"],[55,29,59,31],[55,30,59,32,"atrule"],[55,36,59,38],[55,38,59,40],[56,8,60,12],[56,12,60,16,"atrule"],[56,18,60,22],[56,21,60,25,"config"],[56,27,60,31],[56,28,60,32,"atrule"],[56,34,60,38],[56,35,60,39,"name"],[56,39,60,43],[56,40,60,44],[57,8,62,12],[57,12,62,16,"atrule"],[57,18,62,22],[57,19,62,23,"parse"],[57,24,62,28],[57,26,62,30],[58,10,63,16,"parserConfig"],[58,22,63,28],[58,23,63,29,"atrule"],[58,29,63,35],[58,30,63,36,"name"],[58,34,63,40],[58,35,63,41],[58,38,63,44,"atrule"],[58,44,63,50],[58,45,63,51,"parse"],[58,50,63,56],[59,8,64,12],[60,6,65,8],[61,4,66,4],[62,4,68,4],[62,8,68,8,"config"],[62,14,68,14],[62,15,68,15,"pseudo"],[62,21,68,21],[62,23,68,23],[63,6,69,8],[63,11,69,13],[63,15,69,17,"name"],[63,19,69,21],[63,23,69,25,"config"],[63,29,69,31],[63,30,69,32,"pseudo"],[63,36,69,38],[63,38,69,40],[64,8,70,12],[64,12,70,16,"pseudo"],[64,18,70,22],[64,21,70,25,"config"],[64,27,70,31],[64,28,70,32,"pseudo"],[64,34,70,38],[64,35,70,39,"name"],[64,39,70,43],[64,40,70,44],[65,8,72,12],[65,12,72,16,"pseudo"],[65,18,72,22],[65,19,72,23,"parse"],[65,24,72,28],[65,26,72,30],[66,10,73,16,"parserConfig"],[66,22,73,28],[66,23,73,29,"pseudo"],[66,29,73,35],[66,30,73,36,"name"],[66,34,73,40],[66,35,73,41],[66,38,73,44,"pseudo"],[66,44,73,50],[66,45,73,51,"parse"],[66,50,73,56],[67,8,74,12],[68,6,75,8],[69,4,76,4],[70,4,78,4],[70,8,78,8,"config"],[70,14,78,14],[70,15,78,15,"node"],[70,19,78,19],[70,21,78,21],[71,6,79,8],[71,11,79,13],[71,15,79,17,"name"],[71,19,79,21],[71,23,79,25,"config"],[71,29,79,31],[71,30,79,32,"node"],[71,34,79,36],[71,36,79,38],[72,8,80,12,"parserConfig"],[72,20,80,24],[72,21,80,25,"name"],[72,25,80,29],[72,26,80,30],[72,29,80,33,"config"],[72,35,80,39],[72,36,80,40,"node"],[72,40,80,44],[72,41,80,45,"name"],[72,45,80,49],[72,46,80,50],[72,47,80,51,"parse"],[72,52,80,56],[73,6,81,8],[74,4,82,4],[75,4,84,4],[75,11,84,11,"parserConfig"],[75,23,84,23],[76,2,85,0],[77,2,87,0,"module"],[77,8,87,6],[77,9,87,7,"exports"],[77,16,87,14],[77,19,87,17],[77,28,87,26,"createParser"],[77,40,87,38,"createParser"],[77,41,87,39,"config"],[77,47,87,45],[77,49,87,47],[78,4,88,4],[78,8,88,8,"parser"],[78,14,88,14],[78,17,88,17],[79,6,89,8,"scanner"],[79,13,89,15],[79,15,89,17],[79,19,89,21,"TokenStream"],[79,30,89,32],[79,31,89,33],[79,32,89,34],[80,6,90,8,"locationMap"],[80,17,90,19],[80,19,90,21],[80,23,90,25,"OffsetToLocation"],[80,39,90,41],[80,40,90,42],[80,41,90,43],[81,6,92,8,"filename"],[81,14,92,16],[81,16,92,18],[81,27,92,29],[82,6,93,8,"needPositions"],[82,19,93,21],[82,21,93,23],[82,26,93,28],[83,6,94,8,"onParseError"],[83,18,94,20],[83,20,94,22,"noop"],[83,24,94,26],[84,6,95,8,"onParseErrorThrow"],[84,23,95,25],[84,25,95,27],[84,30,95,32],[85,6,96,8,"parseAtrulePrelude"],[85,24,96,26],[85,26,96,28],[85,30,96,32],[86,6,97,8,"parseRulePrelude"],[86,22,97,24],[86,24,97,26],[86,28,97,30],[87,6,98,8,"parseValue"],[87,16,98,18],[87,18,98,20],[87,22,98,24],[88,6,99,8,"parseCustomProperty"],[88,25,99,27],[88,27,99,29],[88,32,99,34],[89,6,101,8,"readSequence"],[89,18,101,20],[89,20,101,22,"sequence"],[89,28,101,30],[90,6,103,8,"createList"],[90,16,103,18],[90,18,103,20],[90,27,103,20,"createList"],[90,38,103,20],[90,40,103,31],[91,8,104,12],[91,15,104,19],[91,19,104,23,"List"],[91,23,104,27],[91,24,104,28],[91,25,104,29],[92,6,105,8],[92,7,105,9],[93,6,106,8,"createSingleNodeList"],[93,26,106,28],[93,28,106,30],[93,37,106,30,"createSingleNodeList"],[93,58,106,39,"node"],[93,62,106,43],[93,64,106,45],[94,8,107,12],[94,15,107,19],[94,19,107,23,"List"],[94,23,107,27],[94,24,107,28],[94,25,107,29],[94,26,107,30,"appendData"],[94,36,107,40],[94,37,107,41,"node"],[94,41,107,45],[94,42,107,46],[95,6,108,8],[95,7,108,9],[96,6,109,8,"getFirstListNode"],[96,22,109,24],[96,24,109,26],[96,33,109,26,"getFirstListNode"],[96,50,109,35,"list"],[96,54,109,39],[96,56,109,41],[97,8,110,12],[97,15,110,19,"list"],[97,19,110,23],[97,23,110,27,"list"],[97,27,110,31],[97,28,110,32,"first"],[97,33,110,37],[97,34,110,38],[97,35,110,39],[98,6,111,8],[98,7,111,9],[99,6,112,8,"getLastListNode"],[99,21,112,23],[99,23,112,25],[99,32,112,25,"getLastListNode"],[99,48,112,34,"list"],[99,52,112,38],[99,54,112,40],[100,8,113,12],[100,15,113,19,"list"],[100,19,113,23],[100,20,113,24,"last"],[100,24,113,28],[100,25,113,29],[100,26,113,30],[101,6,114,8],[101,7,114,9],[102,6,116,8,"parseWithFallback"],[102,23,116,25],[102,25,116,27],[102,34,116,27,"parseWithFallback"],[102,52,116,36,"consumer"],[102,60,116,44],[102,62,116,46,"fallback"],[102,70,116,54],[102,72,116,56],[103,8,117,12],[103,12,117,16,"startToken"],[103,22,117,26],[103,25,117,29],[103,29,117,33],[103,30,117,34,"scanner"],[103,37,117,41],[103,38,117,42,"tokenIndex"],[103,48,117,52],[104,8,119,12],[104,12,119,16],[105,10,120,16],[105,17,120,23,"consumer"],[105,25,120,31],[105,26,120,32,"call"],[105,30,120,36],[105,31,120,37],[105,35,120,41],[105,36,120,42],[106,8,121,12],[106,9,121,13],[106,10,121,14],[106,17,121,21,"e"],[106,18,121,22],[106,20,121,24],[107,10,122,16],[107,14,122,20],[107,18,122,24],[107,19,122,25,"onParseErrorThrow"],[107,36,122,42],[107,38,122,44],[108,12,123,20],[108,18,123,26,"e"],[108,19,123,27],[109,10,124,16],[110,10,126,16],[110,14,126,20,"fallbackNode"],[110,26,126,32],[110,29,126,35,"fallback"],[110,37,126,43],[110,38,126,44,"call"],[110,42,126,48],[110,43,126,49],[110,47,126,53],[110,49,126,55,"startToken"],[110,59,126,65],[110,60,126,66],[111,10,128,16],[111,14,128,20],[111,15,128,21,"onParseErrorThrow"],[111,32,128,38],[111,35,128,41],[111,39,128,45],[112,10,129,16],[112,14,129,20],[112,15,129,21,"onParseError"],[112,27,129,33],[112,28,129,34,"e"],[112,29,129,35],[112,31,129,37,"fallbackNode"],[112,43,129,49],[112,44,129,50],[113,10,130,16],[113,14,130,20],[113,15,130,21,"onParseErrorThrow"],[113,32,130,38],[113,35,130,41],[113,40,130,46],[114,10,132,16],[114,17,132,23,"fallbackNode"],[114,29,132,35],[115,8,133,12],[116,6,134,8],[116,7,134,9],[117,6,136,8,"lookupNonWSType"],[117,21,136,23],[117,23,136,25],[117,32,136,25,"lookupNonWSType"],[117,48,136,34,"offset"],[117,54,136,40],[117,56,136,42],[118,8,137,12],[118,11,137,15],[119,10,138,16],[119,14,138,20,"type"],[119,18,138,24],[119,21,138,27],[119,25,138,31],[119,26,138,32,"scanner"],[119,33,138,39],[119,34,138,40,"lookupType"],[119,44,138,50],[119,45,138,51,"offset"],[119,51,138,57],[119,53,138,59],[119,54,138,60],[120,10,139,16],[120,14,139,20,"type"],[120,18,139,24],[120,23,139,29,"WHITESPACE"],[120,33,139,39],[120,35,139,41],[121,12,140,20],[121,19,140,27,"type"],[121,23,140,31],[122,10,141,16],[123,8,142,12],[123,9,142,13],[123,17,142,21,"type"],[123,21,142,25],[123,26,142,30,"NULL"],[123,30,142,34],[124,8,144,12],[124,15,144,19,"NULL"],[124,19,144,23],[125,6,145,8],[125,7,145,9],[126,6,147,8,"eat"],[126,9,147,11],[126,11,147,13],[126,20,147,13,"eat"],[126,24,147,22,"tokenType"],[126,33,147,31],[126,35,147,33],[127,8,148,12],[127,12,148,16],[127,16,148,20],[127,17,148,21,"scanner"],[127,24,148,28],[127,25,148,29,"tokenType"],[127,34,148,38],[127,39,148,43,"tokenType"],[127,48,148,52],[127,50,148,54],[128,10,149,16],[128,14,149,20,"offset"],[128,20,149,26],[128,23,149,29],[128,27,149,33],[128,28,149,34,"scanner"],[128,35,149,41],[128,36,149,42,"tokenStart"],[128,46,149,52],[129,10,150,16],[129,14,150,20,"message"],[129,21,150,27],[129,24,150,30,"NAME"],[129,28,150,34],[129,29,150,35,"tokenType"],[129,38,150,44],[129,39,150,45],[129,42,150,48],[129,56,150,62],[131,10,152,16],[132,10,153,16],[132,18,153,24,"tokenType"],[132,27,153,33],[133,12,154,20],[133,17,154,25,"IDENT"],[133,22,154,30],[134,14,155,24],[135,14,156,24],[135,18,156,28],[135,22,156,32],[135,23,156,33,"scanner"],[135,30,156,40],[135,31,156,41,"tokenType"],[135,40,156,50],[135,45,156,55,"FUNCTION"],[135,53,156,63],[135,57,156,67],[135,61,156,71],[135,62,156,72,"scanner"],[135,69,156,79],[135,70,156,80,"tokenType"],[135,79,156,89],[135,84,156,94,"URL"],[135,87,156,97],[135,89,156,99],[136,16,157,28,"offset"],[136,22,157,34],[136,25,157,37],[136,29,157,41],[136,30,157,42,"scanner"],[136,37,157,49],[136,38,157,50,"tokenEnd"],[136,46,157,58],[136,49,157,61],[136,50,157,62],[137,16,158,28,"message"],[137,23,158,35],[137,26,158,38],[137,69,158,81],[138,14,159,24],[138,15,159,25],[138,21,159,31],[139,16,160,28,"message"],[139,23,160,35],[139,26,160,38],[139,50,160,62],[140,14,161,24],[141,14,162,24],[142,12,164,20],[142,17,164,25,"HASH"],[142,21,164,29],[143,14,165,24],[143,18,165,28],[143,22,165,32],[143,23,165,33,"scanner"],[143,30,165,40],[143,31,165,41,"isDelim"],[143,38,165,48],[143,39,165,49,"NUMBERSIGN"],[143,49,165,59],[143,50,165,60],[143,52,165,62],[144,16,166,28],[144,20,166,32],[144,21,166,33,"scanner"],[144,28,166,40],[144,29,166,41,"next"],[144,33,166,45],[144,34,166,46],[144,35,166,47],[145,16,167,28,"offset"],[145,22,167,34],[145,24,167,36],[146,16,168,28,"message"],[146,23,168,35],[146,26,168,38],[146,44,168,56],[147,14,169,24],[148,14,170,24],[149,12,172,20],[149,17,172,25,"PERCENTAGE"],[149,27,172,35],[150,14,173,24],[150,18,173,28],[150,22,173,32],[150,23,173,33,"scanner"],[150,30,173,40],[150,31,173,41,"tokenType"],[150,40,173,50],[150,45,173,55,"NUMBER"],[150,51,173,61],[150,53,173,63],[151,16,174,28,"offset"],[151,22,174,34],[151,25,174,37],[151,29,174,41],[151,30,174,42,"scanner"],[151,37,174,49],[151,38,174,50,"tokenEnd"],[151,46,174,58],[152,16,175,28,"message"],[152,23,175,35],[152,26,175,38],[152,52,175,64],[153,14,176,24],[154,14,177,24],[155,12,179,20],[156,14,180,24],[157,14,181,24],[158,14,182,24],[158,18,182,28],[158,22,182,32],[158,23,182,33,"scanner"],[158,30,182,40],[158,31,182,41,"source"],[158,37,182,47],[158,38,182,48,"charCodeAt"],[158,48,182,58],[158,49,182,59],[158,53,182,63],[158,54,182,64,"scanner"],[158,61,182,71],[158,62,182,72,"tokenStart"],[158,72,182,82],[158,73,182,83],[158,78,182,88,"tokenType"],[158,87,182,97],[158,89,182,99],[159,16,183,28,"offset"],[159,22,183,34],[159,25,183,37,"offset"],[159,31,183,43],[159,34,183,46],[159,35,183,47],[160,14,184,24],[161,10,185,16],[162,10,187,16],[162,14,187,20],[162,15,187,21,"error"],[162,20,187,26],[162,21,187,27,"message"],[162,28,187,34],[162,30,187,36,"offset"],[162,36,187,42],[162,37,187,43],[163,8,188,12],[164,8,190,12],[164,12,190,16],[164,13,190,17,"scanner"],[164,20,190,24],[164,21,190,25,"next"],[164,25,190,29],[164,26,190,30],[164,27,190,31],[165,6,191,8],[165,7,191,9],[166,6,193,8,"consume"],[166,13,193,15],[166,15,193,17],[166,24,193,17,"consume"],[166,32,193,26,"tokenType"],[166,41,193,35],[166,43,193,37],[167,8,194,12],[167,12,194,16,"value"],[167,17,194,21],[167,20,194,24],[167,24,194,28],[167,25,194,29,"scanner"],[167,32,194,36],[167,33,194,37,"getTokenValue"],[167,46,194,50],[167,47,194,51],[167,48,194,52],[168,8,196,12],[168,12,196,16],[168,13,196,17,"eat"],[168,16,196,20],[168,17,196,21,"tokenType"],[168,26,196,30],[168,27,196,31],[169,8,198,12],[169,15,198,19,"value"],[169,20,198,24],[170,6,199,8],[170,7,199,9],[171,6,200,8,"consumeFunctionName"],[171,25,200,27],[171,27,200,29],[171,36,200,29,"consumeFunctionName"],[171,56,200,29],[171,58,200,40],[172,8,201,12],[172,12,201,16,"name"],[172,16,201,20],[172,19,201,23],[172,23,201,27],[172,24,201,28,"scanner"],[172,31,201,35],[172,32,201,36,"source"],[172,38,201,42],[172,39,201,43,"substring"],[172,48,201,52],[172,49,201,53],[172,53,201,57],[172,54,201,58,"scanner"],[172,61,201,65],[172,62,201,66,"tokenStart"],[172,72,201,76],[172,74,201,78],[172,78,201,82],[172,79,201,83,"scanner"],[172,86,201,90],[172,87,201,91,"tokenEnd"],[172,95,201,99],[172,98,201,102],[172,99,201,103],[172,100,201,104],[173,8,203,12],[173,12,203,16],[173,13,203,17,"eat"],[173,16,203,20],[173,17,203,21,"FUNCTION"],[173,25,203,29],[173,26,203,30],[174,8,205,12],[174,15,205,19,"name"],[174,19,205,23],[175,6,206,8],[175,7,206,9],[176,6,208,8,"getLocation"],[176,17,208,19],[176,19,208,21],[176,28,208,21,"getLocation"],[176,40,208,30,"start"],[176,45,208,35],[176,47,208,37,"end"],[176,50,208,40],[176,52,208,42],[177,8,209,12],[177,12,209,16],[177,16,209,20],[177,17,209,21,"needPositions"],[177,30,209,34],[177,32,209,36],[178,10,210,16],[178,17,210,23],[178,21,210,27],[178,22,210,28,"locationMap"],[178,33,210,39],[178,34,210,40,"getLocationRange"],[178,50,210,56],[178,51,211,20,"start"],[178,56,211,25],[178,58,212,20,"end"],[178,61,212,23],[178,63,213,20],[178,67,213,24],[178,68,213,25,"filename"],[178,76,214,16],[178,77,214,17],[179,8,215,12],[180,8,217,12],[180,15,217,19],[180,19,217,23],[181,6,218,8],[181,7,218,9],[182,6,219,8,"getLocationFromList"],[182,25,219,27],[182,27,219,29],[182,36,219,29,"getLocationFromList"],[182,56,219,38,"list"],[182,60,219,42],[182,62,219,44],[183,8,220,12],[183,12,220,16],[183,16,220,20],[183,17,220,21,"needPositions"],[183,30,220,34],[183,32,220,36],[184,10,221,16],[184,14,221,20,"head"],[184,18,221,24],[184,21,221,27],[184,25,221,31],[184,26,221,32,"getFirstListNode"],[184,42,221,48],[184,43,221,49,"list"],[184,47,221,53],[184,48,221,54],[185,10,222,16],[185,14,222,20,"tail"],[185,18,222,24],[185,21,222,27],[185,25,222,31],[185,26,222,32,"getLastListNode"],[185,41,222,47],[185,42,222,48,"list"],[185,46,222,52],[185,47,222,53],[186,10,223,16],[186,17,223,23],[186,21,223,27],[186,22,223,28,"locationMap"],[186,33,223,39],[186,34,223,40,"getLocationRange"],[186,50,223,56],[186,51,224,20,"head"],[186,55,224,24],[186,60,224,29],[186,64,224,33],[186,67,224,36,"head"],[186,71,224,40],[186,72,224,41,"loc"],[186,75,224,44],[186,76,224,45,"start"],[186,81,224,50],[186,82,224,51,"offset"],[186,88,224,57],[186,91,224,60],[186,95,224,64],[186,96,224,65,"locationMap"],[186,107,224,76],[186,108,224,77,"startOffset"],[186,119,224,88],[186,122,224,91],[186,126,224,95],[186,127,224,96,"scanner"],[186,134,224,103],[186,135,224,104,"tokenStart"],[186,145,224,114],[186,147,225,20,"tail"],[186,151,225,24],[186,156,225,29],[186,160,225,33],[186,163,225,36,"tail"],[186,167,225,40],[186,168,225,41,"loc"],[186,171,225,44],[186,172,225,45,"end"],[186,175,225,48],[186,176,225,49,"offset"],[186,182,225,55],[186,185,225,58],[186,189,225,62],[186,190,225,63,"locationMap"],[186,201,225,74],[186,202,225,75,"startOffset"],[186,213,225,86],[186,216,225,89],[186,220,225,93],[186,221,225,94,"scanner"],[186,228,225,101],[186,229,225,102,"tokenStart"],[186,239,225,112],[186,241,226,20],[186,245,226,24],[186,246,226,25,"filename"],[186,254,227,16],[186,255,227,17],[187,8,228,12],[188,8,230,12],[188,15,230,19],[188,19,230,23],[189,6,231,8],[189,7,231,9],[190,6,233,8,"error"],[190,11,233,13],[190,13,233,15],[190,22,233,15,"error"],[190,28,233,24,"message"],[190,35,233,31],[190,37,233,33,"offset"],[190,43,233,39],[190,45,233,41],[191,8,234,12],[191,12,234,16,"location"],[191,20,234,24],[191,23,234,27],[191,30,234,34,"offset"],[191,36,234,40],[191,41,234,45],[191,52,234,56],[191,56,234,60,"offset"],[191,62,234,66],[191,65,234,69],[191,69,234,73],[191,70,234,74,"scanner"],[191,77,234,81],[191,78,234,82,"source"],[191,84,234,88],[191,85,234,89,"length"],[191,91,234,95],[191,94,235,18],[191,98,235,22],[191,99,235,23,"locationMap"],[191,110,235,34],[191,111,235,35,"getLocation"],[191,122,235,46],[191,123,235,47,"offset"],[191,129,235,53],[191,130,235,54],[191,133,236,18],[191,137,236,22],[191,138,236,23,"scanner"],[191,145,236,30],[191,146,236,31,"eof"],[191,149,236,34],[191,152,237,22],[191,156,237,26],[191,157,237,27,"locationMap"],[191,168,237,38],[191,169,237,39,"getLocation"],[191,180,237,50],[191,181,237,51,"findWhiteSpaceStart"],[191,200,237,70],[191,201,237,71],[191,205,237,75],[191,206,237,76,"scanner"],[191,213,237,83],[191,214,237,84,"source"],[191,220,237,90],[191,222,237,92],[191,226,237,96],[191,227,237,97,"scanner"],[191,234,237,104],[191,235,237,105,"source"],[191,241,237,111],[191,242,237,112,"length"],[191,248,237,118],[191,251,237,121],[191,252,237,122],[191,253,237,123],[191,254,237,124],[191,257,238,22],[191,261,238,26],[191,262,238,27,"locationMap"],[191,273,238,38],[191,274,238,39,"getLocation"],[191,285,238,50],[191,286,238,51],[191,290,238,55],[191,291,238,56,"scanner"],[191,298,238,63],[191,299,238,64,"tokenStart"],[191,309,238,74],[191,310,238,75],[192,8,240,12],[192,14,240,18],[192,18,240,22,"SyntaxError"],[192,29,240,33],[192,30,241,16,"message"],[192,37,241,23],[192,41,241,27],[192,59,241,45],[192,61,242,16],[192,65,242,20],[192,66,242,21,"scanner"],[192,73,242,28],[192,74,242,29,"source"],[192,80,242,35],[192,82,243,16,"location"],[192,90,243,24],[192,91,243,25,"offset"],[192,97,243,31],[192,99,244,16,"location"],[192,107,244,24],[192,108,244,25,"line"],[192,112,244,29],[192,114,245,16,"location"],[192,122,245,24],[192,123,245,25,"column"],[192,129,246,12],[192,130,246,13],[193,6,247,8],[194,4,248,4],[194,5,248,5],[195,4,250,4,"config"],[195,10,250,10],[195,13,250,13,"processConfig"],[195,26,250,26],[195,27,250,27,"config"],[195,33,250,33],[195,37,250,37],[195,38,250,38],[195,39,250,39],[195,40,250,40],[196,4,251,4],[196,9,251,9],[196,13,251,13,"key"],[196,16,251,16],[196,20,251,20,"config"],[196,26,251,26],[196,28,251,28],[197,6,252,8,"parser"],[197,12,252,14],[197,13,252,15,"key"],[197,16,252,18],[197,17,252,19],[197,20,252,22,"config"],[197,26,252,28],[197,27,252,29,"key"],[197,30,252,32],[197,31,252,33],[198,4,253,4],[199,4,255,4],[199,11,255,11],[199,21,255,20,"source"],[199,27,255,26],[199,29,255,28,"options"],[199,36,255,35],[199,38,255,37],[200,6,256,8,"options"],[200,13,256,15],[200,16,256,18,"options"],[200,23,256,25],[200,27,256,29],[200,28,256,30],[200,29,256,31],[201,6,258,8],[201,10,258,12,"context"],[201,17,258,19],[201,20,258,22,"options"],[201,27,258,29],[201,28,258,30,"context"],[201,35,258,37],[201,39,258,41],[201,48,258,50],[202,6,259,8],[202,10,259,12,"onComment"],[202,19,259,21],[202,22,259,24,"options"],[202,29,259,31],[202,30,259,32,"onComment"],[202,39,259,41],[203,6,260,8],[203,10,260,12,"ast"],[203,13,260,15],[204,6,262,8,"tokenize"],[204,14,262,16],[204,15,262,17,"source"],[204,21,262,23],[204,23,262,25,"parser"],[204,29,262,31],[204,30,262,32,"scanner"],[204,37,262,39],[204,38,262,40],[205,6,263,8,"parser"],[205,12,263,14],[205,13,263,15,"locationMap"],[205,24,263,26],[205,25,263,27,"setSource"],[205,34,263,36],[205,35,264,12,"source"],[205,41,264,18],[205,43,265,12,"options"],[205,50,265,19],[205,51,265,20,"offset"],[205,57,265,26],[205,59,266,12,"options"],[205,66,266,19],[205,67,266,20,"line"],[205,71,266,24],[205,73,267,12,"options"],[205,80,267,19],[205,81,267,20,"column"],[205,87,268,8],[205,88,268,9],[206,6,270,8,"parser"],[206,12,270,14],[206,13,270,15,"filename"],[206,21,270,23],[206,24,270,26,"options"],[206,31,270,33],[206,32,270,34,"filename"],[206,40,270,42],[206,44,270,46],[206,55,270,57],[207,6,271,8,"parser"],[207,12,271,14],[207,13,271,15,"needPositions"],[207,26,271,28],[207,29,271,31,"Boolean"],[207,36,271,38],[207,37,271,39,"options"],[207,44,271,46],[207,45,271,47,"positions"],[207,54,271,56],[207,55,271,57],[208,6,272,8,"parser"],[208,12,272,14],[208,13,272,15,"onParseError"],[208,25,272,27],[208,28,272,30],[208,35,272,37,"options"],[208,42,272,44],[208,43,272,45,"onParseError"],[208,55,272,57],[208,60,272,62],[208,70,272,72],[208,73,272,75,"options"],[208,80,272,82],[208,81,272,83,"onParseError"],[208,93,272,95],[208,96,272,98,"noop"],[208,100,272,102],[209,6,273,8,"parser"],[209,12,273,14],[209,13,273,15,"onParseErrorThrow"],[209,30,273,32],[209,33,273,35],[209,38,273,40],[210,6,274,8,"parser"],[210,12,274,14],[210,13,274,15,"parseAtrulePrelude"],[210,31,274,33],[210,34,274,36],[210,54,274,56],[210,58,274,60,"options"],[210,65,274,67],[210,68,274,70,"Boolean"],[210,75,274,77],[210,76,274,78,"options"],[210,83,274,85],[210,84,274,86,"parseAtrulePrelude"],[210,102,274,104],[210,103,274,105],[210,106,274,108],[210,110,274,112],[211,6,275,8,"parser"],[211,12,275,14],[211,13,275,15,"parseRulePrelude"],[211,29,275,31],[211,32,275,34],[211,50,275,52],[211,54,275,56,"options"],[211,61,275,63],[211,64,275,66,"Boolean"],[211,71,275,73],[211,72,275,74,"options"],[211,79,275,81],[211,80,275,82,"parseRulePrelude"],[211,96,275,98],[211,97,275,99],[211,100,275,102],[211,104,275,106],[212,6,276,8,"parser"],[212,12,276,14],[212,13,276,15,"parseValue"],[212,23,276,25],[212,26,276,28],[212,38,276,40],[212,42,276,44,"options"],[212,49,276,51],[212,52,276,54,"Boolean"],[212,59,276,61],[212,60,276,62,"options"],[212,67,276,69],[212,68,276,70,"parseValue"],[212,78,276,80],[212,79,276,81],[212,82,276,84],[212,86,276,88],[213,6,277,8,"parser"],[213,12,277,14],[213,13,277,15,"parseCustomProperty"],[213,32,277,34],[213,35,277,37],[213,56,277,58],[213,60,277,62,"options"],[213,67,277,69],[213,70,277,72,"Boolean"],[213,77,277,79],[213,78,277,80,"options"],[213,85,277,87],[213,86,277,88,"parseCustomProperty"],[213,105,277,107],[213,106,277,108],[213,109,277,111],[213,114,277,116],[214,6,279,8],[214,10,279,12],[214,11,279,13,"parser"],[214,17,279,19],[214,18,279,20,"context"],[214,25,279,27],[214,26,279,28,"hasOwnProperty"],[214,40,279,42],[214,41,279,43,"context"],[214,48,279,50],[214,49,279,51],[214,51,279,53],[215,8,280,12],[215,14,280,18],[215,18,280,22,"Error"],[215,23,280,27],[215,24,280,28],[215,43,280,47],[215,46,280,50,"context"],[215,53,280,57],[215,56,280,60],[215,59,280,63],[215,60,280,64],[216,6,281,8],[217,6,283,8],[217,10,283,12],[217,17,283,19,"onComment"],[217,26,283,28],[217,31,283,33],[217,41,283,43],[217,43,283,45],[218,8,284,12,"parser"],[218,14,284,18],[218,15,284,19,"scanner"],[218,22,284,26],[218,23,284,27,"forEachToken"],[218,35,284,39],[218,36,284,40],[218,46,284,41,"type"],[218,50,284,45],[218,52,284,47,"start"],[218,57,284,52],[218,59,284,54,"end"],[218,62,284,57],[218,64,284,62],[219,10,285,16],[219,14,285,20,"type"],[219,18,285,24],[219,23,285,29,"COMMENT"],[219,30,285,36],[219,32,285,38],[220,12,286,20],[220,16,286,26,"loc"],[220,19,286,29],[220,22,286,32,"parser"],[220,28,286,38],[220,29,286,39,"getLocation"],[220,40,286,50],[220,41,286,51,"start"],[220,46,286,56],[220,48,286,58,"end"],[220,51,286,61],[220,52,286,62],[221,12,287,20],[221,16,287,26,"value"],[221,21,287,31],[221,24,287,34,"cmpStr"],[221,30,287,40],[221,31,287,41,"source"],[221,37,287,47],[221,39,287,49,"end"],[221,42,287,52],[221,45,287,55],[221,46,287,56],[221,48,287,58,"end"],[221,51,287,61],[221,53,287,63],[221,57,287,67],[221,58,287,68],[221,61,288,26,"source"],[221,67,288,32],[221,68,288,33,"slice"],[221,73,288,38],[221,74,288,39,"start"],[221,79,288,44],[221,82,288,47],[221,83,288,48],[221,85,288,50,"end"],[221,88,288,53],[221,91,288,56],[221,92,288,57],[221,93,288,58],[221,96,289,26,"source"],[221,102,289,32],[221,103,289,33,"slice"],[221,108,289,38],[221,109,289,39,"start"],[221,114,289,44],[221,117,289,47],[221,118,289,48],[221,120,289,50,"end"],[221,123,289,53],[221,124,289,54],[222,12,291,20,"onComment"],[222,21,291,29],[222,22,291,30,"value"],[222,27,291,35],[222,29,291,37,"loc"],[222,32,291,40],[222,33,291,41],[223,10,292,16],[224,8,293,12],[224,9,293,13],[224,10,293,14],[225,6,294,8],[226,6,296,8,"ast"],[226,9,296,11],[226,12,296,14,"parser"],[226,18,296,20],[226,19,296,21,"context"],[226,26,296,28],[226,27,296,29,"context"],[226,34,296,36],[226,35,296,37],[226,36,296,38,"call"],[226,40,296,42],[226,41,296,43,"parser"],[226,47,296,49],[226,49,296,51,"options"],[226,56,296,58],[226,57,296,59],[227,6,298,8],[227,10,298,12],[227,11,298,13,"parser"],[227,17,298,19],[227,18,298,20,"scanner"],[227,25,298,27],[227,26,298,28,"eof"],[227,29,298,31],[227,31,298,33],[228,8,299,12,"parser"],[228,14,299,18],[228,15,299,19,"error"],[228,20,299,24],[228,21,299,25],[228,22,299,26],[229,6,300,8],[230,6,302,8],[230,13,302,15,"ast"],[230,16,302,18],[231,4,303,4],[231,5,303,5],[232,2,304,0],[232,3,304,1],[233,0,304,2]],"functionMap":{"names":["<global>","noop","createParseContext","<anonymous>","processConfig","createParser","parser.createList","parser.createSingleNodeList","parser.getFirstListNode","parser.getLastListNode","parser.parseWithFallback","parser.lookupNonWSType","parser.eat","parser.consume","parser.consumeFunctionName","parser.getLocation","parser.getLocationFromList","parser.error","parser.scanner.forEachToken$argument_0"],"mappings":"AAA;WCQ,aD;AEe;WCC;KDE;CFC;AIE;CJuD;iBKE;oBCgB;SDE;8BEC;SFE;0BGC;SHE;yBIC;SJE;2BKE;SLkB;yBME;SNS;aOE;SP4C;iBQE;SRM;6BSC;STM;qBUE;SVU;6BWC;SXY;eYE;SZc;WFQ;wCe6B;afS;KEU;CLC"}},"type":"js/module"}]}