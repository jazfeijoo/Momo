{"dependencies":[{"name":"./lib/rng","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":30,"index":30}}],"key":"gbyflQhu2BMIOgd5uFqEGTdZ+x0="}},{"name":"./lib/bytesToUuid","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":18,"index":50},"end":{"line":2,"column":46,"index":78}}],"key":"a2hP67LDEwBGgA8YbmnFpbD3XcI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var rng = _$$_REQUIRE(_dependencyMap[0], \"./lib/rng\");\n  var bytesToUuid = _$$_REQUIRE(_dependencyMap[1], \"./lib/bytesToUuid\");\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  var _nodeId;\n  var _clockseq;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0;\n  var _lastNSecs = 0;\n\n  // See https://github.com/uuidjs/uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n    options = options || {};\n    var node = options.node || _nodeId;\n    var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n    // node and clockseq need to be initialized to random values if they're not\n    // specified.  We do this lazily to minimize issues related to insufficient\n    // system entropy.  See #189\n    if (node == null || clockseq == null) {\n      var seedBytes = rng();\n      if (node == null) {\n        // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n        node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n      }\n      if (clockseq == null) {\n        // Per 4.2.2, randomize (14 bit) clockseq\n        clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n      }\n    }\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq === undefined) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    for (var n = 0; n < 6; ++n) {\n      b[i + n] = node[n];\n    }\n    return buf ? buf : bytesToUuid(b);\n  }\n  module.exports = v1;\n});","lineCount":104,"map":[[2,2,1,0],[2,6,1,4,"rng"],[2,9,1,7],[2,12,1,10,"require"],[2,23,1,17],[2,24,1,17,"_dependencyMap"],[2,38,1,17],[2,54,1,29],[2,55,1,30],[3,2,2,0],[3,6,2,4,"bytesToUuid"],[3,17,2,15],[3,20,2,18,"require"],[3,31,2,25],[3,32,2,25,"_dependencyMap"],[3,46,2,25],[3,70,2,45],[3,71,2,46],[5,2,4,0],[6,2,5,0],[7,2,6,0],[8,2,7,0],[10,2,9,0],[10,6,9,4,"_nodeId"],[10,13,9,11],[11,2,10,0],[11,6,10,4,"_clockseq"],[11,15,10,13],[13,2,12,0],[14,2,13,0],[14,6,13,4,"_lastMSecs"],[14,16,13,14],[14,19,13,17],[14,20,13,18],[15,2,14,0],[15,6,14,4,"_lastNSecs"],[15,16,14,14],[15,19,14,17],[15,20,14,18],[17,2,16,0],[18,2,17,0],[18,11,17,9,"v1"],[18,13,17,11,"v1"],[18,14,17,12,"options"],[18,21,17,19],[18,23,17,21,"buf"],[18,26,17,24],[18,28,17,26,"offset"],[18,34,17,32],[18,36,17,34],[19,4,18,2],[19,8,18,6,"i"],[19,9,18,7],[19,12,18,10,"buf"],[19,15,18,13],[19,19,18,17,"offset"],[19,25,18,23],[19,29,18,27],[19,30,18,28],[20,4,19,2],[20,8,19,6,"b"],[20,9,19,7],[20,12,19,10,"buf"],[20,15,19,13],[20,19,19,17],[20,21,19,19],[21,4,21,2,"options"],[21,11,21,9],[21,14,21,12,"options"],[21,21,21,19],[21,25,21,23],[21,26,21,24],[21,27,21,25],[22,4,22,2],[22,8,22,6,"node"],[22,12,22,10],[22,15,22,13,"options"],[22,22,22,20],[22,23,22,21,"node"],[22,27,22,25],[22,31,22,29,"_nodeId"],[22,38,22,36],[23,4,23,2],[23,8,23,6,"clockseq"],[23,16,23,14],[23,19,23,17,"options"],[23,26,23,24],[23,27,23,25,"clockseq"],[23,35,23,33],[23,40,23,38,"undefined"],[23,49,23,47],[23,52,23,50,"options"],[23,59,23,57],[23,60,23,58,"clockseq"],[23,68,23,66],[23,71,23,69,"_clockseq"],[23,80,23,78],[25,4,25,2],[26,4,26,2],[27,4,27,2],[28,4,28,2],[28,8,28,6,"node"],[28,12,28,10],[28,16,28,14],[28,20,28,18],[28,24,28,22,"clockseq"],[28,32,28,30],[28,36,28,34],[28,40,28,38],[28,42,28,40],[29,6,29,4],[29,10,29,8,"seedBytes"],[29,19,29,17],[29,22,29,20,"rng"],[29,25,29,23],[29,26,29,24],[29,27,29,25],[30,6,30,4],[30,10,30,8,"node"],[30,14,30,12],[30,18,30,16],[30,22,30,20],[30,24,30,22],[31,8,31,6],[32,8,32,6,"node"],[32,12,32,10],[32,15,32,13,"_nodeId"],[32,22,32,20],[32,25,32,23],[32,26,33,8,"seedBytes"],[32,35,33,17],[32,36,33,18],[32,37,33,19],[32,38,33,20],[32,41,33,23],[32,45,33,27],[32,47,34,8,"seedBytes"],[32,56,34,17],[32,57,34,18],[32,58,34,19],[32,59,34,20],[32,61,34,22,"seedBytes"],[32,70,34,31],[32,71,34,32],[32,72,34,33],[32,73,34,34],[32,75,34,36,"seedBytes"],[32,84,34,45],[32,85,34,46],[32,86,34,47],[32,87,34,48],[32,89,34,50,"seedBytes"],[32,98,34,59],[32,99,34,60],[32,100,34,61],[32,101,34,62],[32,103,34,64,"seedBytes"],[32,112,34,73],[32,113,34,74],[32,114,34,75],[32,115,34,76],[32,116,35,7],[33,6,36,4],[34,6,37,4],[34,10,37,8,"clockseq"],[34,18,37,16],[34,22,37,20],[34,26,37,24],[34,28,37,26],[35,8,38,6],[36,8,39,6,"clockseq"],[36,16,39,14],[36,19,39,17,"_clockseq"],[36,28,39,26],[36,31,39,29],[36,32,39,30,"seedBytes"],[36,41,39,39],[36,42,39,40],[36,43,39,41],[36,44,39,42],[36,48,39,46],[36,49,39,47],[36,52,39,50,"seedBytes"],[36,61,39,59],[36,62,39,60],[36,63,39,61],[36,64,39,62],[36,68,39,66],[36,74,39,72],[37,6,40,4],[38,4,41,2],[40,4,43,2],[41,4,44,2],[42,4,45,2],[43,4,46,2],[44,4,47,2],[44,8,47,6,"msecs"],[44,13,47,11],[44,16,47,14,"options"],[44,23,47,21],[44,24,47,22,"msecs"],[44,29,47,27],[44,34,47,32,"undefined"],[44,43,47,41],[44,46,47,44,"options"],[44,53,47,51],[44,54,47,52,"msecs"],[44,59,47,57],[44,62,47,60],[44,66,47,64,"Date"],[44,70,47,68],[44,71,47,69],[44,72,47,70],[44,73,47,71,"getTime"],[44,80,47,78],[44,81,47,79],[44,82,47,80],[46,4,49,2],[47,4,50,2],[48,4,51,2],[48,8,51,6,"nsecs"],[48,13,51,11],[48,16,51,14,"options"],[48,23,51,21],[48,24,51,22,"nsecs"],[48,29,51,27],[48,34,51,32,"undefined"],[48,43,51,41],[48,46,51,44,"options"],[48,53,51,51],[48,54,51,52,"nsecs"],[48,59,51,57],[48,62,51,60,"_lastNSecs"],[48,72,51,70],[48,75,51,73],[48,76,51,74],[50,4,53,2],[51,4,54,2],[51,8,54,6,"dt"],[51,10,54,8],[51,13,54,12,"msecs"],[51,18,54,17],[51,21,54,20,"_lastMSecs"],[51,31,54,30],[51,34,54,34],[51,35,54,35,"nsecs"],[51,40,54,40],[51,43,54,43,"_lastNSecs"],[51,53,54,53],[51,57,54,55],[51,62,54,60],[53,4,56,2],[54,4,57,2],[54,8,57,6,"dt"],[54,10,57,8],[54,13,57,11],[54,14,57,12],[54,18,57,16,"options"],[54,25,57,23],[54,26,57,24,"clockseq"],[54,34,57,32],[54,39,57,37,"undefined"],[54,48,57,46],[54,50,57,48],[55,6,58,4,"clockseq"],[55,14,58,12],[55,17,58,15,"clockseq"],[55,25,58,23],[55,28,58,26],[55,29,58,27],[55,32,58,30],[55,38,58,36],[56,4,59,2],[58,4,61,2],[59,4,62,2],[60,4,63,2],[60,8,63,6],[60,9,63,7,"dt"],[60,11,63,9],[60,14,63,12],[60,15,63,13],[60,19,63,17,"msecs"],[60,24,63,22],[60,27,63,25,"_lastMSecs"],[60,37,63,35],[60,42,63,40,"options"],[60,49,63,47],[60,50,63,48,"nsecs"],[60,55,63,53],[60,60,63,58,"undefined"],[60,69,63,67],[60,71,63,69],[61,6,64,4,"nsecs"],[61,11,64,9],[61,14,64,12],[61,15,64,13],[62,4,65,2],[64,4,67,2],[65,4,68,2],[65,8,68,6,"nsecs"],[65,13,68,11],[65,17,68,15],[65,22,68,20],[65,24,68,22],[66,6,69,4],[66,12,69,10],[66,16,69,14,"Error"],[66,21,69,19],[66,22,69,20],[66,72,69,70],[66,73,69,71],[67,4,70,2],[68,4,72,2,"_lastMSecs"],[68,14,72,12],[68,17,72,15,"msecs"],[68,22,72,20],[69,4,73,2,"_lastNSecs"],[69,14,73,12],[69,17,73,15,"nsecs"],[69,22,73,20],[70,4,74,2,"_clockseq"],[70,13,74,11],[70,16,74,14,"clockseq"],[70,24,74,22],[72,4,76,2],[73,4,77,2,"msecs"],[73,9,77,7],[73,13,77,11],[73,27,77,25],[75,4,79,2],[76,4,80,2],[76,8,80,6,"tl"],[76,10,80,8],[76,13,80,11],[76,14,80,12],[76,15,80,13,"msecs"],[76,20,80,18],[76,23,80,21],[76,32,80,30],[76,36,80,34],[76,41,80,39],[76,44,80,42,"nsecs"],[76,49,80,47],[76,53,80,51],[76,64,80,62],[77,4,81,2,"b"],[77,5,81,3],[77,6,81,4,"i"],[77,7,81,5],[77,9,81,7],[77,10,81,8],[77,13,81,11,"tl"],[77,15,81,13],[77,20,81,18],[77,22,81,20],[77,25,81,23],[77,29,81,27],[78,4,82,2,"b"],[78,5,82,3],[78,6,82,4,"i"],[78,7,82,5],[78,9,82,7],[78,10,82,8],[78,13,82,11,"tl"],[78,15,82,13],[78,20,82,18],[78,22,82,20],[78,25,82,23],[78,29,82,27],[79,4,83,2,"b"],[79,5,83,3],[79,6,83,4,"i"],[79,7,83,5],[79,9,83,7],[79,10,83,8],[79,13,83,11,"tl"],[79,15,83,13],[79,20,83,18],[79,21,83,19],[79,24,83,22],[79,28,83,26],[80,4,84,2,"b"],[80,5,84,3],[80,6,84,4,"i"],[80,7,84,5],[80,9,84,7],[80,10,84,8],[80,13,84,11,"tl"],[80,15,84,13],[80,18,84,16],[80,22,84,20],[82,4,86,2],[83,4,87,2],[83,8,87,6,"tmh"],[83,11,87,9],[83,14,87,13,"msecs"],[83,19,87,18],[83,22,87,21],[83,33,87,32],[83,36,87,35],[83,41,87,40],[83,44,87,44],[83,53,87,53],[84,4,88,2,"b"],[84,5,88,3],[84,6,88,4,"i"],[84,7,88,5],[84,9,88,7],[84,10,88,8],[84,13,88,11,"tmh"],[84,16,88,14],[84,21,88,19],[84,22,88,20],[84,25,88,23],[84,29,88,27],[85,4,89,2,"b"],[85,5,89,3],[85,6,89,4,"i"],[85,7,89,5],[85,9,89,7],[85,10,89,8],[85,13,89,11,"tmh"],[85,16,89,14],[85,19,89,17],[85,23,89,21],[87,4,91,2],[88,4,92,2,"b"],[88,5,92,3],[88,6,92,4,"i"],[88,7,92,5],[88,9,92,7],[88,10,92,8],[88,13,92,11,"tmh"],[88,16,92,14],[88,21,92,19],[88,23,92,21],[88,26,92,24],[88,29,92,27],[88,32,92,30],[88,36,92,34],[88,37,92,35],[88,38,92,36],[89,4,93,2,"b"],[89,5,93,3],[89,6,93,4,"i"],[89,7,93,5],[89,9,93,7],[89,10,93,8],[89,13,93,11,"tmh"],[89,16,93,14],[89,21,93,19],[89,23,93,21],[89,26,93,24],[89,30,93,28],[91,4,95,2],[92,4,96,2,"b"],[92,5,96,3],[92,6,96,4,"i"],[92,7,96,5],[92,9,96,7],[92,10,96,8],[92,13,96,11,"clockseq"],[92,21,96,19],[92,26,96,24],[92,27,96,25],[92,30,96,28],[92,34,96,32],[94,4,98,2],[95,4,99,2,"b"],[95,5,99,3],[95,6,99,4,"i"],[95,7,99,5],[95,9,99,7],[95,10,99,8],[95,13,99,11,"clockseq"],[95,21,99,19],[95,24,99,22],[95,28,99,26],[97,4,101,2],[98,4,102,2],[98,9,102,7],[98,13,102,11,"n"],[98,14,102,12],[98,17,102,15],[98,18,102,16],[98,20,102,18,"n"],[98,21,102,19],[98,24,102,22],[98,25,102,23],[98,27,102,25],[98,29,102,27,"n"],[98,30,102,28],[98,32,102,30],[99,6,103,4,"b"],[99,7,103,5],[99,8,103,6,"i"],[99,9,103,7],[99,12,103,10,"n"],[99,13,103,11],[99,14,103,12],[99,17,103,15,"node"],[99,21,103,19],[99,22,103,20,"n"],[99,23,103,21],[99,24,103,22],[100,4,104,2],[101,4,106,2],[101,11,106,9,"buf"],[101,14,106,12],[101,17,106,15,"buf"],[101,20,106,18],[101,23,106,21,"bytesToUuid"],[101,34,106,32],[101,35,106,33,"b"],[101,36,106,34],[101,37,106,35],[102,2,107,0],[103,2,109,0,"module"],[103,8,109,6],[103,9,109,7,"exports"],[103,16,109,14],[103,19,109,17,"v1"],[103,21,109,19],[104,0,109,20]],"functionMap":{"names":["<global>","v1"],"mappings":"AAA;ACgB;CD0F"}},"type":"js/module"}]}