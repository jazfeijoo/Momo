{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":157,"column":0,"index":4516}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":157,"column":0,"index":4516}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":157,"column":0,"index":4516}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  /**\n   * EventEmitter manages listeners and publishes events to them.\n   *\n   * EventEmitter accepts a single type parameter that defines the valid events\n   * and associated listener argument(s).\n   *\n   * @example\n   *\n   *   const emitter = new EventEmitter<{\n   *     success: [number, string],\n   *     error: [Error],\n   *   }>();\n   *\n   *   emitter.on('success', (statusCode, responseText) => {...});\n   *   emitter.emit('success', 200, '...');\n   *\n   *   emitter.on('error', error => {...});\n   *   emitter.emit('error', new Error('Resource not found'));\n   *\n   */\n  var EventEmitter = exports.default = /*#__PURE__*/function () {\n    function EventEmitter() {\n      (0, _classCallCheck2.default)(this, EventEmitter);\n      this._registry = {};\n    }\n    (0, _createClass2.default)(EventEmitter, [{\n      key: \"addListener\",\n      value:\n      /**\n       * Registers a listener that is called when the supplied event is emitted.\n       * Returns a subscription that has a `remove` method to undo registration.\n       */\n      function addListener(eventType, listener, context) {\n        if (typeof listener !== 'function') {\n          throw new TypeError('EventEmitter.addListener(...): 2nd argument must be a function.');\n        }\n        var registrations = allocate(this._registry, eventType);\n        var registration = {\n          context: context,\n          listener: listener,\n          remove: function remove() {\n            registrations.delete(registration);\n          }\n        };\n        registrations.add(registration);\n        return registration;\n      }\n\n      /**\n       * Emits the supplied event. Additional arguments supplied to `emit` will be\n       * passed through to each of the registered listeners.\n       *\n       * If a listener modifies the listeners registered for the same event, those\n       * changes will not be reflected in the current invocation of `emit`.\n       */\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var registrations = this._registry[eventType];\n        if (registrations != null) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          // Copy `registrations` to take a snapshot when we invoke `emit`, in case\n          // registrations are added or removed when listeners are invoked.\n          for (var registration of Array.from(registrations)) {\n            registration.listener.apply(registration.context, args);\n          }\n        }\n      }\n\n      /**\n       * Removes all registered listeners.\n       */\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        if (eventType == null) {\n          this._registry = {};\n        } else {\n          delete this._registry[eventType];\n        }\n      }\n\n      /**\n       * Returns the number of registered listeners for the supplied event.\n       */\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        var registrations = this._registry[eventType];\n        return registrations == null ? 0 : registrations.size;\n      }\n    }]);\n    return EventEmitter;\n  }();\n  function allocate(registry, eventType) {\n    var registrations = registry[eventType];\n    if (registrations == null) {\n      registrations = new Set();\n      registry[eventType] = registrations;\n    }\n    return registrations;\n  }\n});","lineCount":122,"map":[[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,2,43,0],[19,0,44,0],[20,0,45,0],[21,0,46,0],[22,0,47,0],[23,0,48,0],[24,0,49,0],[25,0,50,0],[26,0,51,0],[27,0,52,0],[28,0,53,0],[29,0,54,0],[30,0,55,0],[31,0,56,0],[32,0,57,0],[33,0,58,0],[34,0,59,0],[35,0,60,0],[36,0,61,0],[37,0,62,0],[38,2,43,0],[38,6,63,21,"EventEmitter"],[38,18,63,33],[38,21,63,33,"exports"],[38,28,63,33],[38,29,63,33,"default"],[38,36,63,33],[39,4,63,33],[39,13,63,33,"EventEmitter"],[39,26,63,33],[40,6,63,33],[40,10,63,33,"_classCallCheck2"],[40,26,63,33],[40,27,63,33,"default"],[40,34,63,33],[40,42,63,33,"EventEmitter"],[40,54,63,33],[41,6,63,33],[41,11,66,2,"_registry"],[41,20,66,11],[41,23,66,41],[41,24,66,42],[41,25,66,43],[42,4,66,43],[43,4,66,43],[43,8,66,43,"_createClass2"],[43,21,66,43],[43,22,66,43,"default"],[43,29,66,43],[43,31,66,43,"EventEmitter"],[43,43,66,43],[44,6,66,43,"key"],[44,9,66,43],[45,6,66,43,"value"],[45,11,66,43],[46,6,68,2],[47,0,69,0],[48,0,70,0],[49,0,71,0],[50,6,72,2],[50,15,72,2,"addListener"],[50,27,73,4,"eventType"],[50,36,73,21],[50,38,74,4,"listener"],[50,46,74,71],[50,48,75,4,"context"],[50,55,75,18],[50,57,76,23],[51,8,77,4],[51,12,77,8],[51,19,77,15,"listener"],[51,27,77,23],[51,32,77,28],[51,42,77,38],[51,44,77,40],[52,10,78,6],[52,16,78,12],[52,20,78,16,"TypeError"],[52,29,78,25],[52,30,79,8],[52,95,80,6],[52,96,80,7],[53,8,81,4],[54,8,82,4],[54,12,82,10,"registrations"],[54,25,82,23],[54,28,82,26,"allocate"],[54,36,82,34],[54,37,83,6],[54,41,83,10],[54,42,83,11,"_registry"],[54,51,83,20],[54,53,84,6,"eventType"],[54,62,85,4],[54,63,85,5],[55,8,86,4],[55,12,86,10,"registration"],[55,24,86,75],[55,27,86,78],[56,10,87,6,"context"],[56,17,87,13],[56,19,87,6,"context"],[56,26,87,13],[57,10,88,6,"listener"],[57,18,88,14],[57,20,88,6,"listener"],[57,28,88,14],[58,10,89,6,"remove"],[58,16,89,12],[58,27,89,12,"remove"],[58,34,89,12],[58,36,89,21],[59,12,90,8,"registrations"],[59,25,90,21],[59,26,90,22,"delete"],[59,32,90,28],[59,33,90,29,"registration"],[59,45,90,41],[59,46,90,42],[60,10,91,6],[61,8,92,4],[61,9,92,5],[62,8,93,4,"registrations"],[62,21,93,17],[62,22,93,18,"add"],[62,25,93,21],[62,26,93,22,"registration"],[62,38,93,34],[62,39,93,35],[63,8,94,4],[63,15,94,11,"registration"],[63,27,94,23],[64,6,95,2],[66,6,97,2],[67,0,98,0],[68,0,99,0],[69,0,100,0],[70,0,101,0],[71,0,102,0],[72,0,103,0],[73,4,97,2],[74,6,97,2,"key"],[74,9,97,2],[75,6,97,2,"value"],[75,11,97,2],[75,13,104,2],[75,22,104,2,"emit"],[75,27,105,4,"eventType"],[75,36,105,21],[75,38,107,10],[76,8,108,4],[76,12,108,10,"registrations"],[76,25,110,5],[76,28,110,8],[76,32,110,12],[76,33,110,13,"_registry"],[76,42,110,22],[76,43,110,23,"eventType"],[76,52,110,32],[76,53,110,33],[77,8,111,4],[77,12,111,8,"registrations"],[77,25,111,21],[77,29,111,25],[77,33,111,29],[77,35,111,31],[78,10,111,31],[78,19,111,31,"_len"],[78,23,111,31],[78,26,111,31,"arguments"],[78,35,111,31],[78,36,111,31,"length"],[78,42,111,31],[78,44,106,7,"args"],[78,48,106,11],[78,55,106,11,"Array"],[78,60,106,11],[78,61,106,11,"_len"],[78,65,106,11],[78,72,106,11,"_len"],[78,76,106,11],[78,87,106,11,"_key"],[78,91,106,11],[78,97,106,11,"_key"],[78,101,106,11],[78,104,106,11,"_len"],[78,108,106,11],[78,110,106,11,"_key"],[78,114,106,11],[79,12,106,7,"args"],[79,16,106,11],[79,17,106,11,"_key"],[79,21,106,11],[79,29,106,11,"arguments"],[79,38,106,11],[79,39,106,11,"_key"],[79,43,106,11],[80,10,106,11],[81,10,112,6],[82,10,113,6],[83,10,114,6],[83,15,114,11],[83,19,114,17,"registration"],[83,31,114,29],[83,35,114,33,"Array"],[83,40,114,38],[83,41,114,39,"from"],[83,45,114,43],[83,46,114,44,"registrations"],[83,59,114,57],[83,60,114,58],[83,62,114,60],[84,12,115,8,"registration"],[84,24,115,20],[84,25,115,21,"listener"],[84,33,115,29],[84,34,115,30,"apply"],[84,39,115,35],[84,40,115,36,"registration"],[84,52,115,48],[84,53,115,49,"context"],[84,60,115,56],[84,62,115,58,"args"],[84,66,115,62],[84,67,115,63],[85,10,116,6],[86,8,117,4],[87,6,118,2],[89,6,120,2],[90,0,121,0],[91,0,122,0],[92,4,120,2],[93,6,120,2,"key"],[93,9,120,2],[94,6,120,2,"value"],[94,11,120,2],[94,13,123,2],[94,22,123,2,"removeAllListeners"],[94,41,124,4,"eventType"],[94,50,124,23],[94,52,125,10],[95,8,126,4],[95,12,126,8,"eventType"],[95,21,126,17],[95,25,126,21],[95,29,126,25],[95,31,126,27],[96,10,127,6],[96,14,127,10],[96,15,127,11,"_registry"],[96,24,127,20],[96,27,127,23],[96,28,127,24],[96,29,127,25],[97,8,128,4],[97,9,128,5],[97,15,128,11],[98,10,129,6],[98,17,129,13],[98,21,129,17],[98,22,129,18,"_registry"],[98,31,129,27],[98,32,129,28,"eventType"],[98,41,129,37],[98,42,129,38],[99,8,130,4],[100,6,131,2],[102,6,133,2],[103,0,134,0],[104,0,135,0],[105,4,133,2],[106,6,133,2,"key"],[106,9,133,2],[107,6,133,2,"value"],[107,11,133,2],[107,13,136,2],[107,22,136,2,"listenerCount"],[107,36,136,48,"eventType"],[107,45,136,65],[107,47,136,75],[108,8,137,4],[108,12,137,10,"registrations"],[108,25,137,50],[108,28,137,53],[108,32,137,57],[108,33,137,58,"_registry"],[108,42,137,67],[108,43,137,68,"eventType"],[108,52,137,77],[108,53,137,78],[109,8,138,4],[109,15,138,11,"registrations"],[109,28,138,24],[109,32,138,28],[109,36,138,32],[109,39,138,35],[109,40,138,36],[109,43,138,39,"registrations"],[109,56,138,52],[109,57,138,53,"size"],[109,61,138,57],[110,6,139,2],[111,4,139,3],[112,4,139,3],[112,11,139,3,"EventEmitter"],[112,23,139,3],[113,2,139,3],[114,2,142,0],[114,11,142,9,"allocate"],[114,19,142,17,"allocate"],[114,20,147,2,"registry"],[114,28,147,37],[114,30,148,2,"eventType"],[114,39,148,19],[114,41,149,33],[115,4,150,2],[115,8,150,6,"registrations"],[115,21,150,51],[115,24,150,54,"registry"],[115,32,150,62],[115,33,150,63,"eventType"],[115,42,150,72],[115,43,150,73],[116,4,151,2],[116,8,151,6,"registrations"],[116,21,151,19],[116,25,151,23],[116,29,151,27],[116,31,151,29],[117,6,152,4,"registrations"],[117,19,152,17],[117,22,152,20],[117,26,152,24,"Set"],[117,29,152,27],[117,30,152,28],[117,31,152,29],[118,6,153,4,"registry"],[118,14,153,12],[118,15,153,13,"eventType"],[118,24,153,22],[118,25,153,23],[118,28,153,26,"registrations"],[118,41,153,39],[119,4,154,2],[120,4,155,2],[120,11,155,9,"registrations"],[120,24,155,22],[121,2,156,0],[122,0,156,1]],"functionMap":{"names":["<global>","EventEmitter","addListener","registration.remove","emit","removeAllListeners","listenerCount","allocate"],"mappings":"AAA;eC8D;ECS;MCiB;ODE;GDI;EGS;GHc;EIK;GJQ;EKK;GLG;CDC;AOE;CPc"}},"type":"js/module"}]}