{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":137,"column":41,"index":4644}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":137,"column":41,"index":4644}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":137,"column":41,"index":4644}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"expo-constants","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"2TquPknmjb1g5OMuvQ0eTuioYjU="}},{"name":"expo-modules-core","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":45,"index":85}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"fbemitter","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":86},"end":{"line":3,"column":41,"index":127}}],"key":"L02pclstX71NcHtZcTJGG6vjROQ="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":128},"end":{"line":4,"column":34,"index":162}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"uuid","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":0,"index":163},"end":{"line":5,"column":36,"index":199}}],"key":"SONGLL7t2bcM7ZVwLi4mLOuiF9o="}},{"name":"../environment/getInstallationIdAsync","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":0,"index":200},"end":{"line":6,"column":75,"index":275}}],"key":"eijF1vGkfy+3uLu0o6nnXB9roE0="}},{"name":"./LogSerialization","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":0,"index":276},"end":{"line":7,"column":50,"index":326}}],"key":"PguIxvLI3uwgWbONhelIOP66zAM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.__waitForEmptyLogQueueAsync = __waitForEmptyLogQueueAsync;\n  exports.default = void 0;\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n  var _expoModulesCore = _$$_REQUIRE(_dependencyMap[4], \"expo-modules-core\");\n  var _fbemitter = _$$_REQUIRE(_dependencyMap[5], \"fbemitter\");\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"invariant\"));\n  var _uuid = _$$_REQUIRE(_dependencyMap[7], \"uuid\");\n  var _getInstallationIdAsync = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../environment/getInstallationIdAsync\"));\n  var _LogSerialization = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./LogSerialization\"));\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  var _sessionId = (0, _uuid.v4)();\n  var _logQueue = [];\n  var _transportEventEmitter = new _fbemitter.EventEmitter();\n  var _logCounter = 0;\n  var _isSendingLogs = false;\n  var _completionPromise = null;\n  var _resolveCompletion2 = null;\n  function enqueueRemoteLogAsync(_x, _x2, _x3) {\n    return _enqueueRemoteLogAsync.apply(this, arguments);\n  }\n  function _enqueueRemoteLogAsync() {\n    _enqueueRemoteLogAsync = (0, _asyncToGenerator2.default)(function* (level, additionalFields, data) {\n      if (_isReactNativeWarning(data)) {\n        // Remove the stack trace from the warning message since we'll capture our own\n        if (data.length === 0) {\n          throw new Error(`Warnings must include log arguments`);\n        }\n        var warning = data[0];\n        if (typeof warning !== 'string') {\n          throw new TypeError(`The log argument for a warning must be a string`);\n        }\n        var lines = warning.split('\\n');\n        if (lines.length > 1 && /^\\s+in /.test(lines[1])) {\n          data[0] = lines[0];\n        }\n      }\n      var _yield$LogSerializati = yield _LogSerialization.default.serializeLogDataAsync(data, level),\n        body = _yield$LogSerializati.body,\n        includesStack = _yield$LogSerializati.includesStack;\n      _logQueue.push(_objectSpread({\n        count: _logCounter++,\n        level: level,\n        body: body,\n        includesStack: includesStack\n      }, additionalFields));\n      // Send the logs asynchronously (system errors are emitted with transport error events) and throw an uncaught error\n      _sendRemoteLogsAsync().catch(function (error) {\n        setImmediate(function () {\n          throw error;\n        });\n      });\n    });\n    return _enqueueRemoteLogAsync.apply(this, arguments);\n  }\n  function _sendRemoteLogsAsync() {\n    return _sendRemoteLogsAsync2.apply(this, arguments);\n  }\n  function _sendRemoteLogsAsync2() {\n    _sendRemoteLogsAsync2 = (0, _asyncToGenerator2.default)(function* () {\n      var _Constants$expoGoConf;\n      if (_isSendingLogs || !_logQueue.length) {\n        return;\n      }\n      // Our current transport policy is to send all of the pending log messages in one batch. If we opt\n      // for another policy (ex: throttling) this is where to to implement it.\n      var batch = _logQueue.splice(0);\n      var logUrl = (_Constants$expoGoConf = _expoConstants.default.expoGoConfig) == null ? void 0 : _Constants$expoGoConf.logUrl;\n      if (typeof logUrl !== 'string') {\n        throw new Error('The Expo project manifest must specify `logUrl`');\n      }\n      _isSendingLogs = true;\n      try {\n        yield _sendNextLogBatchAsync(batch, logUrl);\n      } finally {\n        _isSendingLogs = false;\n      }\n      if (_logQueue.length) {\n        return _sendRemoteLogsAsync();\n      } else if (_resolveCompletion2) {\n        _resolveCompletion2();\n      }\n    });\n    return _sendRemoteLogsAsync2.apply(this, arguments);\n  }\n  function _sendNextLogBatchAsync(_x4, _x5) {\n    return _sendNextLogBatchAsync2.apply(this, arguments);\n  }\n  function _sendNextLogBatchAsync2() {\n    _sendNextLogBatchAsync2 = (0, _asyncToGenerator2.default)(function* (batch, logUrl) {\n      var response;\n      var headers = {\n        'Content-Type': 'application/json',\n        Connection: 'keep-alive',\n        'Proxy-Connection': 'keep-alive',\n        Accept: 'application/json',\n        'Device-Id': yield (0, _getInstallationIdAsync.default)(),\n        'Session-Id': _sessionId,\n        'Expo-Platform': _expoModulesCore.Platform.OS\n      };\n      if (_expoConstants.default.deviceName) {\n        headers['Device-Name'] = _expoConstants.default.deviceName;\n      }\n      try {\n        response = yield fetch(logUrl, {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify(batch)\n        });\n      } catch (error) {\n        _transportEventEmitter.emit('error', {\n          error: error\n        });\n        return;\n      }\n      var success = response.status >= 200 && response.status < 300;\n      if (!success) {\n        _transportEventEmitter.emit('error', {\n          error: new Error(`An HTTP error occurred when sending remote logs`),\n          response: response\n        });\n      }\n    });\n    return _sendNextLogBatchAsync2.apply(this, arguments);\n  }\n  function addTransportErrorListener(listener) {\n    return _transportEventEmitter.addListener('error', listener);\n  }\n  function _isReactNativeWarning(data) {\n    // NOTE: RN does the same thing internally for YellowBox\n    var message = data[0];\n    return data.length === 1 && typeof message === 'string' && message.startsWith('Warning: ');\n  }\n  var _default = exports.default = {\n    enqueueRemoteLogAsync: enqueueRemoteLogAsync,\n    addTransportErrorListener: addTransportErrorListener\n  };\n  /**\n   * Returns a promise that resolves when all entries in the log queue have been sent. This method is\n   * intended for testing only.\n   */\n  function __waitForEmptyLogQueueAsync() {\n    if (_completionPromise) {\n      return _completionPromise;\n    }\n    if (!_isSendingLogs && !_logQueue.length) {\n      return Promise.resolve();\n    }\n    _completionPromise = new Promise(function (resolve) {\n      _resolveCompletion2 = function _resolveCompletion() {\n        (0, _invariant.default)(!_isSendingLogs, `Must not be sending logs at completion`);\n        (0, _invariant.default)(!_logQueue.length, `Log queue must be empty at completion`);\n        _completionPromise = null;\n        _resolveCompletion2 = null;\n        resolve();\n      };\n    });\n    return _completionPromise;\n  }\n});","lineCount":167,"map":[[10,2,1,0],[10,6,1,0,"_expoConstants"],[10,20,1,0],[10,23,1,0,"_interopRequireDefault"],[10,45,1,0],[10,46,1,0,"_$$_REQUIRE"],[10,57,1,0],[10,58,1,0,"_dependencyMap"],[10,72,1,0],[11,2,2,0],[11,6,2,0,"_expoModulesCore"],[11,22,2,0],[11,25,2,0,"_$$_REQUIRE"],[11,36,2,0],[11,37,2,0,"_dependencyMap"],[11,51,2,0],[12,2,3,0],[12,6,3,0,"_fbemitter"],[12,16,3,0],[12,19,3,0,"_$$_REQUIRE"],[12,30,3,0],[12,31,3,0,"_dependencyMap"],[12,45,3,0],[13,2,4,0],[13,6,4,0,"_invariant"],[13,16,4,0],[13,19,4,0,"_interopRequireDefault"],[13,41,4,0],[13,42,4,0,"_$$_REQUIRE"],[13,53,4,0],[13,54,4,0,"_dependencyMap"],[13,68,4,0],[14,2,5,0],[14,6,5,0,"_uuid"],[14,11,5,0],[14,14,5,0,"_$$_REQUIRE"],[14,25,5,0],[14,26,5,0,"_dependencyMap"],[14,40,5,0],[15,2,6,0],[15,6,6,0,"_getInstallationIdAsync"],[15,29,6,0],[15,32,6,0,"_interopRequireDefault"],[15,54,6,0],[15,55,6,0,"_$$_REQUIRE"],[15,66,6,0],[15,67,6,0,"_dependencyMap"],[15,81,6,0],[16,2,7,0],[16,6,7,0,"_LogSerialization"],[16,23,7,0],[16,26,7,0,"_interopRequireDefault"],[16,48,7,0],[16,49,7,0,"_$$_REQUIRE"],[16,60,7,0],[16,61,7,0,"_dependencyMap"],[16,75,7,0],[17,2,7,50],[17,11,7,50,"ownKeys"],[17,19,7,50,"e"],[17,20,7,50],[17,22,7,50,"r"],[17,23,7,50],[17,31,7,50,"t"],[17,32,7,50],[17,35,7,50,"Object"],[17,41,7,50],[17,42,7,50,"keys"],[17,46,7,50],[17,47,7,50,"e"],[17,48,7,50],[17,55,7,50,"Object"],[17,61,7,50],[17,62,7,50,"getOwnPropertySymbols"],[17,83,7,50],[17,91,7,50,"o"],[17,92,7,50],[17,95,7,50,"Object"],[17,101,7,50],[17,102,7,50,"getOwnPropertySymbols"],[17,123,7,50],[17,124,7,50,"e"],[17,125,7,50],[17,128,7,50,"r"],[17,129,7,50],[17,134,7,50,"o"],[17,135,7,50],[17,138,7,50,"o"],[17,139,7,50],[17,140,7,50,"filter"],[17,146,7,50],[17,157,7,50,"r"],[17,158,7,50],[17,169,7,50,"Object"],[17,175,7,50],[17,176,7,50,"getOwnPropertyDescriptor"],[17,200,7,50],[17,201,7,50,"e"],[17,202,7,50],[17,204,7,50,"r"],[17,205,7,50],[17,207,7,50,"enumerable"],[17,217,7,50],[17,224,7,50,"t"],[17,225,7,50],[17,226,7,50,"push"],[17,230,7,50],[17,231,7,50,"apply"],[17,236,7,50],[17,237,7,50,"t"],[17,238,7,50],[17,240,7,50,"o"],[17,241,7,50],[17,253,7,50,"t"],[17,254,7,50],[18,2,7,50],[18,11,7,50,"_objectSpread"],[18,25,7,50,"e"],[18,26,7,50],[18,39,7,50,"r"],[18,40,7,50],[18,46,7,50,"r"],[18,47,7,50],[18,50,7,50,"arguments"],[18,59,7,50],[18,60,7,50,"length"],[18,66,7,50],[18,68,7,50,"r"],[18,69,7,50],[18,79,7,50,"t"],[18,80,7,50],[18,91,7,50,"arguments"],[18,100,7,50],[18,101,7,50,"r"],[18,102,7,50],[18,106,7,50,"arguments"],[18,115,7,50],[18,116,7,50,"r"],[18,117,7,50],[18,125,7,50,"r"],[18,126,7,50],[18,133,7,50,"ownKeys"],[18,140,7,50],[18,141,7,50,"Object"],[18,147,7,50],[18,148,7,50,"t"],[18,149,7,50],[18,156,7,50,"forEach"],[18,163,7,50],[18,174,7,50,"r"],[18,175,7,50],[18,183,7,50,"_defineProperty2"],[18,199,7,50],[18,200,7,50,"default"],[18,207,7,50],[18,209,7,50,"e"],[18,210,7,50],[18,212,7,50,"r"],[18,213,7,50],[18,215,7,50,"t"],[18,216,7,50],[18,217,7,50,"r"],[18,218,7,50],[18,227,7,50,"Object"],[18,233,7,50],[18,234,7,50,"getOwnPropertyDescriptors"],[18,259,7,50],[18,262,7,50,"Object"],[18,268,7,50],[18,269,7,50,"defineProperties"],[18,285,7,50],[18,286,7,50,"e"],[18,287,7,50],[18,289,7,50,"Object"],[18,295,7,50],[18,296,7,50,"getOwnPropertyDescriptors"],[18,321,7,50],[18,322,7,50,"t"],[18,323,7,50],[18,328,7,50,"ownKeys"],[18,335,7,50],[18,336,7,50,"Object"],[18,342,7,50],[18,343,7,50,"t"],[18,344,7,50],[18,347,7,50,"forEach"],[18,354,7,50],[18,365,7,50,"r"],[18,366,7,50],[18,370,7,50,"Object"],[18,376,7,50],[18,377,7,50,"defineProperty"],[18,391,7,50],[18,392,7,50,"e"],[18,393,7,50],[18,395,7,50,"r"],[18,396,7,50],[18,398,7,50,"Object"],[18,404,7,50],[18,405,7,50,"getOwnPropertyDescriptor"],[18,429,7,50],[18,430,7,50,"t"],[18,431,7,50],[18,433,7,50,"r"],[18,434,7,50],[18,451,7,50,"e"],[18,452,7,50],[19,2,8,0],[19,6,8,6,"_sessionId"],[19,16,8,16],[19,19,8,19],[19,23,8,19,"uuidv4"],[19,31,8,25],[19,33,8,26],[19,34,8,27],[20,2,9,0],[20,6,9,6,"_logQueue"],[20,15,9,15],[20,18,9,18],[20,20,9,20],[21,2,10,0],[21,6,10,6,"_transportEventEmitter"],[21,28,10,28],[21,31,10,31],[21,35,10,35,"EventEmitter"],[21,58,10,47],[21,59,10,48],[21,60,10,49],[22,2,11,0],[22,6,11,4,"_logCounter"],[22,17,11,15],[22,20,11,18],[22,21,11,19],[23,2,12,0],[23,6,12,4,"_isSendingLogs"],[23,20,12,18],[23,23,12,21],[23,28,12,26],[24,2,13,0],[24,6,13,4,"_completionPromise"],[24,24,13,22],[24,27,13,25],[24,31,13,29],[25,2,14,0],[25,6,14,4,"_resolveCompletion"],[25,25,14,22],[25,28,14,25],[25,32,14,29],[26,2,14,30],[26,11,15,15,"enqueueRemoteLogAsync"],[26,32,15,36,"enqueueRemoteLogAsync"],[26,33,15,36,"_x"],[26,35,15,36],[26,37,15,36,"_x2"],[26,40,15,36],[26,42,15,36,"_x3"],[26,45,15,36],[27,4,15,36],[27,11,15,36,"_enqueueRemoteLogAsync"],[27,33,15,36],[27,34,15,36,"apply"],[27,39,15,36],[27,46,15,36,"arguments"],[27,55,15,36],[28,2,15,36],[29,2,15,36],[29,11,15,36,"_enqueueRemoteLogAsync"],[29,34,15,36],[30,4,15,36,"_enqueueRemoteLogAsync"],[30,26,15,36],[30,33,15,36,"_asyncToGenerator2"],[30,51,15,36],[30,52,15,36,"default"],[30,59,15,36],[30,61,15,0],[30,72,15,37,"level"],[30,77,15,42],[30,79,15,44,"additionalFields"],[30,95,15,60],[30,97,15,62,"data"],[30,101,15,66],[30,103,15,68],[31,6,16,4],[31,10,16,8,"_isReactNativeWarning"],[31,31,16,29],[31,32,16,30,"data"],[31,36,16,34],[31,37,16,35],[31,39,16,37],[32,8,17,8],[33,8,18,8],[33,12,18,12,"data"],[33,16,18,16],[33,17,18,17,"length"],[33,23,18,23],[33,28,18,28],[33,29,18,29],[33,31,18,31],[34,10,19,12],[34,16,19,18],[34,20,19,22,"Error"],[34,25,19,27],[34,26,19,29],[34,63,19,65],[34,64,19,66],[35,8,20,8],[36,8,21,8],[36,12,21,14,"warning"],[36,19,21,21],[36,22,21,24,"data"],[36,26,21,28],[36,27,21,29],[36,28,21,30],[36,29,21,31],[37,8,22,8],[37,12,22,12],[37,19,22,19,"warning"],[37,26,22,26],[37,31,22,31],[37,39,22,39],[37,41,22,41],[38,10,23,12],[38,16,23,18],[38,20,23,22,"TypeError"],[38,29,23,31],[38,30,23,33],[38,79,23,81],[38,80,23,82],[39,8,24,8],[40,8,25,8],[40,12,25,14,"lines"],[40,17,25,19],[40,20,25,22,"warning"],[40,27,25,29],[40,28,25,30,"split"],[40,33,25,35],[40,34,25,36],[40,38,25,40],[40,39,25,41],[41,8,26,8],[41,12,26,12,"lines"],[41,17,26,17],[41,18,26,18,"length"],[41,24,26,24],[41,27,26,27],[41,28,26,28],[41,32,26,32],[41,41,26,41],[41,42,26,42,"test"],[41,46,26,46],[41,47,26,47,"lines"],[41,52,26,52],[41,53,26,53],[41,54,26,54],[41,55,26,55],[41,56,26,56],[41,58,26,58],[42,10,27,12,"data"],[42,14,27,16],[42,15,27,17],[42,16,27,18],[42,17,27,19],[42,20,27,22,"lines"],[42,25,27,27],[42,26,27,28],[42,27,27,29],[42,28,27,30],[43,8,28,8],[44,6,29,4],[45,6,30,4],[45,10,30,4,"_yield$LogSerializati"],[45,31,30,4],[45,40,30,42,"LogSerialization"],[45,65,30,58],[45,66,30,59,"serializeLogDataAsync"],[45,87,30,80],[45,88,30,81,"data"],[45,92,30,85],[45,94,30,87,"level"],[45,99,30,92],[45,100,30,93],[46,8,30,12,"body"],[46,12,30,16],[46,15,30,16,"_yield$LogSerializati"],[46,36,30,16],[46,37,30,12,"body"],[46,41,30,16],[47,8,30,18,"includesStack"],[47,21,30,31],[47,24,30,31,"_yield$LogSerializati"],[47,45,30,31],[47,46,30,18,"includesStack"],[47,59,30,31],[48,6,31,4,"_logQueue"],[48,15,31,13],[48,16,31,14,"push"],[48,20,31,18],[48,21,31,18,"_objectSpread"],[48,34,31,18],[49,8,32,8,"count"],[49,13,32,13],[49,15,32,15,"_logCounter"],[49,26,32,26],[49,28,32,28],[50,8,33,8,"level"],[50,13,33,13],[50,15,33,8,"level"],[50,20,33,13],[51,8,34,8,"body"],[51,12,34,12],[51,14,34,8,"body"],[51,18,34,12],[52,8,35,8,"includesStack"],[52,21,35,21],[52,23,35,8,"includesStack"],[53,6,35,21],[53,9,36,11,"additionalFields"],[53,25,36,27],[53,26,37,5],[53,27,37,6],[54,6,38,4],[55,6,39,4,"_sendRemoteLogsAsync"],[55,26,39,24],[55,27,39,25],[55,28,39,26],[55,29,39,27,"catch"],[55,34,39,32],[55,35,39,33],[55,45,39,34,"error"],[55,50,39,39],[55,52,39,44],[56,8,40,8,"setImmediate"],[56,20,40,20],[56,21,40,21],[56,33,40,27],[57,10,41,12],[57,16,41,18,"error"],[57,21,41,23],[58,8,42,8],[58,9,42,9],[58,10,42,10],[59,6,43,4],[59,7,43,5],[59,8,43,6],[60,4,44,0],[60,5,44,1],[61,4,44,1],[61,11,44,1,"_enqueueRemoteLogAsync"],[61,33,44,1],[61,34,44,1,"apply"],[61,39,44,1],[61,46,44,1,"arguments"],[61,55,44,1],[62,2,44,1],[63,2,44,1],[63,11,45,15,"_sendRemoteLogsAsync"],[63,31,45,35,"_sendRemoteLogsAsync"],[63,32,45,35],[64,4,45,35],[64,11,45,35,"_sendRemoteLogsAsync2"],[64,32,45,35],[64,33,45,35,"apply"],[64,38,45,35],[64,45,45,35,"arguments"],[64,54,45,35],[65,2,45,35],[66,2,45,35],[66,11,45,35,"_sendRemoteLogsAsync2"],[66,33,45,35],[67,4,45,35,"_sendRemoteLogsAsync2"],[67,25,45,35],[67,32,45,35,"_asyncToGenerator2"],[67,50,45,35],[67,51,45,35,"default"],[67,58,45,35],[67,60,45,0],[67,73,45,38],[68,6,45,38],[68,10,45,38,"_Constants$expoGoConf"],[68,31,45,38],[69,6,46,4],[69,10,46,8,"_isSendingLogs"],[69,24,46,22],[69,28,46,26],[69,29,46,27,"_logQueue"],[69,38,46,36],[69,39,46,37,"length"],[69,45,46,43],[69,47,46,45],[70,8,47,8],[71,6,48,4],[72,6,49,4],[73,6,50,4],[74,6,51,4],[74,10,51,10,"batch"],[74,15,51,15],[74,18,51,18,"_logQueue"],[74,27,51,27],[74,28,51,28,"splice"],[74,34,51,34],[74,35,51,35],[74,36,51,36],[74,37,51,37],[75,6,52,4],[75,10,52,10,"logUrl"],[75,16,52,16],[75,20,52,16,"_Constants$expoGoConf"],[75,41,52,16],[75,44,52,19,"Constants"],[75,66,52,28],[75,67,52,29,"expoGoConfig"],[75,79,52,41],[75,100,52,19,"_Constants$expoGoConf"],[75,121,52,19],[75,122,52,43,"logUrl"],[75,128,52,49],[76,6,53,4],[76,10,53,8],[76,17,53,15,"logUrl"],[76,23,53,21],[76,28,53,26],[76,36,53,34],[76,38,53,36],[77,8,54,8],[77,14,54,14],[77,18,54,18,"Error"],[77,23,54,23],[77,24,54,24],[77,73,54,73],[77,74,54,74],[78,6,55,4],[79,6,56,4,"_isSendingLogs"],[79,20,56,18],[79,23,56,21],[79,27,56,25],[80,6,57,4],[80,10,57,8],[81,8,58,8],[81,14,58,14,"_sendNextLogBatchAsync"],[81,36,58,36],[81,37,58,37,"batch"],[81,42,58,42],[81,44,58,44,"logUrl"],[81,50,58,50],[81,51,58,51],[82,6,59,4],[82,7,59,5],[82,16,60,12],[83,8,61,8,"_isSendingLogs"],[83,22,61,22],[83,25,61,25],[83,30,61,30],[84,6,62,4],[85,6,63,4],[85,10,63,8,"_logQueue"],[85,19,63,17],[85,20,63,18,"length"],[85,26,63,24],[85,28,63,26],[86,8,64,8],[86,15,64,15,"_sendRemoteLogsAsync"],[86,35,64,35],[86,36,64,36],[86,37,64,37],[87,6,65,4],[87,7,65,5],[87,13,66,9],[87,17,66,13,"_resolveCompletion"],[87,36,66,31],[87,38,66,33],[88,8,67,8,"_resolveCompletion"],[88,27,67,26],[88,28,67,27],[88,29,67,28],[89,6,68,4],[90,4,69,0],[90,5,69,1],[91,4,69,1],[91,11,69,1,"_sendRemoteLogsAsync2"],[91,32,69,1],[91,33,69,1,"apply"],[91,38,69,1],[91,45,69,1,"arguments"],[91,54,69,1],[92,2,69,1],[93,2,69,1],[93,11,70,15,"_sendNextLogBatchAsync"],[93,33,70,37,"_sendNextLogBatchAsync"],[93,34,70,37,"_x4"],[93,37,70,37],[93,39,70,37,"_x5"],[93,42,70,37],[94,4,70,37],[94,11,70,37,"_sendNextLogBatchAsync2"],[94,34,70,37],[94,35,70,37,"apply"],[94,40,70,37],[94,47,70,37,"arguments"],[94,56,70,37],[95,2,70,37],[96,2,70,37],[96,11,70,37,"_sendNextLogBatchAsync2"],[96,35,70,37],[97,4,70,37,"_sendNextLogBatchAsync2"],[97,27,70,37],[97,34,70,37,"_asyncToGenerator2"],[97,52,70,37],[97,53,70,37,"default"],[97,60,70,37],[97,62,70,0],[97,73,70,38,"batch"],[97,78,70,43],[97,80,70,45,"logUrl"],[97,86,70,51],[97,88,70,53],[98,6,71,4],[98,10,71,8,"response"],[98,18,71,16],[99,6,72,4],[99,10,72,10,"headers"],[99,17,72,17],[99,20,72,20],[100,8,73,8],[100,22,73,22],[100,24,73,24],[100,42,73,42],[101,8,74,8,"Connection"],[101,18,74,18],[101,20,74,20],[101,32,74,32],[102,8,75,8],[102,26,75,26],[102,28,75,28],[102,40,75,40],[103,8,76,8,"Accept"],[103,14,76,14],[103,16,76,16],[103,34,76,34],[104,8,77,8],[104,19,77,19],[104,27,77,27],[104,31,77,27,"getInstallationIdAsync"],[104,62,77,49],[104,64,77,50],[104,65,77,51],[105,8,78,8],[105,20,78,20],[105,22,78,22,"_sessionId"],[105,32,78,32],[106,8,79,8],[106,23,79,23],[106,25,79,25,"Platform"],[106,50,79,33],[106,51,79,34,"OS"],[107,6,80,4],[107,7,80,5],[108,6,81,4],[108,10,81,8,"Constants"],[108,32,81,17],[108,33,81,18,"deviceName"],[108,43,81,28],[108,45,81,30],[109,8,82,8,"headers"],[109,15,82,15],[109,16,82,16],[109,29,82,29],[109,30,82,30],[109,33,82,33,"Constants"],[109,55,82,42],[109,56,82,43,"deviceName"],[109,66,82,53],[110,6,83,4],[111,6,84,4],[111,10,84,8],[112,8,85,8,"response"],[112,16,85,16],[112,25,85,25,"fetch"],[112,30,85,30],[112,31,85,31,"logUrl"],[112,37,85,37],[112,39,85,39],[113,10,86,12,"method"],[113,16,86,18],[113,18,86,20],[113,24,86,26],[114,10,87,12,"headers"],[114,17,87,19],[114,19,87,12,"headers"],[114,26,87,19],[115,10,88,12,"body"],[115,14,88,16],[115,16,88,18,"JSON"],[115,20,88,22],[115,21,88,23,"stringify"],[115,30,88,32],[115,31,88,33,"batch"],[115,36,88,38],[116,8,89,8],[116,9,89,9],[116,10,89,10],[117,6,90,4],[117,7,90,5],[117,8,91,4],[117,15,91,11,"error"],[117,20,91,16],[117,22,91,18],[118,8,92,8,"_transportEventEmitter"],[118,30,92,30],[118,31,92,31,"emit"],[118,35,92,35],[118,36,92,36],[118,43,92,43],[118,45,92,45],[119,10,92,47,"error"],[119,15,92,52],[119,17,92,47,"error"],[120,8,92,53],[120,9,92,54],[120,10,92,55],[121,8,93,8],[122,6,94,4],[123,6,95,4],[123,10,95,10,"success"],[123,17,95,17],[123,20,95,20,"response"],[123,28,95,28],[123,29,95,29,"status"],[123,35,95,35],[123,39,95,39],[123,42,95,42],[123,46,95,46,"response"],[123,54,95,54],[123,55,95,55,"status"],[123,61,95,61],[123,64,95,64],[123,67,95,67],[124,6,96,4],[124,10,96,8],[124,11,96,9,"success"],[124,18,96,16],[124,20,96,18],[125,8,97,8,"_transportEventEmitter"],[125,30,97,30],[125,31,97,31,"emit"],[125,35,97,35],[125,36,97,36],[125,43,97,43],[125,45,97,45],[126,10,98,12,"error"],[126,15,98,17],[126,17,98,19],[126,21,98,23,"Error"],[126,26,98,28],[126,27,98,30],[126,76,98,78],[126,77,98,79],[127,10,99,12,"response"],[127,18,99,20],[127,20,99,12,"response"],[128,8,100,8],[128,9,100,9],[128,10,100,10],[129,6,101,4],[130,4,102,0],[130,5,102,1],[131,4,102,1],[131,11,102,1,"_sendNextLogBatchAsync2"],[131,34,102,1],[131,35,102,1,"apply"],[131,40,102,1],[131,47,102,1,"arguments"],[131,56,102,1],[132,2,102,1],[133,2,103,0],[133,11,103,9,"addTransportErrorListener"],[133,36,103,34,"addTransportErrorListener"],[133,37,103,35,"listener"],[133,45,103,43],[133,47,103,45],[134,4,104,4],[134,11,104,11,"_transportEventEmitter"],[134,33,104,33],[134,34,104,34,"addListener"],[134,45,104,45],[134,46,104,46],[134,53,104,53],[134,55,104,55,"listener"],[134,63,104,63],[134,64,104,64],[135,2,105,0],[136,2,106,0],[136,11,106,9,"_isReactNativeWarning"],[136,32,106,30,"_isReactNativeWarning"],[136,33,106,31,"data"],[136,37,106,35],[136,39,106,37],[137,4,107,4],[138,4,108,4],[138,8,108,10,"message"],[138,15,108,17],[138,18,108,20,"data"],[138,22,108,24],[138,23,108,25],[138,24,108,26],[138,25,108,27],[139,4,109,4],[139,11,109,11,"data"],[139,15,109,15],[139,16,109,16,"length"],[139,22,109,22],[139,27,109,27],[139,28,109,28],[139,32,109,32],[139,39,109,39,"message"],[139,46,109,46],[139,51,109,51],[139,59,109,59],[139,63,109,63,"message"],[139,70,109,70],[139,71,109,71,"startsWith"],[139,81,109,81],[139,82,109,82],[139,93,109,93],[139,94,109,94],[140,2,110,0],[141,2,110,1],[141,6,110,1,"_default"],[141,14,110,1],[141,17,110,1,"exports"],[141,24,110,1],[141,25,110,1,"default"],[141,32,110,1],[141,35,111,15],[142,4,112,4,"enqueueRemoteLogAsync"],[142,25,112,25],[142,27,112,4,"enqueueRemoteLogAsync"],[142,48,112,25],[143,4,113,4,"addTransportErrorListener"],[143,29,113,29],[143,31,113,4,"addTransportErrorListener"],[144,2,114,0],[144,3,114,1],[145,2,115,0],[146,0,116,0],[147,0,117,0],[148,0,118,0],[149,2,119,7],[149,11,119,16,"__waitForEmptyLogQueueAsync"],[149,38,119,43,"__waitForEmptyLogQueueAsync"],[149,39,119,43],[149,41,119,46],[150,4,120,4],[150,8,120,8,"_completionPromise"],[150,26,120,26],[150,28,120,28],[151,6,121,8],[151,13,121,15,"_completionPromise"],[151,31,121,33],[152,4,122,4],[153,4,123,4],[153,8,123,8],[153,9,123,9,"_isSendingLogs"],[153,23,123,23],[153,27,123,27],[153,28,123,28,"_logQueue"],[153,37,123,37],[153,38,123,38,"length"],[153,44,123,44],[153,46,123,46],[154,6,124,8],[154,13,124,15,"Promise"],[154,20,124,22],[154,21,124,23,"resolve"],[154,28,124,30],[154,29,124,31],[154,30,124,32],[155,4,125,4],[156,4,126,4,"_completionPromise"],[156,22,126,22],[156,25,126,25],[156,29,126,29,"Promise"],[156,36,126,36],[156,37,126,37],[156,47,126,38,"resolve"],[156,54,126,45],[156,56,126,50],[157,6,127,8,"_resolveCompletion"],[157,25,127,26],[157,28,127,29],[157,37,127,29,"_resolveCompletion"],[157,56,127,29],[157,58,127,35],[158,8,128,12],[158,12,128,12,"invariant"],[158,30,128,21],[158,32,128,22],[158,33,128,23,"_isSendingLogs"],[158,47,128,37],[158,49,128,40],[158,89,128,79],[158,90,128,80],[159,8,129,12],[159,12,129,12,"invariant"],[159,30,129,21],[159,32,129,22],[159,33,129,23,"_logQueue"],[159,42,129,32],[159,43,129,33,"length"],[159,49,129,39],[159,51,129,42],[159,90,129,80],[159,91,129,81],[160,8,130,12,"_completionPromise"],[160,26,130,30],[160,29,130,33],[160,33,130,37],[161,8,131,12,"_resolveCompletion"],[161,27,131,30],[161,30,131,33],[161,34,131,37],[162,8,132,12,"resolve"],[162,15,132,19],[162,16,132,20],[162,17,132,21],[163,6,133,8],[163,7,133,9],[164,4,134,4],[164,5,134,5],[164,6,134,6],[165,4,135,4],[165,11,135,11,"_completionPromise"],[165,29,135,29],[166,2,136,0],[167,0,136,1]],"functionMap":{"names":["<global>","enqueueRemoteLogAsync","_sendRemoteLogsAsync._catch$argument_0","setImmediate$argument_0","_sendRemoteLogsAsync","_sendNextLogBatchAsync","addTransportErrorListener","_isReactNativeWarning","__waitForEmptyLogQueueAsync","Promise$argument_0","_resolveCompletion"],"mappings":"AAA;ACc;iCCwB;qBCC;SDE;KDC;CDC;AIC;CJwB;AKC;CLgC;AMC;CNE;AOC;CPI;OQS;qCCO;6BCC;SDM;KDC;CRE"}},"type":"js/module"}]}