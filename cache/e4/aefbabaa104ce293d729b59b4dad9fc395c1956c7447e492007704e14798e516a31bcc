{"dependencies":[{"name":"./ExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":281},"end":{"line":13,"column":68,"index":349}}],"key":"dSfct/lO94rdoUbWE4YwKKwr2E8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _ExceptionsManager = _$$_REQUIRE(_dependencyMap[0], \"./ExceptionsManager\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var ReactFiberErrorDialog = {\n    /**\n     * Intercept lifecycle errors and ensure they are shown with the correct stack\n     * trace within the native redbox component.\n     */\n    showErrorDialog: function showErrorDialog(_ref) {\n      var componentStack = _ref.componentStack,\n        errorValue = _ref.error;\n      var error;\n\n      // Typically, `errorValue` should be an error. However, other values such as\n      // strings (or even null) are sometimes thrown.\n      if (errorValue instanceof Error) {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        error = errorValue;\n      } else if (typeof errorValue === 'string') {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        error = new _ExceptionsManager.SyntheticError(errorValue);\n      } else {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        error = new _ExceptionsManager.SyntheticError('Unspecified error');\n      }\n      try {\n        error.componentStack = componentStack;\n        error.isComponentError = true;\n      } catch (_unused) {\n        // Ignored.\n      }\n      (0, _ExceptionsManager.handleException)(error, false);\n\n      // Return false here to prevent ReactFiberErrorLogger default behavior of\n      // logging error details to console.error. Calls to console.error are\n      // automatically routed to the native redbox controller, which we've already\n      // done above by calling ExceptionsManager.\n      return false;\n    }\n  };\n  var _default = exports.default = ReactFiberErrorDialog;\n});","lineCount":58,"map":[[6,2,13,0],[6,6,13,0,"_ExceptionsManager"],[6,24,13,0],[6,27,13,0,"_$$_REQUIRE"],[6,38,13,0],[6,39,13,0,"_dependencyMap"],[6,53,13,0],[7,2,1,0],[8,0,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[17,2,22,0],[17,6,22,6,"ReactFiberErrorDialog"],[17,27,22,27],[17,30,22,30],[18,4,23,2],[19,0,24,0],[20,0,25,0],[21,0,26,0],[22,4,27,2,"showErrorDialog"],[22,19,27,17],[22,30,27,17,"showErrorDialog"],[22,46,27,17,"_ref"],[22,50,27,17],[22,52,27,79],[23,6,27,79],[23,10,27,19,"componentStack"],[23,24,27,33],[23,27,27,33,"_ref"],[23,31,27,33],[23,32,27,19,"componentStack"],[23,46,27,33],[24,8,27,42,"errorValue"],[24,18,27,52],[24,21,27,52,"_ref"],[24,25,27,52],[24,26,27,35,"error"],[24,31,27,40],[25,6,28,4],[25,10,28,8,"error"],[25,15,28,29],[27,6,30,4],[28,6,31,4],[29,6,32,4],[29,10,32,8,"errorValue"],[29,20,32,18],[29,32,32,30,"Error"],[29,37,32,35],[29,39,32,37],[30,8,33,6],[31,0,34,0],[32,8,35,6,"error"],[32,13,35,11],[32,16,35,15,"errorValue"],[32,26,35,41],[33,6,36,4],[33,7,36,5],[33,13,36,11],[33,17,36,15],[33,24,36,22,"errorValue"],[33,34,36,32],[33,39,36,37],[33,47,36,45],[33,49,36,47],[34,8,37,6],[35,0,38,0],[36,8,39,6,"error"],[36,13,39,11],[36,16,39,15],[36,20,39,19,"SyntheticError"],[36,53,39,33],[36,54,39,34,"errorValue"],[36,64,39,44],[36,65,39,61],[37,6,40,4],[37,7,40,5],[37,13,40,11],[38,8,41,6],[39,0,42,0],[40,8,43,6,"error"],[40,13,43,11],[40,16,43,15],[40,20,43,19,"SyntheticError"],[40,53,43,33],[40,54,43,34],[40,73,43,53],[40,74,43,70],[41,6,44,4],[42,6,45,4],[42,10,45,8],[43,8,46,6,"error"],[43,13,46,11],[43,14,46,12,"componentStack"],[43,28,46,26],[43,31,46,29,"componentStack"],[43,45,46,43],[44,8,47,6,"error"],[44,13,47,11],[44,14,47,12,"isComponentError"],[44,30,47,28],[44,33,47,31],[44,37,47,35],[45,6,48,4],[45,7,48,5],[45,8,48,6],[45,15,48,6,"_unused"],[45,22,48,6],[45,24,48,12],[46,8,49,6],[47,6,49,6],[48,6,52,4],[48,10,52,4,"handleException"],[48,44,52,19],[48,46,52,20,"error"],[48,51,52,25],[48,53,52,27],[48,58,52,32],[48,59,52,33],[50,6,54,4],[51,6,55,4],[52,6,56,4],[53,6,57,4],[54,6,58,4],[54,13,58,11],[54,18,58,16],[55,4,59,2],[56,2,60,0],[56,3,60,1],[57,2,60,2],[57,6,60,2,"_default"],[57,14,60,2],[57,17,60,2,"exports"],[57,24,60,2],[57,25,60,2,"default"],[57,32,60,2],[57,35,62,15,"ReactFiberErrorDialog"],[57,56,62,36],[58,0,62,36]],"functionMap":{"names":["<global>","showErrorDialog"],"mappings":"AAA;EC0B;GDgC"}},"type":"js/module"}]}