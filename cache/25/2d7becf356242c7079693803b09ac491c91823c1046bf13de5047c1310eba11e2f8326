{"dependencies":[{"name":"./sourceMap","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":16,"index":16},"end":{"line":1,"column":38,"index":38}}],"key":"tzgZ2fIxG3Of0mCey2lsc3qFuPA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var sourceMap = _$$_REQUIRE(_dependencyMap[0], \"./sourceMap\");\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  function processChildren(node, delimeter) {\n    var list = node.children;\n    var prev = null;\n    if (typeof delimeter !== 'function') {\n      list.forEach(this.node, this);\n    } else {\n      list.forEach(function (node) {\n        if (prev !== null) {\n          delimeter.call(this, prev);\n        }\n        this.node(node);\n        prev = node;\n      }, this);\n    }\n  }\n  module.exports = function createGenerator(config) {\n    function processNode(node) {\n      if (hasOwnProperty.call(types, node.type)) {\n        types[node.type].call(this, node);\n      } else {\n        throw new Error('Unknown node type: ' + node.type);\n      }\n    }\n    var types = {};\n    if (config.node) {\n      for (var name in config.node) {\n        types[name] = config.node[name].generate;\n      }\n    }\n    return function (node, options) {\n      var buffer = '';\n      var handlers = {\n        children: processChildren,\n        node: processNode,\n        chunk: function chunk(_chunk) {\n          buffer += _chunk;\n        },\n        result: function result() {\n          return buffer;\n        }\n      };\n      if (options) {\n        if (typeof options.decorator === 'function') {\n          handlers = options.decorator(handlers);\n        }\n        if (options.sourceMap) {\n          handlers = sourceMap(handlers);\n        }\n      }\n      handlers.node(node);\n      return handlers.result();\n    };\n  };\n});","lineCount":57,"map":[[2,2,1,0],[2,6,1,4,"sourceMap"],[2,15,1,13],[2,18,1,16,"require"],[2,29,1,23],[2,30,1,23,"_dependencyMap"],[2,44,1,23],[2,62,1,37],[2,63,1,38],[3,2,2,0],[3,6,2,4,"hasOwnProperty"],[3,20,2,18],[3,23,2,21,"Object"],[3,29,2,27],[3,30,2,28,"prototype"],[3,39,2,37],[3,40,2,38,"hasOwnProperty"],[3,54,2,52],[4,2,4,0],[4,11,4,9,"processChildren"],[4,26,4,24,"processChildren"],[4,27,4,25,"node"],[4,31,4,29],[4,33,4,31,"delimeter"],[4,42,4,40],[4,44,4,42],[5,4,5,4],[5,8,5,8,"list"],[5,12,5,12],[5,15,5,15,"node"],[5,19,5,19],[5,20,5,20,"children"],[5,28,5,28],[6,4,6,4],[6,8,6,8,"prev"],[6,12,6,12],[6,15,6,15],[6,19,6,19],[7,4,8,4],[7,8,8,8],[7,15,8,15,"delimeter"],[7,24,8,24],[7,29,8,29],[7,39,8,39],[7,41,8,41],[8,6,9,8,"list"],[8,10,9,12],[8,11,9,13,"forEach"],[8,18,9,20],[8,19,9,21],[8,23,9,25],[8,24,9,26,"node"],[8,28,9,30],[8,30,9,32],[8,34,9,36],[8,35,9,37],[9,4,10,4],[9,5,10,5],[9,11,10,11],[10,6,11,8,"list"],[10,10,11,12],[10,11,11,13,"forEach"],[10,18,11,20],[10,19,11,21],[10,29,11,30,"node"],[10,33,11,34],[10,35,11,36],[11,8,12,12],[11,12,12,16,"prev"],[11,16,12,20],[11,21,12,25],[11,25,12,29],[11,27,12,31],[12,10,13,16,"delimeter"],[12,19,13,25],[12,20,13,26,"call"],[12,24,13,30],[12,25,13,31],[12,29,13,35],[12,31,13,37,"prev"],[12,35,13,41],[12,36,13,42],[13,8,14,12],[14,8,16,12],[14,12,16,16],[14,13,16,17,"node"],[14,17,16,21],[14,18,16,22,"node"],[14,22,16,26],[14,23,16,27],[15,8,17,12,"prev"],[15,12,17,16],[15,15,17,19,"node"],[15,19,17,23],[16,6,18,8],[16,7,18,9],[16,9,18,11],[16,13,18,15],[16,14,18,16],[17,4,19,4],[18,2,20,0],[19,2,22,0,"module"],[19,8,22,6],[19,9,22,7,"exports"],[19,16,22,14],[19,19,22,17],[19,28,22,26,"createGenerator"],[19,43,22,41,"createGenerator"],[19,44,22,42,"config"],[19,50,22,48],[19,52,22,50],[20,4,23,4],[20,13,23,13,"processNode"],[20,24,23,24,"processNode"],[20,25,23,25,"node"],[20,29,23,29],[20,31,23,31],[21,6,24,8],[21,10,24,12,"hasOwnProperty"],[21,24,24,26],[21,25,24,27,"call"],[21,29,24,31],[21,30,24,32,"types"],[21,35,24,37],[21,37,24,39,"node"],[21,41,24,43],[21,42,24,44,"type"],[21,46,24,48],[21,47,24,49],[21,49,24,51],[22,8,25,12,"types"],[22,13,25,17],[22,14,25,18,"node"],[22,18,25,22],[22,19,25,23,"type"],[22,23,25,27],[22,24,25,28],[22,25,25,29,"call"],[22,29,25,33],[22,30,25,34],[22,34,25,38],[22,36,25,40,"node"],[22,40,25,44],[22,41,25,45],[23,6,26,8],[23,7,26,9],[23,13,26,15],[24,8,27,12],[24,14,27,18],[24,18,27,22,"Error"],[24,23,27,27],[24,24,27,28],[24,45,27,49],[24,48,27,52,"node"],[24,52,27,56],[24,53,27,57,"type"],[24,57,27,61],[24,58,27,62],[25,6,28,8],[26,4,29,4],[27,4,31,4],[27,8,31,8,"types"],[27,13,31,13],[27,16,31,16],[27,17,31,17],[27,18,31,18],[28,4,33,4],[28,8,33,8,"config"],[28,14,33,14],[28,15,33,15,"node"],[28,19,33,19],[28,21,33,21],[29,6,34,8],[29,11,34,13],[29,15,34,17,"name"],[29,19,34,21],[29,23,34,25,"config"],[29,29,34,31],[29,30,34,32,"node"],[29,34,34,36],[29,36,34,38],[30,8,35,12,"types"],[30,13,35,17],[30,14,35,18,"name"],[30,18,35,22],[30,19,35,23],[30,22,35,26,"config"],[30,28,35,32],[30,29,35,33,"node"],[30,33,35,37],[30,34,35,38,"name"],[30,38,35,42],[30,39,35,43],[30,40,35,44,"generate"],[30,48,35,52],[31,6,36,8],[32,4,37,4],[33,4,39,4],[33,11,39,11],[33,21,39,20,"node"],[33,25,39,24],[33,27,39,26,"options"],[33,34,39,33],[33,36,39,35],[34,6,40,8],[34,10,40,12,"buffer"],[34,16,40,18],[34,19,40,21],[34,21,40,23],[35,6,41,8],[35,10,41,12,"handlers"],[35,18,41,20],[35,21,41,23],[36,8,42,12,"children"],[36,16,42,20],[36,18,42,22,"processChildren"],[36,33,42,37],[37,8,43,12,"node"],[37,12,43,16],[37,14,43,18,"processNode"],[37,25,43,29],[38,8,44,12,"chunk"],[38,13,44,17],[38,15,44,19],[38,24,44,19,"chunk"],[38,30,44,28,"chunk"],[38,36,44,33],[38,38,44,35],[39,10,45,16,"buffer"],[39,16,45,22],[39,20,45,26,"chunk"],[39,26,45,31],[40,8,46,12],[40,9,46,13],[41,8,47,12,"result"],[41,14,47,18],[41,16,47,20],[41,25,47,20,"result"],[41,32,47,20],[41,34,47,31],[42,10,48,16],[42,17,48,23,"buffer"],[42,23,48,29],[43,8,49,12],[44,6,50,8],[44,7,50,9],[45,6,52,8],[45,10,52,12,"options"],[45,17,52,19],[45,19,52,21],[46,8,53,12],[46,12,53,16],[46,19,53,23,"options"],[46,26,53,30],[46,27,53,31,"decorator"],[46,36,53,40],[46,41,53,45],[46,51,53,55],[46,53,53,57],[47,10,54,16,"handlers"],[47,18,54,24],[47,21,54,27,"options"],[47,28,54,34],[47,29,54,35,"decorator"],[47,38,54,44],[47,39,54,45,"handlers"],[47,47,54,53],[47,48,54,54],[48,8,55,12],[49,8,57,12],[49,12,57,16,"options"],[49,19,57,23],[49,20,57,24,"sourceMap"],[49,29,57,33],[49,31,57,35],[50,10,58,16,"handlers"],[50,18,58,24],[50,21,58,27,"sourceMap"],[50,30,58,36],[50,31,58,37,"handlers"],[50,39,58,45],[50,40,58,46],[51,8,59,12],[52,6,60,8],[53,6,62,8,"handlers"],[53,14,62,16],[53,15,62,17,"node"],[53,19,62,21],[53,20,62,22,"node"],[53,24,62,26],[53,25,62,27],[54,6,64,8],[54,13,64,15,"handlers"],[54,21,64,23],[54,22,64,24,"result"],[54,28,64,30],[54,29,64,31],[54,30,64,32],[55,4,65,4],[55,5,65,5],[56,2,66,0],[56,3,66,1],[57,0,66,2]],"functionMap":{"names":["<global>","processChildren","list.forEach$argument_0","createGenerator","processNode","<anonymous>","handlers.chunk","handlers.result"],"mappings":"AAA;ACG;qBCO;SDO;CDE;iBGE;ICC;KDM;WEU;mBCK;aDE;oBEC;aFE;KFgB;CHC"}},"type":"js/module"}]}