{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var has = Object.prototype.hasOwnProperty,\n    undef;\n\n  /**\n   * Decode a URI encoded string.\n   *\n   * @param {String} input The URI encoded string.\n   * @returns {String|Null} The decoded string.\n   * @api private\n   */\n  function decode(input) {\n    try {\n      return decodeURIComponent(input.replace(/\\+/g, ' '));\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * Attempts to encode a given input.\n   *\n   * @param {String} input The string that needs to be encoded.\n   * @returns {String|Null} The encoded string.\n   * @api private\n   */\n  function encode(input) {\n    try {\n      return encodeURIComponent(input);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * Simple query string parser.\n   *\n   * @param {String} query The query string that needs to be parsed.\n   * @returns {Object}\n   * @api public\n   */\n  function querystring(query) {\n    var parser = /([^=?#&]+)=?([^&]*)/g,\n      result = {},\n      part;\n    while (part = parser.exec(query)) {\n      var key = decode(part[1]),\n        value = decode(part[2]);\n\n      //\n      // Prevent overriding of existing properties. This ensures that build-in\n      // methods like `toString` or __proto__ are not overriden by malicious\n      // querystrings.\n      //\n      // In the case if failed decoding, we want to omit the key/value pairs\n      // from the result.\n      //\n      if (key === null || value === null || key in result) continue;\n      result[key] = value;\n    }\n    return result;\n  }\n\n  /**\n   * Transform a query string to an object.\n   *\n   * @param {Object} obj Object that should be transformed.\n   * @param {String} prefix Optional prefix.\n   * @returns {String}\n   * @api public\n   */\n  function querystringify(obj, prefix) {\n    prefix = prefix || '';\n    var pairs = [],\n      value,\n      key;\n\n    //\n    // Optionally prefix with a '?' if needed\n    //\n    if ('string' !== typeof prefix) prefix = '?';\n    for (key in obj) {\n      if (has.call(obj, key)) {\n        value = obj[key];\n\n        //\n        // Edge cases where we actually want to encode the value to an empty\n        // string instead of the stringified value.\n        //\n        if (!value && (value === null || value === undef || isNaN(value))) {\n          value = '';\n        }\n        key = encode(key);\n        value = encode(value);\n\n        //\n        // If we failed to encode the strings, we should bail out as we don't\n        // want to add invalid strings to the query.\n        //\n        if (key === null || value === null) continue;\n        pairs.push(key + '=' + value);\n      }\n    }\n    return pairs.length ? prefix + pairs.join('&') : '';\n  }\n\n  //\n  // Expose the module.\n  //\n  exports.stringify = querystringify;\n  exports.parse = querystring;\n});","lineCount":114,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"has"],[4,9,3,7],[4,12,3,10,"Object"],[4,18,3,16],[4,19,3,17,"prototype"],[4,28,3,26],[4,29,3,27,"hasOwnProperty"],[4,43,3,41],[5,4,4,4,"undef"],[5,9,4,9],[7,2,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,2,13,0],[14,11,13,9,"decode"],[14,17,13,15,"decode"],[14,18,13,16,"input"],[14,23,13,21],[14,25,13,23],[15,4,14,2],[15,8,14,6],[16,6,15,4],[16,13,15,11,"decodeURIComponent"],[16,31,15,29],[16,32,15,30,"input"],[16,37,15,35],[16,38,15,36,"replace"],[16,45,15,43],[16,46,15,44],[16,51,15,49],[16,53,15,51],[16,56,15,54],[16,57,15,55],[16,58,15,56],[17,4,16,2],[17,5,16,3],[17,6,16,4],[17,13,16,11,"e"],[17,14,16,12],[17,16,16,14],[18,6,17,4],[18,13,17,11],[18,17,17,15],[19,4,18,2],[20,2,19,0],[22,2,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,2,28,0],[29,11,28,9,"encode"],[29,17,28,15,"encode"],[29,18,28,16,"input"],[29,23,28,21],[29,25,28,23],[30,4,29,2],[30,8,29,6],[31,6,30,4],[31,13,30,11,"encodeURIComponent"],[31,31,30,29],[31,32,30,30,"input"],[31,37,30,35],[31,38,30,36],[32,4,31,2],[32,5,31,3],[32,6,31,4],[32,13,31,11,"e"],[32,14,31,12],[32,16,31,14],[33,6,32,4],[33,13,32,11],[33,17,32,15],[34,4,33,2],[35,2,34,0],[37,2,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,2,43,0],[44,11,43,9,"querystring"],[44,22,43,20,"querystring"],[44,23,43,21,"query"],[44,28,43,26],[44,30,43,28],[45,4,44,2],[45,8,44,6,"parser"],[45,14,44,12],[45,17,44,15],[45,39,44,37],[46,6,45,6,"result"],[46,12,45,12],[46,15,45,15],[46,16,45,16],[46,17,45,17],[47,6,46,6,"part"],[47,10,46,10],[48,4,48,2],[48,11,48,9,"part"],[48,15,48,13],[48,18,48,16,"parser"],[48,24,48,22],[48,25,48,23,"exec"],[48,29,48,27],[48,30,48,28,"query"],[48,35,48,33],[48,36,48,34],[48,38,48,36],[49,6,49,4],[49,10,49,8,"key"],[49,13,49,11],[49,16,49,14,"decode"],[49,22,49,20],[49,23,49,21,"part"],[49,27,49,25],[49,28,49,26],[49,29,49,27],[49,30,49,28],[49,31,49,29],[50,8,50,8,"value"],[50,13,50,13],[50,16,50,16,"decode"],[50,22,50,22],[50,23,50,23,"part"],[50,27,50,27],[50,28,50,28],[50,29,50,29],[50,30,50,30],[50,31,50,31],[52,6,52,4],[53,6,53,4],[54,6,54,4],[55,6,55,4],[56,6,56,4],[57,6,57,4],[58,6,58,4],[59,6,59,4],[60,6,60,4],[60,10,60,8,"key"],[60,13,60,11],[60,18,60,16],[60,22,60,20],[60,26,60,24,"value"],[60,31,60,29],[60,36,60,34],[60,40,60,38],[60,44,60,42,"key"],[60,47,60,45],[60,51,60,49,"result"],[60,57,60,55],[60,59,60,57],[61,6,61,4,"result"],[61,12,61,10],[61,13,61,11,"key"],[61,16,61,14],[61,17,61,15],[61,20,61,18,"value"],[61,25,61,23],[62,4,62,2],[63,4,64,2],[63,11,64,9,"result"],[63,17,64,15],[64,2,65,0],[66,2,67,0],[67,0,68,0],[68,0,69,0],[69,0,70,0],[70,0,71,0],[71,0,72,0],[72,0,73,0],[73,0,74,0],[74,2,75,0],[74,11,75,9,"querystringify"],[74,25,75,23,"querystringify"],[74,26,75,24,"obj"],[74,29,75,27],[74,31,75,29,"prefix"],[74,37,75,35],[74,39,75,37],[75,4,76,2,"prefix"],[75,10,76,8],[75,13,76,11,"prefix"],[75,19,76,17],[75,23,76,21],[75,25,76,23],[76,4,78,2],[76,8,78,6,"pairs"],[76,13,78,11],[76,16,78,14],[76,18,78,16],[77,6,79,6,"value"],[77,11,79,11],[78,6,80,6,"key"],[78,9,80,9],[80,4,82,2],[81,4,83,2],[82,4,84,2],[83,4,85,2],[83,8,85,6],[83,16,85,14],[83,21,85,19],[83,28,85,26,"prefix"],[83,34,85,32],[83,36,85,34,"prefix"],[83,42,85,40],[83,45,85,43],[83,48,85,46],[84,4,87,2],[84,9,87,7,"key"],[84,12,87,10],[84,16,87,14,"obj"],[84,19,87,17],[84,21,87,19],[85,6,88,4],[85,10,88,8,"has"],[85,13,88,11],[85,14,88,12,"call"],[85,18,88,16],[85,19,88,17,"obj"],[85,22,88,20],[85,24,88,22,"key"],[85,27,88,25],[85,28,88,26],[85,30,88,28],[86,8,89,6,"value"],[86,13,89,11],[86,16,89,14,"obj"],[86,19,89,17],[86,20,89,18,"key"],[86,23,89,21],[86,24,89,22],[88,8,91,6],[89,8,92,6],[90,8,93,6],[91,8,94,6],[92,8,95,6],[92,12,95,10],[92,13,95,11,"value"],[92,18,95,16],[92,23,95,21,"value"],[92,28,95,26],[92,33,95,31],[92,37,95,35],[92,41,95,39,"value"],[92,46,95,44],[92,51,95,49,"undef"],[92,56,95,54],[92,60,95,58,"isNaN"],[92,65,95,63],[92,66,95,64,"value"],[92,71,95,69],[92,72,95,70],[92,73,95,71],[92,75,95,73],[93,10,96,8,"value"],[93,15,96,13],[93,18,96,16],[93,20,96,18],[94,8,97,6],[95,8,99,6,"key"],[95,11,99,9],[95,14,99,12,"encode"],[95,20,99,18],[95,21,99,19,"key"],[95,24,99,22],[95,25,99,23],[96,8,100,6,"value"],[96,13,100,11],[96,16,100,14,"encode"],[96,22,100,20],[96,23,100,21,"value"],[96,28,100,26],[96,29,100,27],[98,8,102,6],[99,8,103,6],[100,8,104,6],[101,8,105,6],[102,8,106,6],[102,12,106,10,"key"],[102,15,106,13],[102,20,106,18],[102,24,106,22],[102,28,106,26,"value"],[102,33,106,31],[102,38,106,36],[102,42,106,40],[102,44,106,42],[103,8,107,6,"pairs"],[103,13,107,11],[103,14,107,12,"push"],[103,18,107,16],[103,19,107,17,"key"],[103,22,107,20],[103,25,107,22],[103,28,107,25],[103,31,107,27,"value"],[103,36,107,32],[103,37,107,33],[104,6,108,4],[105,4,109,2],[106,4,111,2],[106,11,111,9,"pairs"],[106,16,111,14],[106,17,111,15,"length"],[106,23,111,21],[106,26,111,24,"prefix"],[106,32,111,30],[106,35,111,33,"pairs"],[106,40,111,38],[106,41,111,39,"join"],[106,45,111,43],[106,46,111,44],[106,49,111,47],[106,50,111,48],[106,53,111,51],[106,55,111,53],[107,2,112,0],[109,2,114,0],[110,2,115,0],[111,2,116,0],[112,2,117,0,"exports"],[112,9,117,7],[112,10,117,8,"stringify"],[112,19,117,17],[112,22,117,20,"querystringify"],[112,36,117,34],[113,2,118,0,"exports"],[113,9,118,7],[113,10,118,8,"parse"],[113,15,118,13],[113,18,118,16,"querystring"],[113,29,118,27],[114,0,118,28]],"functionMap":{"names":["<global>","decode","encode","querystring","querystringify"],"mappings":"AAA;ACY;CDM;AES;CFM;AGS;CHsB;AIU;CJqC"}},"type":"js/module"}]}