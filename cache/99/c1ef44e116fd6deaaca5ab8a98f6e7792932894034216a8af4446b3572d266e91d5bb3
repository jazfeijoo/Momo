{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var UNKNOWN_FUNCTION = '<unknown>';\n  /**\n   * This parses the different stack traces and puts them into one format\n   * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n   */\n\n  function parse(stackString) {\n    var lines = stackString.split('\\n');\n    return lines.reduce(function (stack, line) {\n      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n      if (parseResult) {\n        stack.push(parseResult);\n      }\n      return stack;\n    }, []);\n  }\n  var chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n  var chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n  function parseChrome(line) {\n    var parts = chromeRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    var submatch = chromeEvalRe.exec(parts[2]);\n    if (isEval && submatch != null) {\n      // throw out eval line/column and use top-most line/column number\n      parts[2] = submatch[1]; // url\n\n      parts[3] = submatch[2]; // line\n\n      parts[4] = submatch[3]; // column\n    }\n\n    return {\n      file: !isNative ? parts[2] : null,\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: isNative ? [parts[2]] : [],\n      lineNumber: parts[3] ? +parts[3] : null,\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n  var winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  function parseWinjs(line) {\n    var parts = winjsRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[2],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[3],\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n  var geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\n  var geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n  function parseGecko(line) {\n    var parts = geckoRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    var submatch = geckoEvalRe.exec(parts[3]);\n    if (isEval && submatch != null) {\n      // throw out eval line/column and use top-most line number\n      parts[3] = submatch[1];\n      parts[4] = submatch[2];\n      parts[5] = null; // no column when eval\n    }\n\n    return {\n      file: parts[3],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: parts[2] ? parts[2].split(',') : [],\n      lineNumber: parts[4] ? +parts[4] : null,\n      column: parts[5] ? +parts[5] : null\n    };\n  }\n  var javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n  function parseJSC(line) {\n    var parts = javaScriptCoreRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[3],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[4],\n      column: parts[5] ? +parts[5] : null\n    };\n  }\n  var nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  function parseNode(line) {\n    var parts = nodeRe.exec(line);\n    if (!parts) {\n      return null;\n    }\n    return {\n      file: parts[2],\n      methodName: parts[1] || UNKNOWN_FUNCTION,\n      arguments: [],\n      lineNumber: +parts[3],\n      column: parts[4] ? +parts[4] : null\n    };\n  }\n  exports.parse = parse;\n});","lineCount":119,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,3,47,"value"],[5,9,3,52],[5,11,3,54],[6,2,3,59],[6,3,3,60],[6,4,3,61],[7,2,5,0],[7,6,5,4,"UNKNOWN_FUNCTION"],[7,22,5,20],[7,25,5,23],[7,36,5,34],[8,2,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[13,2,11,0],[13,11,11,9,"parse"],[13,16,11,14,"parse"],[13,17,11,15,"stackString"],[13,28,11,26],[13,30,11,28],[14,4,12,2],[14,8,12,6,"lines"],[14,13,12,11],[14,16,12,14,"stackString"],[14,27,12,25],[14,28,12,26,"split"],[14,33,12,31],[14,34,12,32],[14,38,12,36],[14,39,12,37],[15,4,13,2],[15,11,13,9,"lines"],[15,16,13,14],[15,17,13,15,"reduce"],[15,23,13,21],[15,24,13,22],[15,34,13,32,"stack"],[15,39,13,37],[15,41,13,39,"line"],[15,45,13,43],[15,47,13,45],[16,6,14,4],[16,10,14,8,"parseResult"],[16,21,14,19],[16,24,14,22,"parseChrome"],[16,35,14,33],[16,36,14,34,"line"],[16,40,14,38],[16,41,14,39],[16,45,14,43,"parseWinjs"],[16,55,14,53],[16,56,14,54,"line"],[16,60,14,58],[16,61,14,59],[16,65,14,63,"parseGecko"],[16,75,14,73],[16,76,14,74,"line"],[16,80,14,78],[16,81,14,79],[16,85,14,83,"parseNode"],[16,94,14,92],[16,95,14,93,"line"],[16,99,14,97],[16,100,14,98],[16,104,14,102,"parseJSC"],[16,112,14,110],[16,113,14,111,"line"],[16,117,14,115],[16,118,14,116],[17,6,16,4],[17,10,16,8,"parseResult"],[17,21,16,19],[17,23,16,21],[18,8,17,6,"stack"],[18,13,17,11],[18,14,17,12,"push"],[18,18,17,16],[18,19,17,17,"parseResult"],[18,30,17,28],[18,31,17,29],[19,6,18,4],[20,6,20,4],[20,13,20,11,"stack"],[20,18,20,16],[21,4,21,2],[21,5,21,3],[21,7,21,5],[21,9,21,7],[21,10,21,8],[22,2,22,0],[23,2,23,0],[23,6,23,4,"chromeRe"],[23,14,23,12],[23,17,23,15],[23,156,23,154],[24,2,24,0],[24,6,24,4,"chromeEvalRe"],[24,18,24,16],[24,21,24,19],[24,52,24,50],[25,2,26,0],[25,11,26,9,"parseChrome"],[25,22,26,20,"parseChrome"],[25,23,26,21,"line"],[25,27,26,25],[25,29,26,27],[26,4,27,2],[26,8,27,6,"parts"],[26,13,27,11],[26,16,27,14,"chromeRe"],[26,24,27,22],[26,25,27,23,"exec"],[26,29,27,27],[26,30,27,28,"line"],[26,34,27,32],[26,35,27,33],[27,4,29,2],[27,8,29,6],[27,9,29,7,"parts"],[27,14,29,12],[27,16,29,14],[28,6,30,4],[28,13,30,11],[28,17,30,15],[29,4,31,2],[30,4,33,2],[30,8,33,6,"isNative"],[30,16,33,14],[30,19,33,17,"parts"],[30,24,33,22],[30,25,33,23],[30,26,33,24],[30,27,33,25],[30,31,33,29,"parts"],[30,36,33,34],[30,37,33,35],[30,38,33,36],[30,39,33,37],[30,40,33,38,"indexOf"],[30,47,33,45],[30,48,33,46],[30,56,33,54],[30,57,33,55],[30,62,33,60],[30,63,33,61],[30,64,33,62],[30,65,33,63],[32,4,35,2],[32,8,35,6,"isEval"],[32,14,35,12],[32,17,35,15,"parts"],[32,22,35,20],[32,23,35,21],[32,24,35,22],[32,25,35,23],[32,29,35,27,"parts"],[32,34,35,32],[32,35,35,33],[32,36,35,34],[32,37,35,35],[32,38,35,36,"indexOf"],[32,45,35,43],[32,46,35,44],[32,52,35,50],[32,53,35,51],[32,58,35,56],[32,59,35,57],[32,60,35,58],[32,61,35,59],[34,4,37,2],[34,8,37,6,"submatch"],[34,16,37,14],[34,19,37,17,"chromeEvalRe"],[34,31,37,29],[34,32,37,30,"exec"],[34,36,37,34],[34,37,37,35,"parts"],[34,42,37,40],[34,43,37,41],[34,44,37,42],[34,45,37,43],[34,46,37,44],[35,4,39,2],[35,8,39,6,"isEval"],[35,14,39,12],[35,18,39,16,"submatch"],[35,26,39,24],[35,30,39,28],[35,34,39,32],[35,36,39,34],[36,6,40,4],[37,6,41,4,"parts"],[37,11,41,9],[37,12,41,10],[37,13,41,11],[37,14,41,12],[37,17,41,15,"submatch"],[37,25,41,23],[37,26,41,24],[37,27,41,25],[37,28,41,26],[37,29,41,27],[37,30,41,28],[39,6,43,4,"parts"],[39,11,43,9],[39,12,43,10],[39,13,43,11],[39,14,43,12],[39,17,43,15,"submatch"],[39,25,43,23],[39,26,43,24],[39,27,43,25],[39,28,43,26],[39,29,43,27],[39,30,43,28],[41,6,45,4,"parts"],[41,11,45,9],[41,12,45,10],[41,13,45,11],[41,14,45,12],[41,17,45,15,"submatch"],[41,25,45,23],[41,26,45,24],[41,27,45,25],[41,28,45,26],[41,29,45,27],[41,30,45,28],[42,4,46,2],[44,4,48,2],[44,11,48,9],[45,6,49,4,"file"],[45,10,49,8],[45,12,49,10],[45,13,49,11,"isNative"],[45,21,49,19],[45,24,49,22,"parts"],[45,29,49,27],[45,30,49,28],[45,31,49,29],[45,32,49,30],[45,35,49,33],[45,39,49,37],[46,6,50,4,"methodName"],[46,16,50,14],[46,18,50,16,"parts"],[46,23,50,21],[46,24,50,22],[46,25,50,23],[46,26,50,24],[46,30,50,28,"UNKNOWN_FUNCTION"],[46,46,50,44],[47,6,51,4,"arguments"],[47,15,51,13],[47,17,51,15,"isNative"],[47,25,51,23],[47,28,51,26],[47,29,51,27,"parts"],[47,34,51,32],[47,35,51,33],[47,36,51,34],[47,37,51,35],[47,38,51,36],[47,41,51,39],[47,43,51,41],[48,6,52,4,"lineNumber"],[48,16,52,14],[48,18,52,16,"parts"],[48,23,52,21],[48,24,52,22],[48,25,52,23],[48,26,52,24],[48,29,52,27],[48,30,52,28,"parts"],[48,35,52,33],[48,36,52,34],[48,37,52,35],[48,38,52,36],[48,41,52,39],[48,45,52,43],[49,6,53,4,"column"],[49,12,53,10],[49,14,53,12,"parts"],[49,19,53,17],[49,20,53,18],[49,21,53,19],[49,22,53,20],[49,25,53,23],[49,26,53,24,"parts"],[49,31,53,29],[49,32,53,30],[49,33,53,31],[49,34,53,32],[49,37,53,35],[50,4,54,2],[50,5,54,3],[51,2,55,0],[52,2,57,0],[52,6,57,4,"winjsRe"],[52,13,57,11],[52,16,57,14],[52,127,57,125],[53,2,59,0],[53,11,59,9,"parseWinjs"],[53,21,59,19,"parseWinjs"],[53,22,59,20,"line"],[53,26,59,24],[53,28,59,26],[54,4,60,2],[54,8,60,6,"parts"],[54,13,60,11],[54,16,60,14,"winjsRe"],[54,23,60,21],[54,24,60,22,"exec"],[54,28,60,26],[54,29,60,27,"line"],[54,33,60,31],[54,34,60,32],[55,4,62,2],[55,8,62,6],[55,9,62,7,"parts"],[55,14,62,12],[55,16,62,14],[56,6,63,4],[56,13,63,11],[56,17,63,15],[57,4,64,2],[58,4,66,2],[58,11,66,9],[59,6,67,4,"file"],[59,10,67,8],[59,12,67,10,"parts"],[59,17,67,15],[59,18,67,16],[59,19,67,17],[59,20,67,18],[60,6,68,4,"methodName"],[60,16,68,14],[60,18,68,16,"parts"],[60,23,68,21],[60,24,68,22],[60,25,68,23],[60,26,68,24],[60,30,68,28,"UNKNOWN_FUNCTION"],[60,46,68,44],[61,6,69,4,"arguments"],[61,15,69,13],[61,17,69,15],[61,19,69,17],[62,6,70,4,"lineNumber"],[62,16,70,14],[62,18,70,16],[62,19,70,17,"parts"],[62,24,70,22],[62,25,70,23],[62,26,70,24],[62,27,70,25],[63,6,71,4,"column"],[63,12,71,10],[63,14,71,12,"parts"],[63,19,71,17],[63,20,71,18],[63,21,71,19],[63,22,71,20],[63,25,71,23],[63,26,71,24,"parts"],[63,31,71,29],[63,32,71,30],[63,33,71,31],[63,34,71,32],[63,37,71,35],[64,4,72,2],[64,5,72,3],[65,2,73,0],[66,2,75,0],[66,6,75,4,"geckoRe"],[66,13,75,11],[66,16,75,14],[66,145,75,143],[67,2,76,0],[67,6,76,4,"geckoEvalRe"],[67,17,76,15],[67,20,76,18],[67,67,76,65],[68,2,78,0],[68,11,78,9,"parseGecko"],[68,21,78,19,"parseGecko"],[68,22,78,20,"line"],[68,26,78,24],[68,28,78,26],[69,4,79,2],[69,8,79,6,"parts"],[69,13,79,11],[69,16,79,14,"geckoRe"],[69,23,79,21],[69,24,79,22,"exec"],[69,28,79,26],[69,29,79,27,"line"],[69,33,79,31],[69,34,79,32],[70,4,81,2],[70,8,81,6],[70,9,81,7,"parts"],[70,14,81,12],[70,16,81,14],[71,6,82,4],[71,13,82,11],[71,17,82,15],[72,4,83,2],[73,4,85,2],[73,8,85,6,"isEval"],[73,14,85,12],[73,17,85,15,"parts"],[73,22,85,20],[73,23,85,21],[73,24,85,22],[73,25,85,23],[73,29,85,27,"parts"],[73,34,85,32],[73,35,85,33],[73,36,85,34],[73,37,85,35],[73,38,85,36,"indexOf"],[73,45,85,43],[73,46,85,44],[73,55,85,53],[73,56,85,54],[73,59,85,57],[73,60,85,58],[73,61,85,59],[74,4,86,2],[74,8,86,6,"submatch"],[74,16,86,14],[74,19,86,17,"geckoEvalRe"],[74,30,86,28],[74,31,86,29,"exec"],[74,35,86,33],[74,36,86,34,"parts"],[74,41,86,39],[74,42,86,40],[74,43,86,41],[74,44,86,42],[74,45,86,43],[75,4,88,2],[75,8,88,6,"isEval"],[75,14,88,12],[75,18,88,16,"submatch"],[75,26,88,24],[75,30,88,28],[75,34,88,32],[75,36,88,34],[76,6,89,4],[77,6,90,4,"parts"],[77,11,90,9],[77,12,90,10],[77,13,90,11],[77,14,90,12],[77,17,90,15,"submatch"],[77,25,90,23],[77,26,90,24],[77,27,90,25],[77,28,90,26],[78,6,91,4,"parts"],[78,11,91,9],[78,12,91,10],[78,13,91,11],[78,14,91,12],[78,17,91,15,"submatch"],[78,25,91,23],[78,26,91,24],[78,27,91,25],[78,28,91,26],[79,6,92,4,"parts"],[79,11,92,9],[79,12,92,10],[79,13,92,11],[79,14,92,12],[79,17,92,15],[79,21,92,19],[79,22,92,20],[79,23,92,21],[80,4,93,2],[82,4,95,2],[82,11,95,9],[83,6,96,4,"file"],[83,10,96,8],[83,12,96,10,"parts"],[83,17,96,15],[83,18,96,16],[83,19,96,17],[83,20,96,18],[84,6,97,4,"methodName"],[84,16,97,14],[84,18,97,16,"parts"],[84,23,97,21],[84,24,97,22],[84,25,97,23],[84,26,97,24],[84,30,97,28,"UNKNOWN_FUNCTION"],[84,46,97,44],[85,6,98,4,"arguments"],[85,15,98,13],[85,17,98,15,"parts"],[85,22,98,20],[85,23,98,21],[85,24,98,22],[85,25,98,23],[85,28,98,26,"parts"],[85,33,98,31],[85,34,98,32],[85,35,98,33],[85,36,98,34],[85,37,98,35,"split"],[85,42,98,40],[85,43,98,41],[85,46,98,44],[85,47,98,45],[85,50,98,48],[85,52,98,50],[86,6,99,4,"lineNumber"],[86,16,99,14],[86,18,99,16,"parts"],[86,23,99,21],[86,24,99,22],[86,25,99,23],[86,26,99,24],[86,29,99,27],[86,30,99,28,"parts"],[86,35,99,33],[86,36,99,34],[86,37,99,35],[86,38,99,36],[86,41,99,39],[86,45,99,43],[87,6,100,4,"column"],[87,12,100,10],[87,14,100,12,"parts"],[87,19,100,17],[87,20,100,18],[87,21,100,19],[87,22,100,20],[87,25,100,23],[87,26,100,24,"parts"],[87,31,100,29],[87,32,100,30],[87,33,100,31],[87,34,100,32],[87,37,100,35],[88,4,101,2],[88,5,101,3],[89,2,102,0],[90,2,104,0],[90,6,104,4,"javaScriptCoreRe"],[90,22,104,20],[90,25,104,23],[90,87,104,85],[91,2,106,0],[91,11,106,9,"parseJSC"],[91,19,106,17,"parseJSC"],[91,20,106,18,"line"],[91,24,106,22],[91,26,106,24],[92,4,107,2],[92,8,107,6,"parts"],[92,13,107,11],[92,16,107,14,"javaScriptCoreRe"],[92,32,107,30],[92,33,107,31,"exec"],[92,37,107,35],[92,38,107,36,"line"],[92,42,107,40],[92,43,107,41],[93,4,109,2],[93,8,109,6],[93,9,109,7,"parts"],[93,14,109,12],[93,16,109,14],[94,6,110,4],[94,13,110,11],[94,17,110,15],[95,4,111,2],[96,4,113,2],[96,11,113,9],[97,6,114,4,"file"],[97,10,114,8],[97,12,114,10,"parts"],[97,17,114,15],[97,18,114,16],[97,19,114,17],[97,20,114,18],[98,6,115,4,"methodName"],[98,16,115,14],[98,18,115,16,"parts"],[98,23,115,21],[98,24,115,22],[98,25,115,23],[98,26,115,24],[98,30,115,28,"UNKNOWN_FUNCTION"],[98,46,115,44],[99,6,116,4,"arguments"],[99,15,116,13],[99,17,116,15],[99,19,116,17],[100,6,117,4,"lineNumber"],[100,16,117,14],[100,18,117,16],[100,19,117,17,"parts"],[100,24,117,22],[100,25,117,23],[100,26,117,24],[100,27,117,25],[101,6,118,4,"column"],[101,12,118,10],[101,14,118,12,"parts"],[101,19,118,17],[101,20,118,18],[101,21,118,19],[101,22,118,20],[101,25,118,23],[101,26,118,24,"parts"],[101,31,118,29],[101,32,118,30],[101,33,118,31],[101,34,118,32],[101,37,118,35],[102,4,119,2],[102,5,119,3],[103,2,120,0],[104,2,122,0],[104,6,122,4,"nodeRe"],[104,12,122,10],[104,15,122,13],[104,110,122,108],[105,2,124,0],[105,11,124,9,"parseNode"],[105,20,124,18,"parseNode"],[105,21,124,19,"line"],[105,25,124,23],[105,27,124,25],[106,4,125,2],[106,8,125,6,"parts"],[106,13,125,11],[106,16,125,14,"nodeRe"],[106,22,125,20],[106,23,125,21,"exec"],[106,27,125,25],[106,28,125,26,"line"],[106,32,125,30],[106,33,125,31],[107,4,127,2],[107,8,127,6],[107,9,127,7,"parts"],[107,14,127,12],[107,16,127,14],[108,6,128,4],[108,13,128,11],[108,17,128,15],[109,4,129,2],[110,4,131,2],[110,11,131,9],[111,6,132,4,"file"],[111,10,132,8],[111,12,132,10,"parts"],[111,17,132,15],[111,18,132,16],[111,19,132,17],[111,20,132,18],[112,6,133,4,"methodName"],[112,16,133,14],[112,18,133,16,"parts"],[112,23,133,21],[112,24,133,22],[112,25,133,23],[112,26,133,24],[112,30,133,28,"UNKNOWN_FUNCTION"],[112,46,133,44],[113,6,134,4,"arguments"],[113,15,134,13],[113,17,134,15],[113,19,134,17],[114,6,135,4,"lineNumber"],[114,16,135,14],[114,18,135,16],[114,19,135,17,"parts"],[114,24,135,22],[114,25,135,23],[114,26,135,24],[114,27,135,25],[115,6,136,4,"column"],[115,12,136,10],[115,14,136,12,"parts"],[115,19,136,17],[115,20,136,18],[115,21,136,19],[115,22,136,20],[115,25,136,23],[115,26,136,24,"parts"],[115,31,136,29],[115,32,136,30],[115,33,136,31],[115,34,136,32],[115,37,136,35],[116,4,137,2],[116,5,137,3],[117,2,138,0],[118,2,140,0,"exports"],[118,9,140,7],[118,10,140,8,"parse"],[118,15,140,13],[118,18,140,16,"parse"],[118,23,140,21],[119,0,140,22]],"functionMap":{"names":["<global>","parse","lines.reduce$argument_0","parseChrome","parseWinjs","parseGecko","parseJSC","parseNode"],"mappings":"AAA;ACU;sBCE;GDQ;CDC;AGI;CH6B;AII;CJc;AKK;CLwB;AMI;CNc;AOI;CPc"}},"type":"js/module"}]}