{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":37,"index":37}}],"key":"llq4nuOBKCCL4A7IFpRswh14toM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n  var WHITESPACE = TYPE.WhiteSpace;\n  var COMMENT = TYPE.Comment;\n  var IDENT = TYPE.Ident;\n  var LEFTPARENTHESIS = TYPE.LeftParenthesis;\n  module.exports = {\n    name: 'MediaQuery',\n    structure: {\n      children: [['Identifier', 'MediaFeature', 'WhiteSpace']]\n    },\n    parse: function parse() {\n      this.scanner.skipSC();\n      var children = this.createList();\n      var child = null;\n      var space = null;\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case COMMENT:\n            this.scanner.next();\n            continue;\n          case WHITESPACE:\n            space = this.WhiteSpace();\n            continue;\n          case IDENT:\n            child = this.Identifier();\n            break;\n          case LEFTPARENTHESIS:\n            child = this.MediaFeature();\n            break;\n          default:\n            break scan;\n        }\n        if (space !== null) {\n          children.push(space);\n          space = null;\n        }\n        children.push(child);\n      }\n      if (child === null) {\n        this.error('Identifier or parenthesis is expected');\n      }\n      return {\n        type: 'MediaQuery',\n        loc: this.getLocationFromList(children),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node);\n    }\n  };\n});","lineCount":53,"map":[[2,2,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,25,1,18,"_dependencyMap"],[2,39,1,18],[2,61,1,36],[2,62,1,37],[2,63,1,38,"TYPE"],[2,67,1,42],[3,2,3,0],[3,6,3,4,"WHITESPACE"],[3,16,3,14],[3,19,3,17,"TYPE"],[3,23,3,21],[3,24,3,22,"WhiteSpace"],[3,34,3,32],[4,2,4,0],[4,6,4,4,"COMMENT"],[4,13,4,11],[4,16,4,14,"TYPE"],[4,20,4,18],[4,21,4,19,"Comment"],[4,28,4,26],[5,2,5,0],[5,6,5,4,"IDENT"],[5,11,5,9],[5,14,5,12,"TYPE"],[5,18,5,16],[5,19,5,17,"Ident"],[5,24,5,22],[6,2,6,0],[6,6,6,4,"LEFTPARENTHESIS"],[6,21,6,19],[6,24,6,22,"TYPE"],[6,28,6,26],[6,29,6,27,"LeftParenthesis"],[6,44,6,42],[7,2,8,0,"module"],[7,8,8,6],[7,9,8,7,"exports"],[7,16,8,14],[7,19,8,17],[8,4,9,4,"name"],[8,8,9,8],[8,10,9,10],[8,22,9,22],[9,4,10,4,"structure"],[9,13,10,13],[9,15,10,15],[10,6,11,8,"children"],[10,14,11,16],[10,16,11,18],[10,17,11,19],[10,18,12,12],[10,30,12,24],[10,32,13,12],[10,46,13,26],[10,48,14,12],[10,60,14,24],[10,61,15,9],[11,4,16,4],[11,5,16,5],[12,4,17,4,"parse"],[12,9,17,9],[12,11,17,11],[12,20,17,11,"parse"],[12,26,17,11],[12,28,17,22],[13,6,18,8],[13,10,18,12],[13,11,18,13,"scanner"],[13,18,18,20],[13,19,18,21,"skipSC"],[13,25,18,27],[13,26,18,28],[13,27,18,29],[14,6,20,8],[14,10,20,12,"children"],[14,18,20,20],[14,21,20,23],[14,25,20,27],[14,26,20,28,"createList"],[14,36,20,38],[14,37,20,39],[14,38,20,40],[15,6,21,8],[15,10,21,12,"child"],[15,15,21,17],[15,18,21,20],[15,22,21,24],[16,6,22,8],[16,10,22,12,"space"],[16,15,22,17],[16,18,22,20],[16,22,22,24],[17,6,24,8,"scan"],[17,10,24,12],[17,12,25,8],[17,19,25,15],[17,20,25,16],[17,24,25,20],[17,25,25,21,"scanner"],[17,32,25,28],[17,33,25,29,"eof"],[17,36,25,32],[17,38,25,34],[18,8,26,12],[18,16,26,20],[18,20,26,24],[18,21,26,25,"scanner"],[18,28,26,32],[18,29,26,33,"tokenType"],[18,38,26,42],[19,10,27,16],[19,15,27,21,"COMMENT"],[19,22,27,28],[20,12,28,20],[20,16,28,24],[20,17,28,25,"scanner"],[20,24,28,32],[20,25,28,33,"next"],[20,29,28,37],[20,30,28,38],[20,31,28,39],[21,12,29,20],[22,10,31,16],[22,15,31,21,"WHITESPACE"],[22,25,31,31],[23,12,32,20,"space"],[23,17,32,25],[23,20,32,28],[23,24,32,32],[23,25,32,33,"WhiteSpace"],[23,35,32,43],[23,36,32,44],[23,37,32,45],[24,12,33,20],[25,10,35,16],[25,15,35,21,"IDENT"],[25,20,35,26],[26,12,36,20,"child"],[26,17,36,25],[26,20,36,28],[26,24,36,32],[26,25,36,33,"Identifier"],[26,35,36,43],[26,36,36,44],[26,37,36,45],[27,12,37,20],[28,10,39,16],[28,15,39,21,"LEFTPARENTHESIS"],[28,30,39,36],[29,12,40,20,"child"],[29,17,40,25],[29,20,40,28],[29,24,40,32],[29,25,40,33,"MediaFeature"],[29,37,40,45],[29,38,40,46],[29,39,40,47],[30,12,41,20],[31,10,43,16],[32,12,44,20],[32,18,44,26,"scan"],[32,22,44,30],[33,8,45,12],[34,8,47,12],[34,12,47,16,"space"],[34,17,47,21],[34,22,47,26],[34,26,47,30],[34,28,47,32],[35,10,48,16,"children"],[35,18,48,24],[35,19,48,25,"push"],[35,23,48,29],[35,24,48,30,"space"],[35,29,48,35],[35,30,48,36],[36,10,49,16,"space"],[36,15,49,21],[36,18,49,24],[36,22,49,28],[37,8,50,12],[38,8,52,12,"children"],[38,16,52,20],[38,17,52,21,"push"],[38,21,52,25],[38,22,52,26,"child"],[38,27,52,31],[38,28,52,32],[39,6,53,8],[40,6,55,8],[40,10,55,12,"child"],[40,15,55,17],[40,20,55,22],[40,24,55,26],[40,26,55,28],[41,8,56,12],[41,12,56,16],[41,13,56,17,"error"],[41,18,56,22],[41,19,56,23],[41,58,56,62],[41,59,56,63],[42,6,57,8],[43,6,59,8],[43,13,59,15],[44,8,60,12,"type"],[44,12,60,16],[44,14,60,18],[44,26,60,30],[45,8,61,12,"loc"],[45,11,61,15],[45,13,61,17],[45,17,61,21],[45,18,61,22,"getLocationFromList"],[45,37,61,41],[45,38,61,42,"children"],[45,46,61,50],[45,47,61,51],[46,8,62,12,"children"],[46,16,62,20],[46,18,62,22,"children"],[47,6,63,8],[47,7,63,9],[48,4,64,4],[48,5,64,5],[49,4,65,4,"generate"],[49,12,65,12],[49,14,65,14],[49,23,65,14,"generate"],[49,32,65,23,"node"],[49,36,65,27],[49,38,65,29],[50,6,66,8],[50,10,66,12],[50,11,66,13,"children"],[50,19,66,21],[50,20,66,22,"node"],[50,24,66,26],[50,25,66,27],[51,4,67,4],[52,2,68,0],[52,3,68,1],[53,0,68,2]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCgB;KD+C;cEC;KFE"}},"type":"js/module"}]}