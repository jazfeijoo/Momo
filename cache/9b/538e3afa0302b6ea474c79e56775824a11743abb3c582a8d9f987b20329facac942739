{"dependencies":[{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":63,"index":63}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./environment/browser","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":64},"end":{"line":2,"column":112,"index":176}}],"key":"QaRxbiTri0rKv6sXYARasJiXIUI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n  var _browser = _$$_REQUIRE(_dependencyMap[1], \"./environment/browser\");\n  var Platform = {\n    /**\n     * Denotes the currently running platform.\n     * Can be one of ios, android, web.\n     */\n    OS: _reactNative.Platform.OS,\n    /**\n     * Returns the value with the matching platform.\n     * Object keys can be any of ios, android, native, web, default.\n     *\n     * @ios ios, native, default\n     * @android android, native, default\n     * @web web, default\n     */\n    select: _reactNative.Platform.select,\n    /**\n     * Denotes if the DOM API is available in the current environment.\n     * The DOM is not available in native React runtimes and Node.js.\n     */\n    isDOMAvailable: _browser.isDOMAvailable,\n    /**\n     * Denotes if the current environment can attach event listeners\n     * to the window. This will return false in native React\n     * runtimes and Node.js.\n     */\n    canUseEventListeners: _browser.canUseEventListeners,\n    /**\n     * Denotes if the current environment can inspect properties of the\n     * screen on which the current window is being rendered. This will\n     * return false in native React runtimes and Node.js.\n     */\n    canUseViewport: _browser.canUseViewport,\n    /**\n     * If the JavaScript is being executed in a remote JavaScript environment.\n     * When `true`, synchronous native invocations cannot be executed.\n     */\n    isAsyncDebugging: _browser.isAsyncDebugging\n  };\n  var _default = exports.default = Platform;\n});","lineCount":47,"map":[[6,2,1,0],[6,6,1,0,"_reactNative"],[6,18,1,0],[6,21,1,0,"_$$_REQUIRE"],[6,32,1,0],[6,33,1,0,"_dependencyMap"],[6,47,1,0],[7,2,2,0],[7,6,2,0,"_browser"],[7,14,2,0],[7,17,2,0,"_$$_REQUIRE"],[7,28,2,0],[7,29,2,0,"_dependencyMap"],[7,43,2,0],[8,2,3,0],[8,6,3,6,"Platform"],[8,14,3,14],[8,17,3,17],[9,4,4,4],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,4,8,4,"OS"],[13,6,8,6],[13,8,8,8,"ReactNativePlatform"],[13,29,8,27],[13,30,8,28,"OS"],[13,32,8,30],[14,4,9,4],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,4,17,4,"select"],[22,10,17,10],[22,12,17,12,"ReactNativePlatform"],[22,33,17,31],[22,34,17,32,"select"],[22,40,17,38],[23,4,18,4],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,4,22,4,"isDOMAvailable"],[27,18,22,18],[27,20,22,4,"isDOMAvailable"],[27,43,22,18],[28,4,23,4],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,4,28,4,"canUseEventListeners"],[33,24,28,24],[33,26,28,4,"canUseEventListeners"],[33,55,28,24],[34,4,29,4],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,4,34,4,"canUseViewport"],[39,18,34,18],[39,20,34,4,"canUseViewport"],[39,43,34,18],[40,4,35,4],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,4,39,4,"isAsyncDebugging"],[44,20,39,20],[44,22,39,4,"isAsyncDebugging"],[45,2,40,0],[45,3,40,1],[46,2,40,2],[46,6,40,2,"_default"],[46,14,40,2],[46,17,40,2,"exports"],[46,24,40,2],[46,25,40,2,"default"],[46,32,40,2],[46,35,41,15,"Platform"],[46,43,41,23],[47,0,41,23]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}