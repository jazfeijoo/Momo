{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":71,"column":0,"index":1767}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"color","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":26,"index":68}}],"key":"bdD+gAEUW+xKEtDiLacRxJcNAAs="}},{"name":"./themes/v2/DarkTheme","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":53,"index":123}}],"key":"kYrKopjNSxYjQcs4dJTUqMgqgHw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = overlay;\n  exports.isAnimatedValue = void 0;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[1], \"react-native\");\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"color\"));\n  var _DarkTheme = _$$_REQUIRE(_dependencyMap[3], \"./themes/v2/DarkTheme\");\n  var isAnimatedValue = exports.isAnimatedValue = function isAnimatedValue(it) {\n    return it instanceof _reactNative.Animated.Value;\n  };\n  function overlay(elevation) {\n    var _MD2DarkTheme$colors;\n    var surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (_MD2DarkTheme$colors = _DarkTheme.MD2DarkTheme.colors) == null ? void 0 : _MD2DarkTheme$colors.surface;\n    if (isAnimatedValue(elevation)) {\n      var inputRange = [0, 1, 2, 3, 8, 24];\n\n      // @ts-expect-error: TS doesn't seem to refine the type correctly\n      return elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (elevation) {\n          return calculateColor(surfaceColor, elevation);\n        })\n      });\n    }\n\n    // @ts-expect-error: TS doesn't seem to refine the type correctly\n    return calculateColor(surfaceColor, elevation);\n  }\n  function calculateColor(surfaceColor) {\n    var elevation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var overlayTransparency;\n    if (elevation >= 1 && elevation <= 24) {\n      overlayTransparency = elevationOverlayTransparency[elevation];\n    } else if (elevation > 24) {\n      overlayTransparency = elevationOverlayTransparency[24];\n    } else {\n      overlayTransparency = elevationOverlayTransparency[1];\n    }\n    return (0, _color.default)(surfaceColor).mix((0, _color.default)('white'), overlayTransparency * 0.01).hex();\n  }\n  var elevationOverlayTransparency = {\n    1: 5,\n    2: 7,\n    3: 8,\n    4: 9,\n    5: 10,\n    6: 11,\n    7: 11.5,\n    8: 12,\n    9: 12.5,\n    10: 13,\n    11: 13.5,\n    12: 14,\n    13: 14.25,\n    14: 14.5,\n    15: 14.75,\n    16: 15,\n    17: 15.12,\n    18: 15.24,\n    19: 15.36,\n    20: 15.48,\n    21: 15.6,\n    22: 15.72,\n    23: 15.84,\n    24: 16\n  };\n});","lineCount":70,"map":[[8,2,1,0],[8,6,1,0,"_reactNative"],[8,18,1,0],[8,21,1,0,"_$$_REQUIRE"],[8,32,1,0],[8,33,1,0,"_dependencyMap"],[8,47,1,0],[9,2,3,0],[9,6,3,0,"_color"],[9,12,3,0],[9,15,3,0,"_interopRequireDefault"],[9,37,3,0],[9,38,3,0,"_$$_REQUIRE"],[9,49,3,0],[9,50,3,0,"_dependencyMap"],[9,64,3,0],[10,2,5,0],[10,6,5,0,"_DarkTheme"],[10,16,5,0],[10,19,5,0,"_$$_REQUIRE"],[10,30,5,0],[10,31,5,0,"_dependencyMap"],[10,45,5,0],[11,2,7,7],[11,6,7,13,"isAnimatedValue"],[11,21,7,28],[11,24,7,28,"exports"],[11,31,7,28],[11,32,7,28,"isAnimatedValue"],[11,47,7,28],[11,50,7,31],[11,59,7,13,"isAnimatedValue"],[11,74,7,28,"isAnimatedValue"],[11,75,8,2,"it"],[11,77,8,71],[12,4,8,71],[12,11,9,27,"it"],[12,13,9,29],[12,25,9,41,"Animated"],[12,46,9,49],[12,47,9,50,"Value"],[12,52,9,55],[13,2,9,55],[14,2,11,15],[14,11,11,24,"overlay"],[14,18,11,31,"overlay"],[14,19,12,2,"elevation"],[14,28,12,14],[14,30,14,79],[15,4,14,79],[15,8,14,79,"_MD2DarkTheme$colors"],[15,28,14,79],[16,4,14,79],[16,8,13,2,"surfaceColor"],[16,20,13,22],[16,23,13,22,"arguments"],[16,32,13,22],[16,33,13,22,"length"],[16,39,13,22],[16,47,13,22,"arguments"],[16,56,13,22],[16,64,13,22,"undefined"],[16,73,13,22],[16,76,13,22,"arguments"],[16,85,13,22],[16,92,13,22,"_MD2DarkTheme$colors"],[16,112,13,22],[16,115,13,25,"MD2DarkTheme"],[16,138,13,37],[16,139,13,38,"colors"],[16,145,13,44],[16,166,13,25,"_MD2DarkTheme$colors"],[16,186,13,25],[16,187,13,46,"surface"],[16,194,13,53],[17,4,15,2],[17,8,15,6,"isAnimatedValue"],[17,23,15,21],[17,24,15,22,"elevation"],[17,33,15,31],[17,34,15,32],[17,36,15,34],[18,6,16,4],[18,10,16,10,"inputRange"],[18,20,16,20],[18,23,16,23],[18,24,16,24],[18,25,16,25],[18,27,16,27],[18,28,16,28],[18,30,16,30],[18,31,16,31],[18,33,16,33],[18,34,16,34],[18,36,16,36],[18,37,16,37],[18,39,16,39],[18,41,16,41],[18,42,16,42],[20,6,18,4],[21,6,19,4],[21,13,19,11,"elevation"],[21,22,19,20],[21,23,19,21,"interpolate"],[21,34,19,32],[21,35,19,33],[22,8,20,6,"inputRange"],[22,18,20,16],[22,20,20,6,"inputRange"],[22,30,20,16],[23,8,21,6,"outputRange"],[23,19,21,17],[23,21,21,19,"inputRange"],[23,31,21,29],[23,32,21,30,"map"],[23,35,21,33],[23,36,21,34],[23,46,21,35,"elevation"],[23,55,21,44],[23,57,21,49],[24,10,22,8],[24,17,22,15,"calculateColor"],[24,31,22,29],[24,32,22,30,"surfaceColor"],[24,44,22,42],[24,46,22,44,"elevation"],[24,55,22,53],[24,56,22,54],[25,8,23,6],[25,9,23,7],[26,6,24,4],[26,7,24,5],[26,8,24,6],[27,4,25,2],[29,4,27,2],[30,4,28,2],[30,11,28,9,"calculateColor"],[30,25,28,23],[30,26,28,24,"surfaceColor"],[30,38,28,36],[30,40,28,38,"elevation"],[30,49,28,47],[30,50,28,48],[31,2,29,0],[32,2,31,0],[32,11,31,9,"calculateColor"],[32,25,31,23,"calculateColor"],[32,26,31,24,"surfaceColor"],[32,38,31,44],[32,40,31,69],[33,4,31,69],[33,8,31,46,"elevation"],[33,17,31,63],[33,20,31,63,"arguments"],[33,29,31,63],[33,30,31,63,"length"],[33,36,31,63],[33,44,31,63,"arguments"],[33,53,31,63],[33,61,31,63,"undefined"],[33,70,31,63],[33,73,31,63,"arguments"],[33,82,31,63],[33,88,31,66],[33,89,31,67],[34,4,32,2],[34,8,32,6,"overlayTransparency"],[34,27,32,33],[35,4,33,2],[35,8,33,6,"elevation"],[35,17,33,15],[35,21,33,19],[35,22,33,20],[35,26,33,24,"elevation"],[35,35,33,33],[35,39,33,37],[35,41,33,39],[35,43,33,41],[36,6,34,4,"overlayTransparency"],[36,25,34,23],[36,28,34,26,"elevationOverlayTransparency"],[36,56,34,54],[36,57,34,55,"elevation"],[36,66,34,64],[36,67,34,65],[37,4,35,2],[37,5,35,3],[37,11,35,9],[37,15,35,13,"elevation"],[37,24,35,22],[37,27,35,25],[37,29,35,27],[37,31,35,29],[38,6,36,4,"overlayTransparency"],[38,25,36,23],[38,28,36,26,"elevationOverlayTransparency"],[38,56,36,54],[38,57,36,55],[38,59,36,57],[38,60,36,58],[39,4,37,2],[39,5,37,3],[39,11,37,9],[40,6,38,4,"overlayTransparency"],[40,25,38,23],[40,28,38,26,"elevationOverlayTransparency"],[40,56,38,54],[40,57,38,55],[40,58,38,56],[40,59,38,57],[41,4,39,2],[42,4,40,2],[42,11,40,9],[42,15,40,9,"color"],[42,29,40,14],[42,31,40,15,"surfaceColor"],[42,43,40,27],[42,44,40,28],[42,45,41,5,"mix"],[42,48,41,8],[42,49,41,9],[42,53,41,9,"color"],[42,67,41,14],[42,69,41,15],[42,76,41,22],[42,77,41,23],[42,79,41,25,"overlayTransparency"],[42,98,41,44],[42,101,41,47],[42,105,41,51],[42,106,41,52],[42,107,42,5,"hex"],[42,110,42,8],[42,111,42,9],[42,112,42,10],[43,2,43,0],[44,2,45,0],[44,6,45,6,"elevationOverlayTransparency"],[44,34,45,58],[44,37,45,61],[45,4,46,2],[45,5,46,3],[45,7,46,5],[45,8,46,6],[46,4,47,2],[46,5,47,3],[46,7,47,5],[46,8,47,6],[47,4,48,2],[47,5,48,3],[47,7,48,5],[47,8,48,6],[48,4,49,2],[48,5,49,3],[48,7,49,5],[48,8,49,6],[49,4,50,2],[49,5,50,3],[49,7,50,5],[49,9,50,7],[50,4,51,2],[50,5,51,3],[50,7,51,5],[50,9,51,7],[51,4,52,2],[51,5,52,3],[51,7,52,5],[51,11,52,9],[52,4,53,2],[52,5,53,3],[52,7,53,5],[52,9,53,7],[53,4,54,2],[53,5,54,3],[53,7,54,5],[53,11,54,9],[54,4,55,2],[54,6,55,4],[54,8,55,6],[54,10,55,8],[55,4,56,2],[55,6,56,4],[55,8,56,6],[55,12,56,10],[56,4,57,2],[56,6,57,4],[56,8,57,6],[56,10,57,8],[57,4,58,2],[57,6,58,4],[57,8,58,6],[57,13,58,11],[58,4,59,2],[58,6,59,4],[58,8,59,6],[58,12,59,10],[59,4,60,2],[59,6,60,4],[59,8,60,6],[59,13,60,11],[60,4,61,2],[60,6,61,4],[60,8,61,6],[60,10,61,8],[61,4,62,2],[61,6,62,4],[61,8,62,6],[61,13,62,11],[62,4,63,2],[62,6,63,4],[62,8,63,6],[62,13,63,11],[63,4,64,2],[63,6,64,4],[63,8,64,6],[63,13,64,11],[64,4,65,2],[64,6,65,4],[64,8,65,6],[64,13,65,11],[65,4,66,2],[65,6,66,4],[65,8,66,6],[65,12,66,10],[66,4,67,2],[66,6,67,4],[66,8,67,6],[66,13,67,11],[67,4,68,2],[67,6,68,4],[67,8,68,6],[67,13,68,11],[68,4,69,2],[68,6,69,4],[68,8,69,6],[69,2,70,0],[69,3,70,1],[70,0,70,2]],"functionMap":{"names":["<global>","isAnimatedValue","overlay","inputRange.map$argument_0","calculateColor"],"mappings":"AAA;+BCM;uDDE;eEE;kCCU;ODE;CFM;AIE;CJY"}},"type":"js/module"}]}