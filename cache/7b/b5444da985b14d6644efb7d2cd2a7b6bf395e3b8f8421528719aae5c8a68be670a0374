{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":131,"column":0,"index":4368}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":131,"column":0,"index":4368}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":131,"column":0,"index":4368}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../EventEmitter/RCTDeviceEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":215},"end":{"line":11,"column":74,"index":289}}],"key":"8/8s2qHajvAK0ZSPYhrCXcF24uY="}},{"name":"../vendor/emitter/EventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":290},"end":{"line":14,"column":40,"index":379}}],"key":"fgDwi/IrVIcBdLV47qHthWsoTIw="}},{"name":"./NativeDeviceInfo","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":380},"end":{"line":19,"column":28,"index":514}}],"key":"8i4Oz6uHBBZAInr+k+x9cTUYfm8="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":515},"end":{"line":20,"column":34,"index":549}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../EventEmitter/RCTDeviceEventEmitter\"));\n  var _EventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../vendor/emitter/EventEmitter\"));\n  var _NativeDeviceInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./NativeDeviceInfo\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"invariant\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var eventEmitter = new _EventEmitter.default();\n  var dimensionsInitialized = false;\n  var dimensions;\n  var Dimensions = /*#__PURE__*/function () {\n    function Dimensions() {\n      (0, _classCallCheck2.default)(this, Dimensions);\n    }\n    (0, _createClass2.default)(Dimensions, null, [{\n      key: \"get\",\n      value:\n      /**\n       * NOTE: `useWindowDimensions` is the preferred API for React components.\n       *\n       * Initial dimensions are set before `runApplication` is called so they should\n       * be available before any other require's are run, but may be updated later.\n       *\n       * Note: Although dimensions are available immediately, they may change (e.g\n       * due to device rotation) so any rendering logic or styles that depend on\n       * these constants should try to call this function on every render, rather\n       * than caching the value (for example, using inline styles rather than\n       * setting a value in a `StyleSheet`).\n       *\n       * Example: `const {height, width} = Dimensions.get('window');`\n       *\n       * @param {string} dim Name of dimension as defined when calling `set`.\n       * @returns {DisplayMetrics? | DisplayMetricsAndroid?} Value for the dimension.\n       */\n      function get(dim) {\n        (0, _invariant.default)(dimensions[dim], 'No dimension set for key ' + dim);\n        return dimensions[dim];\n      }\n\n      /**\n       * This should only be called from native code by sending the\n       * didUpdateDimensions event.\n       *\n       * @param {DimensionsPayload} dims Simple string-keyed object of dimensions to set\n       */\n    }, {\n      key: \"set\",\n      value: function set(dims) {\n        // We calculate the window dimensions in JS so that we don't encounter loss of\n        // precision in transferring the dimensions (which could be non-integers) over\n        // the bridge.\n        var screen = dims.screen,\n          window = dims.window;\n        var windowPhysicalPixels = dims.windowPhysicalPixels;\n        if (windowPhysicalPixels) {\n          window = {\n            width: windowPhysicalPixels.width / windowPhysicalPixels.scale,\n            height: windowPhysicalPixels.height / windowPhysicalPixels.scale,\n            scale: windowPhysicalPixels.scale,\n            fontScale: windowPhysicalPixels.fontScale\n          };\n        }\n        var screenPhysicalPixels = dims.screenPhysicalPixels;\n        if (screenPhysicalPixels) {\n          screen = {\n            width: screenPhysicalPixels.width / screenPhysicalPixels.scale,\n            height: screenPhysicalPixels.height / screenPhysicalPixels.scale,\n            scale: screenPhysicalPixels.scale,\n            fontScale: screenPhysicalPixels.fontScale\n          };\n        } else if (screen == null) {\n          screen = window;\n        }\n        dimensions = {\n          window: window,\n          screen: screen\n        };\n        if (dimensionsInitialized) {\n          // Don't fire 'change' the first time the dimensions are set.\n          eventEmitter.emit('change', dimensions);\n        } else {\n          dimensionsInitialized = true;\n        }\n      }\n\n      /**\n       * Add an event handler. Supported events:\n       *\n       * - `change`: Fires when a property within the `Dimensions` object changes. The argument\n       *   to the event handler is an object with `window` and `screen` properties whose values\n       *   are the same as the return values of `Dimensions.get('window')` and\n       *   `Dimensions.get('screen')`, respectively.\n       */\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(type, handler) {\n        (0, _invariant.default)(type === 'change', 'Trying to subscribe to unknown event: \"%s\"', type);\n        return eventEmitter.addListener(type, handler);\n      }\n    }]);\n    return Dimensions;\n  }();\n  var initialDims = global.nativeExtensions && global.nativeExtensions.DeviceInfo && global.nativeExtensions.DeviceInfo.Dimensions;\n  if (!initialDims) {\n    // Subscribe before calling getConstants to make sure we don't miss any updates in between.\n    _RCTDeviceEventEmitter.default.addListener('didUpdateDimensions', function (update) {\n      Dimensions.set(update);\n    });\n    initialDims = _NativeDeviceInfo.default.getConstants().Dimensions;\n  }\n  Dimensions.set(initialDims);\n  var _default = exports.default = Dimensions;\n});","lineCount":128,"map":[[9,2,11,0],[9,6,11,0,"_RCTDeviceEventEmitter"],[9,28,11,0],[9,31,11,0,"_interopRequireDefault"],[9,53,11,0],[9,54,11,0,"_$$_REQUIRE"],[9,65,11,0],[9,66,11,0,"_dependencyMap"],[9,80,11,0],[10,2,12,0],[10,6,12,0,"_EventEmitter"],[10,19,12,0],[10,22,12,0,"_interopRequireDefault"],[10,44,12,0],[10,45,12,0,"_$$_REQUIRE"],[10,56,12,0],[10,57,12,0,"_dependencyMap"],[10,71,12,0],[11,2,15,0],[11,6,15,0,"_NativeDeviceInfo"],[11,23,15,0],[11,26,15,0,"_interopRequireDefault"],[11,48,15,0],[11,49,15,0,"_$$_REQUIRE"],[11,60,15,0],[11,61,15,0,"_dependencyMap"],[11,75,15,0],[12,2,20,0],[12,6,20,0,"_invariant"],[12,16,20,0],[12,19,20,0,"_interopRequireDefault"],[12,41,20,0],[12,42,20,0,"_$$_REQUIRE"],[12,53,20,0],[12,54,20,0,"_dependencyMap"],[12,68,20,0],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,0,7,0],[20,0,8,0],[21,0,9,0],[23,2,22,0],[23,6,22,6,"eventEmitter"],[23,18,22,18],[23,21,22,21],[23,25,22,25,"EventEmitter"],[23,46,22,37],[23,47,24,3],[23,48,24,4],[24,2,25,0],[24,6,25,4,"dimensionsInitialized"],[24,27,25,25],[24,30,25,28],[24,35,25,33],[25,2,26,0],[25,6,26,4,"dimensions"],[25,16,26,33],[26,2,26,34],[26,6,28,6,"Dimensions"],[26,16,28,16],[27,4,28,16],[27,13,28,16,"Dimensions"],[27,24,28,16],[28,6,28,16],[28,10,28,16,"_classCallCheck2"],[28,26,28,16],[28,27,28,16,"default"],[28,34,28,16],[28,42,28,16,"Dimensions"],[28,52,28,16],[29,4,28,16],[30,4,28,16],[30,8,28,16,"_createClass2"],[30,21,28,16],[30,22,28,16,"default"],[30,29,28,16],[30,31,28,16,"Dimensions"],[30,41,28,16],[31,6,28,16,"key"],[31,9,28,16],[32,6,28,16,"value"],[32,11,28,16],[33,6,29,2],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,6,46,2],[50,15,46,2,"get"],[50,19,46,13,"dim"],[50,22,46,24],[50,24,46,66],[51,8,47,4],[51,12,47,4,"invariant"],[51,30,47,13],[51,32,47,14,"dimensions"],[51,42,47,24],[51,43,47,25,"dim"],[51,46,47,28],[51,47,47,29],[51,49,47,31],[51,76,47,58],[51,79,47,61,"dim"],[51,82,47,64],[51,83,47,65],[52,8,48,4],[52,15,48,11,"dimensions"],[52,25,48,21],[52,26,48,22,"dim"],[52,29,48,25],[52,30,48,26],[53,6,49,2],[55,6,51,2],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,0,55,0],[60,0,56,0],[61,4,51,2],[62,6,51,2,"key"],[62,9,51,2],[63,6,51,2,"value"],[63,11,51,2],[63,13,57,2],[63,22,57,2,"set"],[63,26,57,13,"dims"],[63,30,57,47],[63,32,57,55],[64,8,58,4],[65,8,59,4],[66,8,60,4],[67,8,61,4],[67,12,61,9,"screen"],[67,18,61,15],[67,21,61,27,"dims"],[67,25,61,31],[67,26,61,9,"screen"],[67,32,61,15],[68,10,61,17,"window"],[68,16,61,23],[68,19,61,27,"dims"],[68,23,61,31],[68,24,61,17,"window"],[68,30,61,23],[69,8,62,4],[69,12,62,11,"windowPhysicalPixels"],[69,32,62,31],[69,35,62,35,"dims"],[69,39,62,39],[69,40,62,11,"windowPhysicalPixels"],[69,60,62,31],[70,8,63,4],[70,12,63,8,"windowPhysicalPixels"],[70,32,63,28],[70,34,63,30],[71,10,64,6,"window"],[71,16,64,12],[71,19,64,15],[72,12,65,8,"width"],[72,17,65,13],[72,19,65,15,"windowPhysicalPixels"],[72,39,65,35],[72,40,65,36,"width"],[72,45,65,41],[72,48,65,44,"windowPhysicalPixels"],[72,68,65,64],[72,69,65,65,"scale"],[72,74,65,70],[73,12,66,8,"height"],[73,18,66,14],[73,20,66,16,"windowPhysicalPixels"],[73,40,66,36],[73,41,66,37,"height"],[73,47,66,43],[73,50,66,46,"windowPhysicalPixels"],[73,70,66,66],[73,71,66,67,"scale"],[73,76,66,72],[74,12,67,8,"scale"],[74,17,67,13],[74,19,67,15,"windowPhysicalPixels"],[74,39,67,35],[74,40,67,36,"scale"],[74,45,67,41],[75,12,68,8,"fontScale"],[75,21,68,17],[75,23,68,19,"windowPhysicalPixels"],[75,43,68,39],[75,44,68,40,"fontScale"],[76,10,69,6],[76,11,69,7],[77,8,70,4],[78,8,71,4],[78,12,71,11,"screenPhysicalPixels"],[78,32,71,31],[78,35,71,35,"dims"],[78,39,71,39],[78,40,71,11,"screenPhysicalPixels"],[78,60,71,31],[79,8,72,4],[79,12,72,8,"screenPhysicalPixels"],[79,32,72,28],[79,34,72,30],[80,10,73,6,"screen"],[80,16,73,12],[80,19,73,15],[81,12,74,8,"width"],[81,17,74,13],[81,19,74,15,"screenPhysicalPixels"],[81,39,74,35],[81,40,74,36,"width"],[81,45,74,41],[81,48,74,44,"screenPhysicalPixels"],[81,68,74,64],[81,69,74,65,"scale"],[81,74,74,70],[82,12,75,8,"height"],[82,18,75,14],[82,20,75,16,"screenPhysicalPixels"],[82,40,75,36],[82,41,75,37,"height"],[82,47,75,43],[82,50,75,46,"screenPhysicalPixels"],[82,70,75,66],[82,71,75,67,"scale"],[82,76,75,72],[83,12,76,8,"scale"],[83,17,76,13],[83,19,76,15,"screenPhysicalPixels"],[83,39,76,35],[83,40,76,36,"scale"],[83,45,76,41],[84,12,77,8,"fontScale"],[84,21,77,17],[84,23,77,19,"screenPhysicalPixels"],[84,43,77,39],[84,44,77,40,"fontScale"],[85,10,78,6],[85,11,78,7],[86,8,79,4],[86,9,79,5],[86,15,79,11],[86,19,79,15,"screen"],[86,25,79,21],[86,29,79,25],[86,33,79,29],[86,35,79,31],[87,10,80,6,"screen"],[87,16,80,12],[87,19,80,15,"window"],[87,25,80,21],[88,8,81,4],[89,8,83,4,"dimensions"],[89,18,83,14],[89,21,83,17],[90,10,83,18,"window"],[90,16,83,24],[90,18,83,18,"window"],[90,24,83,24],[91,10,83,26,"screen"],[91,16,83,32],[91,18,83,26,"screen"],[92,8,83,32],[92,9,83,33],[93,8,84,4],[93,12,84,8,"dimensionsInitialized"],[93,33,84,29],[93,35,84,31],[94,10,85,6],[95,10,86,6,"eventEmitter"],[95,22,86,18],[95,23,86,19,"emit"],[95,27,86,23],[95,28,86,24],[95,36,86,32],[95,38,86,34,"dimensions"],[95,48,86,44],[95,49,86,45],[96,8,87,4],[96,9,87,5],[96,15,87,11],[97,10,88,6,"dimensionsInitialized"],[97,31,88,27],[97,34,88,30],[97,38,88,34],[98,8,89,4],[99,6,90,2],[101,6,92,2],[102,0,93,0],[103,0,94,0],[104,0,95,0],[105,0,96,0],[106,0,97,0],[107,0,98,0],[108,0,99,0],[109,4,92,2],[110,6,92,2,"key"],[110,9,92,2],[111,6,92,2,"value"],[111,11,92,2],[111,13,100,2],[111,22,100,2,"addEventListener"],[111,39,101,4,"type"],[111,43,101,18],[111,45,102,4,"handler"],[111,52,102,21],[111,54,103,23],[112,8,104,4],[112,12,104,4,"invariant"],[112,30,104,13],[112,32,105,6,"type"],[112,36,105,10],[112,41,105,15],[112,49,105,23],[112,51,106,6],[112,95,106,50],[112,97,107,6,"type"],[112,101,108,4],[112,102,108,5],[113,8,109,4],[113,15,109,11,"eventEmitter"],[113,27,109,23],[113,28,109,24,"addListener"],[113,39,109,35],[113,40,109,36,"type"],[113,44,109,40],[113,46,109,42,"handler"],[113,53,109,49],[113,54,109,50],[114,6,110,2],[115,4,110,3],[116,4,110,3],[116,11,110,3,"Dimensions"],[116,21,110,3],[117,2,110,3],[118,2,113,0],[118,6,113,4,"initialDims"],[118,17,113,46],[118,20,114,2,"global"],[118,26,114,8],[118,27,114,9,"nativeExtensions"],[118,43,114,25],[118,47,115,2,"global"],[118,53,115,8],[118,54,115,9,"nativeExtensions"],[118,70,115,25],[118,71,115,26,"DeviceInfo"],[118,81,115,36],[118,85,116,2,"global"],[118,91,116,8],[118,92,116,9,"nativeExtensions"],[118,108,116,25],[118,109,116,26,"DeviceInfo"],[118,119,116,36],[118,120,116,37,"Dimensions"],[118,130,116,47],[119,2,117,0],[119,6,117,4],[119,7,117,5,"initialDims"],[119,18,117,16],[119,20,117,18],[120,4,118,2],[121,4,119,2,"RCTDeviceEventEmitter"],[121,34,119,23],[121,35,119,24,"addListener"],[121,46,119,35],[121,47,120,4],[121,68,120,25],[121,70,121,4],[121,80,121,5,"update"],[121,86,121,30],[121,88,121,35],[122,6,122,6,"Dimensions"],[122,16,122,16],[122,17,122,17,"set"],[122,20,122,20],[122,21,122,21,"update"],[122,27,122,27],[122,28,122,28],[123,4,123,4],[123,5,124,2],[123,6,124,3],[124,4,125,2,"initialDims"],[124,15,125,13],[124,18,125,16,"NativeDeviceInfo"],[124,43,125,32],[124,44,125,33,"getConstants"],[124,56,125,45],[124,57,125,46],[124,58,125,47],[124,59,125,48,"Dimensions"],[124,69,125,58],[125,2,126,0],[126,2,128,0,"Dimensions"],[126,12,128,10],[126,13,128,11,"set"],[126,16,128,14],[126,17,128,15,"initialDims"],[126,28,128,26],[126,29,128,27],[127,2,128,28],[127,6,128,28,"_default"],[127,14,128,28],[127,17,128,28,"exports"],[127,24,128,28],[127,25,128,28,"default"],[127,32,128,28],[127,35,130,15,"Dimensions"],[127,45,130,25],[128,0,130,25]],"functionMap":{"names":["<global>","Dimensions","get","set","addEventListener","RCTDeviceEventEmitter.addListener$argument_1"],"mappings":"AAA;AC2B;ECkB;GDG;EEQ;GFiC;EGU;GHU;CDC;IKU;KLE"}},"type":"js/module"}]}