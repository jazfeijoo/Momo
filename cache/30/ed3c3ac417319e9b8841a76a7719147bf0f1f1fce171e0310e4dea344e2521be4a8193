{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":37,"index":37}}],"key":"llq4nuOBKCCL4A7IFpRswh14toM="}},{"name":"./Raw","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":14,"index":58},"end":{"line":2,"column":30,"index":74}}],"key":"CRtWRCAsJqkolcO7tw5z7Pwo7Vw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n  var rawMode = _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode;\n  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.leftCurlyBracket, true);\n  }\n  function consumePrelude() {\n    var prelude = this.SelectorList();\n    if (prelude.type !== 'Raw' && this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET) {\n      this.error();\n    }\n    return prelude;\n  }\n  module.exports = {\n    name: 'Rule',\n    structure: {\n      prelude: ['SelectorList', 'Raw'],\n      block: ['Block']\n    },\n    parse: function parse() {\n      var startToken = this.scanner.tokenIndex;\n      var startOffset = this.scanner.tokenStart;\n      var prelude;\n      var block;\n      if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n      } else {\n        prelude = consumeRaw.call(this, startToken);\n      }\n      block = this.Block(true);\n      return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.scanner.tokenStart),\n        prelude: prelude,\n        block: block\n      };\n    },\n    generate: function generate(node) {\n      this.node(node.prelude);\n      this.node(node.block);\n    },\n    walkContext: 'rule'\n  };\n});","lineCount":45,"map":[[2,2,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,25,1,18,"_dependencyMap"],[2,39,1,18],[2,61,1,36],[2,62,1,37],[2,63,1,38,"TYPE"],[2,67,1,42],[3,2,2,0],[3,6,2,4,"rawMode"],[3,13,2,11],[3,16,2,14,"require"],[3,27,2,21],[3,28,2,21,"_dependencyMap"],[3,42,2,21],[3,54,2,29],[3,55,2,30],[3,56,2,31,"mode"],[3,60,2,35],[4,2,4,0],[4,6,4,4,"LEFTCURLYBRACKET"],[4,22,4,20],[4,25,4,23,"TYPE"],[4,29,4,27],[4,30,4,28,"LeftCurlyBracket"],[4,46,4,44],[5,2,6,0],[5,11,6,9,"consumeRaw"],[5,21,6,19,"consumeRaw"],[5,22,6,20,"startToken"],[5,32,6,30],[5,34,6,32],[6,4,7,4],[6,11,7,11],[6,15,7,15],[6,16,7,16,"Raw"],[6,19,7,19],[6,20,7,20,"startToken"],[6,30,7,30],[6,32,7,32,"rawMode"],[6,39,7,39],[6,40,7,40,"leftCurlyBracket"],[6,56,7,56],[6,58,7,58],[6,62,7,62],[6,63,7,63],[7,2,8,0],[8,2,10,0],[8,11,10,9,"consumePrelude"],[8,25,10,23,"consumePrelude"],[8,26,10,23],[8,28,10,26],[9,4,11,4],[9,8,11,8,"prelude"],[9,15,11,15],[9,18,11,18],[9,22,11,22],[9,23,11,23,"SelectorList"],[9,35,11,35],[9,36,11,36],[9,37,11,37],[10,4,13,4],[10,8,13,8,"prelude"],[10,15,13,15],[10,16,13,16,"type"],[10,20,13,20],[10,25,13,25],[10,30,13,30],[10,34,14,8],[10,38,14,12],[10,39,14,13,"scanner"],[10,46,14,20],[10,47,14,21,"eof"],[10,50,14,24],[10,55,14,29],[10,60,14,34],[10,64,15,8],[10,68,15,12],[10,69,15,13,"scanner"],[10,76,15,20],[10,77,15,21,"tokenType"],[10,86,15,30],[10,91,15,35,"LEFTCURLYBRACKET"],[10,107,15,51],[10,109,15,53],[11,6,16,8],[11,10,16,12],[11,11,16,13,"error"],[11,16,16,18],[11,17,16,19],[11,18,16,20],[12,4,17,4],[13,4,19,4],[13,11,19,11,"prelude"],[13,18,19,18],[14,2,20,0],[15,2,22,0,"module"],[15,8,22,6],[15,9,22,7,"exports"],[15,16,22,14],[15,19,22,17],[16,4,23,4,"name"],[16,8,23,8],[16,10,23,10],[16,16,23,16],[17,4,24,4,"structure"],[17,13,24,13],[17,15,24,15],[18,6,25,8,"prelude"],[18,13,25,15],[18,15,25,17],[18,16,25,18],[18,30,25,32],[18,32,25,34],[18,37,25,39],[18,38,25,40],[19,6,26,8,"block"],[19,11,26,13],[19,13,26,15],[19,14,26,16],[19,21,26,23],[20,4,27,4],[20,5,27,5],[21,4,28,4,"parse"],[21,9,28,9],[21,11,28,11],[21,20,28,11,"parse"],[21,26,28,11],[21,28,28,22],[22,6,29,8],[22,10,29,12,"startToken"],[22,20,29,22],[22,23,29,25],[22,27,29,29],[22,28,29,30,"scanner"],[22,35,29,37],[22,36,29,38,"tokenIndex"],[22,46,29,48],[23,6,30,8],[23,10,30,12,"startOffset"],[23,21,30,23],[23,24,30,26],[23,28,30,30],[23,29,30,31,"scanner"],[23,36,30,38],[23,37,30,39,"tokenStart"],[23,47,30,49],[24,6,31,8],[24,10,31,12,"prelude"],[24,17,31,19],[25,6,32,8],[25,10,32,12,"block"],[25,15,32,17],[26,6,34,8],[26,10,34,12],[26,14,34,16],[26,15,34,17,"parseRulePrelude"],[26,31,34,33],[26,33,34,35],[27,8,35,12,"prelude"],[27,15,35,19],[27,18,35,22],[27,22,35,26],[27,23,35,27,"parseWithFallback"],[27,40,35,44],[27,41,35,45,"consumePrelude"],[27,55,35,59],[27,57,35,61,"consumeRaw"],[27,67,35,71],[27,68,35,72],[28,6,36,8],[28,7,36,9],[28,13,36,15],[29,8,37,12,"prelude"],[29,15,37,19],[29,18,37,22,"consumeRaw"],[29,28,37,32],[29,29,37,33,"call"],[29,33,37,37],[29,34,37,38],[29,38,37,42],[29,40,37,44,"startToken"],[29,50,37,54],[29,51,37,55],[30,6,38,8],[31,6,40,8,"block"],[31,11,40,13],[31,14,40,16],[31,18,40,20],[31,19,40,21,"Block"],[31,24,40,26],[31,25,40,27],[31,29,40,31],[31,30,40,32],[32,6,42,8],[32,13,42,15],[33,8,43,12,"type"],[33,12,43,16],[33,14,43,18],[33,20,43,24],[34,8,44,12,"loc"],[34,11,44,15],[34,13,44,17],[34,17,44,21],[34,18,44,22,"getLocation"],[34,29,44,33],[34,30,44,34,"startOffset"],[34,41,44,45],[34,43,44,47],[34,47,44,51],[34,48,44,52,"scanner"],[34,55,44,59],[34,56,44,60,"tokenStart"],[34,66,44,70],[34,67,44,71],[35,8,45,12,"prelude"],[35,15,45,19],[35,17,45,21,"prelude"],[35,24,45,28],[36,8,46,12,"block"],[36,13,46,17],[36,15,46,19,"block"],[37,6,47,8],[37,7,47,9],[38,4,48,4],[38,5,48,5],[39,4,49,4,"generate"],[39,12,49,12],[39,14,49,14],[39,23,49,14,"generate"],[39,32,49,23,"node"],[39,36,49,27],[39,38,49,29],[40,6,50,8],[40,10,50,12],[40,11,50,13,"node"],[40,15,50,17],[40,16,50,18,"node"],[40,20,50,22],[40,21,50,23,"prelude"],[40,28,50,30],[40,29,50,31],[41,6,51,8],[41,10,51,12],[41,11,51,13,"node"],[41,15,51,17],[41,16,51,18,"node"],[41,20,51,22],[41,21,51,23,"block"],[41,26,51,28],[41,27,51,29],[42,4,52,4],[42,5,52,5],[43,4,53,4,"walkContext"],[43,15,53,15],[43,17,53,17],[44,2,54,0],[44,3,54,1],[45,0,54,2]],"functionMap":{"names":["<global>","consumeRaw","consumePrelude","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACK;CDE;AEE;CFU;WGQ;KHoB;cIC;KJG"}},"type":"js/module"}]}