{"dependencies":[{"name":"./adopt-buffer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":43,"index":43}}],"key":"H9d511E81tFIydedK0BxRghZM8I="}},{"name":"../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":12,"index":57},"end":{"line":2,"column":35,"index":80}}],"key":"jdHcfLp+ZWoVoG/X76x8Q2Emsc0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var adoptBuffer = _$$_REQUIRE(_dependencyMap[0], \"./adopt-buffer\");\n  var isBOM = _$$_REQUIRE(_dependencyMap[1], \"../tokenizer\").isBOM;\n  var N = 10;\n  var F = 12;\n  var R = 13;\n  function computeLinesAndColumns(host, source) {\n    var sourceLength = source.length;\n    var lines = adoptBuffer(host.lines, sourceLength); // +1\n    var line = host.startLine;\n    var columns = adoptBuffer(host.columns, sourceLength);\n    var column = host.startColumn;\n    var startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\n    for (var i = startOffset; i < sourceLength; i++) {\n      // -1\n      var code = source.charCodeAt(i);\n      lines[i] = line;\n      columns[i] = column++;\n      if (code === N || code === R || code === F) {\n        if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\n          i++;\n          lines[i] = line;\n          columns[i] = column;\n        }\n        line++;\n        column = 1;\n      }\n    }\n    lines[i] = line;\n    columns[i] = column;\n    host.lines = lines;\n    host.columns = columns;\n  }\n  var OffsetToLocation = function OffsetToLocation() {\n    this.lines = null;\n    this.columns = null;\n    this.linesAndColumnsComputed = false;\n  };\n  OffsetToLocation.prototype = {\n    setSource: function setSource(source, startOffset, startLine, startColumn) {\n      this.source = source;\n      this.startOffset = typeof startOffset === 'undefined' ? 0 : startOffset;\n      this.startLine = typeof startLine === 'undefined' ? 1 : startLine;\n      this.startColumn = typeof startColumn === 'undefined' ? 1 : startColumn;\n      this.linesAndColumnsComputed = false;\n    },\n    ensureLinesAndColumnsComputed: function ensureLinesAndColumnsComputed() {\n      if (!this.linesAndColumnsComputed) {\n        computeLinesAndColumns(this, this.source);\n        this.linesAndColumnsComputed = true;\n      }\n    },\n    getLocation: function getLocation(offset, filename) {\n      this.ensureLinesAndColumnsComputed();\n      return {\n        source: filename,\n        offset: this.startOffset + offset,\n        line: this.lines[offset],\n        column: this.columns[offset]\n      };\n    },\n    getLocationRange: function getLocationRange(start, end, filename) {\n      this.ensureLinesAndColumnsComputed();\n      return {\n        source: filename,\n        start: {\n          offset: this.startOffset + start,\n          line: this.lines[start],\n          column: this.columns[start]\n        },\n        end: {\n          offset: this.startOffset + end,\n          line: this.lines[end],\n          column: this.columns[end]\n        }\n      };\n    }\n  };\n  module.exports = OffsetToLocation;\n});","lineCount":80,"map":[[2,2,1,0],[2,6,1,4,"adoptBuffer"],[2,17,1,15],[2,20,1,18,"require"],[2,31,1,25],[2,32,1,25,"_dependencyMap"],[2,46,1,25],[2,67,1,42],[2,68,1,43],[3,2,2,0],[3,6,2,4,"isBOM"],[3,11,2,9],[3,14,2,12,"require"],[3,25,2,19],[3,26,2,19,"_dependencyMap"],[3,40,2,19],[3,59,2,34],[3,60,2,35],[3,61,2,36,"isBOM"],[3,66,2,41],[4,2,4,0],[4,6,4,4,"N"],[4,7,4,5],[4,10,4,8],[4,12,4,10],[5,2,5,0],[5,6,5,4,"F"],[5,7,5,5],[5,10,5,8],[5,12,5,10],[6,2,6,0],[6,6,6,4,"R"],[6,7,6,5],[6,10,6,8],[6,12,6,10],[7,2,8,0],[7,11,8,9,"computeLinesAndColumns"],[7,33,8,31,"computeLinesAndColumns"],[7,34,8,32,"host"],[7,38,8,36],[7,40,8,38,"source"],[7,46,8,44],[7,48,8,46],[8,4,9,4],[8,8,9,8,"sourceLength"],[8,20,9,20],[8,23,9,23,"source"],[8,29,9,29],[8,30,9,30,"length"],[8,36,9,36],[9,4,10,4],[9,8,10,8,"lines"],[9,13,10,13],[9,16,10,16,"adoptBuffer"],[9,27,10,27],[9,28,10,28,"host"],[9,32,10,32],[9,33,10,33,"lines"],[9,38,10,38],[9,40,10,40,"sourceLength"],[9,52,10,52],[9,53,10,53],[9,54,10,54],[9,55,10,55],[10,4,11,4],[10,8,11,8,"line"],[10,12,11,12],[10,15,11,15,"host"],[10,19,11,19],[10,20,11,20,"startLine"],[10,29,11,29],[11,4,12,4],[11,8,12,8,"columns"],[11,15,12,15],[11,18,12,18,"adoptBuffer"],[11,29,12,29],[11,30,12,30,"host"],[11,34,12,34],[11,35,12,35,"columns"],[11,42,12,42],[11,44,12,44,"sourceLength"],[11,56,12,56],[11,57,12,57],[12,4,13,4],[12,8,13,8,"column"],[12,14,13,14],[12,17,13,17,"host"],[12,21,13,21],[12,22,13,22,"startColumn"],[12,33,13,33],[13,4,14,4],[13,8,14,8,"startOffset"],[13,19,14,19],[13,22,14,22,"source"],[13,28,14,28],[13,29,14,29,"length"],[13,35,14,35],[13,38,14,38],[13,39,14,39],[13,42,14,42,"isBOM"],[13,47,14,47],[13,48,14,48,"source"],[13,54,14,54],[13,55,14,55,"charCodeAt"],[13,65,14,65],[13,66,14,66],[13,67,14,67],[13,68,14,68],[13,69,14,69],[13,72,14,72],[13,73,14,73],[14,4,16,4],[14,9,16,9],[14,13,16,13,"i"],[14,14,16,14],[14,17,16,17,"startOffset"],[14,28,16,28],[14,30,16,30,"i"],[14,31,16,31],[14,34,16,34,"sourceLength"],[14,46,16,46],[14,48,16,48,"i"],[14,49,16,49],[14,51,16,51],[14,53,16,53],[15,6,16,55],[16,6,17,8],[16,10,17,12,"code"],[16,14,17,16],[16,17,17,19,"source"],[16,23,17,25],[16,24,17,26,"charCodeAt"],[16,34,17,36],[16,35,17,37,"i"],[16,36,17,38],[16,37,17,39],[17,6,19,8,"lines"],[17,11,19,13],[17,12,19,14,"i"],[17,13,19,15],[17,14,19,16],[17,17,19,19,"line"],[17,21,19,23],[18,6,20,8,"columns"],[18,13,20,15],[18,14,20,16,"i"],[18,15,20,17],[18,16,20,18],[18,19,20,21,"column"],[18,25,20,27],[18,27,20,29],[19,6,22,8],[19,10,22,12,"code"],[19,14,22,16],[19,19,22,21,"N"],[19,20,22,22],[19,24,22,26,"code"],[19,28,22,30],[19,33,22,35,"R"],[19,34,22,36],[19,38,22,40,"code"],[19,42,22,44],[19,47,22,49,"F"],[19,48,22,50],[19,50,22,52],[20,8,23,12],[20,12,23,16,"code"],[20,16,23,20],[20,21,23,25,"R"],[20,22,23,26],[20,26,23,30,"i"],[20,27,23,31],[20,30,23,34],[20,31,23,35],[20,34,23,38,"sourceLength"],[20,46,23,50],[20,50,23,54,"source"],[20,56,23,60],[20,57,23,61,"charCodeAt"],[20,67,23,71],[20,68,23,72,"i"],[20,69,23,73],[20,72,23,76],[20,73,23,77],[20,74,23,78],[20,79,23,83,"N"],[20,80,23,84],[20,82,23,86],[21,10,24,16,"i"],[21,11,24,17],[21,13,24,19],[22,10,25,16,"lines"],[22,15,25,21],[22,16,25,22,"i"],[22,17,25,23],[22,18,25,24],[22,21,25,27,"line"],[22,25,25,31],[23,10,26,16,"columns"],[23,17,26,23],[23,18,26,24,"i"],[23,19,26,25],[23,20,26,26],[23,23,26,29,"column"],[23,29,26,35],[24,8,27,12],[25,8,29,12,"line"],[25,12,29,16],[25,14,29,18],[26,8,30,12,"column"],[26,14,30,18],[26,17,30,21],[26,18,30,22],[27,6,31,8],[28,4,32,4],[29,4,34,4,"lines"],[29,9,34,9],[29,10,34,10,"i"],[29,11,34,11],[29,12,34,12],[29,15,34,15,"line"],[29,19,34,19],[30,4,35,4,"columns"],[30,11,35,11],[30,12,35,12,"i"],[30,13,35,13],[30,14,35,14],[30,17,35,17,"column"],[30,23,35,23],[31,4,37,4,"host"],[31,8,37,8],[31,9,37,9,"lines"],[31,14,37,14],[31,17,37,17,"lines"],[31,22,37,22],[32,4,38,4,"host"],[32,8,38,8],[32,9,38,9,"columns"],[32,16,38,16],[32,19,38,19,"columns"],[32,26,38,26],[33,2,39,0],[34,2,41,0],[34,6,41,4,"OffsetToLocation"],[34,22,41,20],[34,25,41,23],[34,34,41,4,"OffsetToLocation"],[34,50,41,20,"OffsetToLocation"],[34,51,41,20],[34,53,41,34],[35,4,42,4],[35,8,42,8],[35,9,42,9,"lines"],[35,14,42,14],[35,17,42,17],[35,21,42,21],[36,4,43,4],[36,8,43,8],[36,9,43,9,"columns"],[36,16,43,16],[36,19,43,19],[36,23,43,23],[37,4,44,4],[37,8,44,8],[37,9,44,9,"linesAndColumnsComputed"],[37,32,44,32],[37,35,44,35],[37,40,44,40],[38,2,45,0],[38,3,45,1],[39,2,47,0,"OffsetToLocation"],[39,18,47,16],[39,19,47,17,"prototype"],[39,28,47,26],[39,31,47,29],[40,4,48,4,"setSource"],[40,13,48,13],[40,15,48,15],[40,24,48,15,"setSource"],[40,34,48,24,"source"],[40,40,48,30],[40,42,48,32,"startOffset"],[40,53,48,43],[40,55,48,45,"startLine"],[40,64,48,54],[40,66,48,56,"startColumn"],[40,77,48,67],[40,79,48,69],[41,6,49,8],[41,10,49,12],[41,11,49,13,"source"],[41,17,49,19],[41,20,49,22,"source"],[41,26,49,28],[42,6,50,8],[42,10,50,12],[42,11,50,13,"startOffset"],[42,22,50,24],[42,25,50,27],[42,32,50,34,"startOffset"],[42,43,50,45],[42,48,50,50],[42,59,50,61],[42,62,50,64],[42,63,50,65],[42,66,50,68,"startOffset"],[42,77,50,79],[43,6,51,8],[43,10,51,12],[43,11,51,13,"startLine"],[43,20,51,22],[43,23,51,25],[43,30,51,32,"startLine"],[43,39,51,41],[43,44,51,46],[43,55,51,57],[43,58,51,60],[43,59,51,61],[43,62,51,64,"startLine"],[43,71,51,73],[44,6,52,8],[44,10,52,12],[44,11,52,13,"startColumn"],[44,22,52,24],[44,25,52,27],[44,32,52,34,"startColumn"],[44,43,52,45],[44,48,52,50],[44,59,52,61],[44,62,52,64],[44,63,52,65],[44,66,52,68,"startColumn"],[44,77,52,79],[45,6,53,8],[45,10,53,12],[45,11,53,13,"linesAndColumnsComputed"],[45,34,53,36],[45,37,53,39],[45,42,53,44],[46,4,54,4],[46,5,54,5],[47,4,56,4,"ensureLinesAndColumnsComputed"],[47,33,56,33],[47,35,56,35],[47,44,56,35,"ensureLinesAndColumnsComputed"],[47,74,56,35],[47,76,56,46],[48,6,57,8],[48,10,57,12],[48,11,57,13],[48,15,57,17],[48,16,57,18,"linesAndColumnsComputed"],[48,39,57,41],[48,41,57,43],[49,8,58,12,"computeLinesAndColumns"],[49,30,58,34],[49,31,58,35],[49,35,58,39],[49,37,58,41],[49,41,58,45],[49,42,58,46,"source"],[49,48,58,52],[49,49,58,53],[50,8,59,12],[50,12,59,16],[50,13,59,17,"linesAndColumnsComputed"],[50,36,59,40],[50,39,59,43],[50,43,59,47],[51,6,60,8],[52,4,61,4],[52,5,61,5],[53,4,62,4,"getLocation"],[53,15,62,15],[53,17,62,17],[53,26,62,17,"getLocation"],[53,38,62,26,"offset"],[53,44,62,32],[53,46,62,34,"filename"],[53,54,62,42],[53,56,62,44],[54,6,63,8],[54,10,63,12],[54,11,63,13,"ensureLinesAndColumnsComputed"],[54,40,63,42],[54,41,63,43],[54,42,63,44],[55,6,65,8],[55,13,65,15],[56,8,66,12,"source"],[56,14,66,18],[56,16,66,20,"filename"],[56,24,66,28],[57,8,67,12,"offset"],[57,14,67,18],[57,16,67,20],[57,20,67,24],[57,21,67,25,"startOffset"],[57,32,67,36],[57,35,67,39,"offset"],[57,41,67,45],[58,8,68,12,"line"],[58,12,68,16],[58,14,68,18],[58,18,68,22],[58,19,68,23,"lines"],[58,24,68,28],[58,25,68,29,"offset"],[58,31,68,35],[58,32,68,36],[59,8,69,12,"column"],[59,14,69,18],[59,16,69,20],[59,20,69,24],[59,21,69,25,"columns"],[59,28,69,32],[59,29,69,33,"offset"],[59,35,69,39],[60,6,70,8],[60,7,70,9],[61,4,71,4],[61,5,71,5],[62,4,72,4,"getLocationRange"],[62,20,72,20],[62,22,72,22],[62,31,72,22,"getLocationRange"],[62,48,72,31,"start"],[62,53,72,36],[62,55,72,38,"end"],[62,58,72,41],[62,60,72,43,"filename"],[62,68,72,51],[62,70,72,53],[63,6,73,8],[63,10,73,12],[63,11,73,13,"ensureLinesAndColumnsComputed"],[63,40,73,42],[63,41,73,43],[63,42,73,44],[64,6,75,8],[64,13,75,15],[65,8,76,12,"source"],[65,14,76,18],[65,16,76,20,"filename"],[65,24,76,28],[66,8,77,12,"start"],[66,13,77,17],[66,15,77,19],[67,10,78,16,"offset"],[67,16,78,22],[67,18,78,24],[67,22,78,28],[67,23,78,29,"startOffset"],[67,34,78,40],[67,37,78,43,"start"],[67,42,78,48],[68,10,79,16,"line"],[68,14,79,20],[68,16,79,22],[68,20,79,26],[68,21,79,27,"lines"],[68,26,79,32],[68,27,79,33,"start"],[68,32,79,38],[68,33,79,39],[69,10,80,16,"column"],[69,16,80,22],[69,18,80,24],[69,22,80,28],[69,23,80,29,"columns"],[69,30,80,36],[69,31,80,37,"start"],[69,36,80,42],[70,8,81,12],[70,9,81,13],[71,8,82,12,"end"],[71,11,82,15],[71,13,82,17],[72,10,83,16,"offset"],[72,16,83,22],[72,18,83,24],[72,22,83,28],[72,23,83,29,"startOffset"],[72,34,83,40],[72,37,83,43,"end"],[72,40,83,46],[73,10,84,16,"line"],[73,14,84,20],[73,16,84,22],[73,20,84,26],[73,21,84,27,"lines"],[73,26,84,32],[73,27,84,33,"end"],[73,30,84,36],[73,31,84,37],[74,10,85,16,"column"],[74,16,85,22],[74,18,85,24],[74,22,85,28],[74,23,85,29,"columns"],[74,30,85,36],[74,31,85,37,"end"],[74,34,85,40],[75,8,86,12],[76,6,87,8],[76,7,87,9],[77,4,88,4],[78,2,89,0],[78,3,89,1],[79,2,91,0,"module"],[79,8,91,6],[79,9,91,7,"exports"],[79,16,91,14],[79,19,91,17,"OffsetToLocation"],[79,35,91,33],[80,0,91,34]],"functionMap":{"names":["<global>","computeLinesAndColumns","OffsetToLocation","prototype.setSource","prototype.ensureLinesAndColumnsComputed","prototype.getLocation","prototype.getLocationRange"],"mappings":"AAA;ACO;CD+B;uBEE;CFI;eGG;KHM;mCIE;KJK;iBKC;KLS;sBMC;KNgB"}},"type":"js/module"}]}