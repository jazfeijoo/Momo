{"dependencies":[{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":296,"column":0,"index":6642}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":296,"column":0,"index":6642}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":296,"column":0,"index":6642}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":296,"column":0,"index":6642}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":296,"column":0,"index":6642}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../Network/XMLHttpRequest","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":23,"index":316},"end":{"line":15,"column":59,"index":352}}],"key":"D0lOLfihcfajViapak9M31abaKs="}},{"name":"./InspectorAgent","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":23,"index":377},"end":{"line":16,"column":50,"index":404}}],"key":"pnvrHlVJjk6GCrrWL5NCe6Ncw0o="}},{"name":"./JSInspector","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":20,"index":426},"end":{"line":17,"column":44,"index":450}}],"key":"ecIS7Agx12w1anrl/pT4M2Z3Rks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/inherits\");\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\");\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n  var XMLHttpRequest = _$$_REQUIRE(_dependencyMap[5], \"../Network/XMLHttpRequest\");\n  var InspectorAgent = _$$_REQUIRE(_dependencyMap[6], \"./InspectorAgent\");\n  var JSInspector = _$$_REQUIRE(_dependencyMap[7], \"./JSInspector\");\n\n  // We don't currently care about this\n  var Interceptor = /*#__PURE__*/function () {\n    function Interceptor(agent) {\n      _classCallCheck(this, Interceptor);\n      this._agent = agent;\n      this._requests = new Map();\n    }\n    _createClass(Interceptor, [{\n      key: \"getData\",\n      value: function getData(requestId) {\n        return this._requests.get(requestId);\n      }\n    }, {\n      key: \"requestSent\",\n      value: function requestSent(id, url, method, headers) {\n        var requestId = String(id);\n        this._requests.set(requestId, '');\n        var request = {\n          url: url,\n          method: method,\n          headers: headers,\n          initialPriority: 'Medium'\n        };\n        var event = {\n          requestId: requestId,\n          documentURL: '',\n          frameId: '1',\n          loaderId: '1',\n          request: request,\n          timestamp: JSInspector.getTimestamp(),\n          initiator: {\n            // TODO(blom): Get stack trace\n            // If type is 'script' the inspector will try to execute\n            // `stack.callFrames[0]`\n            type: 'other'\n          },\n          type: 'Other'\n        };\n        this._agent.sendEvent('requestWillBeSent', event);\n      }\n    }, {\n      key: \"responseReceived\",\n      value: function responseReceived(id, url, status, headers) {\n        var requestId = String(id);\n        var response = {\n          url: url,\n          status: status,\n          statusText: String(status),\n          headers: headers,\n          // TODO(blom) refined headers, can we get this?\n          requestHeaders: {},\n          mimeType: this._getMimeType(headers),\n          connectionReused: false,\n          connectionId: -1,\n          encodedDataLength: 0,\n          securityState: 'unknown'\n        };\n        var event = {\n          requestId: requestId,\n          frameId: '1',\n          loaderId: '1',\n          timestamp: JSInspector.getTimestamp(),\n          type: 'Other',\n          response: response\n        };\n        this._agent.sendEvent('responseReceived', event);\n      }\n    }, {\n      key: \"dataReceived\",\n      value: function dataReceived(id, data) {\n        var requestId = String(id);\n        var existingData = this._requests.get(requestId) || '';\n        this._requests.set(requestId, existingData.concat(data));\n        var event = {\n          requestId: requestId,\n          timestamp: JSInspector.getTimestamp(),\n          dataLength: data.length,\n          encodedDataLength: data.length\n        };\n        this._agent.sendEvent('dataReceived', event);\n      }\n    }, {\n      key: \"loadingFinished\",\n      value: function loadingFinished(id, encodedDataLength) {\n        var event = {\n          requestId: String(id),\n          timestamp: JSInspector.getTimestamp(),\n          encodedDataLength: encodedDataLength\n        };\n        this._agent.sendEvent('loadingFinished', event);\n      }\n    }, {\n      key: \"loadingFailed\",\n      value: function loadingFailed(id, error) {\n        var event = {\n          requestId: String(id),\n          timestamp: JSInspector.getTimestamp(),\n          type: 'Other',\n          errorText: error\n        };\n        this._agent.sendEvent('loadingFailed', event);\n      }\n    }, {\n      key: \"_getMimeType\",\n      value: function _getMimeType(headers) {\n        var contentType = headers['Content-Type'] || '';\n        return contentType.split(';')[0];\n      }\n    }]);\n    return Interceptor;\n  }();\n  var NetworkAgent = /*#__PURE__*/function (_InspectorAgent) {\n    _inherits(NetworkAgent, _InspectorAgent);\n    var _super = _createSuper(NetworkAgent);\n    function NetworkAgent() {\n      _classCallCheck(this, NetworkAgent);\n      return _super.apply(this, arguments);\n    }\n    _createClass(NetworkAgent, [{\n      key: \"enable\",\n      value: function enable(_ref) {\n        var maxResourceBufferSize = _ref.maxResourceBufferSize,\n          maxTotalBufferSize = _ref.maxTotalBufferSize;\n        this._interceptor = new Interceptor(this);\n        XMLHttpRequest.setInterceptor(this._interceptor);\n      }\n    }, {\n      key: \"disable\",\n      value: function disable() {\n        XMLHttpRequest.setInterceptor(null);\n        this._interceptor = null;\n      }\n    }, {\n      key: \"getResponseBody\",\n      value: function getResponseBody(_ref2) {\n        var requestId = _ref2.requestId;\n        return {\n          body: this.interceptor().getData(requestId),\n          base64Encoded: false\n        };\n      }\n    }, {\n      key: \"interceptor\",\n      value: function interceptor() {\n        if (this._interceptor) {\n          return this._interceptor;\n        } else {\n          throw Error('_interceptor can not be null');\n        }\n      }\n    }]);\n    return NetworkAgent;\n  }(InspectorAgent);\n  NetworkAgent.DOMAIN = 'Network';\n  module.exports = NetworkAgent;\n});","lineCount":180,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_inherits"],[14,15,11,13],[14,18,11,13,"_$$_REQUIRE"],[14,29,11,13],[14,30,11,13,"_dependencyMap"],[14,44,11,13],[15,2,11,13],[15,6,11,13,"_possibleConstructorReturn"],[15,32,11,13],[15,35,11,13,"_$$_REQUIRE"],[15,46,11,13],[15,47,11,13,"_dependencyMap"],[15,61,11,13],[16,2,11,13],[16,6,11,13,"_getPrototypeOf"],[16,21,11,13],[16,24,11,13,"_$$_REQUIRE"],[16,35,11,13],[16,36,11,13,"_dependencyMap"],[16,50,11,13],[17,2,11,13],[17,6,11,13,"_classCallCheck"],[17,21,11,13],[17,24,11,13,"_$$_REQUIRE"],[17,35,11,13],[17,36,11,13,"_dependencyMap"],[17,50,11,13],[18,2,11,13],[18,6,11,13,"_createClass"],[18,18,11,13],[18,21,11,13,"_$$_REQUIRE"],[18,32,11,13],[18,33,11,13,"_dependencyMap"],[18,47,11,13],[19,2,11,13],[19,11,11,13,"_createSuper"],[19,24,11,13,"Derived"],[19,31,11,13],[19,39,11,13,"hasNativeReflectConstruct"],[19,64,11,13],[19,67,11,13,"_isNativeReflectConstruct"],[19,92,11,13],[19,112,11,13,"_createSuperInternal"],[19,133,11,13],[19,141,11,13,"Super"],[19,146,11,13],[19,149,11,13,"_getPrototypeOf"],[19,164,11,13],[19,165,11,13,"Derived"],[19,172,11,13],[19,175,11,13,"result"],[19,181,11,13],[19,187,11,13,"hasNativeReflectConstruct"],[19,212,11,13],[19,220,11,13,"NewTarget"],[19,229,11,13],[19,232,11,13,"_getPrototypeOf"],[19,247,11,13],[19,254,11,13,"constructor"],[19,265,11,13],[19,267,11,13,"result"],[19,273,11,13],[19,276,11,13,"Reflect"],[19,283,11,13],[19,284,11,13,"construct"],[19,293,11,13],[19,294,11,13,"Super"],[19,299,11,13],[19,301,11,13,"arguments"],[19,310,11,13],[19,312,11,13,"NewTarget"],[19,321,11,13],[19,333,11,13,"result"],[19,339,11,13],[19,342,11,13,"Super"],[19,347,11,13],[19,348,11,13,"apply"],[19,353,11,13],[19,360,11,13,"arguments"],[19,369,11,13],[19,381,11,13,"_possibleConstructorReturn"],[19,407,11,13],[19,414,11,13,"result"],[19,420,11,13],[20,2,11,13],[20,11,11,13,"_isNativeReflectConstruct"],[20,37,11,13],[20,52,11,13,"Reflect"],[20,59,11,13],[20,80,11,13,"Reflect"],[20,87,11,13],[20,88,11,13,"construct"],[20,97,11,13],[20,117,11,13,"Reflect"],[20,124,11,13],[20,125,11,13,"construct"],[20,134,11,13],[20,135,11,13,"sham"],[20,139,11,13],[20,166,11,13,"Proxy"],[20,171,11,13],[20,207,11,13,"Boolean"],[20,214,11,13],[20,215,11,13,"prototype"],[20,224,11,13],[20,225,11,13,"valueOf"],[20,232,11,13],[20,233,11,13,"call"],[20,237,11,13],[20,238,11,13,"Reflect"],[20,245,11,13],[20,246,11,13,"construct"],[20,255,11,13],[20,256,11,13,"Boolean"],[20,263,11,13],[20,309,11,13,"e"],[20,310,11,13],[21,2,15,0],[21,6,15,6,"XMLHttpRequest"],[21,20,15,20],[21,23,15,23,"require"],[21,34,15,30],[21,35,15,30,"_dependencyMap"],[21,49,15,30],[21,81,15,58],[21,82,15,59],[22,2,16,0],[22,6,16,6,"InspectorAgent"],[22,20,16,20],[22,23,16,23,"require"],[22,34,16,30],[22,35,16,30,"_dependencyMap"],[22,49,16,30],[22,72,16,49],[22,73,16,50],[23,2,17,0],[23,6,17,6,"JSInspector"],[23,17,17,17],[23,20,17,20,"require"],[23,31,17,27],[23,32,17,27,"_dependencyMap"],[23,46,17,27],[23,66,17,43],[23,67,17,44],[25,2,27,0],[26,2,27,0],[26,6,150,6,"Interceptor"],[26,17,150,17],[27,4,154,2],[27,13,154,2,"Interceptor"],[27,25,154,14,"agent"],[27,30,154,33],[27,32,154,35],[28,6,154,35,"_classCallCheck"],[28,21,154,35],[28,28,154,35,"Interceptor"],[28,39,154,35],[29,6,155,4],[29,10,155,8],[29,11,155,9,"_agent"],[29,17,155,15],[29,20,155,18,"agent"],[29,25,155,23],[30,6,156,4],[30,10,156,8],[30,11,156,9,"_requests"],[30,20,156,18],[30,23,156,21],[30,27,156,25,"Map"],[30,30,156,28],[30,31,156,29],[30,32,156,30],[31,4,157,2],[32,4,157,3,"_createClass"],[32,16,157,3],[32,17,157,3,"Interceptor"],[32,28,157,3],[33,6,157,3,"key"],[33,9,157,3],[34,6,157,3,"value"],[34,11,157,3],[34,13,159,2],[34,22,159,2,"getData"],[34,30,159,10,"requestId"],[34,39,159,27],[34,41,159,38],[35,8,160,4],[35,15,160,11],[35,19,160,15],[35,20,160,16,"_requests"],[35,29,160,25],[35,30,160,26,"get"],[35,33,160,29],[35,34,160,30,"requestId"],[35,43,160,39],[35,44,160,40],[36,6,161,2],[37,4,161,3],[38,6,161,3,"key"],[38,9,161,3],[39,6,161,3,"value"],[39,11,161,3],[39,13,163,2],[39,22,163,2,"requestSent"],[39,34,163,14,"id"],[39,36,163,24],[39,38,163,26,"url"],[39,41,163,37],[39,43,163,39,"method"],[39,49,163,53],[39,51,163,55,"headers"],[39,58,163,71],[39,60,163,73],[40,8,164,4],[40,12,164,10,"requestId"],[40,21,164,19],[40,24,164,22,"String"],[40,30,164,28],[40,31,164,29,"id"],[40,33,164,31],[40,34,164,32],[41,8,165,4],[41,12,165,8],[41,13,165,9,"_requests"],[41,22,165,18],[41,23,165,19,"set"],[41,26,165,22],[41,27,165,23,"requestId"],[41,36,165,32],[41,38,165,34],[41,40,165,36],[41,41,165,37],[42,8,167,4],[42,12,167,10,"request"],[42,19,167,26],[42,22,167,29],[43,10,168,6,"url"],[43,13,168,9],[43,15,168,6,"url"],[43,18,168,9],[44,10,169,6,"method"],[44,16,169,12],[44,18,169,6,"method"],[44,24,169,12],[45,10,170,6,"headers"],[45,17,170,13],[45,19,170,6,"headers"],[45,26,170,13],[46,10,171,6,"initialPriority"],[46,25,171,21],[46,27,171,23],[47,8,172,4],[47,9,172,5],[48,8,173,4],[48,12,173,10,"event"],[48,17,173,39],[48,20,173,42],[49,10,174,6,"requestId"],[49,19,174,15],[49,21,174,6,"requestId"],[49,30,174,15],[50,10,175,6,"documentURL"],[50,21,175,17],[50,23,175,19],[50,25,175,21],[51,10,176,6,"frameId"],[51,17,176,13],[51,19,176,15],[51,22,176,18],[52,10,177,6,"loaderId"],[52,18,177,14],[52,20,177,16],[52,23,177,19],[53,10,178,6,"request"],[53,17,178,13],[53,19,178,6,"request"],[53,26,178,13],[54,10,179,6,"timestamp"],[54,19,179,15],[54,21,179,17,"JSInspector"],[54,32,179,28],[54,33,179,29,"getTimestamp"],[54,45,179,41],[54,46,179,42],[54,47,179,43],[55,10,180,6,"initiator"],[55,19,180,15],[55,21,180,17],[56,12,181,8],[57,12,182,8],[58,12,183,8],[59,12,184,8,"type"],[59,16,184,12],[59,18,184,14],[60,10,185,6],[60,11,185,7],[61,10,186,6,"type"],[61,14,186,10],[61,16,186,12],[62,8,187,4],[62,9,187,5],[63,8,188,4],[63,12,188,8],[63,13,188,9,"_agent"],[63,19,188,15],[63,20,188,16,"sendEvent"],[63,29,188,25],[63,30,188,26],[63,49,188,45],[63,51,188,47,"event"],[63,56,188,52],[63,57,188,53],[64,6,189,2],[65,4,189,3],[66,6,189,3,"key"],[66,9,189,3],[67,6,189,3,"value"],[67,11,189,3],[67,13,191,2],[67,22,191,2,"responseReceived"],[67,39,191,19,"id"],[67,41,191,29],[67,43,191,31,"url"],[67,46,191,42],[67,48,191,44,"status"],[67,54,191,58],[67,56,191,60,"headers"],[67,63,191,76],[67,65,191,78],[68,8,192,4],[68,12,192,10,"requestId"],[68,21,192,19],[68,24,192,22,"String"],[68,30,192,28],[68,31,192,29,"id"],[68,33,192,31],[68,34,192,32],[69,8,193,4],[69,12,193,10,"response"],[69,20,193,28],[69,23,193,31],[70,10,194,6,"url"],[70,13,194,9],[70,15,194,6,"url"],[70,18,194,9],[71,10,195,6,"status"],[71,16,195,12],[71,18,195,6,"status"],[71,24,195,12],[72,10,196,6,"statusText"],[72,20,196,16],[72,22,196,18,"String"],[72,28,196,24],[72,29,196,25,"status"],[72,35,196,31],[72,36,196,32],[73,10,197,6,"headers"],[73,17,197,13],[73,19,197,6,"headers"],[73,26,197,13],[74,10,198,6],[75,10,199,6,"requestHeaders"],[75,24,199,20],[75,26,199,22],[75,27,199,23],[75,28,199,24],[76,10,200,6,"mimeType"],[76,18,200,14],[76,20,200,16],[76,24,200,20],[76,25,200,21,"_getMimeType"],[76,37,200,33],[76,38,200,34,"headers"],[76,45,200,41],[76,46,200,42],[77,10,201,6,"connectionReused"],[77,26,201,22],[77,28,201,24],[77,33,201,29],[78,10,202,6,"connectionId"],[78,22,202,18],[78,24,202,20],[78,25,202,21],[78,26,202,22],[79,10,203,6,"encodedDataLength"],[79,27,203,23],[79,29,203,25],[79,30,203,26],[80,10,204,6,"securityState"],[80,23,204,19],[80,25,204,21],[81,8,205,4],[81,9,205,5],[82,8,207,4],[82,12,207,10,"event"],[82,17,207,38],[82,20,207,41],[83,10,208,6,"requestId"],[83,19,208,15],[83,21,208,6,"requestId"],[83,30,208,15],[84,10,209,6,"frameId"],[84,17,209,13],[84,19,209,15],[84,22,209,18],[85,10,210,6,"loaderId"],[85,18,210,14],[85,20,210,16],[85,23,210,19],[86,10,211,6,"timestamp"],[86,19,211,15],[86,21,211,17,"JSInspector"],[86,32,211,28],[86,33,211,29,"getTimestamp"],[86,45,211,41],[86,46,211,42],[86,47,211,43],[87,10,212,6,"type"],[87,14,212,10],[87,16,212,12],[87,23,212,19],[88,10,213,6,"response"],[88,18,213,14],[88,20,213,6,"response"],[89,8,214,4],[89,9,214,5],[90,8,215,4],[90,12,215,8],[90,13,215,9,"_agent"],[90,19,215,15],[90,20,215,16,"sendEvent"],[90,29,215,25],[90,30,215,26],[90,48,215,44],[90,50,215,46,"event"],[90,55,215,51],[90,56,215,52],[91,6,216,2],[92,4,216,3],[93,6,216,3,"key"],[93,9,216,3],[94,6,216,3,"value"],[94,11,216,3],[94,13,218,2],[94,22,218,2,"dataReceived"],[94,35,218,15,"id"],[94,37,218,25],[94,39,218,27,"data"],[94,43,218,39],[94,45,218,41],[95,8,219,4],[95,12,219,10,"requestId"],[95,21,219,19],[95,24,219,22,"String"],[95,30,219,28],[95,31,219,29,"id"],[95,33,219,31],[95,34,219,32],[96,8,220,4],[96,12,220,10,"existingData"],[96,24,220,22],[96,27,220,25],[96,31,220,29],[96,32,220,30,"_requests"],[96,41,220,39],[96,42,220,40,"get"],[96,45,220,43],[96,46,220,44,"requestId"],[96,55,220,53],[96,56,220,54],[96,60,220,58],[96,62,220,60],[97,8,221,4],[97,12,221,8],[97,13,221,9,"_requests"],[97,22,221,18],[97,23,221,19,"set"],[97,26,221,22],[97,27,221,23,"requestId"],[97,36,221,32],[97,38,221,34,"existingData"],[97,50,221,46],[97,51,221,47,"concat"],[97,57,221,53],[97,58,221,54,"data"],[97,62,221,58],[97,63,221,59],[97,64,221,60],[98,8,222,4],[98,12,222,10,"event"],[98,17,222,29],[98,20,222,32],[99,10,223,6,"requestId"],[99,19,223,15],[99,21,223,6,"requestId"],[99,30,223,15],[100,10,224,6,"timestamp"],[100,19,224,15],[100,21,224,17,"JSInspector"],[100,32,224,28],[100,33,224,29,"getTimestamp"],[100,45,224,41],[100,46,224,42],[100,47,224,43],[101,10,225,6,"dataLength"],[101,20,225,16],[101,22,225,18,"data"],[101,26,225,22],[101,27,225,23,"length"],[101,33,225,29],[102,10,226,6,"encodedDataLength"],[102,27,226,23],[102,29,226,25,"data"],[102,33,226,29],[102,34,226,30,"length"],[103,8,227,4],[103,9,227,5],[104,8,228,4],[104,12,228,8],[104,13,228,9,"_agent"],[104,19,228,15],[104,20,228,16,"sendEvent"],[104,29,228,25],[104,30,228,26],[104,44,228,40],[104,46,228,42,"event"],[104,51,228,47],[104,52,228,48],[105,6,229,2],[106,4,229,3],[107,6,229,3,"key"],[107,9,229,3],[108,6,229,3,"value"],[108,11,229,3],[108,13,231,2],[108,22,231,2,"loadingFinished"],[108,38,231,18,"id"],[108,40,231,28],[108,42,231,30,"encodedDataLength"],[108,59,231,55],[108,61,231,57],[109,8,232,4],[109,12,232,10,"event"],[109,17,232,37],[109,20,232,40],[110,10,233,6,"requestId"],[110,19,233,15],[110,21,233,17,"String"],[110,27,233,23],[110,28,233,24,"id"],[110,30,233,26],[110,31,233,27],[111,10,234,6,"timestamp"],[111,19,234,15],[111,21,234,17,"JSInspector"],[111,32,234,28],[111,33,234,29,"getTimestamp"],[111,45,234,41],[111,46,234,42],[111,47,234,43],[112,10,235,6,"encodedDataLength"],[112,27,235,23],[112,29,235,25,"encodedDataLength"],[113,8,236,4],[113,9,236,5],[114,8,237,4],[114,12,237,8],[114,13,237,9,"_agent"],[114,19,237,15],[114,20,237,16,"sendEvent"],[114,29,237,25],[114,30,237,26],[114,47,237,43],[114,49,237,45,"event"],[114,54,237,50],[114,55,237,51],[115,6,238,2],[116,4,238,3],[117,6,238,3,"key"],[117,9,238,3],[118,6,238,3,"value"],[118,11,238,3],[118,13,240,2],[118,22,240,2,"loadingFailed"],[118,36,240,16,"id"],[118,38,240,26],[118,40,240,28,"error"],[118,45,240,41],[118,47,240,43],[119,8,241,4],[119,12,241,10,"event"],[119,17,241,35],[119,20,241,38],[120,10,242,6,"requestId"],[120,19,242,15],[120,21,242,17,"String"],[120,27,242,23],[120,28,242,24,"id"],[120,30,242,26],[120,31,242,27],[121,10,243,6,"timestamp"],[121,19,243,15],[121,21,243,17,"JSInspector"],[121,32,243,28],[121,33,243,29,"getTimestamp"],[121,45,243,41],[121,46,243,42],[121,47,243,43],[122,10,244,6,"type"],[122,14,244,10],[122,16,244,12],[122,23,244,19],[123,10,245,6,"errorText"],[123,19,245,15],[123,21,245,17,"error"],[124,8,246,4],[124,9,246,5],[125,8,247,4],[125,12,247,8],[125,13,247,9,"_agent"],[125,19,247,15],[125,20,247,16,"sendEvent"],[125,29,247,25],[125,30,247,26],[125,45,247,41],[125,47,247,43,"event"],[125,52,247,48],[125,53,247,49],[126,6,248,2],[127,4,248,3],[128,6,248,3,"key"],[128,9,248,3],[129,6,248,3,"value"],[129,11,248,3],[129,13,250,2],[129,22,250,2,"_getMimeType"],[129,35,250,15,"headers"],[129,42,250,31],[129,44,250,41],[130,8,251,4],[130,12,251,10,"contentType"],[130,23,251,21],[130,26,251,24,"headers"],[130,33,251,31],[130,34,251,32],[130,48,251,46],[130,49,251,47],[130,53,251,51],[130,55,251,53],[131,8,252,4],[131,15,252,11,"contentType"],[131,26,252,22],[131,27,252,23,"split"],[131,32,252,28],[131,33,252,29],[131,36,252,32],[131,37,252,33],[131,38,252,34],[131,39,252,35],[131,40,252,36],[132,6,253,2],[133,4,253,3],[134,4,253,3],[134,11,253,3,"Interceptor"],[134,22,253,3],[135,2,253,3],[136,2,253,3],[136,6,262,6,"NetworkAgent"],[136,18,262,18],[136,44,262,18,"_InspectorAgent"],[136,59,262,18],[137,4,262,18,"_inherits"],[137,13,262,18],[137,14,262,18,"NetworkAgent"],[137,26,262,18],[137,28,262,18,"_InspectorAgent"],[137,43,262,18],[138,4,262,18],[138,8,262,18,"_super"],[138,14,262,18],[138,17,262,18,"_createSuper"],[138,29,262,18],[138,30,262,18,"NetworkAgent"],[138,42,262,18],[139,4,262,18],[139,13,262,18,"NetworkAgent"],[139,26,262,18],[140,6,262,18,"_classCallCheck"],[140,21,262,18],[140,28,262,18,"NetworkAgent"],[140,40,262,18],[141,6,262,18],[141,13,262,18,"_super"],[141,19,262,18],[141,20,262,18,"apply"],[141,25,262,18],[141,32,262,18,"arguments"],[141,41,262,18],[142,4,262,18],[143,4,262,18,"_createClass"],[143,16,262,18],[143,17,262,18,"NetworkAgent"],[143,29,262,18],[144,6,262,18,"key"],[144,9,262,18],[145,6,262,18,"value"],[145,11,262,18],[145,13,268,2],[145,22,268,2,"enable"],[145,29,268,2,"_ref"],[145,33,268,2],[145,35,268,66],[146,8,268,66],[146,12,268,10,"maxResourceBufferSize"],[146,33,268,31],[146,36,268,31,"_ref"],[146,40,268,31],[146,41,268,10,"maxResourceBufferSize"],[146,62,268,31],[147,10,268,33,"maxTotalBufferSize"],[147,28,268,51],[147,31,268,51,"_ref"],[147,35,268,51],[147,36,268,33,"maxTotalBufferSize"],[147,54,268,51],[148,8,269,4],[148,12,269,8],[148,13,269,9,"_interceptor"],[148,25,269,21],[148,28,269,24],[148,32,269,28,"Interceptor"],[148,43,269,39],[148,44,269,40],[148,48,269,44],[148,49,269,45],[149,8,270,4,"XMLHttpRequest"],[149,22,270,18],[149,23,270,19,"setInterceptor"],[149,37,270,33],[149,38,270,34],[149,42,270,38],[149,43,270,39,"_interceptor"],[149,55,270,51],[149,56,270,52],[150,6,271,2],[151,4,271,3],[152,6,271,3,"key"],[152,9,271,3],[153,6,271,3,"value"],[153,11,271,3],[153,13,273,2],[153,22,273,2,"disable"],[153,30,273,2],[153,32,273,12],[154,8,274,4,"XMLHttpRequest"],[154,22,274,18],[154,23,274,19,"setInterceptor"],[154,37,274,33],[154,38,274,34],[154,42,274,38],[154,43,274,39],[155,8,275,4],[155,12,275,8],[155,13,275,9,"_interceptor"],[155,25,275,21],[155,28,275,24],[155,32,275,28],[156,6,276,2],[157,4,276,3],[158,6,276,3,"key"],[158,9,276,3],[159,6,276,3,"value"],[159,11,276,3],[159,13,278,2],[159,22,278,2,"getResponseBody"],[159,38,278,2,"_ref2"],[159,43,278,2],[159,45,282,4],[160,8,282,4],[160,12,278,19,"requestId"],[160,21,278,28],[160,24,278,28,"_ref2"],[160,29,278,28],[160,30,278,19,"requestId"],[160,39,278,28],[161,8,283,4],[161,15,283,11],[162,10,283,12,"body"],[162,14,283,16],[162,16,283,18],[162,20,283,22],[162,21,283,23,"interceptor"],[162,32,283,34],[162,33,283,35],[162,34,283,36],[162,35,283,37,"getData"],[162,42,283,44],[162,43,283,45,"requestId"],[162,52,283,54],[162,53,283,55],[163,10,283,57,"base64Encoded"],[163,23,283,70],[163,25,283,72],[164,8,283,77],[164,9,283,78],[165,6,284,2],[166,4,284,3],[167,6,284,3,"key"],[167,9,284,3],[168,6,284,3,"value"],[168,11,284,3],[168,13,286,2],[168,22,286,2,"interceptor"],[168,34,286,2],[168,36,286,29],[169,8,287,4],[169,12,287,8],[169,16,287,12],[169,17,287,13,"_interceptor"],[169,29,287,25],[169,31,287,27],[170,10,288,6],[170,17,288,13],[170,21,288,17],[170,22,288,18,"_interceptor"],[170,34,288,30],[171,8,289,4],[171,9,289,5],[171,15,289,11],[172,10,290,6],[172,16,290,12,"Error"],[172,21,290,17],[172,22,290,18],[172,52,290,48],[172,53,290,49],[173,8,291,4],[174,6,292,2],[175,4,292,3],[176,4,292,3],[176,11,292,3,"NetworkAgent"],[176,23,292,3],[177,2,292,3],[177,4,262,27,"InspectorAgent"],[177,18,262,41],[178,2,262,6,"NetworkAgent"],[178,14,262,18],[178,15,263,9,"DOMAIN"],[178,21,263,15],[178,24,263,48],[178,33,263,57],[179,2,295,0,"module"],[179,8,295,6],[179,9,295,7,"exports"],[179,16,295,14],[179,19,295,17,"NetworkAgent"],[179,31,295,29],[180,0,295,30]],"functionMap":{"names":["<global>","Interceptor","Interceptor#constructor","Interceptor#getData","Interceptor#requestSent","Interceptor#responseReceived","Interceptor#dataReceived","Interceptor#loadingFinished","Interceptor#loadingFailed","Interceptor#_getMimeType","NetworkAgent","enable","disable","getResponseBody","interceptor"],"mappings":"AAA;ACqJ;ECI;GDG;EEE;GFE;EGE;GH0B;EIE;GJyB;EKE;GLW;EME;GNO;EOE;GPQ;EQE;GRG;CDC;AUQ;ECM;GDG;EEE;GFG;EGE;GHM;EIE;GJM;CVC"}},"type":"js/module"}]}