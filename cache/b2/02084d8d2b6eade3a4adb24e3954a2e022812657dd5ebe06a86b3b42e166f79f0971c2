{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ScheduleUpdateContext = void 0;\n  exports.default = useScheduleUpdate;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  var MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n  var ScheduleUpdateContext = exports.ScheduleUpdateContext = React.createContext({\n    scheduleUpdate: function scheduleUpdate() {\n      throw new Error(MISSING_CONTEXT_ERROR);\n    },\n    flushUpdates: function flushUpdates() {\n      throw new Error(MISSING_CONTEXT_ERROR);\n    }\n  });\n\n  /**\n   * When screen config changes, we want to update the navigator in the same update phase.\n   * However, navigation state is in the root component and React won't let us update it from a child.\n   * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n   * It lets all subsequent updates access the latest state so it stays correct.\n   * Then we call setState during after the component updates.\n   */\n  function useScheduleUpdate(callback) {\n    var _React$useContext = React.useContext(ScheduleUpdateContext),\n      scheduleUpdate = _React$useContext.scheduleUpdate,\n      flushUpdates = _React$useContext.flushUpdates;\n    scheduleUpdate(callback);\n    React.useEffect(flushUpdates);\n  }\n});","lineCount":34,"map":[[7,2,1,0],[7,6,1,0,"React"],[7,11,1,0],[7,14,1,0,"_interopRequireWildcard"],[7,37,1,0],[7,38,1,0,"_$$_REQUIRE"],[7,49,1,0],[7,50,1,0,"_dependencyMap"],[7,64,1,0],[8,2,1,31],[8,11,1,31,"_getRequireWildcardCache"],[8,36,1,31,"nodeInterop"],[8,47,1,31],[8,62,1,31,"WeakMap"],[8,69,1,31],[8,103,1,31,"cacheBabelInterop"],[8,120,1,31],[8,127,1,31,"WeakMap"],[8,134,1,31],[8,142,1,31,"cacheNodeInterop"],[8,158,1,31],[8,165,1,31,"WeakMap"],[8,172,1,31],[8,184,1,31,"_getRequireWildcardCache"],[8,208,1,31],[8,220,1,31,"_getRequireWildcardCache"],[8,245,1,31,"nodeInterop"],[8,256,1,31],[8,267,1,31,"nodeInterop"],[8,278,1,31],[8,281,1,31,"cacheNodeInterop"],[8,297,1,31],[8,300,1,31,"cacheBabelInterop"],[8,317,1,31],[8,322,1,31,"nodeInterop"],[8,333,1,31],[9,2,1,31],[9,11,1,31,"_interopRequireWildcard"],[9,35,1,31,"obj"],[9,38,1,31],[9,40,1,31,"nodeInterop"],[9,51,1,31],[9,60,1,31,"nodeInterop"],[9,71,1,31],[9,75,1,31,"obj"],[9,78,1,31],[9,82,1,31,"obj"],[9,85,1,31],[9,86,1,31,"__esModule"],[9,96,1,31],[9,107,1,31,"obj"],[9,110,1,31],[9,118,1,31,"obj"],[9,121,1,31],[9,141,1,31,"obj"],[9,144,1,31],[9,168,1,31,"obj"],[9,171,1,31],[9,199,1,31,"default"],[9,206,1,31],[9,208,1,31,"obj"],[9,211,1,31],[9,221,1,31,"cache"],[9,226,1,31],[9,229,1,31,"_getRequireWildcardCache"],[9,253,1,31],[9,254,1,31,"nodeInterop"],[9,265,1,31],[9,272,1,31,"cache"],[9,277,1,31],[9,281,1,31,"cache"],[9,286,1,31],[9,287,1,31,"has"],[9,290,1,31],[9,291,1,31,"obj"],[9,294,1,31],[9,306,1,31,"cache"],[9,311,1,31],[9,312,1,31,"get"],[9,315,1,31],[9,316,1,31,"obj"],[9,319,1,31],[9,328,1,31,"newObj"],[9,334,1,31],[9,345,1,31,"hasPropertyDescriptor"],[9,366,1,31],[9,369,1,31,"Object"],[9,375,1,31],[9,376,1,31,"defineProperty"],[9,390,1,31],[9,394,1,31,"Object"],[9,400,1,31],[9,401,1,31,"getOwnPropertyDescriptor"],[9,425,1,31],[9,436,1,31,"key"],[9,439,1,31],[9,443,1,31,"obj"],[9,446,1,31],[9,454,1,31,"key"],[9,457,1,31],[9,475,1,31,"Object"],[9,481,1,31],[9,482,1,31,"prototype"],[9,491,1,31],[9,492,1,31,"hasOwnProperty"],[9,506,1,31],[9,507,1,31,"call"],[9,511,1,31],[9,512,1,31,"obj"],[9,515,1,31],[9,517,1,31,"key"],[9,520,1,31],[9,529,1,31,"desc"],[9,533,1,31],[9,536,1,31,"hasPropertyDescriptor"],[9,557,1,31],[9,560,1,31,"Object"],[9,566,1,31],[9,567,1,31,"getOwnPropertyDescriptor"],[9,591,1,31],[9,592,1,31,"obj"],[9,595,1,31],[9,597,1,31,"key"],[9,600,1,31],[9,614,1,31,"desc"],[9,618,1,31],[9,623,1,31,"desc"],[9,627,1,31],[9,628,1,31,"get"],[9,631,1,31],[9,635,1,31,"desc"],[9,639,1,31],[9,640,1,31,"set"],[9,643,1,31],[9,648,1,31,"Object"],[9,654,1,31],[9,655,1,31,"defineProperty"],[9,669,1,31],[9,670,1,31,"newObj"],[9,676,1,31],[9,678,1,31,"key"],[9,681,1,31],[9,683,1,31,"desc"],[9,687,1,31],[9,699,1,31,"newObj"],[9,705,1,31],[9,706,1,31,"key"],[9,709,1,31],[9,713,1,31,"obj"],[9,716,1,31],[9,717,1,31,"key"],[9,720,1,31],[9,729,1,31,"newObj"],[9,735,1,31],[9,736,1,31,"default"],[9,743,1,31],[9,746,1,31,"obj"],[9,749,1,31],[9,755,1,31,"cache"],[9,760,1,31],[9,764,1,31,"cache"],[9,769,1,31],[9,770,1,31,"set"],[9,773,1,31],[9,774,1,31,"obj"],[9,777,1,31],[9,779,1,31,"newObj"],[9,785,1,31],[9,797,1,31,"newObj"],[9,803,1,31],[10,2,3,0],[10,6,3,6,"MISSING_CONTEXT_ERROR"],[10,27,3,27],[10,30,3,30],[10,65,3,65],[11,2,5,7],[11,6,5,13,"ScheduleUpdateContext"],[11,27,5,34],[11,30,5,34,"exports"],[11,37,5,34],[11,38,5,34,"ScheduleUpdateContext"],[11,59,5,34],[11,62,5,37,"React"],[11,67,5,42],[11,68,5,43,"createContext"],[11,81,5,56],[11,82,8,3],[12,4,9,2,"scheduleUpdate"],[12,18,9,16],[12,29,9,16,"scheduleUpdate"],[12,44,9,16],[12,46,9,19],[13,6,10,4],[13,12,10,10],[13,16,10,14,"Error"],[13,21,10,19],[13,22,10,20,"MISSING_CONTEXT_ERROR"],[13,43,10,41],[13,44,10,42],[14,4,11,2],[14,5,11,3],[15,4,12,2,"flushUpdates"],[15,16,12,14],[15,27,12,14,"flushUpdates"],[15,40,12,14],[15,42,12,17],[16,6,13,4],[16,12,13,10],[16,16,13,14,"Error"],[16,21,13,19],[16,22,13,20,"MISSING_CONTEXT_ERROR"],[16,43,13,41],[16,44,13,42],[17,4,14,2],[18,2,15,0],[18,3,15,1],[18,4,15,2],[20,2,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,2,24,15],[27,11,24,24,"useScheduleUpdate"],[27,28,24,41,"useScheduleUpdate"],[27,29,24,42,"callback"],[27,37,24,62],[27,39,24,64],[28,4,25,2],[28,8,25,2,"_React$useContext"],[28,25,25,2],[28,28,25,43,"React"],[28,33,25,48],[28,34,25,49,"useContext"],[28,44,25,59],[28,45,26,4,"ScheduleUpdateContext"],[28,66,27,2],[28,67,27,3],[29,6,25,10,"scheduleUpdate"],[29,20,25,24],[29,23,25,24,"_React$useContext"],[29,40,25,24],[29,41,25,10,"scheduleUpdate"],[29,55,25,24],[30,6,25,26,"flushUpdates"],[30,18,25,38],[30,21,25,38,"_React$useContext"],[30,38,25,38],[30,39,25,26,"flushUpdates"],[30,51,25,38],[31,4,29,2,"scheduleUpdate"],[31,18,29,16],[31,19,29,17,"callback"],[31,27,29,25],[31,28,29,26],[32,4,31,2,"React"],[32,9,31,7],[32,10,31,8,"useEffect"],[32,19,31,17],[32,20,31,18,"flushUpdates"],[32,32,31,30],[32,33,31,31],[33,2,32,0],[34,0,32,1]],"functionMap":{"names":["<global>","React.createContext$argument_0.scheduleUpdate","React.createContext$argument_0.flushUpdates","useScheduleUpdate"],"mappings":"AAA;ECQ;GDE;EEC;GFE;eGU;CHQ"}},"type":"js/module"}]}