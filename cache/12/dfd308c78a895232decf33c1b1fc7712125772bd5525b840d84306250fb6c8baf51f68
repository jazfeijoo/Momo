{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12322}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12322}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12322}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12322}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12322}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12322}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"../../Core/Devtools/parseErrorStack","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":451},"end":{"line":22,"column":66,"index":517}}],"key":"FgxQzv74nv4TEARyMhTrzrRRqIo="}},{"name":"../../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":518},"end":{"line":23,"column":66,"index":584}}],"key":"gVaxfWXVRxL2zJT5JNlaaR/Xrgs="}},{"name":"./LogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":585},"end":{"line":24,"column":36,"index":621}}],"key":"NkM4+L+MmwTJD8nd0tRosHgq5Og="}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":622},"end":{"line":25,"column":54,"index":676}}],"key":"Zbz8QjDcDG2C2PQ9AuAV++r6EsA="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":677},"end":{"line":26,"column":31,"index":708}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":480,"column":0,"index":12322}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"../../Core/ExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":102,"column":28,"index":2463},"end":{"line":102,"column":67,"index":2502}}],"key":"rh1lsYexuAEiAxWxhF9+r+tk2ws="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.checkWarningFilter = checkWarningFilter;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getAppInfo = getAppInfo;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setAppInfo = setAppInfo;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.setWarningFilter = setWarningFilter;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _parseErrorStack = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Core/Devtools/parseErrorStack\"));\n  var _NativeLogBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../NativeModules/specs/NativeLogBox\"));\n  var _LogBoxLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./LogBoxLog\"));\n  var _parseLogBoxLog = _$$_REQUIRE(_dependencyMap[9], \"./parseLogBoxLog\");\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[11], \"react/jsx-runtime\");\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var appInfo = null;\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n  var _selectedIndex = -1;\n  var warningFilter = function warningFilter(format) {\n    return {\n      finalFormat: format,\n      forceDialogImmediately: false,\n      suppressDialog_LEGACY: true,\n      suppressCompletely: false,\n      monitorEvent: 'unknown',\n      monitorListVersion: 0,\n      monitorSampleRate: 1\n    };\n  };\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs: logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[12], \"../../Core/ExceptionsManager\");\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error, /* isFatal */true);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (var pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(function (_ref) {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    var lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      var OPTIMISTIC_WAIT_TIME = 1000;\n      var _addPendingLog = function addPendingLog() {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        _addPendingLog = null;\n      };\n      var optimisticTimeout = setTimeout(function () {\n        if (_addPendingLog) {\n          _addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n      newLog.symbolicate(function (status) {\n        if (_addPendingLog && status !== 'PENDING') {\n          _addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    var errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(function () {\n      try {\n        var stack = (0, _parseErrorStack.default)(errorForStackTrace == null ? void 0 : errorForStackTrace.stack);\n        appendNewLog(new _LogBoxLog.default({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack: stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportLogBoxError(error);\n      }\n    });\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(function () {\n      try {\n        appendNewLog(new _LogBoxLog.default((0, _parseLogBoxLog.parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportLogBoxError(loggingError);\n      }\n    });\n  }\n  function symbolicateLogNow(log) {\n    log.symbolicate(function () {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(log) {\n    log.retrySymbolicate(function () {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(log) {\n    log.symbolicate();\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (_NativeLogBox.default) {\n      setTimeout(function () {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'warn';\n    });\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'error' && log.level !== 'fatal';\n    });\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function setWarningFilter(filter) {\n    warningFilter = filter;\n  }\n  function setAppInfo(info) {\n    appInfo = info;\n  }\n  function getAppInfo() {\n    return appInfo != null ? appInfo() : null;\n  }\n  function checkWarningFilter(format) {\n    return warningFilter(format);\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    var existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(function (pattern) {\n      if (pattern instanceof RegExp) {\n        for (var existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(function (log) {\n      return !isMessageIgnored(log.message.content);\n    }));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    var subscription = {\n      observer: observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe: function unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = /*#__PURE__*/function (_React$Component) {\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n      var _super = _createSuper(LogBoxStateSubscription);\n      function LogBoxStateSubscription() {\n        var _this;\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n        _this._handleDismiss = function () {\n          // Here we handle the cases when the log is dismissed and it\n          // was either the last log, or when the current index\n          // is now outside the bounds of the log array.\n          var _this$state = _this.state,\n            selectedLogIndex = _this$state.selectedLogIndex,\n            stateLogs = _this$state.logs;\n          var logsArray = Array.from(stateLogs);\n          if (selectedLogIndex != null) {\n            if (logsArray.length - 1 <= 0) {\n              setSelectedLog(-1);\n            } else if (selectedLogIndex >= logsArray.length - 1) {\n              setSelectedLog(selectedLogIndex - 1);\n            }\n            dismiss(logsArray[selectedLogIndex]);\n          }\n        };\n        _this._handleMinimize = function () {\n          setSelectedLog(-1);\n        };\n        _this._handleSetSelectedLog = function (index) {\n          setSelectedLog(index);\n        };\n        return _this;\n      }\n      (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          /* $FlowFixMe[class-object-subtyping] added when improving typing for\n           * this parameters */\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.hasError) {\n            // This happens when the component failed to render, in which case we delegate to the native redbox.\n            // We can't show anyback fallback UI here, because the error may be with <View> or <Text>.\n            return null;\n          }\n          return /*#__PURE__*/(0, _jsxRuntime.jsx)(WrappedComponent, {\n            logs: Array.from(this.state.logs),\n            isDisabled: this.state.isDisabled,\n            selectedLogIndex: this.state.selectedLogIndex\n          });\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          this._subscription = observe(function (data) {\n            _this2.setState(data);\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n      return LogBoxStateSubscription;\n    }(React.Component);\n    return LogBoxStateSubscription;\n  }\n});","lineCount":419,"map":[[34,2,22,0],[34,6,22,0,"_parseErrorStack"],[34,22,22,0],[34,25,22,0,"_interopRequireDefault"],[34,47,22,0],[34,48,22,0,"_$$_REQUIRE"],[34,59,22,0],[34,60,22,0,"_dependencyMap"],[34,74,22,0],[35,2,23,0],[35,6,23,0,"_NativeLogBox"],[35,19,23,0],[35,22,23,0,"_interopRequireDefault"],[35,44,23,0],[35,45,23,0,"_$$_REQUIRE"],[35,56,23,0],[35,57,23,0,"_dependencyMap"],[35,71,23,0],[36,2,24,0],[36,6,24,0,"_LogBoxLog"],[36,16,24,0],[36,19,24,0,"_interopRequireDefault"],[36,41,24,0],[36,42,24,0,"_$$_REQUIRE"],[36,53,24,0],[36,54,24,0,"_dependencyMap"],[36,68,24,0],[37,2,25,0],[37,6,25,0,"_parseLogBoxLog"],[37,21,25,0],[37,24,25,0,"_$$_REQUIRE"],[37,35,25,0],[37,36,25,0,"_dependencyMap"],[37,50,25,0],[38,2,26,0],[38,6,26,0,"React"],[38,11,26,0],[38,14,26,0,"_interopRequireWildcard"],[38,37,26,0],[38,38,26,0,"_$$_REQUIRE"],[38,49,26,0],[38,50,26,0,"_dependencyMap"],[38,64,26,0],[39,2,26,31],[39,6,26,31,"_jsxRuntime"],[39,17,26,31],[39,20,26,31,"_$$_REQUIRE"],[39,31,26,31],[39,32,26,31,"_dependencyMap"],[39,46,26,31],[40,2,26,31],[40,11,26,31,"_getRequireWildcardCache"],[40,36,26,31,"nodeInterop"],[40,47,26,31],[40,62,26,31,"WeakMap"],[40,69,26,31],[40,103,26,31,"cacheBabelInterop"],[40,120,26,31],[40,127,26,31,"WeakMap"],[40,134,26,31],[40,142,26,31,"cacheNodeInterop"],[40,158,26,31],[40,165,26,31,"WeakMap"],[40,172,26,31],[40,184,26,31,"_getRequireWildcardCache"],[40,208,26,31],[40,220,26,31,"_getRequireWildcardCache"],[40,245,26,31,"nodeInterop"],[40,256,26,31],[40,267,26,31,"nodeInterop"],[40,278,26,31],[40,281,26,31,"cacheNodeInterop"],[40,297,26,31],[40,300,26,31,"cacheBabelInterop"],[40,317,26,31],[40,322,26,31,"nodeInterop"],[40,333,26,31],[41,2,26,31],[41,11,26,31,"_interopRequireWildcard"],[41,35,26,31,"obj"],[41,38,26,31],[41,40,26,31,"nodeInterop"],[41,51,26,31],[41,60,26,31,"nodeInterop"],[41,71,26,31],[41,75,26,31,"obj"],[41,78,26,31],[41,82,26,31,"obj"],[41,85,26,31],[41,86,26,31,"__esModule"],[41,96,26,31],[41,107,26,31,"obj"],[41,110,26,31],[41,118,26,31,"obj"],[41,121,26,31],[41,141,26,31,"obj"],[41,144,26,31],[41,168,26,31,"obj"],[41,171,26,31],[41,199,26,31,"default"],[41,206,26,31],[41,208,26,31,"obj"],[41,211,26,31],[41,221,26,31,"cache"],[41,226,26,31],[41,229,26,31,"_getRequireWildcardCache"],[41,253,26,31],[41,254,26,31,"nodeInterop"],[41,265,26,31],[41,272,26,31,"cache"],[41,277,26,31],[41,281,26,31,"cache"],[41,286,26,31],[41,287,26,31,"has"],[41,290,26,31],[41,291,26,31,"obj"],[41,294,26,31],[41,306,26,31,"cache"],[41,311,26,31],[41,312,26,31,"get"],[41,315,26,31],[41,316,26,31,"obj"],[41,319,26,31],[41,328,26,31,"newObj"],[41,334,26,31],[41,345,26,31,"hasPropertyDescriptor"],[41,366,26,31],[41,369,26,31,"Object"],[41,375,26,31],[41,376,26,31,"defineProperty"],[41,390,26,31],[41,394,26,31,"Object"],[41,400,26,31],[41,401,26,31,"getOwnPropertyDescriptor"],[41,425,26,31],[41,436,26,31,"key"],[41,439,26,31],[41,443,26,31,"obj"],[41,446,26,31],[41,454,26,31,"key"],[41,457,26,31],[41,475,26,31,"Object"],[41,481,26,31],[41,482,26,31,"prototype"],[41,491,26,31],[41,492,26,31,"hasOwnProperty"],[41,506,26,31],[41,507,26,31,"call"],[41,511,26,31],[41,512,26,31,"obj"],[41,515,26,31],[41,517,26,31,"key"],[41,520,26,31],[41,529,26,31,"desc"],[41,533,26,31],[41,536,26,31,"hasPropertyDescriptor"],[41,557,26,31],[41,560,26,31,"Object"],[41,566,26,31],[41,567,26,31,"getOwnPropertyDescriptor"],[41,591,26,31],[41,592,26,31,"obj"],[41,595,26,31],[41,597,26,31,"key"],[41,600,26,31],[41,614,26,31,"desc"],[41,618,26,31],[41,623,26,31,"desc"],[41,627,26,31],[41,628,26,31,"get"],[41,631,26,31],[41,635,26,31,"desc"],[41,639,26,31],[41,640,26,31,"set"],[41,643,26,31],[41,648,26,31,"Object"],[41,654,26,31],[41,655,26,31,"defineProperty"],[41,669,26,31],[41,670,26,31,"newObj"],[41,676,26,31],[41,678,26,31,"key"],[41,681,26,31],[41,683,26,31,"desc"],[41,687,26,31],[41,699,26,31,"newObj"],[41,705,26,31],[41,706,26,31,"key"],[41,709,26,31],[41,713,26,31,"obj"],[41,716,26,31],[41,717,26,31,"key"],[41,720,26,31],[41,729,26,31,"newObj"],[41,735,26,31],[41,736,26,31,"default"],[41,743,26,31],[41,746,26,31,"obj"],[41,749,26,31],[41,755,26,31,"cache"],[41,760,26,31],[41,764,26,31,"cache"],[41,769,26,31],[41,770,26,31,"set"],[41,773,26,31],[41,774,26,31,"obj"],[41,777,26,31],[41,779,26,31,"newObj"],[41,785,26,31],[41,797,26,31,"newObj"],[41,803,26,31],[42,2,26,31],[42,11,26,31,"_createSuper"],[42,24,26,31,"Derived"],[42,31,26,31],[42,39,26,31,"hasNativeReflectConstruct"],[42,64,26,31],[42,67,26,31,"_isNativeReflectConstruct"],[42,92,26,31],[42,112,26,31,"_createSuperInternal"],[42,133,26,31],[42,141,26,31,"Super"],[42,146,26,31],[42,153,26,31,"_getPrototypeOf2"],[42,169,26,31],[42,170,26,31,"default"],[42,177,26,31],[42,179,26,31,"Derived"],[42,186,26,31],[42,189,26,31,"result"],[42,195,26,31],[42,201,26,31,"hasNativeReflectConstruct"],[42,226,26,31],[42,234,26,31,"NewTarget"],[42,243,26,31],[42,250,26,31,"_getPrototypeOf2"],[42,266,26,31],[42,267,26,31,"default"],[42,274,26,31],[42,282,26,31,"constructor"],[42,293,26,31],[42,295,26,31,"result"],[42,301,26,31],[42,304,26,31,"Reflect"],[42,311,26,31],[42,312,26,31,"construct"],[42,321,26,31],[42,322,26,31,"Super"],[42,327,26,31],[42,329,26,31,"arguments"],[42,338,26,31],[42,340,26,31,"NewTarget"],[42,349,26,31],[42,361,26,31,"result"],[42,367,26,31],[42,370,26,31,"Super"],[42,375,26,31],[42,376,26,31,"apply"],[42,381,26,31],[42,388,26,31,"arguments"],[42,397,26,31],[42,413,26,31,"_possibleConstructorReturn2"],[42,440,26,31],[42,441,26,31,"default"],[42,448,26,31],[42,456,26,31,"result"],[42,462,26,31],[43,2,26,31],[43,11,26,31,"_isNativeReflectConstruct"],[43,37,26,31],[43,52,26,31,"Reflect"],[43,59,26,31],[43,80,26,31,"Reflect"],[43,87,26,31],[43,88,26,31,"construct"],[43,97,26,31],[43,117,26,31,"Reflect"],[43,124,26,31],[43,125,26,31,"construct"],[43,134,26,31],[43,135,26,31,"sham"],[43,139,26,31],[43,166,26,31,"Proxy"],[43,171,26,31],[43,207,26,31,"Boolean"],[43,214,26,31],[43,215,26,31,"prototype"],[43,224,26,31],[43,225,26,31,"valueOf"],[43,232,26,31],[43,233,26,31,"call"],[43,237,26,31],[43,238,26,31,"Reflect"],[43,245,26,31],[43,246,26,31,"construct"],[43,255,26,31],[43,256,26,31,"Boolean"],[43,263,26,31],[43,309,26,31,"e"],[43,310,26,31],[44,2,1,0],[45,0,2,0],[46,0,3,0],[47,0,4,0],[48,0,5,0],[49,0,6,0],[50,0,7,0],[51,0,8,0],[52,0,9,0],[54,2,11,1],[54,14,11,13],[55,2,67,0],[55,6,67,6,"observers"],[55,15,67,47],[55,18,67,50],[55,22,67,54,"Set"],[55,25,67,57],[55,26,67,58],[55,27,67,59],[56,2,68,0],[56,6,68,6,"ignorePatterns"],[56,20,68,40],[56,23,68,43],[56,27,68,47,"Set"],[56,30,68,50],[56,31,68,51],[56,32,68,52],[57,2,69,0],[57,6,69,4,"appInfo"],[57,13,69,27],[57,16,69,30],[57,20,69,34],[58,2,70,0],[58,6,70,4,"logs"],[58,10,70,20],[58,13,70,23],[58,17,70,27,"Set"],[58,20,70,30],[58,21,70,31],[58,22,70,32],[59,2,71,0],[59,6,71,4,"updateTimeout"],[59,19,71,36],[59,22,71,39],[59,26,71,43],[60,2,72,0],[60,6,72,4,"_isDisabled"],[60,17,72,15],[60,20,72,18],[60,25,72,23],[61,2,73,0],[61,6,73,4,"_selectedIndex"],[61,20,73,18],[61,23,73,21],[61,24,73,22],[61,25,73,23],[62,2,75,0],[62,6,75,4,"warningFilter"],[62,19,75,32],[62,22,75,35],[62,31,75,35,"warningFilter"],[62,45,75,45,"format"],[62,51,75,51],[62,53,75,53],[63,4,76,2],[63,11,76,9],[64,6,77,4,"finalFormat"],[64,17,77,15],[64,19,77,17,"format"],[64,25,77,23],[65,6,78,4,"forceDialogImmediately"],[65,28,78,26],[65,30,78,28],[65,35,78,33],[66,6,79,4,"suppressDialog_LEGACY"],[66,27,79,25],[66,29,79,27],[66,33,79,31],[67,6,80,4,"suppressCompletely"],[67,24,80,22],[67,26,80,24],[67,31,80,29],[68,6,81,4,"monitorEvent"],[68,18,81,16],[68,20,81,18],[68,29,81,27],[69,6,82,4,"monitorListVersion"],[69,24,82,22],[69,26,82,24],[69,27,82,25],[70,6,83,4,"monitorSampleRate"],[70,23,83,21],[70,25,83,23],[71,4,84,2],[71,5,84,3],[72,2,85,0],[72,3,85,1],[73,2,87,0],[73,6,87,6,"LOGBOX_ERROR_MESSAGE"],[73,26,87,26],[73,29,88,2],[73,101,88,74],[74,2,90,0],[74,11,90,9,"getNextState"],[74,23,90,21,"getNextState"],[74,24,90,21],[74,26,90,24],[75,4,91,2],[75,11,91,9],[76,6,92,4,"logs"],[76,10,92,8],[76,12,92,4,"logs"],[76,16,92,8],[77,6,93,4,"isDisabled"],[77,16,93,14],[77,18,93,16,"_isDisabled"],[77,29,93,27],[78,6,94,4,"selectedLogIndex"],[78,22,94,20],[78,24,94,22,"_selectedIndex"],[79,4,95,2],[79,5,95,3],[80,2,96,0],[81,2,98,7],[81,11,98,16,"reportLogBoxError"],[81,28,98,33,"reportLogBoxError"],[81,29,99,2,"error"],[81,34,99,22],[81,36,100,2,"componentStack"],[81,50,100,25],[81,52,101,8],[82,4,102,2],[82,8,102,8,"ExceptionsManager"],[82,25,102,25],[82,28,102,28,"require"],[82,39,102,35],[82,40,102,35,"_dependencyMap"],[82,54,102,35],[82,90,102,66],[82,91,102,67],[83,4,104,2,"error"],[83,9,104,7],[83,10,104,8,"message"],[83,17,104,15],[83,20,104,19],[83,23,104,21,"LOGBOX_ERROR_MESSAGE"],[83,43,104,42],[83,50,104,48,"error"],[83,55,104,53],[83,56,104,54,"message"],[83,63,104,62],[83,65,104,63],[84,4,105,2],[84,8,105,6,"componentStack"],[84,22,105,20],[84,26,105,24],[84,30,105,28],[84,32,105,30],[85,6,106,4,"error"],[85,11,106,9],[85,12,106,10,"componentStack"],[85,26,106,24],[85,29,106,27,"componentStack"],[85,43,106,41],[86,4,107,2],[87,4,108,2,"ExceptionsManager"],[87,21,108,19],[87,22,108,20,"handleException"],[87,37,108,35],[87,38,108,36,"error"],[87,43,108,41],[87,45,108,43],[87,58,108,57],[87,62,108,61],[87,63,108,62],[88,2,109,0],[89,2,111,7],[89,11,111,16,"isLogBoxErrorMessage"],[89,31,111,36,"isLogBoxErrorMessage"],[89,32,111,37,"message"],[89,39,111,52],[89,41,111,63],[90,4,112,2],[90,11,112,9],[90,18,112,16,"message"],[90,25,112,23],[90,30,112,28],[90,38,112,36],[90,42,112,40,"message"],[90,49,112,47],[90,50,112,48,"includes"],[90,58,112,56],[90,59,112,57,"LOGBOX_ERROR_MESSAGE"],[90,79,112,77],[90,80,112,78],[91,2,113,0],[92,2,115,7],[92,11,115,16,"isMessageIgnored"],[92,27,115,32,"isMessageIgnored"],[92,28,115,33,"message"],[92,35,115,48],[92,37,115,59],[93,4,116,2],[93,9,116,7],[93,13,116,13,"pattern"],[93,20,116,20],[93,24,116,24,"ignorePatterns"],[93,38,116,38],[93,40,116,40],[94,6,117,4],[94,10,118,7,"pattern"],[94,17,118,14],[94,29,118,26,"RegExp"],[94,35,118,32],[94,39,118,36,"pattern"],[94,46,118,43],[94,47,118,44,"test"],[94,51,118,48],[94,52,118,49,"message"],[94,59,118,56],[94,60,118,57],[94,64,119,7],[94,71,119,14,"pattern"],[94,78,119,21],[94,83,119,26],[94,91,119,34],[94,95,119,38,"message"],[94,102,119,45],[94,103,119,46,"includes"],[94,111,119,54],[94,112,119,55,"pattern"],[94,119,119,62],[94,120,119,64],[94,122,120,6],[95,8,121,6],[95,15,121,13],[95,19,121,17],[96,6,122,4],[97,4,123,2],[98,4,124,2],[98,11,124,9],[98,16,124,14],[99,2,125,0],[100,2,127,0],[100,11,127,9,"handleUpdate"],[100,23,127,21,"handleUpdate"],[100,24,127,21],[100,26,127,30],[101,4,128,2],[101,8,128,6,"updateTimeout"],[101,21,128,19],[101,25,128,23],[101,29,128,27],[101,31,128,29],[102,6,129,4,"updateTimeout"],[102,19,129,17],[102,22,129,20,"setImmediate"],[102,34,129,32],[102,35,129,33],[102,47,129,39],[103,8,130,6,"updateTimeout"],[103,21,130,19],[103,24,130,22],[103,28,130,26],[104,8,131,6],[104,12,131,12,"nextState"],[104,21,131,21],[104,24,131,24,"getNextState"],[104,36,131,36],[104,37,131,37],[104,38,131,38],[105,8,132,6,"observers"],[105,17,132,15],[105,18,132,16,"forEach"],[105,25,132,23],[105,26,132,24],[105,36,132,24,"_ref"],[105,40,132,24],[106,10,132,24],[106,14,132,26,"observer"],[106,22,132,34],[106,25,132,34,"_ref"],[106,29,132,34],[106,30,132,26,"observer"],[106,38,132,34],[107,10,132,34],[107,17,132,40,"observer"],[107,25,132,48],[107,26,132,49,"nextState"],[107,35,132,58],[107,36,132,59],[108,8,132,59],[108,10,132,60],[109,6,133,4],[109,7,133,5],[109,8,133,6],[110,4,134,2],[111,2,135,0],[112,2,137,0],[112,11,137,9,"appendNewLog"],[112,23,137,21,"appendNewLog"],[112,24,137,22,"newLog"],[112,30,137,39],[112,32,137,41],[113,4,138,2],[114,4,139,2],[115,4,140,2],[115,8,140,6,"isMessageIgnored"],[115,24,140,22],[115,25,140,23,"newLog"],[115,31,140,29],[115,32,140,30,"message"],[115,39,140,37],[115,40,140,38,"content"],[115,47,140,45],[115,48,140,46],[115,50,140,48],[116,6,141,4],[117,4,142,2],[119,4,144,2],[120,4,145,2],[121,4,146,2],[122,4,147,2],[122,8,147,8,"lastLog"],[122,15,147,15],[122,18,147,18,"Array"],[122,23,147,23],[122,24,147,24,"from"],[122,28,147,28],[122,29,147,29,"logs"],[122,33,147,33],[122,34,147,34],[122,35,147,35,"pop"],[122,38,147,38],[122,39,147,39],[122,40,147,40],[123,4,148,2],[123,8,148,6,"lastLog"],[123,15,148,13],[123,19,148,17,"lastLog"],[123,26,148,24],[123,27,148,25,"category"],[123,35,148,33],[123,40,148,38,"newLog"],[123,46,148,44],[123,47,148,45,"category"],[123,55,148,53],[123,57,148,55],[124,6,149,4,"lastLog"],[124,13,149,11],[124,14,149,12,"incrementCount"],[124,28,149,26],[124,29,149,27],[124,30,149,28],[125,6,150,4,"handleUpdate"],[125,18,150,16],[125,19,150,17],[125,20,150,18],[126,6,151,4],[127,4,152,2],[128,4,154,2],[128,8,154,6,"newLog"],[128,14,154,12],[128,15,154,13,"level"],[128,20,154,18],[128,25,154,23],[128,32,154,30],[128,34,154,32],[129,6,155,4],[130,6,156,4],[131,6,157,4],[132,6,158,4],[132,10,158,10,"OPTIMISTIC_WAIT_TIME"],[132,30,158,30],[132,33,158,33],[132,37,158,37],[133,6,160,4],[133,10,160,8,"addPendingLog"],[133,24,160,34],[133,27,160,37],[133,36,160,37,"addPendingLog"],[133,50,160,37],[133,52,160,43],[134,8,161,6,"logs"],[134,12,161,10],[134,13,161,11,"add"],[134,16,161,14],[134,17,161,15,"newLog"],[134,23,161,21],[134,24,161,22],[135,8,162,6],[135,12,162,10,"_selectedIndex"],[135,26,162,24],[135,29,162,27],[135,30,162,28],[135,32,162,30],[136,10,163,8,"setSelectedLog"],[136,24,163,22],[136,25,163,23,"logs"],[136,29,163,27],[136,30,163,28,"size"],[136,34,163,32],[136,37,163,35],[136,38,163,36],[136,39,163,37],[137,8,164,6],[137,9,164,7],[137,15,164,13],[138,10,165,8,"handleUpdate"],[138,22,165,20],[138,23,165,21],[138,24,165,22],[139,8,166,6],[140,8,167,6,"addPendingLog"],[140,22,167,19],[140,25,167,22],[140,29,167,26],[141,6,168,4],[141,7,168,5],[142,6,170,4],[142,10,170,10,"optimisticTimeout"],[142,27,170,27],[142,30,170,30,"setTimeout"],[142,40,170,40],[142,41,170,41],[142,53,170,47],[143,8,171,6],[143,12,171,10,"addPendingLog"],[143,26,171,23],[143,28,171,25],[144,10,172,8,"addPendingLog"],[144,24,172,21],[144,25,172,22],[144,26,172,23],[145,8,173,6],[146,6,174,4],[146,7,174,5],[146,9,174,7,"OPTIMISTIC_WAIT_TIME"],[146,29,174,27],[146,30,174,28],[147,6,176,4,"newLog"],[147,12,176,10],[147,13,176,11,"symbolicate"],[147,24,176,22],[147,25,176,23],[147,35,176,23,"status"],[147,41,176,29],[147,43,176,33],[148,8,177,6],[148,12,177,10,"addPendingLog"],[148,26,177,23],[148,30,177,27,"status"],[148,36,177,33],[148,41,177,38],[148,50,177,47],[148,52,177,49],[149,10,178,8,"addPendingLog"],[149,24,178,21],[149,25,178,22],[149,26,178,23],[150,10,179,8,"clearTimeout"],[150,22,179,20],[150,23,179,21,"optimisticTimeout"],[150,40,179,38],[150,41,179,39],[151,8,180,6],[151,9,180,7],[151,15,180,13],[151,19,180,17,"status"],[151,25,180,23],[151,30,180,28],[151,39,180,37],[151,41,180,39],[152,10,181,8],[153,10,182,8,"handleUpdate"],[153,22,182,20],[153,23,182,21],[153,24,182,22],[154,8,183,6],[155,6,184,4],[155,7,184,5],[155,8,184,6],[156,4,185,2],[156,5,185,3],[156,11,185,9],[156,15,185,13,"newLog"],[156,21,185,19],[156,22,185,20,"level"],[156,27,185,25],[156,32,185,30],[156,40,185,38],[156,42,185,40],[157,6,186,4,"logs"],[157,10,186,8],[157,11,186,9,"add"],[157,14,186,12],[157,15,186,13,"newLog"],[157,21,186,19],[157,22,186,20],[158,6,187,4,"setSelectedLog"],[158,20,187,18],[158,21,187,19,"logs"],[158,25,187,23],[158,26,187,24,"size"],[158,30,187,28],[158,33,187,31],[158,34,187,32],[158,35,187,33],[159,4,188,2],[159,5,188,3],[159,11,188,9],[160,6,189,4,"logs"],[160,10,189,8],[160,11,189,9,"add"],[160,14,189,12],[160,15,189,13,"newLog"],[160,21,189,19],[160,22,189,20],[161,6,190,4,"handleUpdate"],[161,18,190,16],[161,19,190,17],[161,20,190,18],[162,4,191,2],[163,2,192,0],[164,2,194,7],[164,11,194,16,"addLog"],[164,17,194,22,"addLog"],[164,18,194,23,"log"],[164,21,194,35],[164,23,194,43],[165,4,195,2],[165,8,195,8,"errorForStackTrace"],[165,26,195,26],[165,29,195,29],[165,33,195,33,"Error"],[165,38,195,38],[165,39,195,39],[165,40,195,40],[167,4,197,2],[168,4,198,2],[169,4,199,2,"setImmediate"],[169,16,199,14],[169,17,199,15],[169,29,199,21],[170,6,200,4],[170,10,200,8],[171,8,201,6],[171,12,201,12,"stack"],[171,17,201,17],[171,20,201,20],[171,24,201,20,"parseErrorStack"],[171,48,201,35],[171,50,201,36,"errorForStackTrace"],[171,68,201,54],[171,88,201,36,"errorForStackTrace"],[171,106,201,54],[171,107,201,56,"stack"],[171,112,201,61],[171,113,201,62],[172,8,203,6,"appendNewLog"],[172,20,203,18],[172,21,204,8],[172,25,204,12,"LogBoxLog"],[172,43,204,21],[172,44,204,22],[173,10,205,10,"level"],[173,15,205,15],[173,17,205,17,"log"],[173,20,205,20],[173,21,205,21,"level"],[173,26,205,26],[174,10,206,10,"message"],[174,17,206,17],[174,19,206,19,"log"],[174,22,206,22],[174,23,206,23,"message"],[174,30,206,30],[175,10,207,10,"isComponentError"],[175,26,207,26],[175,28,207,28],[175,33,207,33],[176,10,208,10,"stack"],[176,15,208,15],[176,17,208,10,"stack"],[176,22,208,15],[177,10,209,10,"category"],[177,18,209,18],[177,20,209,20,"log"],[177,23,209,23],[177,24,209,24,"category"],[177,32,209,32],[178,10,210,10,"componentStack"],[178,24,210,24],[178,26,210,26,"log"],[178,29,210,29],[178,30,210,30,"componentStack"],[179,8,211,8],[179,9,211,9],[179,10,212,6],[179,11,212,7],[180,6,213,4],[180,7,213,5],[180,8,213,6],[180,15,213,13,"error"],[180,20,213,18],[180,22,213,20],[181,8,214,6,"reportLogBoxError"],[181,25,214,23],[181,26,214,24,"error"],[181,31,214,29],[181,32,214,30],[182,6,215,4],[183,4,216,2],[183,5,216,3],[183,6,216,4],[184,2,217,0],[185,2,219,7],[185,11,219,16,"addException"],[185,23,219,28,"addException"],[185,24,219,29,"error"],[185,29,219,57],[185,31,219,65],[186,4,220,2],[187,4,221,2],[188,4,222,2,"setImmediate"],[188,16,222,14],[188,17,222,15],[188,29,222,21],[189,6,223,4],[189,10,223,8],[190,8,224,6,"appendNewLog"],[190,20,224,18],[190,21,224,19],[190,25,224,23,"LogBoxLog"],[190,43,224,32],[190,44,224,33],[190,48,224,33,"parseLogBoxException"],[190,84,224,53],[190,86,224,54,"error"],[190,91,224,59],[190,92,224,60],[190,93,224,61],[190,94,224,62],[191,6,225,4],[191,7,225,5],[191,8,225,6],[191,15,225,13,"loggingError"],[191,27,225,25],[191,29,225,27],[192,8,226,6,"reportLogBoxError"],[192,25,226,23],[192,26,226,24,"loggingError"],[192,38,226,36],[192,39,226,37],[193,6,227,4],[194,4,228,2],[194,5,228,3],[194,6,228,4],[195,2,229,0],[196,2,231,7],[196,11,231,16,"symbolicateLogNow"],[196,28,231,33,"symbolicateLogNow"],[196,29,231,34,"log"],[196,32,231,48],[196,34,231,50],[197,4,232,2,"log"],[197,7,232,5],[197,8,232,6,"symbolicate"],[197,19,232,17],[197,20,232,18],[197,32,232,24],[198,6,233,4,"handleUpdate"],[198,18,233,16],[198,19,233,17],[198,20,233,18],[199,4,234,2],[199,5,234,3],[199,6,234,4],[200,2,235,0],[201,2,237,7],[201,11,237,16,"retrySymbolicateLogNow"],[201,33,237,38,"retrySymbolicateLogNow"],[201,34,237,39,"log"],[201,37,237,53],[201,39,237,55],[202,4,238,2,"log"],[202,7,238,5],[202,8,238,6,"retrySymbolicate"],[202,24,238,22],[202,25,238,23],[202,37,238,29],[203,6,239,4,"handleUpdate"],[203,18,239,16],[203,19,239,17],[203,20,239,18],[204,4,240,2],[204,5,240,3],[204,6,240,4],[205,2,241,0],[206,2,243,7],[206,11,243,16,"symbolicateLogLazy"],[206,29,243,34,"symbolicateLogLazy"],[206,30,243,35,"log"],[206,33,243,49],[206,35,243,51],[207,4,244,2,"log"],[207,7,244,5],[207,8,244,6,"symbolicate"],[207,19,244,17],[207,20,244,18],[207,21,244,19],[208,2,245,0],[209,2,247,7],[209,11,247,16,"clear"],[209,16,247,21,"clear"],[209,17,247,21],[209,19,247,30],[210,4,248,2],[210,8,248,6,"logs"],[210,12,248,10],[210,13,248,11,"size"],[210,17,248,15],[210,20,248,18],[210,21,248,19],[210,23,248,21],[211,6,249,4,"logs"],[211,10,249,8],[211,13,249,11],[211,17,249,15,"Set"],[211,20,249,18],[211,21,249,19],[211,22,249,20],[212,6,250,4,"setSelectedLog"],[212,20,250,18],[212,21,250,19],[212,22,250,20],[212,23,250,21],[212,24,250,22],[213,4,251,2],[214,2,252,0],[215,2,254,7],[215,11,254,16,"setSelectedLog"],[215,25,254,30,"setSelectedLog"],[215,26,254,31,"proposedNewIndex"],[215,42,254,55],[215,44,254,63],[216,4,255,2],[216,8,255,8,"oldIndex"],[216,16,255,16],[216,19,255,19,"_selectedIndex"],[216,33,255,33],[217,4,256,2],[217,8,256,6,"newIndex"],[217,16,256,14],[217,19,256,17,"proposedNewIndex"],[217,35,256,33],[218,4,258,2],[218,8,258,8,"logArray"],[218,16,258,16],[218,19,258,19,"Array"],[218,24,258,24],[218,25,258,25,"from"],[218,29,258,29],[218,30,258,30,"logs"],[218,34,258,34],[218,35,258,35],[219,4,259,2],[219,8,259,6,"index"],[219,13,259,11],[219,16,259,14,"logArray"],[219,24,259,22],[219,25,259,23,"length"],[219,31,259,29],[219,34,259,32],[219,35,259,33],[220,4,260,2],[220,11,260,9,"index"],[220,16,260,14],[220,20,260,18],[220,21,260,19],[220,23,260,21],[221,6,261,4],[222,6,262,4],[222,10,262,8,"logArray"],[222,18,262,16],[222,19,262,17,"index"],[222,24,262,22],[222,25,262,23],[222,26,262,24,"level"],[222,31,262,29],[222,36,262,34],[222,44,262,42],[222,46,262,44],[223,8,263,6,"newIndex"],[223,16,263,14],[223,19,263,17,"index"],[223,24,263,22],[224,8,264,6],[225,6,265,4],[226,6,266,4,"index"],[226,11,266,9],[226,15,266,13],[226,16,266,14],[227,4,267,2],[228,4,268,2,"_selectedIndex"],[228,18,268,16],[228,21,268,19,"newIndex"],[228,29,268,27],[229,4,269,2,"handleUpdate"],[229,16,269,14],[229,17,269,15],[229,18,269,16],[230,4,270,2],[230,8,270,6,"NativeLogBox"],[230,29,270,18],[230,31,270,20],[231,6,271,4,"setTimeout"],[231,16,271,14],[231,17,271,15],[231,29,271,21],[232,8,272,6],[232,12,272,10,"oldIndex"],[232,20,272,18],[232,23,272,21],[232,24,272,22],[232,28,272,26,"newIndex"],[232,36,272,34],[232,40,272,38],[232,41,272,39],[232,43,272,41],[233,10,273,8,"NativeLogBox"],[233,31,273,20],[233,32,273,21,"show"],[233,36,273,25],[233,37,273,26],[233,38,273,27],[234,8,274,6],[234,9,274,7],[234,15,274,13],[234,19,274,17,"oldIndex"],[234,27,274,25],[234,31,274,29],[234,32,274,30],[234,36,274,34,"newIndex"],[234,44,274,42],[234,47,274,45],[234,48,274,46],[234,50,274,48],[235,10,275,8,"NativeLogBox"],[235,31,275,20],[235,32,275,21,"hide"],[235,36,275,25],[235,37,275,26],[235,38,275,27],[236,8,276,6],[237,6,277,4],[237,7,277,5],[237,9,277,7],[237,10,277,8],[237,11,277,9],[238,4,278,2],[239,2,279,0],[240,2,281,7],[240,11,281,16,"clearWarnings"],[240,24,281,29,"clearWarnings"],[240,25,281,29],[240,27,281,38],[241,4,282,2],[241,8,282,8,"newLogs"],[241,15,282,15],[241,18,282,18,"Array"],[241,23,282,23],[241,24,282,24,"from"],[241,28,282,28],[241,29,282,29,"logs"],[241,33,282,33],[241,34,282,34],[241,35,282,35,"filter"],[241,41,282,41],[241,42,282,42],[241,52,282,42,"log"],[241,55,282,45],[242,6,282,45],[242,13,282,49,"log"],[242,16,282,52],[242,17,282,53,"level"],[242,22,282,58],[242,27,282,63],[242,33,282,69],[243,4,282,69],[243,6,282,70],[244,4,283,2],[244,8,283,6,"newLogs"],[244,15,283,13],[244,16,283,14,"length"],[244,22,283,20],[244,27,283,25,"logs"],[244,31,283,29],[244,32,283,30,"size"],[244,36,283,34],[244,38,283,36],[245,6,284,4,"logs"],[245,10,284,8],[245,13,284,11],[245,17,284,15,"Set"],[245,20,284,18],[245,21,284,19,"newLogs"],[245,28,284,26],[245,29,284,27],[246,6,285,4,"setSelectedLog"],[246,20,285,18],[246,21,285,19],[246,22,285,20],[246,23,285,21],[246,24,285,22],[247,6,286,4,"handleUpdate"],[247,18,286,16],[247,19,286,17],[247,20,286,18],[248,4,287,2],[249,2,288,0],[250,2,290,7],[250,11,290,16,"clearErrors"],[250,22,290,27,"clearErrors"],[250,23,290,27],[250,25,290,36],[251,4,291,2],[251,8,291,8,"newLogs"],[251,15,291,15],[251,18,291,18,"Array"],[251,23,291,23],[251,24,291,24,"from"],[251,28,291,28],[251,29,291,29,"logs"],[251,33,291,33],[251,34,291,34],[251,35,291,35,"filter"],[251,41,291,41],[251,42,292,4],[251,52,292,4,"log"],[251,55,292,7],[252,6,292,7],[252,13,292,11,"log"],[252,16,292,14],[252,17,292,15,"level"],[252,22,292,20],[252,27,292,25],[252,34,292,32],[252,38,292,36,"log"],[252,41,292,39],[252,42,292,40,"level"],[252,47,292,45],[252,52,292,50],[252,59,292,57],[253,4,292,57],[253,5,293,2],[253,6,293,3],[254,4,294,2],[254,8,294,6,"newLogs"],[254,15,294,13],[254,16,294,14,"length"],[254,22,294,20],[254,27,294,25,"logs"],[254,31,294,29],[254,32,294,30,"size"],[254,36,294,34],[254,38,294,36],[255,6,295,4,"logs"],[255,10,295,8],[255,13,295,11],[255,17,295,15,"Set"],[255,20,295,18],[255,21,295,19,"newLogs"],[255,28,295,26],[255,29,295,27],[256,6,296,4,"setSelectedLog"],[256,20,296,18],[256,21,296,19],[256,22,296,20],[256,23,296,21],[256,24,296,22],[257,4,297,2],[258,2,298,0],[259,2,300,7],[259,11,300,16,"dismiss"],[259,18,300,23,"dismiss"],[259,19,300,24,"log"],[259,22,300,38],[259,24,300,46],[260,4,301,2],[260,8,301,6,"logs"],[260,12,301,10],[260,13,301,11,"has"],[260,16,301,14],[260,17,301,15,"log"],[260,20,301,18],[260,21,301,19],[260,23,301,21],[261,6,302,4,"logs"],[261,10,302,8],[261,11,302,9,"delete"],[261,17,302,15],[261,18,302,16,"log"],[261,21,302,19],[261,22,302,20],[262,6,303,4,"handleUpdate"],[262,18,303,16],[262,19,303,17],[262,20,303,18],[263,4,304,2],[264,2,305,0],[265,2,307,7],[265,11,307,16,"setWarningFilter"],[265,27,307,32,"setWarningFilter"],[265,28,307,33,"filter"],[265,34,307,54],[265,36,307,62],[266,4,308,2,"warningFilter"],[266,17,308,15],[266,20,308,18,"filter"],[266,26,308,24],[267,2,309,0],[268,2,311,7],[268,11,311,16,"setAppInfo"],[268,21,311,26,"setAppInfo"],[268,22,311,27,"info"],[268,26,311,46],[268,28,311,54],[269,4,312,2,"appInfo"],[269,11,312,9],[269,14,312,12,"info"],[269,18,312,16],[270,2,313,0],[271,2,315,7],[271,11,315,16,"getAppInfo"],[271,21,315,26,"getAppInfo"],[271,22,315,26],[271,24,315,39],[272,4,316,2],[272,11,316,9,"appInfo"],[272,18,316,16],[272,22,316,20],[272,26,316,24],[272,29,316,27,"appInfo"],[272,36,316,34],[272,37,316,35],[272,38,316,36],[272,41,316,39],[272,45,316,43],[273,2,317,0],[274,2,319,7],[274,11,319,16,"checkWarningFilter"],[274,29,319,34,"checkWarningFilter"],[274,30,319,35,"format"],[274,36,319,49],[274,38,319,64],[275,4,320,2],[275,11,320,9,"warningFilter"],[275,24,320,22],[275,25,320,23,"format"],[275,31,320,29],[275,32,320,30],[276,2,321,0],[277,2,323,7],[277,11,323,16,"getIgnorePatterns"],[277,28,323,33,"getIgnorePatterns"],[277,29,323,33],[277,31,323,67],[278,4,324,2],[278,11,324,9,"Array"],[278,16,324,14],[278,17,324,15,"from"],[278,21,324,19],[278,22,324,20,"ignorePatterns"],[278,36,324,34],[278,37,324,35],[279,2,325,0],[280,2,327,7],[280,11,327,16,"addIgnorePatterns"],[280,28,327,33,"addIgnorePatterns"],[280,29,328,2,"patterns"],[280,37,328,41],[280,39,329,8],[281,4,330,2],[281,8,330,8,"existingSize"],[281,20,330,20],[281,23,330,23,"ignorePatterns"],[281,37,330,37],[281,38,330,38,"size"],[281,42,330,42],[282,4,331,2],[283,4,332,2],[284,4,333,2,"patterns"],[284,12,333,10],[284,13,333,11,"forEach"],[284,20,333,18],[284,21,333,19],[284,31,333,20,"pattern"],[284,38,333,42],[284,40,333,47],[285,6,334,4],[285,10,334,8,"pattern"],[285,17,334,15],[285,29,334,27,"RegExp"],[285,35,334,33],[285,37,334,35],[286,8,335,6],[286,13,335,11],[286,17,335,17,"existingPattern"],[286,32,335,32],[286,36,335,36,"ignorePatterns"],[286,50,335,50],[286,52,335,52],[287,10,336,8],[287,14,337,10,"existingPattern"],[287,29,337,25],[287,41,337,37,"RegExp"],[287,47,337,43],[287,51,338,10,"existingPattern"],[287,66,338,25],[287,67,338,26,"toString"],[287,75,338,34],[287,76,338,35],[287,77,338,36],[287,82,338,41,"pattern"],[287,89,338,48],[287,90,338,49,"toString"],[287,98,338,57],[287,99,338,58],[287,100,338,59],[287,102,339,10],[288,12,340,10],[289,10,341,8],[290,8,342,6],[291,8,343,6,"ignorePatterns"],[291,22,343,20],[291,23,343,21,"add"],[291,26,343,24],[291,27,343,25,"pattern"],[291,34,343,32],[291,35,343,33],[292,6,344,4],[293,6,345,4,"ignorePatterns"],[293,20,345,18],[293,21,345,19,"add"],[293,24,345,22],[293,25,345,23,"pattern"],[293,32,345,30],[293,33,345,31],[294,4,346,2],[294,5,346,3],[294,6,346,4],[295,4,347,2],[295,8,347,6,"ignorePatterns"],[295,22,347,20],[295,23,347,21,"size"],[295,27,347,25],[295,32,347,30,"existingSize"],[295,44,347,42],[295,46,347,44],[296,6,348,4],[297,4,349,2],[298,4,350,2],[299,4,351,2],[300,4,352,2],[301,4,353,2],[302,4,354,2,"logs"],[302,8,354,6],[302,11,354,9],[302,15,354,13,"Set"],[302,18,354,16],[302,19,355,4,"Array"],[302,24,355,9],[302,25,355,10,"from"],[302,29,355,14],[302,30,355,15,"logs"],[302,34,355,19],[302,35,355,20],[302,36,355,21,"filter"],[302,42,355,27],[302,43,355,28],[302,53,355,28,"log"],[302,56,355,31],[303,6,355,31],[303,13,355,35],[303,14,355,36,"isMessageIgnored"],[303,30,355,52],[303,31,355,53,"log"],[303,34,355,56],[303,35,355,57,"message"],[303,42,355,64],[303,43,355,65,"content"],[303,50,355,72],[303,51,355,73],[304,4,355,73],[304,6,356,2],[304,7,356,3],[305,4,357,2,"handleUpdate"],[305,16,357,14],[305,17,357,15],[305,18,357,16],[306,2,358,0],[307,2,360,7],[307,11,360,16,"setDisabled"],[307,22,360,27,"setDisabled"],[307,23,360,28,"value"],[307,28,360,42],[307,30,360,50],[308,4,361,2],[308,8,361,6,"value"],[308,13,361,11],[308,18,361,16,"_isDisabled"],[308,29,361,27],[308,31,361,29],[309,6,362,4],[310,4,363,2],[311,4,364,2,"_isDisabled"],[311,15,364,13],[311,18,364,16,"value"],[311,23,364,21],[312,4,365,2,"handleUpdate"],[312,16,365,14],[312,17,365,15],[312,18,365,16],[313,2,366,0],[314,2,368,7],[314,11,368,16,"isDisabled"],[314,21,368,26,"isDisabled"],[314,22,368,26],[314,24,368,38],[315,4,369,2],[315,11,369,9,"_isDisabled"],[315,22,369,20],[316,2,370,0],[317,2,372,7],[317,11,372,16,"observe"],[317,18,372,23,"observe"],[317,19,372,24,"observer"],[317,27,372,42],[317,29,372,58],[318,4,373,2],[318,8,373,8,"subscription"],[318,20,373,20],[318,23,373,23],[319,6,373,24,"observer"],[319,14,373,32],[319,16,373,24,"observer"],[320,4,373,32],[320,5,373,33],[321,4,374,2,"observers"],[321,13,374,11],[321,14,374,12,"add"],[321,17,374,15],[321,18,374,16,"subscription"],[321,30,374,28],[321,31,374,29],[322,4,376,2,"observer"],[322,12,376,10],[322,13,376,11,"getNextState"],[322,25,376,23],[322,26,376,24],[322,27,376,25],[322,28,376,26],[323,4,378,2],[323,11,378,9],[324,6,379,4,"unsubscribe"],[324,17,379,15],[324,28,379,15,"unsubscribe"],[324,40,379,15],[324,42,379,24],[325,8,380,6,"observers"],[325,17,380,15],[325,18,380,16,"delete"],[325,24,380,22],[325,25,380,23,"subscription"],[325,37,380,35],[325,38,380,36],[326,6,381,4],[327,4,382,2],[327,5,382,3],[328,2,383,0],[329,2,401,7],[329,11,401,16,"withSubscription"],[329,27,401,32,"withSubscription"],[329,28,402,2,"WrappedComponent"],[329,44,402,39],[329,46,403,33],[330,4,403,33],[330,8,404,8,"LogBoxStateSubscription"],[330,31,404,31],[330,57,404,31,"_React$Component"],[330,73,404,31],[331,6,404,31],[331,10,404,31,"_inherits2"],[331,20,404,31],[331,21,404,31,"default"],[331,28,404,31],[331,30,404,31,"LogBoxStateSubscription"],[331,53,404,31],[331,55,404,31,"_React$Component"],[331,71,404,31],[332,6,404,31],[332,10,404,31,"_super"],[332,16,404,31],[332,19,404,31,"_createSuper"],[332,31,404,31],[332,32,404,31,"LogBoxStateSubscription"],[332,55,404,31],[333,6,404,31],[333,15,404,31,"LogBoxStateSubscription"],[333,39,404,31],[334,8,404,31],[334,12,404,31,"_this"],[334,17,404,31],[335,8,404,31],[335,12,404,31,"_classCallCheck2"],[335,28,404,31],[335,29,404,31,"default"],[335,36,404,31],[335,44,404,31,"LogBoxStateSubscription"],[335,67,404,31],[336,8,404,31],[336,17,404,31,"_len"],[336,21,404,31],[336,24,404,31,"arguments"],[336,33,404,31],[336,34,404,31,"length"],[336,40,404,31],[336,42,404,31,"args"],[336,46,404,31],[336,53,404,31,"Array"],[336,58,404,31],[336,59,404,31,"_len"],[336,63,404,31],[336,66,404,31,"_key"],[336,70,404,31],[336,76,404,31,"_key"],[336,80,404,31],[336,83,404,31,"_len"],[336,87,404,31],[336,89,404,31,"_key"],[336,93,404,31],[337,10,404,31,"args"],[337,14,404,31],[337,15,404,31,"_key"],[337,19,404,31],[337,23,404,31,"arguments"],[337,32,404,31],[337,33,404,31,"_key"],[337,37,404,31],[338,8,404,31],[339,8,404,31,"_this"],[339,13,404,31],[339,16,404,31,"_super"],[339,22,404,31],[339,23,404,31,"call"],[339,27,404,31],[339,28,404,31,"apply"],[339,33,404,31],[339,34,404,31,"_super"],[339,40,404,31],[339,49,404,31,"concat"],[339,55,404,31],[339,56,404,31,"args"],[339,60,404,31],[340,8,404,31,"_this"],[340,13,404,31],[340,14,417,4,"state"],[340,19,417,9],[340,22,417,19],[341,10,418,6,"logs"],[341,14,418,10],[341,16,418,12],[341,20,418,16,"Set"],[341,23,418,19],[341,24,418,20],[341,25,418,21],[342,10,419,6,"isDisabled"],[342,20,419,16],[342,22,419,18],[342,27,419,23],[343,10,420,6,"hasError"],[343,18,420,14],[343,20,420,16],[343,25,420,21],[344,10,421,6,"selectedLogIndex"],[344,26,421,22],[344,28,421,24],[344,29,421,25],[345,8,422,4],[345,9,422,5],[346,8,422,5,"_this"],[346,13,422,5],[346,14,452,4,"_handleDismiss"],[346,28,452,18],[346,31,452,21],[346,43,452,33],[347,10,453,6],[348,10,454,6],[349,10,455,6],[350,10,456,6],[350,14,456,6,"_this$state"],[350,25,456,6],[350,28,456,50,"_this"],[350,33,456,50],[350,34,456,55,"state"],[350,39,456,60],[351,12,456,13,"selectedLogIndex"],[351,28,456,29],[351,31,456,29,"_this$state"],[351,42,456,29],[351,43,456,13,"selectedLogIndex"],[351,59,456,29],[352,12,456,37,"stateLogs"],[352,21,456,46],[352,24,456,46,"_this$state"],[352,35,456,46],[352,36,456,31,"logs"],[352,40,456,35],[353,10,457,6],[353,14,457,12,"logsArray"],[353,23,457,21],[353,26,457,24,"Array"],[353,31,457,29],[353,32,457,30,"from"],[353,36,457,34],[353,37,457,35,"stateLogs"],[353,46,457,44],[353,47,457,45],[354,10,458,6],[354,14,458,10,"selectedLogIndex"],[354,30,458,26],[354,34,458,30],[354,38,458,34],[354,40,458,36],[355,12,459,8],[355,16,459,12,"logsArray"],[355,25,459,21],[355,26,459,22,"length"],[355,32,459,28],[355,35,459,31],[355,36,459,32],[355,40,459,36],[355,41,459,37],[355,43,459,39],[356,14,460,10,"setSelectedLog"],[356,28,460,24],[356,29,460,25],[356,30,460,26],[356,31,460,27],[356,32,460,28],[357,12,461,8],[357,13,461,9],[357,19,461,15],[357,23,461,19,"selectedLogIndex"],[357,39,461,35],[357,43,461,39,"logsArray"],[357,52,461,48],[357,53,461,49,"length"],[357,59,461,55],[357,62,461,58],[357,63,461,59],[357,65,461,61],[358,14,462,10,"setSelectedLog"],[358,28,462,24],[358,29,462,25,"selectedLogIndex"],[358,45,462,41],[358,48,462,44],[358,49,462,45],[358,50,462,46],[359,12,463,8],[360,12,465,8,"dismiss"],[360,19,465,15],[360,20,465,16,"logsArray"],[360,29,465,25],[360,30,465,26,"selectedLogIndex"],[360,46,465,42],[360,47,465,43],[360,48,465,44],[361,10,466,6],[362,8,467,4],[362,9,467,5],[363,8,467,5,"_this"],[363,13,467,5],[363,14,469,4,"_handleMinimize"],[363,29,469,19],[363,32,469,22],[363,44,469,34],[364,10,470,6,"setSelectedLog"],[364,24,470,20],[364,25,470,21],[364,26,470,22],[364,27,470,23],[364,28,470,24],[365,8,471,4],[365,9,471,5],[366,8,471,5,"_this"],[366,13,471,5],[366,14,473,4,"_handleSetSelectedLog"],[366,35,473,25],[366,38,473,28],[366,48,473,29,"index"],[366,53,473,42],[366,55,473,53],[367,10,474,6,"setSelectedLog"],[367,24,474,20],[367,25,474,21,"index"],[367,30,474,26],[367,31,474,27],[368,8,475,4],[368,9,475,5],[369,8,475,5],[369,15,475,5,"_this"],[369,20,475,5],[370,6,475,5],[371,6,475,5],[371,10,475,5,"_createClass2"],[371,23,475,5],[371,24,475,5,"default"],[371,31,475,5],[371,33,475,5,"LogBoxStateSubscription"],[371,56,475,5],[372,8,475,5,"key"],[372,11,475,5],[373,8,475,5,"value"],[373,13,475,5],[373,15,409,4],[373,24,409,4,"componentDidCatch"],[373,42,409,22,"err"],[373,45,409,32],[373,47,409,34,"errorInfo"],[373,56,409,74],[373,58,409,76],[374,10,410,6],[375,0,411,0],[376,10,412,6,"reportLogBoxError"],[376,27,412,23],[376,28,412,24,"err"],[376,31,412,27],[376,33,412,29,"errorInfo"],[376,42,412,38],[376,43,412,39,"componentStack"],[376,57,412,53],[376,58,412,54],[377,8,413,4],[378,6,413,5],[379,8,413,5,"key"],[379,11,413,5],[380,8,413,5,"value"],[380,13,413,5],[380,15,424,4],[380,24,424,4,"render"],[380,31,424,4],[380,33,424,25],[381,10,425,6],[381,14,425,10],[381,18,425,14],[381,19,425,15,"state"],[381,24,425,20],[381,25,425,21,"hasError"],[381,33,425,29],[381,35,425,31],[382,12,426,8],[383,12,427,8],[384,12,428,8],[384,19,428,15],[384,23,428,19],[385,10,429,6],[386,10,431,6],[386,30,432,8],[386,34,432,8,"_jsxRuntime"],[386,45,432,8],[386,46,432,8,"jsx"],[386,49,432,8],[386,51,432,9,"WrappedComponent"],[386,67,432,25],[387,12,433,10,"logs"],[387,16,433,14],[387,18,433,16,"Array"],[387,23,433,21],[387,24,433,22,"from"],[387,28,433,26],[387,29,433,27],[387,33,433,31],[387,34,433,32,"state"],[387,39,433,37],[387,40,433,38,"logs"],[387,44,433,42],[387,45,433,44],[388,12,434,10,"isDisabled"],[388,22,434,20],[388,24,434,22],[388,28,434,26],[388,29,434,27,"state"],[388,34,434,32],[388,35,434,33,"isDisabled"],[388,45,434,44],[389,12,435,10,"selectedLogIndex"],[389,28,435,26],[389,30,435,28],[389,34,435,32],[389,35,435,33,"state"],[389,40,435,38],[389,41,435,39,"selectedLogIndex"],[390,10,435,56],[390,11,436,9],[390,12,436,10],[391,8,438,4],[392,6,438,5],[393,8,438,5,"key"],[393,11,438,5],[394,8,438,5,"value"],[394,13,438,5],[394,15,440,4],[394,24,440,4,"componentDidMount"],[394,42,440,4],[394,44,440,30],[395,10,440,30],[395,14,440,30,"_this2"],[395,20,440,30],[396,10,441,6],[396,14,441,10],[396,15,441,11,"_subscription"],[396,28,441,24],[396,31,441,27,"observe"],[396,38,441,34],[396,39,441,35],[396,49,441,35,"data"],[396,53,441,39],[396,55,441,43],[397,12,442,8,"_this2"],[397,18,442,12],[397,19,442,13,"setState"],[397,27,442,21],[397,28,442,22,"data"],[397,32,442,26],[397,33,442,27],[398,10,443,6],[398,11,443,7],[398,12,443,8],[399,8,444,4],[400,6,444,5],[401,8,444,5,"key"],[401,11,444,5],[402,8,444,5,"value"],[402,13,444,5],[402,15,446,4],[402,24,446,4,"componentWillUnmount"],[402,45,446,4],[402,47,446,33],[403,10,447,6],[403,14,447,10],[403,18,447,14],[403,19,447,15,"_subscription"],[403,32,447,28],[403,36,447,32],[403,40,447,36],[403,42,447,38],[404,12,448,8],[404,16,448,12],[404,17,448,13,"_subscription"],[404,30,448,26],[404,31,448,27,"unsubscribe"],[404,42,448,38],[404,43,448,39],[404,44,448,40],[405,10,449,6],[406,8,450,4],[407,6,450,5],[408,8,450,5,"key"],[408,11,450,5],[409,8,450,5,"value"],[409,13,450,5],[409,15,405,4],[409,24,405,4,"getDerivedStateFromError"],[409,49,405,4],[409,51,405,59],[410,10,406,6],[410,17,406,13],[411,12,406,14,"hasError"],[411,20,406,22],[411,22,406,24],[412,10,406,28],[412,11,406,29],[413,8,407,4],[414,6,407,5],[415,6,407,5],[415,13,407,5,"LogBoxStateSubscription"],[415,36,407,5],[416,4,407,5],[416,6,404,40,"React"],[416,11,404,45],[416,12,404,46,"Component"],[416,21,404,55],[417,4,478,2],[417,11,478,9,"LogBoxStateSubscription"],[417,34,478,32],[418,2,479,0],[419,0,479,1]],"functionMap":{"names":["<global>","warningFilter","getNextState","reportLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setImmediate$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_0","addLog","addException","symbolicateLogNow","log.symbolicate$argument_0","retrySymbolicateLogNow","log.retrySymbolicate$argument_0","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","setWarningFilter","setAppInfo","getAppInfo","checkWarningFilter","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;mCC0E;CDU;AEK;CFM;OGE;CHW;OIE;CJE;OKE;CLU;AME;iCCE;wBCG,mCD;KDC;CNE;ASE;qCCuB;KDQ;yCEE;KFI;uBGE;KHQ;CTQ;OaE;eNK;GMiB;CbC;OcE;ePG;GOM;CdC;OeE;kBCC;GDE;CfC;OiBE;uBCC;GDE;CjBC;OmBE;CnBE;OoBE;CpBK;OqBE;eViB;KUM;CrBE;OsBE;0CCC,2BD;CtBM;OwBE;IDE,qDC;CxBM;OyBE;CzBK;O0BE;C1BE;O2BE;C3BE;O4BE;C5BE;O6BE;C7BE;O8BE;C9BE;O+BE;mBCM;GDa;4BRS,6CQ;C/BG;OiCE;CjCM;OkCE;ClCE;OmCE;ICO;KDE;CnCE;OqCkB;ECG;ICC;KDE;IEE;KFI;IGW;KHc;IIE;mCCC;ODE;KJC;IME;KNI;qBOE;KPe;sBQE;KRE;4BSE;KTE;GDC;CrCG"}},"type":"js/module"}]}