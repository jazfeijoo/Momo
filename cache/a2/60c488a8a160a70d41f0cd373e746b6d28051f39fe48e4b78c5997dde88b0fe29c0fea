{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":211,"column":0,"index":6375}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./BatchedBridge","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":22,"index":318},"end":{"line":15,"column":48,"index":344}}],"key":"XuO47KMtTKxjZq4wCgiYZw5LEdc="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":18,"index":364},"end":{"line":16,"column":38,"index":384}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"../Utilities/defineLazyObjectProperty","data":{"asyncType":null,"locs":[{"start":{"line":187,"column":35,"index":5640},"end":{"line":187,"column":83,"index":5688}}],"key":"OJsVdDpUUvLcTX9jWYrm24RC9kE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var BatchedBridge = _$$_REQUIRE(_dependencyMap[1], \"./BatchedBridge\");\n  var invariant = _$$_REQUIRE(_dependencyMap[2], \"invariant\");\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n    var _config = _slicedToArray(config, 5),\n      moduleName = _config[0],\n      constants = _config[1],\n      methods = _config[2],\n      promiseMethods = _config[3],\n      syncMethods = _config[4];\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n    if (!constants && !methods) {\n      // Module contents will be filled in lazily later\n      return {\n        name: moduleName\n      };\n    }\n    var module = {};\n    methods && methods.forEach(function (methodName, methodID) {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID) || false;\n      var isSync = syncMethods && arrayContains(syncMethods, methodID) || false;\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n    Object.assign(module, constants);\n    if (module.getConstants == null) {\n      module.getConstants = function () {\n        return constants || Object.freeze({});\n      };\n    } else {\n      console.warn(`Unable to define method 'getConstants()' on NativeModule '${moduleName}'. NativeModule '${moduleName}' already has a constant or method called 'getConstants'. Please remove it.`);\n    }\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n    return {\n      name: moduleName,\n      module: module\n    };\n  }\n\n  // export this method as a global so we can call it from native\n  global.__fbGenNativeModule = genModule;\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n    if (type === 'promise') {\n      fn = function promiseMethodWrapper() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        // In case we reject, capture a useful stack trace here.\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        var enqueueingFrameError = new Error();\n        return new Promise(function (resolve, reject) {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {\n            return resolve(data);\n          }, function (errorData) {\n            return reject(updateErrorWithErrorData(errorData, enqueueingFrameError));\n          });\n        });\n      };\n    } else {\n      fn = function nonPromiseMethodWrapper() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        // $FlowFixMe[incompatible-type]\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        // $FlowFixMe[incompatible-type]\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        // $FlowFixMe[unsafe-addition]\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        var newArgs = args.slice(0, args.length - callbackCount);\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, newArgs, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, newArgs, onFail, onSuccess);\n        }\n      };\n    }\n    // $FlowFixMe[prop-missing]\n    fn.type = type;\n    return fn;\n  }\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n  function updateErrorWithErrorData(errorData, error) {\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\n     * parameters */\n    return Object.assign(error, errorData || {});\n  }\n  var NativeModules = {};\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else if (!global.nativeExtensions) {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[3], \"../Utilities/defineLazyObjectProperty\");\n    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {\n      // Initially this config will only contain the module name when running in JSC. The actual\n      // configuration of the module will be lazily loaded.\n      var info = genModule(config, moduleID);\n      if (!info) {\n        return;\n      }\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      }\n      // If there's no module config, define a lazy getter\n      else {\n        defineLazyObjectProperty(NativeModules, info.name, {\n          get: function get() {\n            return loadModule(info.name, moduleID);\n          }\n        });\n      }\n    });\n  }\n  module.exports = NativeModules;\n});","lineCount":150,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_slicedToArray"],[14,20,11,13],[14,23,11,13,"_$$_REQUIRE"],[14,34,11,13],[14,35,11,13,"_dependencyMap"],[14,49,11,13],[15,2,15,0],[15,6,15,6,"BatchedBridge"],[15,19,15,19],[15,22,15,22,"require"],[15,33,15,29],[15,34,15,29,"_dependencyMap"],[15,48,15,29],[15,70,15,47],[15,71,15,48],[16,2,16,0],[16,6,16,6,"invariant"],[16,15,16,15],[16,18,16,18,"require"],[16,29,16,25],[16,30,16,25,"_dependencyMap"],[16,44,16,25],[16,60,16,37],[16,61,16,38],[17,2,28,0],[17,11,28,9,"genModule"],[17,20,28,18,"genModule"],[17,21,29,2,"config"],[17,27,29,23],[17,29,30,2,"moduleID"],[17,37,30,18],[17,39,35,2],[18,4,36,2],[18,8,36,6],[18,9,36,7,"config"],[18,15,36,13],[18,17,36,15],[19,6,37,4],[19,13,37,11],[19,17,37,15],[20,4,38,2],[21,4,40,2],[21,8,40,2,"_config"],[21,15,40,2],[21,18,40,2,"_slicedToArray"],[21,32,40,2],[21,33,40,72,"config"],[21,39,40,78],[22,6,40,9,"moduleName"],[22,16,40,19],[22,19,40,19,"_config"],[22,26,40,19],[23,6,40,21,"constants"],[23,15,40,30],[23,18,40,30,"_config"],[23,25,40,30],[24,6,40,32,"methods"],[24,13,40,39],[24,16,40,39,"_config"],[24,23,40,39],[25,6,40,41,"promiseMethods"],[25,20,40,55],[25,23,40,55,"_config"],[25,30,40,55],[26,6,40,57,"syncMethods"],[26,17,40,68],[26,20,40,68,"_config"],[26,27,40,68],[27,4,41,2,"invariant"],[27,13,41,11],[27,14,42,4],[27,15,42,5,"moduleName"],[27,25,42,15],[27,26,42,16,"startsWith"],[27,36,42,26],[27,37,42,27],[27,42,42,32],[27,43,42,33],[27,47,42,37],[27,48,42,38,"moduleName"],[27,58,42,48],[27,59,42,49,"startsWith"],[27,69,42,59],[27,70,42,60],[27,74,42,64],[27,75,42,65],[27,77,43,4],[27,143,43,70],[27,146,44,6],[27,163,44,23],[27,166,45,6,"moduleName"],[27,176,46,2],[27,177,46,3],[28,4,48,2],[28,8,48,6],[28,9,48,7,"constants"],[28,18,48,16],[28,22,48,20],[28,23,48,21,"methods"],[28,30,48,28],[28,32,48,30],[29,6,49,4],[30,6,50,4],[30,13,50,11],[31,8,50,12,"name"],[31,12,50,16],[31,14,50,18,"moduleName"],[32,6,50,28],[32,7,50,29],[33,4,51,2],[34,4,53,2],[34,8,53,8,"module"],[34,14,53,33],[34,17,53,36],[34,18,53,37],[34,19,53,38],[35,4,54,2,"methods"],[35,11,54,9],[35,15,55,4,"methods"],[35,22,55,11],[35,23,55,12,"forEach"],[35,30,55,19],[35,31,55,20],[35,41,55,21,"methodName"],[35,51,55,31],[35,53,55,33,"methodID"],[35,61,55,41],[35,63,55,46],[36,6,56,6],[36,10,56,12,"isPromise"],[36,19,56,21],[36,22,57,9,"promiseMethods"],[36,36,57,23],[36,40,57,27,"arrayContains"],[36,53,57,40],[36,54,57,41,"promiseMethods"],[36,68,57,55],[36,70,57,57,"methodID"],[36,78,57,65],[36,79,57,66],[36,83,57,71],[36,88,57,76],[37,6,58,6],[37,10,58,12,"isSync"],[37,16,58,18],[37,19,59,9,"syncMethods"],[37,30,59,20],[37,34,59,24,"arrayContains"],[37,47,59,37],[37,48,59,38,"syncMethods"],[37,59,59,49],[37,61,59,51,"methodID"],[37,69,59,59],[37,70,59,60],[37,74,59,65],[37,79,59,70],[38,6,60,6,"invariant"],[38,15,60,15],[38,16,61,8],[38,17,61,9,"isPromise"],[38,26,61,18],[38,30,61,22],[38,31,61,23,"isSync"],[38,37,61,29],[38,39,62,8],[38,96,63,6],[38,97,63,7],[39,6,64,6],[39,10,64,12,"methodType"],[39,20,64,22],[39,23,64,25,"isPromise"],[39,32,64,34],[39,35,64,37],[39,44,64,46],[39,47,64,49,"isSync"],[39,53,64,55],[39,56,64,58],[39,62,64,64],[39,65,64,67],[39,72,64,74],[40,6,65,6,"module"],[40,12,65,12],[40,13,65,13,"methodName"],[40,23,65,23],[40,24,65,24],[40,27,65,27,"genMethod"],[40,36,65,36],[40,37,65,37,"moduleID"],[40,45,65,45],[40,47,65,47,"methodID"],[40,55,65,55],[40,57,65,57,"methodType"],[40,67,65,67],[40,68,65,68],[41,4,66,4],[41,5,66,5],[41,6,66,6],[42,4,68,2,"Object"],[42,10,68,8],[42,11,68,9,"assign"],[42,17,68,15],[42,18,68,16,"module"],[42,24,68,22],[42,26,68,24,"constants"],[42,35,68,33],[42,36,68,34],[43,4,70,2],[43,8,70,6,"module"],[43,14,70,12],[43,15,70,13,"getConstants"],[43,27,70,25],[43,31,70,29],[43,35,70,33],[43,37,70,35],[44,6,71,4,"module"],[44,12,71,10],[44,13,71,11,"getConstants"],[44,25,71,23],[44,28,71,26],[45,8,71,26],[45,15,71,32,"constants"],[45,24,71,41],[45,28,71,45,"Object"],[45,34,71,51],[45,35,71,52,"freeze"],[45,41,71,58],[45,42,71,59],[45,43,71,60],[45,44,71,61],[45,45,71,62],[46,6,71,62],[47,4,72,2],[47,5,72,3],[47,11,72,9],[48,6,73,4,"console"],[48,13,73,11],[48,14,73,12,"warn"],[48,18,73,16],[48,19,74,7],[48,80,74,67,"moduleName"],[48,90,74,78],[48,110,74,97,"moduleName"],[48,120,74,108],[48,197,75,4],[48,198,75,5],[49,4,76,2],[50,4,78,2],[50,8,78,6,"__DEV__"],[50,15,78,13],[50,17,78,15],[51,6,79,4,"BatchedBridge"],[51,19,79,17],[51,20,79,18,"createDebugLookup"],[51,37,79,35],[51,38,79,36,"moduleID"],[51,46,79,44],[51,48,79,46,"moduleName"],[51,58,79,56],[51,60,79,58,"methods"],[51,67,79,65],[51,68,79,66],[52,4,80,2],[53,4,82,2],[53,11,82,9],[54,6,82,10,"name"],[54,10,82,14],[54,12,82,16,"moduleName"],[54,22,82,26],[55,6,82,28,"module"],[55,12,82,34],[55,14,82,28,"module"],[56,4,82,34],[56,5,82,35],[57,2,83,0],[59,2,85,0],[60,2,86,0,"global"],[60,8,86,6],[60,9,86,7,"__fbGenNativeModule"],[60,28,86,26],[60,31,86,29,"genModule"],[60,40,86,38],[61,2,88,0],[61,11,88,9,"loadModule"],[61,21,88,19,"loadModule"],[61,22,88,20,"name"],[61,26,88,32],[61,28,88,34,"moduleID"],[61,36,88,50],[61,38,88,60],[62,4,89,2,"invariant"],[62,13,89,11],[62,14,90,4,"global"],[62,20,90,10],[62,21,90,11,"nativeRequireModuleConfig"],[62,46,90,36],[62,48,91,4],[62,110,92,2],[62,111,92,3],[63,4,93,2],[63,8,93,8,"config"],[63,14,93,14],[63,17,93,17,"global"],[63,23,93,23],[63,24,93,24,"nativeRequireModuleConfig"],[63,49,93,49],[63,50,93,50,"name"],[63,54,93,54],[63,55,93,55],[64,4,94,2],[64,8,94,8,"info"],[64,12,94,12],[64,15,94,15,"genModule"],[64,24,94,24],[64,25,94,25,"config"],[64,31,94,31],[64,33,94,33,"moduleID"],[64,41,94,41],[64,42,94,42],[65,4,95,2],[65,11,95,9,"info"],[65,15,95,13],[65,19,95,17,"info"],[65,23,95,21],[65,24,95,22,"module"],[65,30,95,28],[66,2,96,0],[67,2,98,0],[67,11,98,9,"genMethod"],[67,20,98,18,"genMethod"],[67,21,98,19,"moduleID"],[67,29,98,35],[67,31,98,37,"methodID"],[67,39,98,53],[67,41,98,55,"type"],[67,45,98,71],[67,47,98,73],[68,4,99,2],[68,8,99,6,"fn"],[68,10,99,8],[68,13,99,11],[68,17,99,15],[69,4,100,2],[69,8,100,6,"type"],[69,12,100,10],[69,17,100,15],[69,26,100,24],[69,28,100,26],[70,6,101,4,"fn"],[70,8,101,6],[70,11,101,9],[70,20,101,18,"promiseMethodWrapper"],[70,40,101,38,"promiseMethodWrapper"],[70,41,101,38],[70,43,101,62],[71,8,101,62],[71,17,101,62,"_len"],[71,21,101,62],[71,24,101,62,"arguments"],[71,33,101,62],[71,34,101,62,"length"],[71,40,101,62],[71,42,101,42,"args"],[71,46,101,46],[71,53,101,46,"Array"],[71,58,101,46],[71,59,101,46,"_len"],[71,63,101,46],[71,66,101,46,"_key"],[71,70,101,46],[71,76,101,46,"_key"],[71,80,101,46],[71,83,101,46,"_len"],[71,87,101,46],[71,89,101,46,"_key"],[71,93,101,46],[72,10,101,42,"args"],[72,14,101,46],[72,15,101,46,"_key"],[72,19,101,46],[72,23,101,46,"arguments"],[72,32,101,46],[72,33,101,46,"_key"],[72,37,101,46],[73,8,101,46],[74,8,102,6],[75,8,103,6],[76,0,104,0],[77,8,105,6],[77,12,105,12,"enqueueingFrameError"],[77,32,105,47],[77,35,105,50],[77,39,105,54,"Error"],[77,44,105,59],[77,45,105,60],[77,46,105,61],[78,8,106,6],[78,15,106,13],[78,19,106,17,"Promise"],[78,26,106,24],[78,27,106,25],[78,37,106,26,"resolve"],[78,44,106,33],[78,46,106,35,"reject"],[78,52,106,41],[78,54,106,46],[79,10,107,8,"BatchedBridge"],[79,23,107,21],[79,24,107,22,"enqueueNativeCall"],[79,41,107,39],[79,42,108,10,"moduleID"],[79,50,108,18],[79,52,109,10,"methodID"],[79,60,109,18],[79,62,110,10,"args"],[79,66,110,14],[79,68,111,10],[79,78,111,10,"data"],[79,82,111,14],[80,12,111,14],[80,19,111,18,"resolve"],[80,26,111,25],[80,27,111,26,"data"],[80,31,111,30],[80,32,111,31],[81,10,111,31],[81,13,112,10],[81,23,112,10,"errorData"],[81,32,112,19],[82,12,112,19],[82,19,113,12,"reject"],[82,25,113,18],[82,26,114,14,"updateErrorWithErrorData"],[82,50,114,38],[82,51,115,17,"errorData"],[82,60,115,26],[82,62,116,16,"enqueueingFrameError"],[82,82,117,14],[82,83,118,12],[82,84,118,13],[83,10,118,13],[83,11,119,8],[83,12,119,9],[84,8,120,6],[84,9,120,7],[84,10,120,8],[85,6,121,4],[85,7,121,5],[86,4,122,2],[86,5,122,3],[86,11,122,9],[87,6,123,4,"fn"],[87,8,123,6],[87,11,123,9],[87,20,123,18,"nonPromiseMethodWrapper"],[87,43,123,41,"nonPromiseMethodWrapper"],[87,44,123,41],[87,46,123,65],[88,8,123,65],[88,17,123,65,"_len2"],[88,22,123,65],[88,25,123,65,"arguments"],[88,34,123,65],[88,35,123,65,"length"],[88,41,123,65],[88,43,123,45,"args"],[88,47,123,49],[88,54,123,49,"Array"],[88,59,123,49],[88,60,123,49,"_len2"],[88,65,123,49],[88,68,123,49,"_key2"],[88,73,123,49],[88,79,123,49,"_key2"],[88,84,123,49],[88,87,123,49,"_len2"],[88,92,123,49],[88,94,123,49,"_key2"],[88,99,123,49],[89,10,123,45,"args"],[89,14,123,49],[89,15,123,49,"_key2"],[89,20,123,49],[89,24,123,49,"arguments"],[89,33,123,49],[89,34,123,49,"_key2"],[89,39,123,49],[90,8,123,49],[91,8,124,6],[91,12,124,12,"lastArg"],[91,19,124,19],[91,22,124,22,"args"],[91,26,124,26],[91,27,124,27,"length"],[91,33,124,33],[91,36,124,36],[91,37,124,37],[91,40,124,40,"args"],[91,44,124,44],[91,45,124,45,"args"],[91,49,124,49],[91,50,124,50,"length"],[91,56,124,56],[91,59,124,59],[91,60,124,60],[91,61,124,61],[91,64,124,64],[91,68,124,68],[92,8,125,6],[92,12,125,12,"secondLastArg"],[92,25,125,25],[92,28,125,28,"args"],[92,32,125,32],[92,33,125,33,"length"],[92,39,125,39],[92,42,125,42],[92,43,125,43],[92,46,125,46,"args"],[92,50,125,50],[92,51,125,51,"args"],[92,55,125,55],[92,56,125,56,"length"],[92,62,125,62],[92,65,125,65],[92,66,125,66],[92,67,125,67],[92,70,125,70],[92,74,125,74],[93,8,126,6],[93,12,126,12,"hasSuccessCallback"],[93,30,126,30],[93,33,126,33],[93,40,126,40,"lastArg"],[93,47,126,47],[93,52,126,52],[93,62,126,62],[94,8,127,6],[94,12,127,12,"hasErrorCallback"],[94,28,127,28],[94,31,127,31],[94,38,127,38,"secondLastArg"],[94,51,127,51],[94,56,127,56],[94,66,127,66],[95,8,128,6,"hasErrorCallback"],[95,24,128,22],[95,28,129,8,"invariant"],[95,37,129,17],[95,38,130,10,"hasSuccessCallback"],[95,56,130,28],[95,58,131,10],[95,112,132,8],[95,113,132,9],[96,8,133,6],[97,8,134,6],[97,12,134,12,"onSuccess"],[97,21,134,39],[97,24,134,42,"hasSuccessCallback"],[97,42,134,60],[97,45,134,63,"lastArg"],[97,52,134,70],[97,55,134,73],[97,59,134,77],[98,8,135,6],[99,8,136,6],[99,12,136,12,"onFail"],[99,18,136,36],[99,21,136,39,"hasErrorCallback"],[99,37,136,55],[99,40,136,58,"secondLastArg"],[99,53,136,71],[99,56,136,74],[99,60,136,78],[100,8,137,6],[101,8,138,6],[101,12,138,12,"callbackCount"],[101,25,138,25],[101,28,138,28,"hasSuccessCallback"],[101,46,138,46],[101,49,138,49,"hasErrorCallback"],[101,65,138,65],[102,8,139,6],[102,12,139,12,"newArgs"],[102,19,139,19],[102,22,139,22,"args"],[102,26,139,26],[102,27,139,27,"slice"],[102,32,139,32],[102,33,139,33],[102,34,139,34],[102,36,139,36,"args"],[102,40,139,40],[102,41,139,41,"length"],[102,47,139,47],[102,50,139,50,"callbackCount"],[102,63,139,63],[102,64,139,64],[103,8,140,6],[103,12,140,10,"type"],[103,16,140,14],[103,21,140,19],[103,27,140,25],[103,29,140,27],[104,10,141,8],[104,17,141,15,"BatchedBridge"],[104,30,141,28],[104,31,141,29,"callNativeSyncHook"],[104,49,141,47],[104,50,142,10,"moduleID"],[104,58,142,18],[104,60,143,10,"methodID"],[104,68,143,18],[104,70,144,10,"newArgs"],[104,77,144,17],[104,79,145,10,"onFail"],[104,85,145,16],[104,87,146,10,"onSuccess"],[104,96,147,8],[104,97,147,9],[105,8,148,6],[105,9,148,7],[105,15,148,13],[106,10,149,8,"BatchedBridge"],[106,23,149,21],[106,24,149,22,"enqueueNativeCall"],[106,41,149,39],[106,42,150,10,"moduleID"],[106,50,150,18],[106,52,151,10,"methodID"],[106,60,151,18],[106,62,152,10,"newArgs"],[106,69,152,17],[106,71,153,10,"onFail"],[106,77,153,16],[106,79,154,10,"onSuccess"],[106,88,155,8],[106,89,155,9],[107,8,156,6],[108,6,157,4],[108,7,157,5],[109,4,158,2],[110,4,159,2],[111,4,160,2,"fn"],[111,6,160,4],[111,7,160,5,"type"],[111,11,160,9],[111,14,160,12,"type"],[111,18,160,16],[112,4,161,2],[112,11,161,9,"fn"],[112,13,161,11],[113,2,162,0],[114,2,164,0],[114,11,164,9,"arrayContains"],[114,24,164,22,"arrayContains"],[114,25,164,26,"array"],[114,30,164,50],[114,32,164,52,"value"],[114,37,164,60],[114,39,164,71],[115,4,165,2],[115,11,165,9,"array"],[115,16,165,14],[115,17,165,15,"indexOf"],[115,24,165,22],[115,25,165,23,"value"],[115,30,165,28],[115,31,165,29],[115,36,165,34],[115,37,165,35],[115,38,165,36],[116,2,166,0],[117,2,168,0],[117,11,168,9,"updateErrorWithErrorData"],[117,35,168,33,"updateErrorWithErrorData"],[117,36,169,2,"errorData"],[117,45,169,35],[117,47,170,2,"error"],[117,52,170,22],[117,54,171,17],[118,4,172,2],[119,0,173,0],[120,4,174,2],[120,11,174,9,"Object"],[120,17,174,15],[120,18,174,16,"assign"],[120,24,174,22],[120,25,174,23,"error"],[120,30,174,28],[120,32,174,30,"errorData"],[120,41,174,39],[120,45,174,43],[120,46,174,44],[120,47,174,45],[120,48,174,46],[121,2,175,0],[122,2,177,0],[122,6,177,4,"NativeModules"],[122,19,177,58],[122,22,177,61],[122,23,177,62],[122,24,177,63],[123,2,178,0],[123,6,178,4,"global"],[123,12,178,10],[123,13,178,11,"nativeModuleProxy"],[123,30,178,28],[123,32,178,30],[124,4,179,2,"NativeModules"],[124,17,179,15],[124,20,179,18,"global"],[124,26,179,24],[124,27,179,25,"nativeModuleProxy"],[124,44,179,42],[125,2,180,0],[125,3,180,1],[125,9,180,7],[125,13,180,11],[125,14,180,12,"global"],[125,20,180,18],[125,21,180,19,"nativeExtensions"],[125,37,180,35],[125,39,180,37],[126,4,181,2],[126,8,181,8,"bridgeConfig"],[126,20,181,20],[126,23,181,23,"global"],[126,29,181,29],[126,30,181,30,"__fbBatchedBridgeConfig"],[126,53,181,53],[127,4,182,2,"invariant"],[127,13,182,11],[127,14,183,4,"bridgeConfig"],[127,26,183,16],[127,28,184,4],[127,94,185,2],[127,95,185,3],[128,4,187,2],[128,8,187,8,"defineLazyObjectProperty"],[128,32,187,32],[128,35,187,35,"require"],[128,46,187,42],[128,47,187,42,"_dependencyMap"],[128,61,187,42],[128,105,187,82],[128,106,187,83],[129,4,188,2],[129,5,188,3,"bridgeConfig"],[129,17,188,15],[129,18,188,16,"remoteModuleConfig"],[129,36,188,34],[129,40,188,38],[129,42,188,40],[129,44,188,42,"forEach"],[129,51,188,49],[129,52,189,4],[129,62,189,5,"config"],[129,68,189,25],[129,70,189,27,"moduleID"],[129,78,189,43],[129,80,189,48],[130,6,190,6],[131,6,191,6],[132,6,192,6],[132,10,192,12,"info"],[132,14,192,16],[132,17,192,19,"genModule"],[132,26,192,28],[132,27,192,29,"config"],[132,33,192,35],[132,35,192,37,"moduleID"],[132,43,192,45],[132,44,192,46],[133,6,193,6],[133,10,193,10],[133,11,193,11,"info"],[133,15,193,15],[133,17,193,17],[134,8,194,8],[135,6,195,6],[136,6,197,6],[136,10,197,10,"info"],[136,14,197,14],[136,15,197,15,"module"],[136,21,197,21],[136,23,197,23],[137,8,198,8,"NativeModules"],[137,21,198,21],[137,22,198,22,"info"],[137,26,198,26],[137,27,198,27,"name"],[137,31,198,31],[137,32,198,32],[137,35,198,35,"info"],[137,39,198,39],[137,40,198,40,"module"],[137,46,198,46],[138,6,199,6],[139,6,200,6],[140,6,200,6],[140,11,201,11],[141,8,202,8,"defineLazyObjectProperty"],[141,32,202,32],[141,33,202,33,"NativeModules"],[141,46,202,46],[141,48,202,48,"info"],[141,52,202,52],[141,53,202,53,"name"],[141,57,202,57],[141,59,202,59],[142,10,203,10,"get"],[142,13,203,13],[142,15,203,15],[142,24,203,15,"get"],[142,28,203,15],[143,12,203,15],[143,19,203,21,"loadModule"],[143,29,203,31],[143,30,203,32,"info"],[143,34,203,36],[143,35,203,37,"name"],[143,39,203,41],[143,41,203,43,"moduleID"],[143,49,203,51],[143,50,203,52],[144,10,203,52],[145,8,204,8],[145,9,204,9],[145,10,204,10],[146,6,205,6],[147,4,206,4],[147,5,207,2],[147,6,207,3],[148,2,208,0],[149,2,210,0,"module"],[149,8,210,6],[149,9,210,7,"exports"],[149,16,210,14],[149,19,210,17,"NativeModules"],[149,32,210,30],[150,0,210,31]],"functionMap":{"names":["<global>","genModule","methods.forEach$argument_0","module.getConstants","loadModule","genMethod","promiseMethodWrapper","Promise$argument_0","BatchedBridge.enqueueNativeCall$argument_3","BatchedBridge.enqueueNativeCall$argument_4","nonPromiseMethodWrapper","arrayContains","updateErrorWithErrorData","forEach$argument_0","defineLazyObjectProperty$argument_2.get"],"mappings":"AAA;AC2B;oBC2B;KDW;0BEK,oCF;CDY;AIK;CJQ;AKE;SCG;yBCK;UCK,qBD;UEC;aFM;ODE;KDC;SKE;KLkC;CLK;AWE;CXE;AYE;CZO;Iac;eCc,qCD;KbG"}},"type":"js/module"}]}