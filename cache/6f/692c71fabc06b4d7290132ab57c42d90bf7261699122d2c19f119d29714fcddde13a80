{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":131,"column":0,"index":3996}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../NativeComponent/PlatformBaseViewConfig","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":215},"end":{"line":11,"column":79,"index":294}}],"key":"64Cusg31zWKqpkg7TPfGYiDFzd0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = verifyComponentAttributeEquivalence;\n  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;\n  exports.stringifyViewConfig = stringifyViewConfig;\n  var _PlatformBaseViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../NativeComponent/PlatformBaseViewConfig\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var IGNORED_KEYS = ['transform', 'hitSlop'];\n\n  /**\n   * The purpose of this function is to validate that the view config that\n   * native exposes for a given view manager is the same as the view config\n   * that is specified for that view manager in JS.\n   *\n   * In order to improve perf, we want to avoid calling into native to get\n   * the view config when each view manager is used. To do this, we are moving\n   * the configs to JS. In the future we will use these JS based view configs\n   * to codegen the view manager on native to ensure they stay in sync without\n   * this runtime check.\n   *\n   * If this function fails, that likely means a change was made to the native\n   * view manager without updating the JS config as well. Ideally you can make\n   * that direct change to the JS config. If you don't know what the differences\n   * are, the best approach I've found is to create a view that prints\n   * the return value of getNativeComponentAttributes, and then copying that\n   * text and pasting it back into JS:\n   * <Text selectable={true}>{JSON.stringify(getNativeComponentAttributes('RCTView'))}</Text>\n   *\n   * This is meant to be a stopgap until the time comes when we only have a\n   * single source of truth. I wonder if this message will still be here two\n   * years from now...\n   */\n  function verifyComponentAttributeEquivalence(nativeViewConfig, staticViewConfig) {\n    for (var prop of ['validAttributes', 'bubblingEventTypes', 'directEventTypes']) {\n      var diff = Object.keys(lefthandObjectDiff(nativeViewConfig[prop], staticViewConfig[prop]));\n      if (diff.length > 0) {\n        var _staticViewConfig$uiV;\n        var name = (_staticViewConfig$uiV = staticViewConfig.uiViewClassName) != null ? _staticViewConfig$uiV : nativeViewConfig.uiViewClassName;\n        console.error(`'${name}' has a view config that does not match native. ` + `'${prop}' is missing: ${diff.join(', ')}`);\n      }\n    }\n  }\n\n  // Return the different key-value pairs of the right object, by iterating through the keys in the left object\n  // Note it won't return a difference where a key is missing in the left but exists the right.\n  function lefthandObjectDiff(leftObj, rightObj) {\n    var differentKeys = {};\n    function compare(leftItem, rightItem, key) {\n      if (typeof leftItem !== typeof rightItem && leftItem != null) {\n        differentKeys[key] = rightItem;\n        return;\n      }\n      if (typeof leftItem === 'object') {\n        var objDiff = lefthandObjectDiff(leftItem, rightItem);\n        if (Object.keys(objDiff).length > 1) {\n          differentKeys[key] = objDiff;\n        }\n        return;\n      }\n      if (leftItem !== rightItem) {\n        differentKeys[key] = rightItem;\n        return;\n      }\n    }\n    for (var key in leftObj) {\n      if (IGNORED_KEYS.includes(key)) {\n        continue;\n      }\n      if (!rightObj) {\n        differentKeys[key] = {};\n      } else if (leftObj.hasOwnProperty(key)) {\n        compare(leftObj[key], rightObj[key], key);\n      }\n    }\n    return differentKeys;\n  }\n  function getConfigWithoutViewProps(viewConfig, propName) {\n    if (!viewConfig[propName]) {\n      return {};\n    }\n    return Object.keys(viewConfig[propName]).filter(function (prop) {\n      return !_PlatformBaseViewConfig.default[propName][prop];\n    }).reduce(function (obj, prop) {\n      obj[prop] = viewConfig[propName][prop];\n      return obj;\n    }, {});\n  }\n  function stringifyViewConfig(viewConfig) {\n    return JSON.stringify(viewConfig, function (key, val) {\n      if (typeof val === 'function') {\n        return `Æ’ ${val.name}`;\n      }\n      return val;\n    }, 2);\n  }\n});","lineCount":108,"map":[[9,2,11,0],[9,6,11,0,"_PlatformBaseViewConfig"],[9,29,11,0],[9,32,11,0,"_interopRequireDefault"],[9,54,11,0],[9,55,11,0,"_$$_REQUIRE"],[9,66,11,0],[9,67,11,0,"_dependencyMap"],[9,81,11,0],[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[16,0,7,0],[17,0,8,0],[18,0,9,0],[20,2,14,0],[20,6,14,6,"IGNORED_KEYS"],[20,18,14,18],[20,21,14,21],[20,22,14,22],[20,33,14,33],[20,35,14,35],[20,44,14,44],[20,45,14,45],[22,2,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,0,36,0],[43,0,37,0],[44,0,38,0],[45,2,39,15],[45,11,39,24,"verifyComponentAttributeEquivalence"],[45,46,39,59,"verifyComponentAttributeEquivalence"],[45,47,40,2,"nativeViewConfig"],[45,63,40,30],[45,65,41,2,"staticViewConfig"],[45,81,41,30],[45,83,42,2],[46,4,43,2],[46,9,43,7],[46,13,43,13,"prop"],[46,17,43,17],[46,21,43,21],[46,22,44,4],[46,39,44,21],[46,41,45,4],[46,61,45,24],[46,63,46,4],[46,81,46,22],[46,82,47,3],[46,84,47,5],[47,6,48,4],[47,10,48,10,"diff"],[47,14,48,14],[47,17,48,17,"Object"],[47,23,48,23],[47,24,48,24,"keys"],[47,28,48,28],[47,29,49,6,"lefthandObjectDiff"],[47,47,49,24],[47,48,49,25,"nativeViewConfig"],[47,64,49,41],[47,65,49,42,"prop"],[47,69,49,46],[47,70,49,47],[47,72,49,49,"staticViewConfig"],[47,88,49,65],[47,89,49,66,"prop"],[47,93,49,70],[47,94,49,71],[47,95,50,4],[47,96,50,5],[48,6,52,4],[48,10,52,8,"diff"],[48,14,52,12],[48,15,52,13,"length"],[48,21,52,19],[48,24,52,22],[48,25,52,23],[48,27,52,25],[49,8,52,25],[49,12,52,25,"_staticViewConfig$uiV"],[49,33,52,25],[50,8,53,6],[50,12,53,12,"name"],[50,16,53,16],[50,20,53,16,"_staticViewConfig$uiV"],[50,41,53,16],[50,44,54,8,"staticViewConfig"],[50,60,54,24],[50,61,54,25,"uiViewClassName"],[50,76,54,40],[50,88,54,40,"_staticViewConfig$uiV"],[50,109,54,40],[50,112,54,44,"nativeViewConfig"],[50,128,54,60],[50,129,54,61,"uiViewClassName"],[50,144,54,76],[51,8,55,6,"console"],[51,15,55,13],[51,16,55,14,"error"],[51,21,55,19],[51,22,56,9],[51,26,56,12,"name"],[51,30,56,17],[51,80,56,66],[51,83,57,11],[51,87,57,14,"prop"],[51,91,57,19],[51,108,57,35,"diff"],[51,112,57,39],[51,113,57,40,"join"],[51,117,57,44],[51,118,57,45],[51,122,57,49],[51,123,57,51],[51,125,58,6],[51,126,58,7],[52,6,59,4],[53,4,60,2],[54,2,61,0],[56,2,63,0],[57,2,64,0],[58,2,65,0],[58,11,65,9,"lefthandObjectDiff"],[58,29,65,27,"lefthandObjectDiff"],[58,30,65,28,"leftObj"],[58,37,65,43],[58,39,65,45,"rightObj"],[58,47,65,61],[58,49,65,71],[59,4,66,2],[59,8,66,8,"differentKeys"],[59,21,66,46],[59,24,66,49],[59,25,66,50],[59,26,66,51],[60,4,68,2],[60,13,68,11,"compare"],[60,20,68,18,"compare"],[60,21,68,19,"leftItem"],[60,29,68,32],[60,31,68,34,"rightItem"],[60,40,68,48],[60,42,68,50,"key"],[60,45,68,61],[60,47,68,63],[61,6,69,4],[61,10,69,8],[61,17,69,15,"leftItem"],[61,25,69,23],[61,30,69,28],[61,37,69,35,"rightItem"],[61,46,69,44],[61,50,69,48,"leftItem"],[61,58,69,56],[61,62,69,60],[61,66,69,64],[61,68,69,66],[62,8,70,6,"differentKeys"],[62,21,70,19],[62,22,70,20,"key"],[62,25,70,23],[62,26,70,24],[62,29,70,27,"rightItem"],[62,38,70,36],[63,8,71,6],[64,6,72,4],[65,6,74,4],[65,10,74,8],[65,17,74,15,"leftItem"],[65,25,74,23],[65,30,74,28],[65,38,74,36],[65,40,74,38],[66,8,75,6],[66,12,75,12,"objDiff"],[66,19,75,19],[66,22,75,22,"lefthandObjectDiff"],[66,40,75,40],[66,41,75,41,"leftItem"],[66,49,75,49],[66,51,75,51,"rightItem"],[66,60,75,60],[66,61,75,61],[67,8,76,6],[67,12,76,10,"Object"],[67,18,76,16],[67,19,76,17,"keys"],[67,23,76,21],[67,24,76,22,"objDiff"],[67,31,76,29],[67,32,76,30],[67,33,76,31,"length"],[67,39,76,37],[67,42,76,40],[67,43,76,41],[67,45,76,43],[68,10,77,8,"differentKeys"],[68,23,77,21],[68,24,77,22,"key"],[68,27,77,25],[68,28,77,26],[68,31,77,29,"objDiff"],[68,38,77,36],[69,8,78,6],[70,8,79,6],[71,6,80,4],[72,6,82,4],[72,10,82,8,"leftItem"],[72,18,82,16],[72,23,82,21,"rightItem"],[72,32,82,30],[72,34,82,32],[73,8,83,6,"differentKeys"],[73,21,83,19],[73,22,83,20,"key"],[73,25,83,23],[73,26,83,24],[73,29,83,27,"rightItem"],[73,38,83,36],[74,8,84,6],[75,6,85,4],[76,4,86,2],[77,4,88,2],[77,9,88,7],[77,13,88,13,"key"],[77,16,88,16],[77,20,88,20,"leftObj"],[77,27,88,27],[77,29,88,29],[78,6,89,4],[78,10,89,8,"IGNORED_KEYS"],[78,22,89,20],[78,23,89,21,"includes"],[78,31,89,29],[78,32,89,30,"key"],[78,35,89,33],[78,36,89,34],[78,38,89,36],[79,8,90,6],[80,6,91,4],[81,6,93,4],[81,10,93,8],[81,11,93,9,"rightObj"],[81,19,93,17],[81,21,93,19],[82,8,94,6,"differentKeys"],[82,21,94,19],[82,22,94,20,"key"],[82,25,94,23],[82,26,94,24],[82,29,94,27],[82,30,94,28],[82,31,94,29],[83,6,95,4],[83,7,95,5],[83,13,95,11],[83,17,95,15,"leftObj"],[83,24,95,22],[83,25,95,23,"hasOwnProperty"],[83,39,95,37],[83,40,95,38,"key"],[83,43,95,41],[83,44,95,42],[83,46,95,44],[84,8,96,6,"compare"],[84,15,96,13],[84,16,96,14,"leftObj"],[84,23,96,21],[84,24,96,22,"key"],[84,27,96,25],[84,28,96,26],[84,30,96,28,"rightObj"],[84,38,96,36],[84,39,96,37,"key"],[84,42,96,40],[84,43,96,41],[84,45,96,43,"key"],[84,48,96,46],[84,49,96,47],[85,6,97,4],[86,4,98,2],[87,4,100,2],[87,11,100,9,"differentKeys"],[87,24,100,22],[88,2,101,0],[89,2,103,7],[89,11,103,16,"getConfigWithoutViewProps"],[89,36,103,41,"getConfigWithoutViewProps"],[89,37,104,2,"viewConfig"],[89,47,104,24],[89,49,105,2,"propName"],[89,57,105,18],[89,59,106,9],[90,4,107,2],[90,8,107,6],[90,9,107,7,"viewConfig"],[90,19,107,17],[90,20,107,18,"propName"],[90,28,107,26],[90,29,107,27],[90,31,107,29],[91,6,108,4],[91,13,108,11],[91,14,108,12],[91,15,108,13],[92,4,109,2],[93,4,111,2],[93,11,111,9,"Object"],[93,17,111,15],[93,18,111,16,"keys"],[93,22,111,20],[93,23,111,21,"viewConfig"],[93,33,111,31],[93,34,111,32,"propName"],[93,42,111,40],[93,43,111,41],[93,44,111,42],[93,45,112,5,"filter"],[93,51,112,11],[93,52,112,12],[93,62,112,12,"prop"],[93,66,112,16],[94,6,112,16],[94,13,112,20],[94,14,112,21,"PlatformBaseViewConfig"],[94,45,112,43],[94,46,112,44,"propName"],[94,54,112,52],[94,55,112,53],[94,56,112,54,"prop"],[94,60,112,58],[94,61,112,59],[95,4,112,59],[95,6,112,60],[95,7,113,5,"reduce"],[95,13,113,11],[95,14,113,29],[95,24,113,30,"obj"],[95,27,113,33],[95,29,113,35,"prop"],[95,33,113,39],[95,35,113,44],[96,6,114,6,"obj"],[96,9,114,9],[96,10,114,10,"prop"],[96,14,114,14],[96,15,114,15],[96,18,114,18,"viewConfig"],[96,28,114,28],[96,29,114,29,"propName"],[96,37,114,37],[96,38,114,38],[96,39,114,39,"prop"],[96,43,114,43],[96,44,114,44],[97,6,115,6],[97,13,115,13,"obj"],[97,16,115,16],[98,4,116,4],[98,5,116,5],[98,7,116,7],[98,8,116,8],[98,9,116,9],[98,10,116,10],[99,2,117,0],[100,2,119,7],[100,11,119,16,"stringifyViewConfig"],[100,30,119,35,"stringifyViewConfig"],[100,31,119,36,"viewConfig"],[100,41,119,51],[100,43,119,61],[101,4,120,2],[101,11,120,9,"JSON"],[101,15,120,13],[101,16,120,14,"stringify"],[101,25,120,23],[101,26,121,4,"viewConfig"],[101,36,121,14],[101,38,122,4],[101,48,122,5,"key"],[101,51,122,8],[101,53,122,10,"val"],[101,56,122,13],[101,58,122,18],[102,6,123,6],[102,10,123,10],[102,17,123,17,"val"],[102,20,123,20],[102,25,123,25],[102,35,123,35],[102,37,123,37],[103,8,124,8],[103,15,124,16],[103,20,124,20,"val"],[103,23,124,23],[103,24,124,24,"name"],[103,28,124,29],[103,30,124,30],[104,6,125,6],[105,6,126,6],[105,13,126,13,"val"],[105,16,126,16],[106,4,127,4],[106,5,127,5],[106,7,128,4],[106,8,129,2],[106,9,129,3],[107,2,130,0],[108,0,130,1]],"functionMap":{"names":["<global>","verifyComponentAttributeEquivalence","lefthandObjectDiff","compare","getConfigWithoutViewProps","Object.keys.filter$argument_0","Object.keys.filter.reduce$argument_0","stringifyViewConfig","JSON.stringify$argument_1"],"mappings":"AAA;eCsC;CDsB;AEI;ECG;GDkB;CFe;OIE;YCS,+CD;6BEC;KFG;CJC;OOE;ICG;KDK;CPG"}},"type":"js/module"}]}