{"dependencies":[{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":44,"index":92}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = extractBrush;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n  var urlIdPattern = /^url\\(#(.+)\\)$/;\n  var currentColorBrush = {\n    type: 2\n  };\n  var contextFillBrush = {\n    type: 3\n  };\n  var contextStrokeBrush = {\n    type: 4\n  };\n  function extractBrush(color) {\n    if (!color || color === 'none') {\n      return null;\n    }\n    if (color === 'currentColor') {\n      return currentColorBrush;\n    }\n    if (color === 'context-fill') {\n      return contextFillBrush;\n    }\n    if (color === 'context-stroke') {\n      return contextStrokeBrush;\n    }\n    var brush = typeof color === 'string' && color.match(urlIdPattern);\n    if (brush) {\n      return {\n        type: 1,\n        brushRef: brush[1]\n      };\n    }\n    var processedColor = (0, _reactNative.processColor)(color);\n    if (typeof processedColor === 'number') {\n      return {\n        type: 0,\n        payload: processedColor\n      };\n    }\n    if (typeof processedColor === 'object' && processedColor !== null) {\n      // if we got an object, it should be `PlatformColor` or `DynamicColorIOS`,\n      // so we pass it as an object with `0` value as first item, which is interpreted\n      // on the native side as color to be managed by `RCTConvert`.\n      return {\n        type: 0,\n        payload: processedColor\n      };\n    }\n    console.warn(`\"${String(color)}\" is not a valid color or brush`);\n    return null;\n  }\n});","lineCount":56,"map":[[6,2,2,0],[6,6,2,0,"_reactNative"],[6,18,2,0],[6,21,2,0,"_$$_REQUIRE"],[6,32,2,0],[6,33,2,0,"_dependencyMap"],[6,47,2,0],[7,2,4,0],[7,6,4,6,"urlIdPattern"],[7,18,4,18],[7,21,4,21],[7,37,4,37],[8,2,6,0],[8,6,6,6,"currentColorBrush"],[8,23,6,23],[8,26,6,26],[9,4,6,28,"type"],[9,8,6,32],[9,10,6,34],[10,2,6,36],[10,3,6,37],[11,2,7,0],[11,6,7,6,"contextFillBrush"],[11,22,7,22],[11,25,7,25],[12,4,7,27,"type"],[12,8,7,31],[12,10,7,33],[13,2,7,35],[13,3,7,36],[14,2,8,0],[14,6,8,6,"contextStrokeBrush"],[14,24,8,24],[14,27,8,27],[15,4,8,29,"type"],[15,8,8,33],[15,10,8,35],[16,2,8,37],[16,3,8,38],[17,2,10,15],[17,11,10,24,"extractBrush"],[17,23,10,36,"extractBrush"],[17,24,10,37,"color"],[17,29,10,55],[17,31,10,57],[18,4,11,2],[18,8,11,6],[18,9,11,7,"color"],[18,14,11,12],[18,18,11,16,"color"],[18,23,11,21],[18,28,11,26],[18,34,11,32],[18,36,11,34],[19,6,12,4],[19,13,12,11],[19,17,12,15],[20,4,13,2],[21,4,15,2],[21,8,15,6,"color"],[21,13,15,11],[21,18,15,16],[21,32,15,30],[21,34,15,32],[22,6,16,4],[22,13,16,11,"currentColorBrush"],[22,30,16,28],[23,4,17,2],[24,4,19,2],[24,8,19,6,"color"],[24,13,19,11],[24,18,19,16],[24,32,19,30],[24,34,19,32],[25,6,20,4],[25,13,20,11,"contextFillBrush"],[25,29,20,27],[26,4,21,2],[27,4,23,2],[27,8,23,6,"color"],[27,13,23,11],[27,18,23,16],[27,34,23,32],[27,36,23,34],[28,6,24,4],[28,13,24,11,"contextStrokeBrush"],[28,31,24,29],[29,4,25,2],[30,4,27,2],[30,8,27,8,"brush"],[30,13,27,13],[30,16,27,16],[30,23,27,23,"color"],[30,28,27,28],[30,33,27,33],[30,41,27,41],[30,45,27,45,"color"],[30,50,27,50],[30,51,27,51,"match"],[30,56,27,56],[30,57,27,57,"urlIdPattern"],[30,69,27,69],[30,70,27,70],[31,4,28,2],[31,8,28,6,"brush"],[31,13,28,11],[31,15,28,13],[32,6,29,4],[32,13,29,11],[33,8,29,13,"type"],[33,12,29,17],[33,14,29,19],[33,15,29,20],[34,8,29,22,"brushRef"],[34,16,29,30],[34,18,29,32,"brush"],[34,23,29,37],[34,24,29,38],[34,25,29,39],[35,6,29,41],[35,7,29,42],[36,4,30,2],[37,4,32,2],[37,8,32,8,"processedColor"],[37,22,32,22],[37,25,32,25],[37,29,32,25,"processColor"],[37,54,32,37],[37,56,32,38,"color"],[37,61,32,43],[37,62,32,44],[38,4,33,2],[38,8,33,6],[38,15,33,13,"processedColor"],[38,29,33,27],[38,34,33,32],[38,42,33,40],[38,44,33,42],[39,6,34,4],[39,13,34,11],[40,8,34,13,"type"],[40,12,34,17],[40,14,34,19],[40,15,34,20],[41,8,34,22,"payload"],[41,15,34,29],[41,17,34,31,"processedColor"],[42,6,34,46],[42,7,34,47],[43,4,35,2],[44,4,37,2],[44,8,37,6],[44,15,37,13,"processedColor"],[44,29,37,27],[44,34,37,32],[44,42,37,40],[44,46,37,44,"processedColor"],[44,60,37,58],[44,65,37,63],[44,69,37,67],[44,71,37,69],[45,6,38,4],[46,6,39,4],[47,6,40,4],[48,6,41,4],[48,13,41,11],[49,8,41,13,"type"],[49,12,41,17],[49,14,41,19],[49,15,41,20],[50,8,41,22,"payload"],[50,15,41,29],[50,17,41,31,"processedColor"],[51,6,41,46],[51,7,41,47],[52,4,42,2],[53,4,44,2,"console"],[53,11,44,9],[53,12,44,10,"warn"],[53,16,44,14],[53,17,44,16],[53,21,44,19,"String"],[53,27,44,25],[53,28,44,26,"color"],[53,33,44,31],[53,34,44,33],[53,67,44,65],[53,68,44,66],[54,4,45,2],[54,11,45,9],[54,15,45,13],[55,2,46,0],[56,0,46,1]],"functionMap":{"names":["<global>","extractBrush"],"mappings":"AAA;eCS;CDoC"}},"type":"js/module"}]}