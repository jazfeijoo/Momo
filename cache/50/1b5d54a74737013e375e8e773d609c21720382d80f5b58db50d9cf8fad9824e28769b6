{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /* global define */\n  (function (root, factory) {\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n      define([], factory);\n    } else if (typeof exports === 'object') {\n      module.exports = factory();\n    } else {\n      root.compareVersions = factory();\n    }\n  })(this, function () {\n    var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n    function indexOrEnd(str, q) {\n      return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n    }\n    function split(v) {\n      var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n      var patchIndex = indexOrEnd(c, '-');\n      var arr = c.substring(0, patchIndex).split('.');\n      arr.push(c.substring(patchIndex + 1));\n      return arr;\n    }\n    function tryParse(v) {\n      return isNaN(Number(v)) ? v : Number(v);\n    }\n    function validate(version) {\n      if (typeof version !== 'string') {\n        throw new TypeError('Invalid argument expected string');\n      }\n      if (!semver.test(version)) {\n        throw new Error('Invalid argument not valid semver (\\'' + version + '\\' received)');\n      }\n    }\n    function compareVersions(v1, v2) {\n      [v1, v2].forEach(validate);\n      var s1 = split(v1);\n      var s2 = split(v2);\n      for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n        var n1 = parseInt(s1[i] || 0, 10);\n        var n2 = parseInt(s2[i] || 0, 10);\n        if (n1 > n2) return 1;\n        if (n2 > n1) return -1;\n      }\n      var sp1 = s1[s1.length - 1];\n      var sp2 = s2[s2.length - 1];\n      if (sp1 && sp2) {\n        var p1 = sp1.split('.').map(tryParse);\n        var p2 = sp2.split('.').map(tryParse);\n        for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n          if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n          if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n          if (p1[i] > p2[i]) return 1;\n          if (p2[i] > p1[i]) return -1;\n        }\n      } else if (sp1 || sp2) {\n        return sp1 ? -1 : 1;\n      }\n      return 0;\n    }\n    ;\n    var allowedOperators = ['>', '>=', '=', '<', '<='];\n    var operatorResMap = {\n      '>': [1],\n      '>=': [0, 1],\n      '=': [0],\n      '<=': [-1, 0],\n      '<': [-1]\n    };\n    function validateOperator(op) {\n      if (typeof op !== 'string') {\n        throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n      }\n      if (allowedOperators.indexOf(op) === -1) {\n        throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n      }\n    }\n    compareVersions.validate = function (version) {\n      return typeof version === 'string' && semver.test(version);\n    };\n    compareVersions.compare = function (v1, v2, operator) {\n      // Validate operator\n      validateOperator(operator);\n\n      // since result of compareVersions can only be -1 or 0 or 1\n      // a simple map can be used to replace switch\n      var res = compareVersions(v1, v2);\n      return operatorResMap[operator].indexOf(res) > -1;\n    };\n    return compareVersions;\n  });\n});","lineCount":92,"map":[[2,2,1,0],[3,2,2,1],[3,13,2,11,"root"],[3,17,2,15],[3,19,2,17,"factory"],[3,26,2,24],[3,28,2,26],[4,4,3,2],[5,4,4,2],[5,8,4,6],[5,15,4,13,"define"],[5,21,4,19],[5,26,4,24],[5,36,4,34],[5,40,4,38,"define"],[5,46,4,44],[5,47,4,45,"amd"],[5,50,4,48],[5,52,4,50],[6,6,5,4,"define"],[6,12,5,10],[6,13,5,11],[6,15,5,13],[6,17,5,15,"factory"],[6,24,5,22],[6,25,5,23],[7,4,6,2],[7,5,6,3],[7,11,6,9],[7,15,6,13],[7,22,6,20,"exports"],[7,29,6,27],[7,34,6,32],[7,42,6,40],[7,44,6,42],[8,6,7,4,"module"],[8,12,7,10],[8,13,7,11,"exports"],[8,20,7,18],[8,23,7,21,"factory"],[8,30,7,28],[8,31,7,29],[8,32,7,30],[9,4,8,2],[9,5,8,3],[9,11,8,9],[10,6,9,4,"root"],[10,10,9,8],[10,11,9,9,"compareVersions"],[10,26,9,24],[10,29,9,27,"factory"],[10,36,9,34],[10,37,9,35],[10,38,9,36],[11,4,10,2],[12,2,11,0],[12,3,11,1],[12,5,11,2],[12,9,11,6],[12,11,11,8],[12,23,11,20],[13,4,13,2],[13,8,13,6,"semver"],[13,14,13,12],[13,17,13,15],[13,149,13,147],[14,4,15,2],[14,13,15,11,"indexOrEnd"],[14,23,15,21,"indexOrEnd"],[14,24,15,22,"str"],[14,27,15,25],[14,29,15,27,"q"],[14,30,15,28],[14,32,15,30],[15,6,16,4],[15,13,16,11,"str"],[15,16,16,14],[15,17,16,15,"indexOf"],[15,24,16,22],[15,25,16,23,"q"],[15,26,16,24],[15,27,16,25],[15,32,16,30],[15,33,16,31],[15,34,16,32],[15,37,16,35,"str"],[15,40,16,38],[15,41,16,39,"length"],[15,47,16,45],[15,50,16,48,"str"],[15,53,16,51],[15,54,16,52,"indexOf"],[15,61,16,59],[15,62,16,60,"q"],[15,63,16,61],[15,64,16,62],[16,4,17,2],[17,4,19,2],[17,13,19,11,"split"],[17,18,19,16,"split"],[17,19,19,17,"v"],[17,20,19,18],[17,22,19,20],[18,6,20,4],[18,10,20,8,"c"],[18,11,20,9],[18,14,20,12,"v"],[18,15,20,13],[18,16,20,14,"replace"],[18,23,20,21],[18,24,20,22],[18,28,20,26],[18,30,20,28],[18,32,20,30],[18,33,20,31],[18,34,20,32,"replace"],[18,41,20,39],[18,42,20,40],[18,49,20,47],[18,51,20,49],[18,53,20,51],[18,54,20,52],[19,6,21,4],[19,10,21,8,"patchIndex"],[19,20,21,18],[19,23,21,21,"indexOrEnd"],[19,33,21,31],[19,34,21,32,"c"],[19,35,21,33],[19,37,21,35],[19,40,21,38],[19,41,21,39],[20,6,22,4],[20,10,22,8,"arr"],[20,13,22,11],[20,16,22,14,"c"],[20,17,22,15],[20,18,22,16,"substring"],[20,27,22,25],[20,28,22,26],[20,29,22,27],[20,31,22,29,"patchIndex"],[20,41,22,39],[20,42,22,40],[20,43,22,41,"split"],[20,48,22,46],[20,49,22,47],[20,52,22,50],[20,53,22,51],[21,6,23,4,"arr"],[21,9,23,7],[21,10,23,8,"push"],[21,14,23,12],[21,15,23,13,"c"],[21,16,23,14],[21,17,23,15,"substring"],[21,26,23,24],[21,27,23,25,"patchIndex"],[21,37,23,35],[21,40,23,38],[21,41,23,39],[21,42,23,40],[21,43,23,41],[22,6,24,4],[22,13,24,11,"arr"],[22,16,24,14],[23,4,25,2],[24,4,27,2],[24,13,27,11,"tryParse"],[24,21,27,19,"tryParse"],[24,22,27,20,"v"],[24,23,27,21],[24,25,27,23],[25,6,28,4],[25,13,28,11,"isNaN"],[25,18,28,16],[25,19,28,17,"Number"],[25,25,28,23],[25,26,28,24,"v"],[25,27,28,25],[25,28,28,26],[25,29,28,27],[25,32,28,30,"v"],[25,33,28,31],[25,36,28,34,"Number"],[25,42,28,40],[25,43,28,41,"v"],[25,44,28,42],[25,45,28,43],[26,4,29,2],[27,4,31,2],[27,13,31,11,"validate"],[27,21,31,19,"validate"],[27,22,31,20,"version"],[27,29,31,27],[27,31,31,29],[28,6,32,4],[28,10,32,8],[28,17,32,15,"version"],[28,24,32,22],[28,29,32,27],[28,37,32,35],[28,39,32,37],[29,8,33,6],[29,14,33,12],[29,18,33,16,"TypeError"],[29,27,33,25],[29,28,33,26],[29,62,33,60],[29,63,33,61],[30,6,34,4],[31,6,35,4],[31,10,35,8],[31,11,35,9,"semver"],[31,17,35,15],[31,18,35,16,"test"],[31,22,35,20],[31,23,35,21,"version"],[31,30,35,28],[31,31,35,29],[31,33,35,31],[32,8,36,6],[32,14,36,12],[32,18,36,16,"Error"],[32,23,36,21],[32,24,36,22],[32,63,36,61],[32,66,36,62,"version"],[32,73,36,69],[32,76,36,70],[32,90,36,84],[32,91,36,85],[33,6,37,4],[34,4,38,2],[35,4,40,2],[35,13,40,11,"compareVersions"],[35,28,40,26,"compareVersions"],[35,29,40,27,"v1"],[35,31,40,29],[35,33,40,31,"v2"],[35,35,40,33],[35,37,40,35],[36,6,41,4],[36,7,41,5,"v1"],[36,9,41,7],[36,11,41,9,"v2"],[36,13,41,11],[36,14,41,12],[36,15,41,13,"forEach"],[36,22,41,20],[36,23,41,21,"validate"],[36,31,41,29],[36,32,41,30],[37,6,43,4],[37,10,43,8,"s1"],[37,12,43,10],[37,15,43,13,"split"],[37,20,43,18],[37,21,43,19,"v1"],[37,23,43,21],[37,24,43,22],[38,6,44,4],[38,10,44,8,"s2"],[38,12,44,10],[38,15,44,13,"split"],[38,20,44,18],[38,21,44,19,"v2"],[38,23,44,21],[38,24,44,22],[39,6,46,4],[39,11,46,9],[39,15,46,13,"i"],[39,16,46,14],[39,19,46,17],[39,20,46,18],[39,22,46,20,"i"],[39,23,46,21],[39,26,46,24,"Math"],[39,30,46,28],[39,31,46,29,"max"],[39,34,46,32],[39,35,46,33,"s1"],[39,37,46,35],[39,38,46,36,"length"],[39,44,46,42],[39,47,46,45],[39,48,46,46],[39,50,46,48,"s2"],[39,52,46,50],[39,53,46,51,"length"],[39,59,46,57],[39,62,46,60],[39,63,46,61],[39,64,46,62],[39,66,46,64,"i"],[39,67,46,65],[39,69,46,67],[39,71,46,69],[40,8,47,6],[40,12,47,10,"n1"],[40,14,47,12],[40,17,47,15,"parseInt"],[40,25,47,23],[40,26,47,24,"s1"],[40,28,47,26],[40,29,47,27,"i"],[40,30,47,28],[40,31,47,29],[40,35,47,33],[40,36,47,34],[40,38,47,36],[40,40,47,38],[40,41,47,39],[41,8,48,6],[41,12,48,10,"n2"],[41,14,48,12],[41,17,48,15,"parseInt"],[41,25,48,23],[41,26,48,24,"s2"],[41,28,48,26],[41,29,48,27,"i"],[41,30,48,28],[41,31,48,29],[41,35,48,33],[41,36,48,34],[41,38,48,36],[41,40,48,38],[41,41,48,39],[42,8,50,6],[42,12,50,10,"n1"],[42,14,50,12],[42,17,50,15,"n2"],[42,19,50,17],[42,21,50,19],[42,28,50,26],[42,29,50,27],[43,8,51,6],[43,12,51,10,"n2"],[43,14,51,12],[43,17,51,15,"n1"],[43,19,51,17],[43,21,51,19],[43,28,51,26],[43,29,51,27],[43,30,51,28],[44,6,52,4],[45,6,54,4],[45,10,54,8,"sp1"],[45,13,54,11],[45,16,54,14,"s1"],[45,18,54,16],[45,19,54,17,"s1"],[45,21,54,19],[45,22,54,20,"length"],[45,28,54,26],[45,31,54,29],[45,32,54,30],[45,33,54,31],[46,6,55,4],[46,10,55,8,"sp2"],[46,13,55,11],[46,16,55,14,"s2"],[46,18,55,16],[46,19,55,17,"s2"],[46,21,55,19],[46,22,55,20,"length"],[46,28,55,26],[46,31,55,29],[46,32,55,30],[46,33,55,31],[47,6,57,4],[47,10,57,8,"sp1"],[47,13,57,11],[47,17,57,15,"sp2"],[47,20,57,18],[47,22,57,20],[48,8,58,6],[48,12,58,10,"p1"],[48,14,58,12],[48,17,58,15,"sp1"],[48,20,58,18],[48,21,58,19,"split"],[48,26,58,24],[48,27,58,25],[48,30,58,28],[48,31,58,29],[48,32,58,30,"map"],[48,35,58,33],[48,36,58,34,"tryParse"],[48,44,58,42],[48,45,58,43],[49,8,59,6],[49,12,59,10,"p2"],[49,14,59,12],[49,17,59,15,"sp2"],[49,20,59,18],[49,21,59,19,"split"],[49,26,59,24],[49,27,59,25],[49,30,59,28],[49,31,59,29],[49,32,59,30,"map"],[49,35,59,33],[49,36,59,34,"tryParse"],[49,44,59,42],[49,45,59,43],[50,8,61,6],[50,13,61,11,"i"],[50,14,61,12],[50,17,61,15],[50,18,61,16],[50,20,61,18,"i"],[50,21,61,19],[50,24,61,22,"Math"],[50,28,61,26],[50,29,61,27,"max"],[50,32,61,30],[50,33,61,31,"p1"],[50,35,61,33],[50,36,61,34,"length"],[50,42,61,40],[50,44,61,42,"p2"],[50,46,61,44],[50,47,61,45,"length"],[50,53,61,51],[50,54,61,52],[50,56,61,54,"i"],[50,57,61,55],[50,59,61,57],[50,61,61,59],[51,10,62,8],[51,14,62,12,"p1"],[51,16,62,14],[51,17,62,15,"i"],[51,18,62,16],[51,19,62,17],[51,24,62,22,"undefined"],[51,33,62,31],[51,37,62,35],[51,44,62,42,"p2"],[51,46,62,44],[51,47,62,45,"i"],[51,48,62,46],[51,49,62,47],[51,54,62,52],[51,62,62,60],[51,66,62,64],[51,73,62,71,"p1"],[51,75,62,73],[51,76,62,74,"i"],[51,77,62,75],[51,78,62,76],[51,83,62,81],[51,91,62,89],[51,93,62,91],[51,100,62,98],[51,101,62,99],[51,102,62,100],[52,10,63,8],[52,14,63,12,"p2"],[52,16,63,14],[52,17,63,15,"i"],[52,18,63,16],[52,19,63,17],[52,24,63,22,"undefined"],[52,33,63,31],[52,37,63,35],[52,44,63,42,"p1"],[52,46,63,44],[52,47,63,45,"i"],[52,48,63,46],[52,49,63,47],[52,54,63,52],[52,62,63,60],[52,66,63,64],[52,73,63,71,"p2"],[52,75,63,73],[52,76,63,74,"i"],[52,77,63,75],[52,78,63,76],[52,83,63,81],[52,91,63,89],[52,93,63,91],[52,100,63,98],[52,101,63,99],[53,10,65,8],[53,14,65,12,"p1"],[53,16,65,14],[53,17,65,15,"i"],[53,18,65,16],[53,19,65,17],[53,22,65,20,"p2"],[53,24,65,22],[53,25,65,23,"i"],[53,26,65,24],[53,27,65,25],[53,29,65,27],[53,36,65,34],[53,37,65,35],[54,10,66,8],[54,14,66,12,"p2"],[54,16,66,14],[54,17,66,15,"i"],[54,18,66,16],[54,19,66,17],[54,22,66,20,"p1"],[54,24,66,22],[54,25,66,23,"i"],[54,26,66,24],[54,27,66,25],[54,29,66,27],[54,36,66,34],[54,37,66,35],[54,38,66,36],[55,8,67,6],[56,6,68,4],[56,7,68,5],[56,13,68,11],[56,17,68,15,"sp1"],[56,20,68,18],[56,24,68,22,"sp2"],[56,27,68,25],[56,29,68,27],[57,8,69,6],[57,15,69,13,"sp1"],[57,18,69,16],[57,21,69,19],[57,22,69,20],[57,23,69,21],[57,26,69,24],[57,27,69,25],[58,6,70,4],[59,6,72,4],[59,13,72,11],[59,14,72,12],[60,4,73,2],[61,4,73,3],[62,4,75,2],[62,8,75,6,"allowedOperators"],[62,24,75,22],[62,27,75,25],[62,28,76,4],[62,31,76,7],[62,33,77,4],[62,37,77,8],[62,39,78,4],[62,42,78,7],[62,44,79,4],[62,47,79,7],[62,49,80,4],[62,53,80,8],[62,54,81,3],[63,4,83,2],[63,8,83,6,"operatorResMap"],[63,22,83,20],[63,25,83,23],[64,6,84,4],[64,9,84,7],[64,11,84,9],[64,12,84,10],[64,13,84,11],[64,14,84,12],[65,6,85,4],[65,10,85,8],[65,12,85,10],[65,13,85,11],[65,14,85,12],[65,16,85,14],[65,17,85,15],[65,18,85,16],[66,6,86,4],[66,9,86,7],[66,11,86,9],[66,12,86,10],[66,13,86,11],[66,14,86,12],[67,6,87,4],[67,10,87,8],[67,12,87,10],[67,13,87,11],[67,14,87,12],[67,15,87,13],[67,17,87,15],[67,18,87,16],[67,19,87,17],[68,6,88,4],[68,9,88,7],[68,11,88,9],[68,12,88,10],[68,13,88,11],[68,14,88,12],[69,4,89,2],[69,5,89,3],[70,4,91,2],[70,13,91,11,"validateOperator"],[70,29,91,27,"validateOperator"],[70,30,91,28,"op"],[70,32,91,30],[70,34,91,32],[71,6,92,4],[71,10,92,8],[71,17,92,15,"op"],[71,19,92,17],[71,24,92,22],[71,32,92,30],[71,34,92,32],[72,8,93,6],[72,14,93,12],[72,18,93,16,"TypeError"],[72,27,93,25],[72,28,93,26],[72,77,93,75],[72,80,93,78],[72,87,93,85,"op"],[72,89,93,87],[72,90,93,88],[73,6,94,4],[74,6,95,4],[74,10,95,8,"allowedOperators"],[74,26,95,24],[74,27,95,25,"indexOf"],[74,34,95,32],[74,35,95,33,"op"],[74,37,95,35],[74,38,95,36],[74,43,95,41],[74,44,95,42],[74,45,95,43],[74,47,95,45],[75,8,96,6],[75,14,96,12],[75,18,96,16,"TypeError"],[75,27,96,25],[75,28,96,26],[75,64,96,62],[75,67,96,65,"allowedOperators"],[75,83,96,81],[75,84,96,82,"join"],[75,88,96,86],[75,89,96,87],[75,92,96,90],[75,93,96,91],[75,94,96,92],[76,6,97,4],[77,4,98,2],[78,4,100,2,"compareVersions"],[78,19,100,17],[78,20,100,18,"validate"],[78,28,100,26],[78,31,100,29],[78,41,100,38,"version"],[78,48,100,45],[78,50,100,47],[79,6,101,4],[79,13,101,11],[79,20,101,18,"version"],[79,27,101,25],[79,32,101,30],[79,40,101,38],[79,44,101,42,"semver"],[79,50,101,48],[79,51,101,49,"test"],[79,55,101,53],[79,56,101,54,"version"],[79,63,101,61],[79,64,101,62],[80,4,102,2],[80,5,102,3],[81,4,104,2,"compareVersions"],[81,19,104,17],[81,20,104,18,"compare"],[81,27,104,25],[81,30,104,28],[81,40,104,38,"v1"],[81,42,104,40],[81,44,104,42,"v2"],[81,46,104,44],[81,48,104,46,"operator"],[81,56,104,54],[81,58,104,56],[82,6,105,4],[83,6,106,4,"validateOperator"],[83,22,106,20],[83,23,106,21,"operator"],[83,31,106,29],[83,32,106,30],[85,6,108,4],[86,6,109,4],[87,6,110,4],[87,10,110,8,"res"],[87,13,110,11],[87,16,110,14,"compareVersions"],[87,31,110,29],[87,32,110,30,"v1"],[87,34,110,32],[87,36,110,34,"v2"],[87,38,110,36],[87,39,110,37],[88,6,111,4],[88,13,111,11,"operatorResMap"],[88,27,111,25],[88,28,111,26,"operator"],[88,36,111,34],[88,37,111,35],[88,38,111,36,"indexOf"],[88,45,111,43],[88,46,111,44,"res"],[88,49,111,47],[88,50,111,48],[88,53,111,51],[88,54,111,52],[88,55,111,53],[89,4,112,2],[89,5,112,3],[90,4,114,2],[90,11,114,9,"compareVersions"],[90,26,114,24],[91,2,115,0],[91,3,115,1],[91,4,115,2],[92,0,115,4]],"functionMap":{"names":["<global>","<anonymous>","indexOrEnd","split","tryParse","validate","compareVersions","validateOperator","compareVersions.validate","compareVersions.compare"],"mappings":"AAA;CCC;CDS,OC;ECI;GDE;EEE;GFM;EGE;GHE;EIE;GJO;EKE;GLiC;EMkB;GNO;6BOE;GPE;4BQE;GRQ;CDG"}},"type":"js/module"}]}