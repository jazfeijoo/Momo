{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  /**\n   * The list of non-ViewManager related UIManager properties.\n   *\n   * In an effort to improve startup performance by lazily loading view managers,\n   * the interface to access view managers will change from\n   * UIManager['viewManagerName'] to UIManager.getViewManagerConfig('viewManagerName').\n   * By using a function call instead of a property access, the UIManager will\n   * be able to initialize and load the required view manager from native\n   * synchronously. All of React Native's core components have been updated to\n   * use getViewManagerConfig(). For the next few releases, any usage of\n   * UIManager['viewManagerName'] will result in a warning. Because React Native\n   * does not support Proxy objects, a view manager access is implied if any of\n   * UIManager's properties that are not one of the properties below is being\n   * accessed. Once UIManager property accesses for view managers has been fully\n   * deprecated, this file will also be removed.\n   */\n  module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'hasViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];\n});","lineCount":31,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,2,29,0,"module"],[30,8,29,6],[30,9,29,7,"exports"],[30,16,29,14],[30,19,29,17],[30,20,30,2],[30,38,30,20],[30,40,31,2],[30,70,31,32],[30,72,32,2],[30,84,32,14],[30,86,33,2],[30,104,33,20],[30,106,34,2],[30,134,34,30],[30,136,35,2],[30,151,35,17],[30,153,36,2],[30,181,36,30],[30,183,37,2],[30,205,37,24],[30,207,38,2],[30,223,38,18],[30,225,39,2],[30,234,39,11],[30,236,40,2],[30,253,40,19],[30,255,41,2],[30,270,41,17],[30,272,42,2],[30,303,42,33],[30,305,43,2],[30,321,43,18],[30,323,44,2],[30,358,44,37],[30,360,45,2],[30,388,45,30],[30,390,46,2],[30,414,46,26],[30,416,47,2],[30,429,47,15],[30,431,48,2],[30,447,48,18],[30,449,49,2],[30,488,49,41],[30,490,50,2],[30,505,50,17],[30,507,51,2],[30,519,51,14],[30,521,52,2],[30,541,52,22],[30,543,53,2],[30,554,53,13],[30,556,54,2],[30,581,54,27],[30,583,55,2],[30,601,55,20],[30,603,56,2],[30,619,56,18],[30,621,57,2],[30,646,57,27],[30,648,58,2],[30,656,58,10],[30,658,59,2],[30,680,59,24],[30,682,60,2],[30,704,60,24],[30,706,61,2],[30,712,61,8],[30,714,62,2],[30,721,62,9],[30,723,63,2],[30,750,63,29],[30,752,64,2],[30,777,64,27],[30,779,65,2],[30,795,65,18],[30,796,66,1],[31,0,66,2]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}