{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":37,"index":37}}],"key":"llq4nuOBKCCL4A7IFpRswh14toM="}},{"name":"./Raw","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":14,"index":58},"end":{"line":2,"column":30,"index":74}}],"key":"CRtWRCAsJqkolcO7tw5z7Pwo7Vw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n  var rawMode = _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode;\n  var WHITESPACE = TYPE.WhiteSpace;\n  var COMMENT = TYPE.Comment;\n  var SEMICOLON = TYPE.Semicolon;\n  var ATKEYWORD = TYPE.AtKeyword;\n  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n  var RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n  }\n  function consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n  }\n  function consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\n  }\n  function consumeDeclaration() {\n    if (this.scanner.tokenType === SEMICOLON) {\n      return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\n    }\n    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n    if (this.scanner.tokenType === SEMICOLON) {\n      this.scanner.next();\n    }\n    return node;\n  }\n  module.exports = {\n    name: 'Block',\n    structure: {\n      children: [['Atrule', 'Rule', 'Declaration']]\n    },\n    parse: function parse(isDeclaration) {\n      var consumer = isDeclaration ? consumeDeclaration : consumeRule;\n      var start = this.scanner.tokenStart;\n      var children = this.createList();\n      this.eat(LEFTCURLYBRACKET);\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case RIGHTCURLYBRACKET:\n            break scan;\n          case WHITESPACE:\n          case COMMENT:\n            this.scanner.next();\n            break;\n          case ATKEYWORD:\n            children.push(this.parseWithFallback(this.Atrule, consumeRaw));\n            break;\n          default:\n            children.push(consumer.call(this));\n        }\n      }\n      if (!this.scanner.eof) {\n        this.eat(RIGHTCURLYBRACKET);\n      }\n      return {\n        type: 'Block',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('{');\n      this.children(node, function (prev) {\n        if (prev.type === 'Declaration') {\n          this.chunk(';');\n        }\n      });\n      this.chunk('}');\n    },\n    walkContext: 'block'\n  };\n});","lineCount":74,"map":[[2,2,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,25,1,18,"_dependencyMap"],[2,39,1,18],[2,61,1,36],[2,62,1,37],[2,63,1,38,"TYPE"],[2,67,1,42],[3,2,2,0],[3,6,2,4,"rawMode"],[3,13,2,11],[3,16,2,14,"require"],[3,27,2,21],[3,28,2,21,"_dependencyMap"],[3,42,2,21],[3,54,2,29],[3,55,2,30],[3,56,2,31,"mode"],[3,60,2,35],[4,2,4,0],[4,6,4,4,"WHITESPACE"],[4,16,4,14],[4,19,4,17,"TYPE"],[4,23,4,21],[4,24,4,22,"WhiteSpace"],[4,34,4,32],[5,2,5,0],[5,6,5,4,"COMMENT"],[5,13,5,11],[5,16,5,14,"TYPE"],[5,20,5,18],[5,21,5,19,"Comment"],[5,28,5,26],[6,2,6,0],[6,6,6,4,"SEMICOLON"],[6,15,6,13],[6,18,6,16,"TYPE"],[6,22,6,20],[6,23,6,21,"Semicolon"],[6,32,6,30],[7,2,7,0],[7,6,7,4,"ATKEYWORD"],[7,15,7,13],[7,18,7,16,"TYPE"],[7,22,7,20],[7,23,7,21,"AtKeyword"],[7,32,7,30],[8,2,8,0],[8,6,8,4,"LEFTCURLYBRACKET"],[8,22,8,20],[8,25,8,23,"TYPE"],[8,29,8,27],[8,30,8,28,"LeftCurlyBracket"],[8,46,8,44],[9,2,9,0],[9,6,9,4,"RIGHTCURLYBRACKET"],[9,23,9,21],[9,26,9,24,"TYPE"],[9,30,9,28],[9,31,9,29,"RightCurlyBracket"],[9,48,9,46],[10,2,11,0],[10,11,11,9,"consumeRaw"],[10,21,11,19,"consumeRaw"],[10,22,11,20,"startToken"],[10,32,11,30],[10,34,11,32],[11,4,12,4],[11,11,12,11],[11,15,12,15],[11,16,12,16,"Raw"],[11,19,12,19],[11,20,12,20,"startToken"],[11,30,12,30],[11,32,12,32],[11,36,12,36],[11,38,12,38],[11,42,12,42],[11,43,12,43],[12,2,13,0],[13,2,14,0],[13,11,14,9,"consumeRule"],[13,22,14,20,"consumeRule"],[13,23,14,20],[13,25,14,23],[14,4,15,4],[14,11,15,11],[14,15,15,15],[14,16,15,16,"parseWithFallback"],[14,33,15,33],[14,34,15,34],[14,38,15,38],[14,39,15,39,"Rule"],[14,43,15,43],[14,45,15,45,"consumeRaw"],[14,55,15,55],[14,56,15,56],[15,2,16,0],[16,2,17,0],[16,11,17,9,"consumeRawDeclaration"],[16,32,17,30,"consumeRawDeclaration"],[16,33,17,31,"startToken"],[16,43,17,41],[16,45,17,43],[17,4,18,4],[17,11,18,11],[17,15,18,15],[17,16,18,16,"Raw"],[17,19,18,19],[17,20,18,20,"startToken"],[17,30,18,30],[17,32,18,32,"rawMode"],[17,39,18,39],[17,40,18,40,"semicolonIncluded"],[17,57,18,57],[17,59,18,59],[17,63,18,63],[17,64,18,64],[18,2,19,0],[19,2,20,0],[19,11,20,9,"consumeDeclaration"],[19,29,20,27,"consumeDeclaration"],[19,30,20,27],[19,32,20,30],[20,4,21,4],[20,8,21,8],[20,12,21,12],[20,13,21,13,"scanner"],[20,20,21,20],[20,21,21,21,"tokenType"],[20,30,21,30],[20,35,21,35,"SEMICOLON"],[20,44,21,44],[20,46,21,46],[21,6,22,8],[21,13,22,15,"consumeRawDeclaration"],[21,34,22,36],[21,35,22,37,"call"],[21,39,22,41],[21,40,22,42],[21,44,22,46],[21,46,22,48],[21,50,22,52],[21,51,22,53,"scanner"],[21,58,22,60],[21,59,22,61,"tokenIndex"],[21,69,22,71],[21,70,22,72],[22,4,23,4],[23,4,25,4],[23,8,25,8,"node"],[23,12,25,12],[23,15,25,15],[23,19,25,19],[23,20,25,20,"parseWithFallback"],[23,37,25,37],[23,38,25,38],[23,42,25,42],[23,43,25,43,"Declaration"],[23,54,25,54],[23,56,25,56,"consumeRawDeclaration"],[23,77,25,77],[23,78,25,78],[24,4,27,4],[24,8,27,8],[24,12,27,12],[24,13,27,13,"scanner"],[24,20,27,20],[24,21,27,21,"tokenType"],[24,30,27,30],[24,35,27,35,"SEMICOLON"],[24,44,27,44],[24,46,27,46],[25,6,28,8],[25,10,28,12],[25,11,28,13,"scanner"],[25,18,28,20],[25,19,28,21,"next"],[25,23,28,25],[25,24,28,26],[25,25,28,27],[26,4,29,4],[27,4,31,4],[27,11,31,11,"node"],[27,15,31,15],[28,2,32,0],[29,2,34,0,"module"],[29,8,34,6],[29,9,34,7,"exports"],[29,16,34,14],[29,19,34,17],[30,4,35,4,"name"],[30,8,35,8],[30,10,35,10],[30,17,35,17],[31,4,36,4,"structure"],[31,13,36,13],[31,15,36,15],[32,6,37,8,"children"],[32,14,37,16],[32,16,37,18],[32,17,37,19],[32,18,38,12],[32,26,38,20],[32,28,39,12],[32,34,39,18],[32,36,40,12],[32,49,40,25],[32,50,41,9],[33,4,42,4],[33,5,42,5],[34,4,43,4,"parse"],[34,9,43,9],[34,11,43,11],[34,20,43,11,"parse"],[34,26,43,20,"isDeclaration"],[34,39,43,33],[34,41,43,35],[35,6,44,8],[35,10,44,12,"consumer"],[35,18,44,20],[35,21,44,23,"isDeclaration"],[35,34,44,36],[35,37,44,39,"consumeDeclaration"],[35,55,44,57],[35,58,44,60,"consumeRule"],[35,69,44,71],[36,6,46,8],[36,10,46,12,"start"],[36,15,46,17],[36,18,46,20],[36,22,46,24],[36,23,46,25,"scanner"],[36,30,46,32],[36,31,46,33,"tokenStart"],[36,41,46,43],[37,6,47,8],[37,10,47,12,"children"],[37,18,47,20],[37,21,47,23],[37,25,47,27],[37,26,47,28,"createList"],[37,36,47,38],[37,37,47,39],[37,38,47,40],[38,6,49,8],[38,10,49,12],[38,11,49,13,"eat"],[38,14,49,16],[38,15,49,17,"LEFTCURLYBRACKET"],[38,31,49,33],[38,32,49,34],[39,6,51,8,"scan"],[39,10,51,12],[39,12,52,8],[39,19,52,15],[39,20,52,16],[39,24,52,20],[39,25,52,21,"scanner"],[39,32,52,28],[39,33,52,29,"eof"],[39,36,52,32],[39,38,52,34],[40,8,53,12],[40,16,53,20],[40,20,53,24],[40,21,53,25,"scanner"],[40,28,53,32],[40,29,53,33,"tokenType"],[40,38,53,42],[41,10,54,16],[41,15,54,21,"RIGHTCURLYBRACKET"],[41,32,54,38],[42,12,55,20],[42,18,55,26,"scan"],[42,22,55,30],[43,10,57,16],[43,15,57,21,"WHITESPACE"],[43,25,57,31],[44,10,58,16],[44,15,58,21,"COMMENT"],[44,22,58,28],[45,12,59,20],[45,16,59,24],[45,17,59,25,"scanner"],[45,24,59,32],[45,25,59,33,"next"],[45,29,59,37],[45,30,59,38],[45,31,59,39],[46,12,60,20],[47,10,62,16],[47,15,62,21,"ATKEYWORD"],[47,24,62,30],[48,12,63,20,"children"],[48,20,63,28],[48,21,63,29,"push"],[48,25,63,33],[48,26,63,34],[48,30,63,38],[48,31,63,39,"parseWithFallback"],[48,48,63,56],[48,49,63,57],[48,53,63,61],[48,54,63,62,"Atrule"],[48,60,63,68],[48,62,63,70,"consumeRaw"],[48,72,63,80],[48,73,63,81],[48,74,63,82],[49,12,64,20],[50,10,66,16],[51,12,67,20,"children"],[51,20,67,28],[51,21,67,29,"push"],[51,25,67,33],[51,26,67,34,"consumer"],[51,34,67,42],[51,35,67,43,"call"],[51,39,67,47],[51,40,67,48],[51,44,67,52],[51,45,67,53],[51,46,67,54],[52,8,68,12],[53,6,69,8],[54,6,71,8],[54,10,71,12],[54,11,71,13],[54,15,71,17],[54,16,71,18,"scanner"],[54,23,71,25],[54,24,71,26,"eof"],[54,27,71,29],[54,29,71,31],[55,8,72,12],[55,12,72,16],[55,13,72,17,"eat"],[55,16,72,20],[55,17,72,21,"RIGHTCURLYBRACKET"],[55,34,72,38],[55,35,72,39],[56,6,73,8],[57,6,75,8],[57,13,75,15],[58,8,76,12,"type"],[58,12,76,16],[58,14,76,18],[58,21,76,25],[59,8,77,12,"loc"],[59,11,77,15],[59,13,77,17],[59,17,77,21],[59,18,77,22,"getLocation"],[59,29,77,33],[59,30,77,34,"start"],[59,35,77,39],[59,37,77,41],[59,41,77,45],[59,42,77,46,"scanner"],[59,49,77,53],[59,50,77,54,"tokenStart"],[59,60,77,64],[59,61,77,65],[60,8,78,12,"children"],[60,16,78,20],[60,18,78,22,"children"],[61,6,79,8],[61,7,79,9],[62,4,80,4],[62,5,80,5],[63,4,81,4,"generate"],[63,12,81,12],[63,14,81,14],[63,23,81,14,"generate"],[63,32,81,23,"node"],[63,36,81,27],[63,38,81,29],[64,6,82,8],[64,10,82,12],[64,11,82,13,"chunk"],[64,16,82,18],[64,17,82,19],[64,20,82,22],[64,21,82,23],[65,6,83,8],[65,10,83,12],[65,11,83,13,"children"],[65,19,83,21],[65,20,83,22,"node"],[65,24,83,26],[65,26,83,28],[65,36,83,37,"prev"],[65,40,83,41],[65,42,83,43],[66,8,84,12],[66,12,84,16,"prev"],[66,16,84,20],[66,17,84,21,"type"],[66,21,84,25],[66,26,84,30],[66,39,84,43],[66,41,84,45],[67,10,85,16],[67,14,85,20],[67,15,85,21,"chunk"],[67,20,85,26],[67,21,85,27],[67,24,85,30],[67,25,85,31],[68,8,86,12],[69,6,87,8],[69,7,87,9],[69,8,87,10],[70,6,88,8],[70,10,88,12],[70,11,88,13,"chunk"],[70,16,88,18],[70,17,88,19],[70,20,88,22],[70,21,88,23],[71,4,89,4],[71,5,89,5],[72,4,90,4,"walkContext"],[72,15,90,15],[72,17,90,17],[73,2,91,0],[73,3,91,1],[74,0,91,2]],"functionMap":{"names":["<global>","consumeRaw","consumeRule","consumeRawDeclaration","consumeDeclaration","module.exports.parse","module.exports.generate","children$argument_1"],"mappings":"AAA;ACU;CDE;AEC;CFE;AGC;CHE;AIC;CJY;WKW;KLqC;cMC;4BCE;SDI;KNE"}},"type":"js/module"}]}