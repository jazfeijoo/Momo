{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":212,"column":0,"index":6808}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../vendor/emitter/EventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":268},"end":{"line":13,"column":58,"index":326}}],"key":"fgDwi/IrVIcBdLV47qHthWsoTIw="}},{"name":"../BatchedBridge/BatchedBridge","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":22,"index":350},"end":{"line":15,"column":63,"index":391}}],"key":"MvuFHLrr66uWZvuv+I/rfsDBNt0="}},{"name":"../Utilities/infoLog","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":16,"index":409},"end":{"line":16,"column":47,"index":440}}],"key":"te7FMDljSHoh4Ptoq0ebhkaWbSA="}},{"name":"./TaskQueue","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":18,"index":460},"end":{"line":17,"column":40,"index":482}}],"key":"1ceiWyFBQZw9eNp9+Dpb/TWmHXc="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":18,"index":502},"end":{"line":18,"column":38,"index":522}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _EventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../vendor/emitter/EventEmitter\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var BatchedBridge = _$$_REQUIRE(_dependencyMap[2], \"../BatchedBridge/BatchedBridge\");\n  var infoLog = _$$_REQUIRE(_dependencyMap[3], \"../Utilities/infoLog\");\n  var TaskQueue = _$$_REQUIRE(_dependencyMap[4], \"./TaskQueue\");\n  var invariant = _$$_REQUIRE(_dependencyMap[5], \"invariant\");\n  var _emitter = new _EventEmitter.default();\n  var DEBUG_DELAY = 0;\n  var DEBUG = false;\n\n  /**\n   * InteractionManager allows long-running work to be scheduled after any\n   * interactions/animations have completed. In particular, this allows JavaScript\n   * animations to run smoothly.\n   *\n   * Applications can schedule tasks to run after interactions with the following:\n   *\n   * ```\n   * InteractionManager.runAfterInteractions(() => {\n   *   // ...long-running synchronous task...\n   * });\n   * ```\n   *\n   * Compare this to other scheduling alternatives:\n   *\n   * - requestAnimationFrame(): for code that animates a view over time.\n   * - setImmediate/setTimeout(): run code later, note this may delay animations.\n   * - runAfterInteractions(): run code later, without delaying active animations.\n   *\n   * The touch handling system considers one or more active touches to be an\n   * 'interaction' and will delay `runAfterInteractions()` callbacks until all\n   * touches have ended or been cancelled.\n   *\n   * InteractionManager also allows applications to register animations by\n   * creating an interaction 'handle' on animation start, and clearing it upon\n   * completion:\n   *\n   * ```\n   * var handle = InteractionManager.createInteractionHandle();\n   * // run animation... (`runAfterInteractions` tasks are queued)\n   * // later, on animation completion:\n   * InteractionManager.clearInteractionHandle(handle);\n   * // queued tasks run if all handles were cleared\n   * ```\n   *\n   * `runAfterInteractions` takes either a plain callback function, or a\n   * `PromiseTask` object with a `gen` method that returns a `Promise`.  If a\n   * `PromiseTask` is supplied, then it is fully resolved (including asynchronous\n   * dependencies that also schedule more tasks via `runAfterInteractions`) before\n   * starting on the next task that might have been queued up synchronously\n   * earlier.\n   *\n   * By default, queued tasks are executed together in a loop in one\n   * `setImmediate` batch. If `setDeadline` is called with a positive number, then\n   * tasks will only be executed until the deadline (in terms of js event loop run\n   * time) approaches, at which point execution will yield via setTimeout,\n   * allowing events such as touches to start interactions and block queued tasks\n   * from executing, making apps more responsive.\n   */\n  var InteractionManager = {\n    Events: {\n      interactionStart: 'interactionStart',\n      interactionComplete: 'interactionComplete'\n    },\n    /**\n     * Schedule a function to run after all interactions have completed. Returns a cancellable\n     * \"promise\".\n     */\n    runAfterInteractions: function runAfterInteractions(task) {\n      var tasks = [];\n      var promise = new Promise(function (resolve) {\n        _scheduleUpdate();\n        if (task) {\n          tasks.push(task);\n        }\n        tasks.push({\n          run: resolve,\n          name: 'resolve ' + (task && task.name || '?')\n        });\n        _taskQueue.enqueueTasks(tasks);\n      });\n      return {\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        then: promise.then.bind(promise),\n        cancel: function cancel() {\n          _taskQueue.cancelTasks(tasks);\n        }\n      };\n    },\n    /**\n     * Notify manager that an interaction has started.\n     */\n    createInteractionHandle: function createInteractionHandle() {\n      DEBUG && infoLog('InteractionManager: create interaction handle');\n      _scheduleUpdate();\n      var handle = ++_inc;\n      _addInteractionSet.add(handle);\n      return handle;\n    },\n    /**\n     * Notify manager that an interaction has completed.\n     */\n    clearInteractionHandle: function clearInteractionHandle(handle) {\n      DEBUG && infoLog('InteractionManager: clear interaction handle');\n      invariant(!!handle, 'InteractionManager: Must provide a handle to clear.');\n      _scheduleUpdate();\n      _addInteractionSet.delete(handle);\n      _deleteInteractionSet.add(handle);\n    },\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    addListener: _emitter.addListener.bind(_emitter),\n    /**\n     * A positive number will use setTimeout to schedule any tasks after the\n     * eventLoopRunningTime hits the deadline value, otherwise all tasks will be\n     * executed in one setImmediate batch (default).\n     */\n    setDeadline: function setDeadline(deadline) {\n      _deadline = deadline;\n    }\n  };\n  var _interactionSet = new Set();\n  var _addInteractionSet = new Set();\n  var _deleteInteractionSet = new Set();\n  var _taskQueue = new TaskQueue({\n    onMoreTasks: _scheduleUpdate\n  });\n  var _nextUpdateHandle = 0;\n  var _inc = 0;\n  var _deadline = -1;\n\n  /**\n   * Schedule an asynchronous update to the interaction state.\n   */\n  function _scheduleUpdate() {\n    if (!_nextUpdateHandle) {\n      if (_deadline > 0) {\n        _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);\n      } else {\n        _nextUpdateHandle = setImmediate(_processUpdate);\n      }\n    }\n  }\n\n  /**\n   * Notify listeners, process queue, etc\n   */\n  function _processUpdate() {\n    _nextUpdateHandle = 0;\n    var interactionCount = _interactionSet.size;\n    _addInteractionSet.forEach(function (handle) {\n      return _interactionSet.add(handle);\n    });\n    _deleteInteractionSet.forEach(function (handle) {\n      return _interactionSet.delete(handle);\n    });\n    var nextInteractionCount = _interactionSet.size;\n    if (interactionCount !== 0 && nextInteractionCount === 0) {\n      // transition from 1+ --> 0 interactions\n      _emitter.emit(InteractionManager.Events.interactionComplete);\n    } else if (interactionCount === 0 && nextInteractionCount !== 0) {\n      // transition from 0 --> 1+ interactions\n      _emitter.emit(InteractionManager.Events.interactionStart);\n    }\n\n    // process the queue regardless of a transition\n    if (nextInteractionCount === 0) {\n      while (_taskQueue.hasTasksToProcess()) {\n        _taskQueue.processNext();\n        if (_deadline > 0 && BatchedBridge.getEventLoopRunningTime() >= _deadline) {\n          // Hit deadline before processing all tasks, so process more later.\n          _scheduleUpdate();\n          break;\n        }\n      }\n    }\n    _addInteractionSet.clear();\n    _deleteInteractionSet.clear();\n  }\n  module.exports = InteractionManager;\n});","lineCount":191,"map":[[3,2,13,0],[3,6,13,0,"_EventEmitter"],[3,19,13,0],[3,22,13,0,"_interopRequireDefault"],[3,44,13,0],[3,45,13,0,"_$$_REQUIRE"],[3,56,13,0],[3,57,13,0,"_dependencyMap"],[3,71,13,0],[4,2,1,0],[5,0,2,0],[6,0,3,0],[7,0,4,0],[8,0,5,0],[9,0,6,0],[10,0,7,0],[11,0,8,0],[12,0,9,0],[14,2,15,0],[14,6,15,6,"BatchedBridge"],[14,19,15,19],[14,22,15,22,"require"],[14,33,15,29],[14,34,15,29,"_dependencyMap"],[14,48,15,29],[14,85,15,62],[14,86,15,63],[15,2,16,0],[15,6,16,6,"infoLog"],[15,13,16,13],[15,16,16,16,"require"],[15,27,16,23],[15,28,16,23,"_dependencyMap"],[15,42,16,23],[15,69,16,46],[15,70,16,47],[16,2,17,0],[16,6,17,6,"TaskQueue"],[16,15,17,15],[16,18,17,18,"require"],[16,29,17,25],[16,30,17,25,"_dependencyMap"],[16,44,17,25],[16,62,17,39],[16,63,17,40],[17,2,18,0],[17,6,18,6,"invariant"],[17,15,18,15],[17,18,18,18,"require"],[17,29,18,25],[17,30,18,25,"_dependencyMap"],[17,44,18,25],[17,60,18,37],[17,61,18,38],[18,2,22,0],[18,6,22,6,"_emitter"],[18,14,22,14],[18,17,22,17],[18,21,22,21,"EventEmitter"],[18,42,22,33],[18,43,25,3],[18,44,25,4],[19,2,27,0],[19,6,27,6,"DEBUG_DELAY"],[19,17,27,20],[19,20,27,23],[19,21,27,24],[20,2,28,0],[20,6,28,6,"DEBUG"],[20,11,28,18],[20,14,28,21],[20,19,28,26],[22,2,30,0],[23,0,31,0],[24,0,32,0],[25,0,33,0],[26,0,34,0],[27,0,35,0],[28,0,36,0],[29,0,37,0],[30,0,38,0],[31,0,39,0],[32,0,40,0],[33,0,41,0],[34,0,42,0],[35,0,43,0],[36,0,44,0],[37,0,45,0],[38,0,46,0],[39,0,47,0],[40,0,48,0],[41,0,49,0],[42,0,50,0],[43,0,51,0],[44,0,52,0],[45,0,53,0],[46,0,54,0],[47,0,55,0],[48,0,56,0],[49,0,57,0],[50,0,58,0],[51,0,59,0],[52,0,60,0],[53,0,61,0],[54,0,62,0],[55,0,63,0],[56,0,64,0],[57,0,65,0],[58,0,66,0],[59,0,67,0],[60,0,68,0],[61,0,69,0],[62,0,70,0],[63,0,71,0],[64,0,72,0],[65,0,73,0],[66,0,74,0],[67,0,75,0],[68,0,76,0],[69,0,77,0],[70,0,78,0],[71,2,79,0],[71,6,79,6,"InteractionManager"],[71,24,79,24],[71,27,79,27],[72,4,80,2,"Events"],[72,10,80,8],[72,12,80,10],[73,6,81,4,"interactionStart"],[73,22,81,20],[73,24,81,22],[73,42,81,40],[74,6,82,4,"interactionComplete"],[74,25,82,23],[74,27,82,25],[75,4,83,2],[75,5,83,3],[76,4,85,2],[77,0,86,0],[78,0,87,0],[79,0,88,0],[80,4,89,2,"runAfterInteractions"],[80,24,89,22],[80,35,89,22,"runAfterInteractions"],[80,56,89,23,"task"],[80,60,89,34],[80,62,96,4],[81,6,97,4],[81,10,97,10,"tasks"],[81,15,97,28],[81,18,97,31],[81,20,97,33],[82,6,98,4],[82,10,98,10,"promise"],[82,17,98,17],[82,20,98,20],[82,24,98,24,"Promise"],[82,31,98,31],[82,32,98,32],[82,42,98,33,"resolve"],[82,49,98,52],[82,51,98,57],[83,8,99,6,"_scheduleUpdate"],[83,23,99,21],[83,24,99,22],[83,25,99,23],[84,8,100,6],[84,12,100,10,"task"],[84,16,100,14],[84,18,100,16],[85,10,101,8,"tasks"],[85,15,101,13],[85,16,101,14,"push"],[85,20,101,18],[85,21,101,19,"task"],[85,25,101,23],[85,26,101,24],[86,8,102,6],[87,8,103,6,"tasks"],[87,13,103,11],[87,14,103,12,"push"],[87,18,103,16],[87,19,103,17],[88,10,104,8,"run"],[88,13,104,11],[88,15,104,13,"resolve"],[88,22,104,20],[89,10,105,8,"name"],[89,14,105,12],[89,16,105,14],[89,26,105,24],[89,30,105,29,"task"],[89,34,105,33],[89,38,105,37,"task"],[89,42,105,41],[89,43,105,42,"name"],[89,47,105,46],[89,51,105,51],[89,54,105,54],[90,8,106,6],[90,9,106,7],[90,10,106,8],[91,8,107,6,"_taskQueue"],[91,18,107,16],[91,19,107,17,"enqueueTasks"],[91,31,107,29],[91,32,107,30,"tasks"],[91,37,107,35],[91,38,107,36],[92,6,108,4],[92,7,108,5],[92,8,108,6],[93,6,109,4],[93,13,109,11],[94,8,110,6],[95,8,111,6,"then"],[95,12,111,10],[95,14,111,12,"promise"],[95,21,111,19],[95,22,111,20,"then"],[95,26,111,24],[95,27,111,25,"bind"],[95,31,111,29],[95,32,111,30,"promise"],[95,39,111,37],[95,40,111,38],[96,8,112,6,"cancel"],[96,14,112,12],[96,16,112,14],[96,25,112,14,"cancel"],[96,32,112,14],[96,34,112,26],[97,10,113,8,"_taskQueue"],[97,20,113,18],[97,21,113,19,"cancelTasks"],[97,32,113,30],[97,33,113,31,"tasks"],[97,38,113,36],[97,39,113,37],[98,8,114,6],[99,6,115,4],[99,7,115,5],[100,4,116,2],[100,5,116,3],[101,4,118,2],[102,0,119,0],[103,0,120,0],[104,4,121,2,"createInteractionHandle"],[104,27,121,25],[104,38,121,25,"createInteractionHandle"],[104,62,121,25],[104,64,121,36],[105,6,122,4,"DEBUG"],[105,11,122,9],[105,15,122,13,"infoLog"],[105,22,122,20],[105,23,122,21],[105,70,122,68],[105,71,122,69],[106,6,123,4,"_scheduleUpdate"],[106,21,123,19],[106,22,123,20],[106,23,123,21],[107,6,124,4],[107,10,124,10,"handle"],[107,16,124,16],[107,19,124,19],[107,21,124,21,"_inc"],[107,25,124,25],[108,6,125,4,"_addInteractionSet"],[108,24,125,22],[108,25,125,23,"add"],[108,28,125,26],[108,29,125,27,"handle"],[108,35,125,33],[108,36,125,34],[109,6,126,4],[109,13,126,11,"handle"],[109,19,126,17],[110,4,127,2],[110,5,127,3],[111,4,129,2],[112,0,130,0],[113,0,131,0],[114,4,132,2,"clearInteractionHandle"],[114,26,132,24],[114,37,132,24,"clearInteractionHandle"],[114,60,132,25,"handle"],[114,66,132,39],[114,68,132,41],[115,6,133,4,"DEBUG"],[115,11,133,9],[115,15,133,13,"infoLog"],[115,22,133,20],[115,23,133,21],[115,69,133,67],[115,70,133,68],[116,6,134,4,"invariant"],[116,15,134,13],[116,16,134,14],[116,17,134,15],[116,18,134,16,"handle"],[116,24,134,22],[116,26,134,24],[116,79,134,77],[116,80,134,78],[117,6,135,4,"_scheduleUpdate"],[117,21,135,19],[117,22,135,20],[117,23,135,21],[118,6,136,4,"_addInteractionSet"],[118,24,136,22],[118,25,136,23,"delete"],[118,31,136,29],[118,32,136,30,"handle"],[118,38,136,36],[118,39,136,37],[119,6,137,4,"_deleteInteractionSet"],[119,27,137,25],[119,28,137,26,"add"],[119,31,137,29],[119,32,137,30,"handle"],[119,38,137,36],[119,39,137,37],[120,4,138,2],[120,5,138,3],[121,4,140,2],[122,4,141,2,"addListener"],[122,15,141,13],[122,17,141,16,"_emitter"],[122,25,141,24],[122,26,141,25,"addListener"],[122,37,141,36],[122,38,141,37,"bind"],[122,42,141,41],[122,43,141,42,"_emitter"],[122,51,141,50],[122,52,141,64],[123,4,143,2],[124,0,144,0],[125,0,145,0],[126,0,146,0],[127,0,147,0],[128,4,148,2,"setDeadline"],[128,15,148,13],[128,26,148,13,"setDeadline"],[128,38,148,14,"deadline"],[128,46,148,30],[128,48,148,32],[129,6,149,4,"_deadline"],[129,15,149,13],[129,18,149,16,"deadline"],[129,26,149,24],[130,4,150,2],[131,2,151,0],[131,3,151,1],[132,2,153,0],[132,6,153,6,"_interactionSet"],[132,21,153,21],[132,24,153,24],[132,28,153,28,"Set"],[132,31,153,31],[132,32,153,49],[132,33,153,50],[133,2,154,0],[133,6,154,6,"_addInteractionSet"],[133,24,154,24],[133,27,154,27],[133,31,154,31,"Set"],[133,34,154,34],[133,35,154,52],[133,36,154,53],[134,2,155,0],[134,6,155,6,"_deleteInteractionSet"],[134,27,155,27],[134,30,155,30],[134,34,155,34,"Set"],[134,37,155,37],[134,38,155,46],[134,39,155,47],[135,2,156,0],[135,6,156,6,"_taskQueue"],[135,16,156,16],[135,19,156,19],[135,23,156,23,"TaskQueue"],[135,32,156,32],[135,33,156,33],[136,4,156,34,"onMoreTasks"],[136,15,156,45],[136,17,156,47,"_scheduleUpdate"],[137,2,156,62],[137,3,156,63],[137,4,156,64],[138,2,157,0],[138,6,157,4,"_nextUpdateHandle"],[138,23,157,45],[138,26,157,48],[138,27,157,49],[139,2,158,0],[139,6,158,4,"_inc"],[139,10,158,8],[139,13,158,11],[139,14,158,12],[140,2,159,0],[140,6,159,4,"_deadline"],[140,15,159,13],[140,18,159,16],[140,19,159,17],[140,20,159,18],[142,2,161,0],[143,0,162,0],[144,0,163,0],[145,2,164,0],[145,11,164,9,"_scheduleUpdate"],[145,26,164,24,"_scheduleUpdate"],[145,27,164,24],[145,29,164,27],[146,4,165,2],[146,8,165,6],[146,9,165,7,"_nextUpdateHandle"],[146,26,165,24],[146,28,165,26],[147,6,166,4],[147,10,166,8,"_deadline"],[147,19,166,17],[147,22,166,20],[147,23,166,21],[147,25,166,23],[148,8,167,6,"_nextUpdateHandle"],[148,25,167,23],[148,28,167,26,"setTimeout"],[148,38,167,36],[148,39,167,37,"_processUpdate"],[148,53,167,51],[148,55,167,53],[148,56,167,54],[148,59,167,57,"DEBUG_DELAY"],[148,70,167,68],[148,71,167,69],[149,6,168,4],[149,7,168,5],[149,13,168,11],[150,8,169,6,"_nextUpdateHandle"],[150,25,169,23],[150,28,169,26,"setImmediate"],[150,40,169,38],[150,41,169,39,"_processUpdate"],[150,55,169,53],[150,56,169,54],[151,6,170,4],[152,4,171,2],[153,2,172,0],[155,2,174,0],[156,0,175,0],[157,0,176,0],[158,2,177,0],[158,11,177,9,"_processUpdate"],[158,25,177,23,"_processUpdate"],[158,26,177,23],[158,28,177,26],[159,4,178,2,"_nextUpdateHandle"],[159,21,178,19],[159,24,178,22],[159,25,178,23],[160,4,180,2],[160,8,180,8,"interactionCount"],[160,24,180,24],[160,27,180,27,"_interactionSet"],[160,42,180,42],[160,43,180,43,"size"],[160,47,180,47],[161,4,181,2,"_addInteractionSet"],[161,22,181,20],[161,23,181,21,"forEach"],[161,30,181,28],[161,31,181,29],[161,41,181,29,"handle"],[161,47,181,35],[162,6,181,35],[162,13,181,39,"_interactionSet"],[162,28,181,54],[162,29,181,55,"add"],[162,32,181,58],[162,33,181,59,"handle"],[162,39,181,65],[162,40,181,66],[163,4,181,66],[163,6,181,67],[164,4,182,2,"_deleteInteractionSet"],[164,25,182,23],[164,26,182,24,"forEach"],[164,33,182,31],[164,34,182,32],[164,44,182,32,"handle"],[164,50,182,38],[165,6,182,38],[165,13,182,42,"_interactionSet"],[165,28,182,57],[165,29,182,58,"delete"],[165,35,182,64],[165,36,182,65,"handle"],[165,42,182,71],[165,43,182,72],[166,4,182,72],[166,6,182,73],[167,4,183,2],[167,8,183,8,"nextInteractionCount"],[167,28,183,28],[167,31,183,31,"_interactionSet"],[167,46,183,46],[167,47,183,47,"size"],[167,51,183,51],[168,4,185,2],[168,8,185,6,"interactionCount"],[168,24,185,22],[168,29,185,27],[168,30,185,28],[168,34,185,32,"nextInteractionCount"],[168,54,185,52],[168,59,185,57],[168,60,185,58],[168,62,185,60],[169,6,186,4],[170,6,187,4,"_emitter"],[170,14,187,12],[170,15,187,13,"emit"],[170,19,187,17],[170,20,187,18,"InteractionManager"],[170,38,187,36],[170,39,187,37,"Events"],[170,45,187,43],[170,46,187,44,"interactionComplete"],[170,65,187,63],[170,66,187,64],[171,4,188,2],[171,5,188,3],[171,11,188,9],[171,15,188,13,"interactionCount"],[171,31,188,29],[171,36,188,34],[171,37,188,35],[171,41,188,39,"nextInteractionCount"],[171,61,188,59],[171,66,188,64],[171,67,188,65],[171,69,188,67],[172,6,189,4],[173,6,190,4,"_emitter"],[173,14,190,12],[173,15,190,13,"emit"],[173,19,190,17],[173,20,190,18,"InteractionManager"],[173,38,190,36],[173,39,190,37,"Events"],[173,45,190,43],[173,46,190,44,"interactionStart"],[173,62,190,60],[173,63,190,61],[174,4,191,2],[176,4,193,2],[177,4,194,2],[177,8,194,6,"nextInteractionCount"],[177,28,194,26],[177,33,194,31],[177,34,194,32],[177,36,194,34],[178,6,195,4],[178,13,195,11,"_taskQueue"],[178,23,195,21],[178,24,195,22,"hasTasksToProcess"],[178,41,195,39],[178,42,195,40],[178,43,195,41],[178,45,195,43],[179,8,196,6,"_taskQueue"],[179,18,196,16],[179,19,196,17,"processNext"],[179,30,196,28],[179,31,196,29],[179,32,196,30],[180,8,197,6],[180,12,198,8,"_deadline"],[180,21,198,17],[180,24,198,20],[180,25,198,21],[180,29,199,8,"BatchedBridge"],[180,42,199,21],[180,43,199,22,"getEventLoopRunningTime"],[180,66,199,45],[180,67,199,46],[180,68,199,47],[180,72,199,51,"_deadline"],[180,81,199,60],[180,83,200,8],[181,10,201,8],[182,10,202,8,"_scheduleUpdate"],[182,25,202,23],[182,26,202,24],[182,27,202,25],[183,10,203,8],[184,8,204,6],[185,6,205,4],[186,4,206,2],[187,4,207,2,"_addInteractionSet"],[187,22,207,20],[187,23,207,21,"clear"],[187,28,207,26],[187,29,207,27],[187,30,207,28],[188,4,208,2,"_deleteInteractionSet"],[188,25,208,23],[188,26,208,24,"clear"],[188,31,208,29],[188,32,208,30],[188,33,208,31],[189,2,209,0],[190,2,211,0,"module"],[190,8,211,6],[190,9,211,7,"exports"],[190,16,211,14],[190,19,211,17,"InteractionManager"],[190,37,211,35],[191,0,211,36]],"functionMap":{"names":["<global>","runAfterInteractions","Promise$argument_0","cancel","createInteractionHandle","clearInteractionHandle","setDeadline","_scheduleUpdate","_processUpdate","_addInteractionSet.forEach$argument_0","_deleteInteractionSet.forEach$argument_0"],"mappings":"AAA;ECwF;gCCS;KDU;cEI;OFE;GDE;EIK;GJM;EKK;GLM;EMU;GNE;AOc;CPQ;AQK;6BCI,qCD;gCEC,wCF;CR2B"}},"type":"js/module"}]}