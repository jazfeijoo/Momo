{"dependencies":[{"name":"mdn-data/css/at-rules.json","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":19,"index":19},"end":{"line":1,"column":56,"index":56}}],"key":"6bzqnE/yIt30XOdxSeXzScOz5SA="}},{"name":"mdn-data/css/properties.json","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":22,"index":80},"end":{"line":2,"column":61,"index":119}}],"key":"lFOsUPp+/ma4dIy5p9DtKZz5q5o="}},{"name":"mdn-data/css/syntaxes.json","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":20,"index":141},"end":{"line":3,"column":57,"index":178}}],"key":"8B6Yb9V5Nxjp71MYx2/OZqKqcKE="}},{"name":"./patch.json","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":14,"index":194},"end":{"line":4,"column":37,"index":217}}],"key":"BeWw6+dpqUctuA1wnFuWHv+OKeQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var mdnAtrules = _$$_REQUIRE(_dependencyMap[0], \"mdn-data/css/at-rules.json\");\n  var mdnProperties = _$$_REQUIRE(_dependencyMap[1], \"mdn-data/css/properties.json\");\n  var mdnSyntaxes = _$$_REQUIRE(_dependencyMap[2], \"mdn-data/css/syntaxes.json\");\n  var patch = _$$_REQUIRE(_dependencyMap[3], \"./patch.json\");\n  var extendSyntax = /^\\s*\\|\\s*/;\n  function preprocessAtrules(dict) {\n    var result = Object.create(null);\n    for (var atruleName in dict) {\n      var atrule = dict[atruleName];\n      var descriptors = null;\n      if (atrule.descriptors) {\n        descriptors = Object.create(null);\n        for (var descriptor in atrule.descriptors) {\n          descriptors[descriptor] = atrule.descriptors[descriptor].syntax;\n        }\n      }\n      result[atruleName.substr(1)] = {\n        prelude: atrule.syntax.trim().match(/^@\\S+\\s+([^;\\{]*)/)[1].trim() || null,\n        descriptors: descriptors\n      };\n    }\n    return result;\n  }\n  function patchDictionary(dict, patchDict) {\n    var result = {};\n\n    // copy all syntaxes for an original dict\n    for (var key in dict) {\n      result[key] = dict[key].syntax || dict[key];\n    }\n\n    // apply a patch\n    for (var _key in patchDict) {\n      if (_key in dict) {\n        if (patchDict[_key].syntax) {\n          result[_key] = extendSyntax.test(patchDict[_key].syntax) ? result[_key] + ' ' + patchDict[_key].syntax.trim() : patchDict[_key].syntax;\n        } else {\n          delete result[_key];\n        }\n      } else {\n        if (patchDict[_key].syntax) {\n          result[_key] = patchDict[_key].syntax.replace(extendSyntax, '');\n        }\n      }\n    }\n    return result;\n  }\n  function unpackSyntaxes(dict) {\n    var result = {};\n    for (var key in dict) {\n      result[key] = dict[key].syntax;\n    }\n    return result;\n  }\n  function patchAtrules(dict, patchDict) {\n    var result = {};\n\n    // copy all syntaxes for an original dict\n    for (var key in dict) {\n      var patchDescriptors = patchDict[key] && patchDict[key].descriptors || null;\n      result[key] = {\n        prelude: key in patchDict && 'prelude' in patchDict[key] ? patchDict[key].prelude : dict[key].prelude || null,\n        descriptors: dict[key].descriptors ? patchDictionary(dict[key].descriptors, patchDescriptors || {}) : patchDescriptors && unpackSyntaxes(patchDescriptors)\n      };\n    }\n\n    // apply a patch\n    for (var _key2 in patchDict) {\n      if (!hasOwnProperty.call(dict, _key2)) {\n        result[_key2] = {\n          prelude: patchDict[_key2].prelude || null,\n          descriptors: patchDict[_key2].descriptors && unpackSyntaxes(patchDict[_key2].descriptors)\n        };\n      }\n    }\n    return result;\n  }\n  module.exports = {\n    types: patchDictionary(mdnSyntaxes, patch.syntaxes),\n    atrules: patchAtrules(preprocessAtrules(mdnAtrules), patch.atrules),\n    properties: patchDictionary(mdnProperties, patch.properties)\n  };\n});","lineCount":84,"map":[[2,2,1,0],[2,6,1,6,"mdnAtrules"],[2,16,1,16],[2,19,1,19,"require"],[2,30,1,26],[2,31,1,26,"_dependencyMap"],[2,45,1,26],[2,78,1,55],[2,79,1,56],[3,2,2,0],[3,6,2,6,"mdnProperties"],[3,19,2,19],[3,22,2,22,"require"],[3,33,2,29],[3,34,2,29,"_dependencyMap"],[3,48,2,29],[3,83,2,60],[3,84,2,61],[4,2,3,0],[4,6,3,6,"mdnSyntaxes"],[4,17,3,17],[4,20,3,20,"require"],[4,31,3,27],[4,32,3,27,"_dependencyMap"],[4,46,3,27],[4,79,3,56],[4,80,3,57],[5,2,4,0],[5,6,4,6,"patch"],[5,11,4,11],[5,14,4,14,"require"],[5,25,4,21],[5,26,4,21,"_dependencyMap"],[5,40,4,21],[5,59,4,36],[5,60,4,37],[6,2,5,0],[6,6,5,6,"extendSyntax"],[6,18,5,18],[6,21,5,21],[6,32,5,32],[7,2,7,0],[7,11,7,9,"preprocessAtrules"],[7,28,7,26,"preprocessAtrules"],[7,29,7,27,"dict"],[7,33,7,31],[7,35,7,33],[8,4,8,4],[8,8,8,10,"result"],[8,14,8,16],[8,17,8,19,"Object"],[8,23,8,25],[8,24,8,26,"create"],[8,30,8,32],[8,31,8,33],[8,35,8,37],[8,36,8,38],[9,4,10,4],[9,9,10,9],[9,13,10,15,"atruleName"],[9,23,10,25],[9,27,10,29,"dict"],[9,31,10,33],[9,33,10,35],[10,6,11,8],[10,10,11,14,"atrule"],[10,16,11,20],[10,19,11,23,"dict"],[10,23,11,27],[10,24,11,28,"atruleName"],[10,34,11,38],[10,35,11,39],[11,6,12,8],[11,10,12,12,"descriptors"],[11,21,12,23],[11,24,12,26],[11,28,12,30],[12,6,14,8],[12,10,14,12,"atrule"],[12,16,14,18],[12,17,14,19,"descriptors"],[12,28,14,30],[12,30,14,32],[13,8,15,12,"descriptors"],[13,19,15,23],[13,22,15,26,"Object"],[13,28,15,32],[13,29,15,33,"create"],[13,35,15,39],[13,36,15,40],[13,40,15,44],[13,41,15,45],[14,8,17,12],[14,13,17,17],[14,17,17,23,"descriptor"],[14,27,17,33],[14,31,17,37,"atrule"],[14,37,17,43],[14,38,17,44,"descriptors"],[14,49,17,55],[14,51,17,57],[15,10,18,16,"descriptors"],[15,21,18,27],[15,22,18,28,"descriptor"],[15,32,18,38],[15,33,18,39],[15,36,18,42,"atrule"],[15,42,18,48],[15,43,18,49,"descriptors"],[15,54,18,60],[15,55,18,61,"descriptor"],[15,65,18,71],[15,66,18,72],[15,67,18,73,"syntax"],[15,73,18,79],[16,8,19,12],[17,6,20,8],[18,6,22,8,"result"],[18,12,22,14],[18,13,22,15,"atruleName"],[18,23,22,25],[18,24,22,26,"substr"],[18,30,22,32],[18,31,22,33],[18,32,22,34],[18,33,22,35],[18,34,22,36],[18,37,22,39],[19,8,23,12,"prelude"],[19,15,23,19],[19,17,23,21,"atrule"],[19,23,23,27],[19,24,23,28,"syntax"],[19,30,23,34],[19,31,23,35,"trim"],[19,35,23,39],[19,36,23,40],[19,37,23,41],[19,38,23,42,"match"],[19,43,23,47],[19,44,23,48],[19,63,23,67],[19,64,23,68],[19,65,23,69],[19,66,23,70],[19,67,23,71],[19,68,23,72,"trim"],[19,72,23,76],[19,73,23,77],[19,74,23,78],[19,78,23,82],[19,82,23,86],[20,8,24,12,"descriptors"],[20,19,24,23],[20,21,24,12,"descriptors"],[21,6,25,8],[21,7,25,9],[22,4,26,4],[23,4,28,4],[23,11,28,11,"result"],[23,17,28,17],[24,2,29,0],[25,2,31,0],[25,11,31,9,"patchDictionary"],[25,26,31,24,"patchDictionary"],[25,27,31,25,"dict"],[25,31,31,29],[25,33,31,31,"patchDict"],[25,42,31,40],[25,44,31,42],[26,4,32,4],[26,8,32,10,"result"],[26,14,32,16],[26,17,32,19],[26,18,32,20],[26,19,32,21],[28,4,34,4],[29,4,35,4],[29,9,35,9],[29,13,35,15,"key"],[29,16,35,18],[29,20,35,22,"dict"],[29,24,35,26],[29,26,35,28],[30,6,36,8,"result"],[30,12,36,14],[30,13,36,15,"key"],[30,16,36,18],[30,17,36,19],[30,20,36,22,"dict"],[30,24,36,26],[30,25,36,27,"key"],[30,28,36,30],[30,29,36,31],[30,30,36,32,"syntax"],[30,36,36,38],[30,40,36,42,"dict"],[30,44,36,46],[30,45,36,47,"key"],[30,48,36,50],[30,49,36,51],[31,4,37,4],[33,4,39,4],[34,4,40,4],[34,9,40,9],[34,13,40,15,"key"],[34,17,40,18],[34,21,40,22,"patchDict"],[34,30,40,31],[34,32,40,33],[35,6,41,8],[35,10,41,12,"key"],[35,14,41,15],[35,18,41,19,"dict"],[35,22,41,23],[35,24,41,25],[36,8,42,12],[36,12,42,16,"patchDict"],[36,21,42,25],[36,22,42,26,"key"],[36,26,42,29],[36,27,42,30],[36,28,42,31,"syntax"],[36,34,42,37],[36,36,42,39],[37,10,43,16,"result"],[37,16,43,22],[37,17,43,23,"key"],[37,21,43,26],[37,22,43,27],[37,25,43,30,"extendSyntax"],[37,37,43,42],[37,38,43,43,"test"],[37,42,43,47],[37,43,43,48,"patchDict"],[37,52,43,57],[37,53,43,58,"key"],[37,57,43,61],[37,58,43,62],[37,59,43,63,"syntax"],[37,65,43,69],[37,66,43,70],[37,69,44,22,"result"],[37,75,44,28],[37,76,44,29,"key"],[37,80,44,32],[37,81,44,33],[37,84,44,36],[37,87,44,39],[37,90,44,42,"patchDict"],[37,99,44,51],[37,100,44,52,"key"],[37,104,44,55],[37,105,44,56],[37,106,44,57,"syntax"],[37,112,44,63],[37,113,44,64,"trim"],[37,117,44,68],[37,118,44,69],[37,119,44,70],[37,122,45,22,"patchDict"],[37,131,45,31],[37,132,45,32,"key"],[37,136,45,35],[37,137,45,36],[37,138,45,37,"syntax"],[37,144,45,43],[38,8,46,12],[38,9,46,13],[38,15,46,19],[39,10,47,16],[39,17,47,23,"result"],[39,23,47,29],[39,24,47,30,"key"],[39,28,47,33],[39,29,47,34],[40,8,48,12],[41,6,49,8],[41,7,49,9],[41,13,49,15],[42,8,50,12],[42,12,50,16,"patchDict"],[42,21,50,25],[42,22,50,26,"key"],[42,26,50,29],[42,27,50,30],[42,28,50,31,"syntax"],[42,34,50,37],[42,36,50,39],[43,10,51,16,"result"],[43,16,51,22],[43,17,51,23,"key"],[43,21,51,26],[43,22,51,27],[43,25,51,30,"patchDict"],[43,34,51,39],[43,35,51,40,"key"],[43,39,51,43],[43,40,51,44],[43,41,51,45,"syntax"],[43,47,51,51],[43,48,51,52,"replace"],[43,55,51,59],[43,56,51,60,"extendSyntax"],[43,68,51,72],[43,70,51,74],[43,72,51,76],[43,73,51,77],[44,8,52,12],[45,6,53,8],[46,4,54,4],[47,4,56,4],[47,11,56,11,"result"],[47,17,56,17],[48,2,57,0],[49,2,59,0],[49,11,59,9,"unpackSyntaxes"],[49,25,59,23,"unpackSyntaxes"],[49,26,59,24,"dict"],[49,30,59,28],[49,32,59,30],[50,4,60,4],[50,8,60,10,"result"],[50,14,60,16],[50,17,60,19],[50,18,60,20],[50,19,60,21],[51,4,62,4],[51,9,62,9],[51,13,62,15,"key"],[51,16,62,18],[51,20,62,22,"dict"],[51,24,62,26],[51,26,62,28],[52,6,63,8,"result"],[52,12,63,14],[52,13,63,15,"key"],[52,16,63,18],[52,17,63,19],[52,20,63,22,"dict"],[52,24,63,26],[52,25,63,27,"key"],[52,28,63,30],[52,29,63,31],[52,30,63,32,"syntax"],[52,36,63,38],[53,4,64,4],[54,4,66,4],[54,11,66,11,"result"],[54,17,66,17],[55,2,67,0],[56,2,69,0],[56,11,69,9,"patchAtrules"],[56,23,69,21,"patchAtrules"],[56,24,69,22,"dict"],[56,28,69,26],[56,30,69,28,"patchDict"],[56,39,69,37],[56,41,69,39],[57,4,70,4],[57,8,70,10,"result"],[57,14,70,16],[57,17,70,19],[57,18,70,20],[57,19,70,21],[59,4,72,4],[60,4,73,4],[60,9,73,9],[60,13,73,15,"key"],[60,16,73,18],[60,20,73,22,"dict"],[60,24,73,26],[60,26,73,28],[61,6,74,8],[61,10,74,14,"patchDescriptors"],[61,26,74,30],[61,29,74,34,"patchDict"],[61,38,74,43],[61,39,74,44,"key"],[61,42,74,47],[61,43,74,48],[61,47,74,52,"patchDict"],[61,56,74,61],[61,57,74,62,"key"],[61,60,74,65],[61,61,74,66],[61,62,74,67,"descriptors"],[61,73,74,78],[61,77,74,83],[61,81,74,87],[62,6,76,8,"result"],[62,12,76,14],[62,13,76,15,"key"],[62,16,76,18],[62,17,76,19],[62,20,76,22],[63,8,77,12,"prelude"],[63,15,77,19],[63,17,77,21,"key"],[63,20,77,24],[63,24,77,28,"patchDict"],[63,33,77,37],[63,37,77,41],[63,46,77,50],[63,50,77,54,"patchDict"],[63,59,77,63],[63,60,77,64,"key"],[63,63,77,67],[63,64,77,68],[63,67,78,18,"patchDict"],[63,76,78,27],[63,77,78,28,"key"],[63,80,78,31],[63,81,78,32],[63,82,78,33,"prelude"],[63,89,78,40],[63,92,79,18,"dict"],[63,96,79,22],[63,97,79,23,"key"],[63,100,79,26],[63,101,79,27],[63,102,79,28,"prelude"],[63,109,79,35],[63,113,79,39],[63,117,79,43],[64,8,80,12,"descriptors"],[64,19,80,23],[64,21,80,25,"dict"],[64,25,80,29],[64,26,80,30,"key"],[64,29,80,33],[64,30,80,34],[64,31,80,35,"descriptors"],[64,42,80,46],[64,45,81,18,"patchDictionary"],[64,60,81,33],[64,61,81,34,"dict"],[64,65,81,38],[64,66,81,39,"key"],[64,69,81,42],[64,70,81,43],[64,71,81,44,"descriptors"],[64,82,81,55],[64,84,81,57,"patchDescriptors"],[64,100,81,73],[64,104,81,77],[64,105,81,78],[64,106,81,79],[64,107,81,80],[64,110,82,18,"patchDescriptors"],[64,126,82,34],[64,130,82,38,"unpackSyntaxes"],[64,144,82,52],[64,145,82,53,"patchDescriptors"],[64,161,82,69],[65,6,83,8],[65,7,83,9],[66,4,84,4],[68,4,86,4],[69,4,87,4],[69,9,87,9],[69,13,87,15,"key"],[69,18,87,18],[69,22,87,22,"patchDict"],[69,31,87,31],[69,33,87,33],[70,6,88,8],[70,10,88,12],[70,11,88,13,"hasOwnProperty"],[70,25,88,27],[70,26,88,28,"call"],[70,30,88,32],[70,31,88,33,"dict"],[70,35,88,37],[70,37,88,39,"key"],[70,42,88,42],[70,43,88,43],[70,45,88,45],[71,8,89,12,"result"],[71,14,89,18],[71,15,89,19,"key"],[71,20,89,22],[71,21,89,23],[71,24,89,26],[72,10,90,16,"prelude"],[72,17,90,23],[72,19,90,25,"patchDict"],[72,28,90,34],[72,29,90,35,"key"],[72,34,90,38],[72,35,90,39],[72,36,90,40,"prelude"],[72,43,90,47],[72,47,90,51],[72,51,90,55],[73,10,91,16,"descriptors"],[73,21,91,27],[73,23,91,29,"patchDict"],[73,32,91,38],[73,33,91,39,"key"],[73,38,91,42],[73,39,91,43],[73,40,91,44,"descriptors"],[73,51,91,55],[73,55,91,59,"unpackSyntaxes"],[73,69,91,73],[73,70,91,74,"patchDict"],[73,79,91,83],[73,80,91,84,"key"],[73,85,91,87],[73,86,91,88],[73,87,91,89,"descriptors"],[73,98,91,100],[74,8,92,12],[74,9,92,13],[75,6,93,8],[76,4,94,4],[77,4,96,4],[77,11,96,11,"result"],[77,17,96,17],[78,2,97,0],[79,2,99,0,"module"],[79,8,99,6],[79,9,99,7,"exports"],[79,16,99,14],[79,19,99,17],[80,4,100,4,"types"],[80,9,100,9],[80,11,100,11,"patchDictionary"],[80,26,100,26],[80,27,100,27,"mdnSyntaxes"],[80,38,100,38],[80,40,100,40,"patch"],[80,45,100,45],[80,46,100,46,"syntaxes"],[80,54,100,54],[80,55,100,55],[81,4,101,4,"atrules"],[81,11,101,11],[81,13,101,13,"patchAtrules"],[81,25,101,25],[81,26,101,26,"preprocessAtrules"],[81,43,101,43],[81,44,101,44,"mdnAtrules"],[81,54,101,54],[81,55,101,55],[81,57,101,57,"patch"],[81,62,101,62],[81,63,101,63,"atrules"],[81,70,101,70],[81,71,101,71],[82,4,102,4,"properties"],[82,14,102,14],[82,16,102,16,"patchDictionary"],[82,31,102,31],[82,32,102,32,"mdnProperties"],[82,45,102,45],[82,47,102,47,"patch"],[82,52,102,52],[82,53,102,53,"properties"],[82,63,102,63],[83,2,103,0],[83,3,103,1],[84,0,103,2]],"functionMap":{"names":["<global>","preprocessAtrules","patchDictionary","unpackSyntaxes","patchAtrules"],"mappings":"AAA;ACM;CDsB;AEE;CF0B;AGE;CHQ;AIE;CJ4B"}},"type":"js/module"}]}