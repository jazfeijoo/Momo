{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":289,"column":33,"index":12710}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":289,"column":33,"index":12710}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":289,"column":33,"index":12710}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":289,"column":33,"index":12710}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":289,"column":33,"index":12710}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":289,"column":33,"index":12710}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"expo-modules-core","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":80,"index":80}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"../AV","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":81},"end":{"line":2,"column":135,"index":216}}],"key":"1obaeXlJkCd2wj+qRk/gLZOX4tA="}},{"name":"../ExponentAV","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":217},"end":{"line":3,"column":39,"index":256}}],"key":"bjhnPCaCu+/PHtEOfB4ziLYfNAU="}},{"name":"./AudioAvailability","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":257},"end":{"line":4,"column":61,"index":318}}],"key":"dNkfNK4/37WkQlbfNezaR6K5qqc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Sound = void 0;\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n  var _expoModulesCore = _$$_REQUIRE(_dependencyMap[6], \"expo-modules-core\");\n  var _AV = _$$_REQUIRE(_dependencyMap[7], \"../AV\");\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../ExponentAV\"));\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[9], \"./AudioAvailability\");\n  var _class;\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  // @needsAudit\n  /**\n   * This class represents a sound corresponding to an Asset or URL.\n   * @return A newly constructed instance of `Audio.Sound`.\n   *\n   * @example\n   * ```ts\n   * const sound = new Audio.Sound();\n   * try {\n   *   await sound.loadAsync(require('./assets/sounds/hello.mp3'));\n   *   await sound.playAsync();\n   *   // Your sound is playing!\n   *\n   *   // Don't forget to unload the sound from memory\n   *   // when you are done using the Sound object\n   *   await sound.unloadAsync();\n   * } catch (error) {\n   *   // An error occurred!\n   * }\n   * ```\n   *\n   * > Method not described below and the rest of the API for `Audio.Sound` is the same as the imperative playback API for `Video`.\n   * > See the [AV documentation](/versions/latest/sdk/av) for further information.\n   */\n  var Sound = exports.Sound = /*#__PURE__*/function () {\n    function Sound() {\n      var _this = this;\n      (0, _classCallCheck2.default)(this, Sound);\n      this._loaded = false;\n      this._loading = false;\n      this._key = null;\n      this._lastStatusUpdate = null;\n      this._lastStatusUpdateTime = null;\n      this._subscriptions = [];\n      this._eventEmitter = new _expoModulesCore.EventEmitter(_ExponentAV.default);\n      this._coalesceStatusUpdatesInMillis = 100;\n      this._onPlaybackStatusUpdate = null;\n      this._onMetadataUpdate = null;\n      this._onAudioSampleReceived = null;\n      this._internalStatusUpdateCallback = function (_ref) {\n        var key = _ref.key,\n          status = _ref.status;\n        if (_this._key === key) {\n          _this._callOnPlaybackStatusUpdateForNewStatus(status);\n        }\n      };\n      this._internalMetadataUpdateCallback = function (_ref2) {\n        var key = _ref2.key,\n          metadata = _ref2.metadata;\n        if (_this._key === key) {\n          _this._onMetadataUpdate == null ? void 0 : _this._onMetadataUpdate(metadata);\n        }\n      };\n      this._internalErrorCallback = function (_ref3) {\n        var key = _ref3.key,\n          error = _ref3.error;\n        if (_this._key === key) {\n          _this._errorCallback(error);\n        }\n      };\n      this._errorCallback = function (error) {\n        _this._clearSubscriptions();\n        _this._loaded = false;\n        _this._key = null;\n        _this._callOnPlaybackStatusUpdateForNewStatus((0, _AV.getUnloadedStatus)(error));\n      };\n      // ### Unified playback API ### (consistent with Video.js)\n      // All calls automatically call onPlaybackStatusUpdate as a side effect.\n      // Get status API\n      this.getStatusAsync = /*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n        if (_this._loaded) {\n          return _this._performOperationAndHandleStatusAsync(function () {\n            return _ExponentAV.default.getStatusForSound(_this._key);\n          });\n        }\n        var status = (0, _AV.getUnloadedStatus)();\n        _this._callOnPlaybackStatusUpdateForNewStatus(status);\n        return status;\n      });\n    }\n    (0, _createClass2.default)(Sound, [{\n      key: \"_callOnPlaybackStatusUpdateForNewStatus\",\n      value:\n      // Internal methods\n      function _callOnPlaybackStatusUpdateForNewStatus(status) {\n        var shouldDismissBasedOnCoalescing = this._lastStatusUpdateTime && JSON.stringify(status) === this._lastStatusUpdate && Date.now() - this._lastStatusUpdateTime.getTime() < this._coalesceStatusUpdatesInMillis;\n        if (this._onPlaybackStatusUpdate != null && !shouldDismissBasedOnCoalescing) {\n          this._onPlaybackStatusUpdate(status);\n          this._lastStatusUpdateTime = new Date();\n          this._lastStatusUpdate = JSON.stringify(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function () {\n        var _performOperationAndHandleStatusAsync2 = (0, _asyncToGenerator2.default)(function* (operation) {\n          (0, _AudioAvailability.throwIfAudioIsDisabled)();\n          if (this._loaded) {\n            var status = yield operation();\n            this._callOnPlaybackStatusUpdateForNewStatus(status);\n            return status;\n          } else {\n            throw new Error('Cannot complete operation because sound is not loaded.');\n          }\n        });\n        function _performOperationAndHandleStatusAsync(_x) {\n          return _performOperationAndHandleStatusAsync2.apply(this, arguments);\n        }\n        return _performOperationAndHandleStatusAsync;\n      }()\n    }, {\n      key: \"_updateAudioSampleReceivedCallback\",\n      value: function _updateAudioSampleReceivedCallback() {\n        if (globalThis.__EXAV_setOnAudioSampleReceivedCallback == null) {\n          if (_expoModulesCore.Platform.OS === 'ios' || _expoModulesCore.Platform.OS === 'android') {\n            console.warn('expo-av: Failed to set up Audio Sample Buffer callback. ' + \"Do you have 'Remote Debugging' enabled in your app's Developer Menu (https://docs.expo.dev/workflow/debugging)? \" + 'Audio Sample Buffer callbacks are not supported while using Remote Debugging, you will need to disable it to use them.');\n            return;\n          } else {\n            throw new _expoModulesCore.UnavailabilityError('expo-av', 'setOnAudioSampleReceived');\n          }\n        }\n        if (this._key == null) {\n          throw new Error('Cannot set Audio Sample Buffer callback when the Sound instance has not been successfully loaded/initialized!');\n        }\n        if (typeof this._key !== 'number') {\n          throw new Error(`Cannot set Audio Sample Buffer callback when Sound instance key is of type ${typeof this._key}! (expected: number)`);\n        }\n        globalThis.__EXAV_setOnAudioSampleReceivedCallback(this._key, this._onAudioSampleReceived);\n      }\n    }, {\n      key: \"_subscribeToNativeEvents\",\n      value:\n      // TODO: We can optimize by only using time observer on native if (this._onPlaybackStatusUpdate).\n      function _subscribeToNativeEvents() {\n        if (this._loaded) {\n          this._subscriptions.push(this._eventEmitter.addListener('didUpdatePlaybackStatus', this._internalStatusUpdateCallback), this._eventEmitter.addListener('didUpdateMetadata', this._internalMetadataUpdateCallback));\n          this._subscriptions.push(this._eventEmitter.addListener('ExponentAV.onError', this._internalErrorCallback));\n        }\n      }\n    }, {\n      key: \"_clearSubscriptions\",\n      value: function _clearSubscriptions() {\n        this._subscriptions.forEach(function (e) {\n          return e.remove();\n        });\n        this._subscriptions = [];\n      }\n    }, {\n      key: \"setOnPlaybackStatusUpdate\",\n      value:\n      /**\n       * Sets a function to be called regularly with the `AVPlaybackStatus` of the playback object.\n       *\n       * `onPlaybackStatusUpdate` will be called whenever a call to the API for this playback object completes\n       * (such as `setStatusAsync()`, `getStatusAsync()`, or `unloadAsync()`), nd will also be called at regular intervals\n       * while the media is in the loaded state.\n       *\n       * Set `progressUpdateIntervalMillis` via `setStatusAsync()` or `setProgressUpdateIntervalAsync()` to modify\n       * the interval with which `onPlaybackStatusUpdate` is called while loaded.\n       *\n       * @param onPlaybackStatusUpdate A function taking a single parameter `AVPlaybackStatus`.\n       */\n      function setOnPlaybackStatusUpdate(onPlaybackStatusUpdate) {\n        this._onPlaybackStatusUpdate = onPlaybackStatusUpdate;\n        this.getStatusAsync();\n      }\n      /**\n       * Sets a function to be called whenever the metadata of the sound object changes, if one is set.\n       * @param onMetadataUpdate A function taking a single object of type `AVMetadata` as a parameter.\n       * @platform ios\n       */\n    }, {\n      key: \"setOnMetadataUpdate\",\n      value: function setOnMetadataUpdate(onMetadataUpdate) {\n        this._onMetadataUpdate = onMetadataUpdate;\n      }\n      /**\n       * Sets a function to be called during playback, receiving the audio sample as parameter.\n       * @param callback A function taking the `AudioSampleCallback` as parameter.\n       */\n    }, {\n      key: \"setOnAudioSampleReceived\",\n      value: function setOnAudioSampleReceived(callback) {\n        this._onAudioSampleReceived = callback;\n        if (this._key != null) {\n          this._updateAudioSampleReceivedCallback();\n        }\n      }\n      // Loading / unloading API\n    }, {\n      key: \"loadAsync\",\n      value: function () {\n        var _loadAsync = (0, _asyncToGenerator2.default)(function* (source) {\n          var _this2 = this;\n          var initialStatus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var downloadFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n          (0, _AudioAvailability.throwIfAudioIsDisabled)();\n          if (this._loading) {\n            throw new Error('The Sound is already loading.');\n          }\n          if (!this._loaded) {\n            this._loading = true;\n            var _yield$getNativeSourc = yield (0, _AV.getNativeSourceAndFullInitialStatusForLoadAsync)(source, initialStatus, downloadFirst),\n              nativeSource = _yield$getNativeSourc.nativeSource,\n              fullInitialStatus = _yield$getNativeSourc.fullInitialStatus;\n            // This is a workaround, since using load with resolve / reject seems to not work.\n            return new Promise(function (resolve, reject) {\n              var loadSuccess = function loadSuccess(result) {\n                var _result = (0, _slicedToArray2.default)(result, 2),\n                  key = _result[0],\n                  status = _result[1];\n                _this2._key = key;\n                _this2._loaded = true;\n                _this2._loading = false;\n                _this2._subscribeToNativeEvents();\n                _this2._callOnPlaybackStatusUpdateForNewStatus(status);\n                resolve(status);\n              };\n              var loadError = function loadError(error) {\n                _this2._loading = false;\n                reject(error);\n              };\n              _ExponentAV.default.loadForSound(nativeSource, fullInitialStatus).then(loadSuccess).catch(loadError);\n            });\n          } else {\n            throw new Error('The Sound is already loaded.');\n          }\n        });\n        function loadAsync(_x2) {\n          return _loadAsync.apply(this, arguments);\n        }\n        return loadAsync;\n      }()\n    }, {\n      key: \"unloadAsync\",\n      value: function () {\n        var _unloadAsync = (0, _asyncToGenerator2.default)(function* () {\n          if (this._loaded) {\n            this._loaded = false;\n            var key = this._key;\n            this._key = null;\n            var status = yield _ExponentAV.default.unloadForSound(key);\n            this._callOnPlaybackStatusUpdateForNewStatus(status);\n            this._clearSubscriptions();\n            return status;\n          } else {\n            return this.getStatusAsync(); // Automatically calls onPlaybackStatusUpdate.\n          }\n        });\n        function unloadAsync() {\n          return _unloadAsync.apply(this, arguments);\n        }\n        return unloadAsync;\n      }() // Set status API (only available while isLoaded = true)\n    }, {\n      key: \"setStatusAsync\",\n      value: function () {\n        var _setStatusAsync = (0, _asyncToGenerator2.default)(function* (status) {\n          var _this3 = this;\n          (0, _AV.assertStatusValuesInBounds)(status);\n          return this._performOperationAndHandleStatusAsync(function () {\n            return _ExponentAV.default.setStatusForSound(_this3._key, status);\n          });\n        });\n        function setStatusAsync(_x3) {\n          return _setStatusAsync.apply(this, arguments);\n        }\n        return setStatusAsync;\n      }()\n    }, {\n      key: \"replayAsync\",\n      value: function () {\n        var _replayAsync = (0, _asyncToGenerator2.default)(function* () {\n          var _this4 = this;\n          var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          if (status.positionMillis && status.positionMillis !== 0) {\n            throw new Error('Requested position after replay has to be 0.');\n          }\n          return this._performOperationAndHandleStatusAsync(function () {\n            return _ExponentAV.default.replaySound(_this4._key, _objectSpread(_objectSpread({}, status), {}, {\n              positionMillis: 0,\n              shouldPlay: true\n            }));\n          });\n        });\n        function replayAsync() {\n          return _replayAsync.apply(this, arguments);\n        }\n        return replayAsync;\n      }() // Methods of the Playback interface that are set via PlaybackMixin\n    }]);\n    return Sound;\n  }();\n  _class = Sound;\n  /** @deprecated Use `Sound.createAsync()` instead */\n  Sound.create = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* (source) {\n      var initialStatus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var onPlaybackStatusUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var downloadFirst = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      console.warn(`Sound.create is deprecated in favor of Sound.createAsync with the same API except for the new method name`);\n      return _class.createAsync(source, initialStatus, onPlaybackStatusUpdate, downloadFirst);\n    });\n    return function (_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  /**\n   * Creates and loads a sound from source.\n   *\n   * ```ts\n   * const { sound } = await Audio.Sound.createAsync(\n   *   source,\n   *   initialStatus,\n   *   onPlaybackStatusUpdate,\n   *   downloadFirst\n   * );\n   *\n   * // Which is equivalent to the following:\n   * const sound = new Audio.Sound();\n   * sound.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n   * await sound.loadAsync(source, initialStatus, downloadFirst);\n   * ```\n   *\n   * @param source The source of the sound. See the [AV documentation](/versions/latest/sdk/av/#playback-api) for details on the possible `source` values.\n   *\n   * @param initialStatus The initial intended `PlaybackStatusToSet` of the sound, whose values will override the default initial playback status.\n   * This value defaults to `{}` if no parameter is passed. See the [AV documentation](/versions/latest/sdk/av) for details on `PlaybackStatusToSet` and the default\n   * initial playback status.\n   *\n   * @param onPlaybackStatusUpdate A function taking a single parameter `PlaybackStatus`. This value defaults to `null` if no parameter is passed.\n   * See the [AV documentation](/versions/latest/sdk/av) for details on the functionality provided by `onPlaybackStatusUpdate`\n   *\n   * @param downloadFirst If set to true, the system will attempt to download the resource to the device before loading. This value defaults to `true`.\n   * Note that at the moment, this will only work for `source`s of the form `require('path/to/file')` or `Asset` objects.\n   *\n   * @example\n   * ```ts\n   * try {\n   *   const { sound: soundObject, status } = await Audio.Sound.createAsync(\n   *     require('./assets/sounds/hello.mp3'),\n   *     { shouldPlay: true }\n   *   );\n   *   // Your sound is playing!\n   * } catch (error) {\n   *   // An error occurred!\n   * }\n   * ```\n   *\n   * @return A `Promise` that is rejected if creation failed, or fulfilled with the `SoundObject` if creation succeeded.\n   */\n  Sound.createAsync = /*#__PURE__*/function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* (source) {\n      var initialStatus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var onPlaybackStatusUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var downloadFirst = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var sound = new _class();\n      sound.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n      var status = yield sound.loadAsync(source, initialStatus, downloadFirst);\n      return {\n        sound: sound,\n        status: status\n      };\n    });\n    return function (_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  Object.assign(Sound.prototype, _AV.PlaybackMixin);\n});","lineCount":388,"map":[[12,2,1,0],[12,6,1,0,"_expoModulesCore"],[12,22,1,0],[12,25,1,0,"_$$_REQUIRE"],[12,36,1,0],[12,37,1,0,"_dependencyMap"],[12,51,1,0],[13,2,2,0],[13,6,2,0,"_AV"],[13,9,2,0],[13,12,2,0,"_$$_REQUIRE"],[13,23,2,0],[13,24,2,0,"_dependencyMap"],[13,38,2,0],[14,2,3,0],[14,6,3,0,"_ExponentAV"],[14,17,3,0],[14,20,3,0,"_interopRequireDefault"],[14,42,3,0],[14,43,3,0,"_$$_REQUIRE"],[14,54,3,0],[14,55,3,0,"_dependencyMap"],[14,69,3,0],[15,2,4,0],[15,6,4,0,"_AudioAvailability"],[15,24,4,0],[15,27,4,0,"_$$_REQUIRE"],[15,38,4,0],[15,39,4,0,"_dependencyMap"],[15,53,4,0],[16,2,4,61],[16,6,4,61,"_class"],[16,12,4,61],[17,2,4,61],[17,11,4,61,"ownKeys"],[17,19,4,61,"e"],[17,20,4,61],[17,22,4,61,"r"],[17,23,4,61],[17,31,4,61,"t"],[17,32,4,61],[17,35,4,61,"Object"],[17,41,4,61],[17,42,4,61,"keys"],[17,46,4,61],[17,47,4,61,"e"],[17,48,4,61],[17,55,4,61,"Object"],[17,61,4,61],[17,62,4,61,"getOwnPropertySymbols"],[17,83,4,61],[17,91,4,61,"o"],[17,92,4,61],[17,95,4,61,"Object"],[17,101,4,61],[17,102,4,61,"getOwnPropertySymbols"],[17,123,4,61],[17,124,4,61,"e"],[17,125,4,61],[17,128,4,61,"r"],[17,129,4,61],[17,134,4,61,"o"],[17,135,4,61],[17,138,4,61,"o"],[17,139,4,61],[17,140,4,61,"filter"],[17,146,4,61],[17,157,4,61,"r"],[17,158,4,61],[17,169,4,61,"Object"],[17,175,4,61],[17,176,4,61,"getOwnPropertyDescriptor"],[17,200,4,61],[17,201,4,61,"e"],[17,202,4,61],[17,204,4,61,"r"],[17,205,4,61],[17,207,4,61,"enumerable"],[17,217,4,61],[17,224,4,61,"t"],[17,225,4,61],[17,226,4,61,"push"],[17,230,4,61],[17,231,4,61,"apply"],[17,236,4,61],[17,237,4,61,"t"],[17,238,4,61],[17,240,4,61,"o"],[17,241,4,61],[17,253,4,61,"t"],[17,254,4,61],[18,2,4,61],[18,11,4,61,"_objectSpread"],[18,25,4,61,"e"],[18,26,4,61],[18,39,4,61,"r"],[18,40,4,61],[18,46,4,61,"r"],[18,47,4,61],[18,50,4,61,"arguments"],[18,59,4,61],[18,60,4,61,"length"],[18,66,4,61],[18,68,4,61,"r"],[18,69,4,61],[18,79,4,61,"t"],[18,80,4,61],[18,91,4,61,"arguments"],[18,100,4,61],[18,101,4,61,"r"],[18,102,4,61],[18,106,4,61,"arguments"],[18,115,4,61],[18,116,4,61,"r"],[18,117,4,61],[18,125,4,61,"r"],[18,126,4,61],[18,133,4,61,"ownKeys"],[18,140,4,61],[18,141,4,61,"Object"],[18,147,4,61],[18,148,4,61,"t"],[18,149,4,61],[18,156,4,61,"forEach"],[18,163,4,61],[18,174,4,61,"r"],[18,175,4,61],[18,183,4,61,"_defineProperty2"],[18,199,4,61],[18,200,4,61,"default"],[18,207,4,61],[18,209,4,61,"e"],[18,210,4,61],[18,212,4,61,"r"],[18,213,4,61],[18,215,4,61,"t"],[18,216,4,61],[18,217,4,61,"r"],[18,218,4,61],[18,227,4,61,"Object"],[18,233,4,61],[18,234,4,61,"getOwnPropertyDescriptors"],[18,259,4,61],[18,262,4,61,"Object"],[18,268,4,61],[18,269,4,61,"defineProperties"],[18,285,4,61],[18,286,4,61,"e"],[18,287,4,61],[18,289,4,61,"Object"],[18,295,4,61],[18,296,4,61,"getOwnPropertyDescriptors"],[18,321,4,61],[18,322,4,61,"t"],[18,323,4,61],[18,328,4,61,"ownKeys"],[18,335,4,61],[18,336,4,61,"Object"],[18,342,4,61],[18,343,4,61,"t"],[18,344,4,61],[18,347,4,61,"forEach"],[18,354,4,61],[18,365,4,61,"r"],[18,366,4,61],[18,370,4,61,"Object"],[18,376,4,61],[18,377,4,61,"defineProperty"],[18,391,4,61],[18,392,4,61,"e"],[18,393,4,61],[18,395,4,61,"r"],[18,396,4,61],[18,398,4,61,"Object"],[18,404,4,61],[18,405,4,61,"getOwnPropertyDescriptor"],[18,429,4,61],[18,430,4,61,"t"],[18,431,4,61],[18,433,4,61,"r"],[18,434,4,61],[18,451,4,61,"e"],[18,452,4,61],[19,2,5,0],[20,2,6,0],[21,0,7,0],[22,0,8,0],[23,0,9,0],[24,0,10,0],[25,0,11,0],[26,0,12,0],[27,0,13,0],[28,0,14,0],[29,0,15,0],[30,0,16,0],[31,0,17,0],[32,0,18,0],[33,0,19,0],[34,0,20,0],[35,0,21,0],[36,0,22,0],[37,0,23,0],[38,0,24,0],[39,0,25,0],[40,0,26,0],[41,0,27,0],[42,0,28,0],[43,2,6,0],[43,6,29,13,"Sound"],[43,11,29,18],[43,14,29,18,"exports"],[43,21,29,18],[43,22,29,18,"Sound"],[43,27,29,18],[44,4,29,18],[44,13,29,18,"Sound"],[44,19,29,18],[45,6,29,18],[45,10,29,18,"_this"],[45,15,29,18],[46,6,29,18],[46,10,29,18,"_classCallCheck2"],[46,26,29,18],[46,27,29,18,"default"],[46,34,29,18],[46,42,29,18,"Sound"],[46,47,29,18],[47,6,29,18],[47,11,30,4,"_loaded"],[47,18,30,11],[47,21,30,14],[47,26,30,19],[48,6,30,19],[48,11,31,4,"_loading"],[48,19,31,12],[48,22,31,15],[48,27,31,20],[49,6,31,20],[49,11,32,4,"_key"],[49,15,32,8],[49,18,32,11],[49,22,32,15],[50,6,32,15],[50,11,33,4,"_lastStatusUpdate"],[50,28,33,21],[50,31,33,24],[50,35,33,28],[51,6,33,28],[51,11,34,4,"_lastStatusUpdateTime"],[51,32,34,25],[51,35,34,28],[51,39,34,32],[52,6,34,32],[52,11,35,4,"_subscriptions"],[52,25,35,18],[52,28,35,21],[52,30,35,23],[53,6,35,23],[53,11,36,4,"_eventEmitter"],[53,24,36,17],[53,27,36,20],[53,31,36,24,"EventEmitter"],[53,60,36,36],[53,61,36,37,"ExponentAV"],[53,80,36,47],[53,81,36,48],[54,6,36,48],[54,11,37,4,"_coalesceStatusUpdatesInMillis"],[54,41,37,34],[54,44,37,37],[54,47,37,40],[55,6,37,40],[55,11,38,4,"_onPlaybackStatusUpdate"],[55,34,38,27],[55,37,38,30],[55,41,38,34],[56,6,38,34],[56,11,39,4,"_onMetadataUpdate"],[56,28,39,21],[56,31,39,24],[56,35,39,28],[57,6,39,28],[57,11,40,4,"_onAudioSampleReceived"],[57,33,40,26],[57,36,40,29],[57,40,40,33],[58,6,40,33],[58,11,139,4,"_internalStatusUpdateCallback"],[58,40,139,33],[58,43,139,36],[58,53,139,36,"_ref"],[58,57,139,36],[58,59,139,58],[59,8,139,58],[59,12,139,39,"key"],[59,15,139,42],[59,18,139,42,"_ref"],[59,22,139,42],[59,23,139,39,"key"],[59,26,139,42],[60,10,139,44,"status"],[60,16,139,50],[60,19,139,50,"_ref"],[60,23,139,50],[60,24,139,44,"status"],[60,30,139,50],[61,8,140,8],[61,12,140,12,"_this"],[61,17,140,16],[61,18,140,17,"_key"],[61,22,140,21],[61,27,140,26,"key"],[61,30,140,29],[61,32,140,31],[62,10,141,12,"_this"],[62,15,141,16],[62,16,141,17,"_callOnPlaybackStatusUpdateForNewStatus"],[62,55,141,56],[62,56,141,57,"status"],[62,62,141,63],[62,63,141,64],[63,8,142,8],[64,6,143,4],[64,7,143,5],[65,6,143,5],[65,11,144,4,"_internalMetadataUpdateCallback"],[65,42,144,35],[65,45,144,38],[65,55,144,38,"_ref2"],[65,60,144,38],[65,62,144,62],[66,8,144,62],[66,12,144,41,"key"],[66,15,144,44],[66,18,144,44,"_ref2"],[66,23,144,44],[66,24,144,41,"key"],[66,27,144,44],[67,10,144,46,"metadata"],[67,18,144,54],[67,21,144,54,"_ref2"],[67,26,144,54],[67,27,144,46,"metadata"],[67,35,144,54],[68,8,145,8],[68,12,145,12,"_this"],[68,17,145,16],[68,18,145,17,"_key"],[68,22,145,21],[68,27,145,26,"key"],[68,30,145,29],[68,32,145,31],[69,10,146,12,"_this"],[69,15,146,16],[69,16,146,17,"_onMetadataUpdate"],[69,33,146,34],[69,53,146,12,"_this"],[69,58,146,16],[69,59,146,17,"_onMetadataUpdate"],[69,76,146,34],[69,77,146,37,"metadata"],[69,85,146,45],[69,86,146,46],[70,8,147,8],[71,6,148,4],[71,7,148,5],[72,6,148,5],[72,11,149,4,"_internalErrorCallback"],[72,33,149,26],[72,36,149,29],[72,46,149,29,"_ref3"],[72,51,149,29],[72,53,149,49],[73,8,149,49],[73,12,149,32,"key"],[73,15,149,35],[73,18,149,35,"_ref3"],[73,23,149,35],[73,24,149,32,"key"],[73,27,149,35],[74,10,149,37,"error"],[74,15,149,42],[74,18,149,42,"_ref3"],[74,23,149,42],[74,24,149,37,"error"],[74,29,149,42],[75,8,150,8],[75,12,150,12,"_this"],[75,17,150,16],[75,18,150,17,"_key"],[75,22,150,21],[75,27,150,26,"key"],[75,30,150,29],[75,32,150,31],[76,10,151,12,"_this"],[76,15,151,16],[76,16,151,17,"_errorCallback"],[76,30,151,31],[76,31,151,32,"error"],[76,36,151,37],[76,37,151,38],[77,8,152,8],[78,6,153,4],[78,7,153,5],[79,6,153,5],[79,11,165,4,"_errorCallback"],[79,25,165,18],[79,28,165,21],[79,38,165,22,"error"],[79,43,165,27],[79,45,165,32],[80,8,166,8,"_this"],[80,13,166,12],[80,14,166,13,"_clearSubscriptions"],[80,33,166,32],[80,34,166,33],[80,35,166,34],[81,8,167,8,"_this"],[81,13,167,12],[81,14,167,13,"_loaded"],[81,21,167,20],[81,24,167,23],[81,29,167,28],[82,8,168,8,"_this"],[82,13,168,12],[82,14,168,13,"_key"],[82,18,168,17],[82,21,168,20],[82,25,168,24],[83,8,169,8,"_this"],[83,13,169,12],[83,14,169,13,"_callOnPlaybackStatusUpdateForNewStatus"],[83,53,169,52],[83,54,169,53],[83,58,169,53,"getUnloadedStatus"],[83,79,169,70],[83,81,169,71,"error"],[83,86,169,76],[83,87,169,77],[83,88,169,78],[84,6,170,4],[84,7,170,5],[85,6,171,4],[86,6,172,4],[87,6,173,4],[88,6,173,4],[88,11,174,4,"getStatusAsync"],[88,25,174,18],[88,45,174,18,"_asyncToGenerator2"],[88,63,174,18],[88,64,174,18,"default"],[88,71,174,18],[88,73,174,21],[88,86,174,33],[89,8,175,8],[89,12,175,12,"_this"],[89,17,175,16],[89,18,175,17,"_loaded"],[89,25,175,24],[89,27,175,26],[90,10,176,12],[90,17,176,19,"_this"],[90,22,176,23],[90,23,176,24,"_performOperationAndHandleStatusAsync"],[90,60,176,61],[90,61,176,62],[91,12,176,62],[91,19,176,68,"ExponentAV"],[91,38,176,78],[91,39,176,79,"getStatusForSound"],[91,56,176,96],[91,57,176,97,"_this"],[91,62,176,101],[91,63,176,102,"_key"],[91,67,176,106],[91,68,176,107],[92,10,176,107],[92,12,176,108],[93,8,177,8],[94,8,178,8],[94,12,178,14,"status"],[94,18,178,20],[94,21,178,23],[94,25,178,23,"getUnloadedStatus"],[94,46,178,40],[94,48,178,41],[94,49,178,42],[95,8,179,8,"_this"],[95,13,179,12],[95,14,179,13,"_callOnPlaybackStatusUpdateForNewStatus"],[95,53,179,52],[95,54,179,53,"status"],[95,60,179,59],[95,61,179,60],[96,8,180,8],[96,15,180,15,"status"],[96,21,180,21],[97,6,181,4],[97,7,181,5],[98,4,181,5],[99,4,181,5],[99,8,181,5,"_createClass2"],[99,21,181,5],[99,22,181,5,"default"],[99,29,181,5],[99,31,181,5,"Sound"],[99,36,181,5],[100,6,181,5,"key"],[100,9,181,5],[101,6,181,5,"value"],[101,11,181,5],[102,6,96,4],[103,6,97,4],[103,15,97,4,"_callOnPlaybackStatusUpdateForNewStatus"],[103,55,97,44,"status"],[103,61,97,50],[103,63,97,52],[104,8,98,8],[104,12,98,14,"shouldDismissBasedOnCoalescing"],[104,42,98,44],[104,45,98,47],[104,49,98,51],[104,50,98,52,"_lastStatusUpdateTime"],[104,71,98,73],[104,75,99,12,"JSON"],[104,79,99,16],[104,80,99,17,"stringify"],[104,89,99,26],[104,90,99,27,"status"],[104,96,99,33],[104,97,99,34],[104,102,99,39],[104,106,99,43],[104,107,99,44,"_lastStatusUpdate"],[104,124,99,61],[104,128,100,12,"Date"],[104,132,100,16],[104,133,100,17,"now"],[104,136,100,20],[104,137,100,21],[104,138,100,22],[104,141,100,25],[104,145,100,29],[104,146,100,30,"_lastStatusUpdateTime"],[104,167,100,51],[104,168,100,52,"getTime"],[104,175,100,59],[104,176,100,60],[104,177,100,61],[104,180,100,64],[104,184,100,68],[104,185,100,69,"_coalesceStatusUpdatesInMillis"],[104,215,100,99],[105,8,101,8],[105,12,101,12],[105,16,101,16],[105,17,101,17,"_onPlaybackStatusUpdate"],[105,40,101,40],[105,44,101,44],[105,48,101,48],[105,52,101,52],[105,53,101,53,"shouldDismissBasedOnCoalescing"],[105,83,101,83],[105,85,101,85],[106,10,102,12],[106,14,102,16],[106,15,102,17,"_onPlaybackStatusUpdate"],[106,38,102,40],[106,39,102,41,"status"],[106,45,102,47],[106,46,102,48],[107,10,103,12],[107,14,103,16],[107,15,103,17,"_lastStatusUpdateTime"],[107,36,103,38],[107,39,103,41],[107,43,103,45,"Date"],[107,47,103,49],[107,48,103,50],[107,49,103,51],[108,10,104,12],[108,14,104,16],[108,15,104,17,"_lastStatusUpdate"],[108,32,104,34],[108,35,104,37,"JSON"],[108,39,104,41],[108,40,104,42,"stringify"],[108,49,104,51],[108,50,104,52,"status"],[108,56,104,58],[108,57,104,59],[109,8,105,8],[110,6,106,4],[111,4,106,5],[112,6,106,5,"key"],[112,9,106,5],[113,6,106,5,"value"],[113,11,106,5],[114,8,106,5],[114,12,106,5,"_performOperationAndHandleStatusAsync2"],[114,50,106,5],[114,57,106,5,"_asyncToGenerator2"],[114,75,106,5],[114,76,106,5,"default"],[114,83,106,5],[114,85,107,4],[114,96,107,48,"operation"],[114,105,107,57],[114,107,107,59],[115,10,108,8],[115,14,108,8,"throwIfAudioIsDisabled"],[115,55,108,30],[115,57,108,31],[115,58,108,32],[116,10,109,8],[116,14,109,12],[116,18,109,16],[116,19,109,17,"_loaded"],[116,26,109,24],[116,28,109,26],[117,12,110,12],[117,16,110,18,"status"],[117,22,110,24],[117,31,110,33,"operation"],[117,40,110,42],[117,41,110,43],[117,42,110,44],[118,12,111,12],[118,16,111,16],[118,17,111,17,"_callOnPlaybackStatusUpdateForNewStatus"],[118,56,111,56],[118,57,111,57,"status"],[118,63,111,63],[118,64,111,64],[119,12,112,12],[119,19,112,19,"status"],[119,25,112,25],[120,10,113,8],[120,11,113,9],[120,17,114,13],[121,12,115,12],[121,18,115,18],[121,22,115,22,"Error"],[121,27,115,27],[121,28,115,28],[121,84,115,84],[121,85,115,85],[122,10,116,8],[123,8,117,4],[123,9,117,5],[124,8,117,5],[124,17,117,5,"_performOperationAndHandleStatusAsync"],[124,55,117,5,"_x"],[124,57,117,5],[125,10,117,5],[125,17,117,5,"_performOperationAndHandleStatusAsync2"],[125,55,117,5],[125,56,117,5,"apply"],[125,61,117,5],[125,68,117,5,"arguments"],[125,77,117,5],[126,8,117,5],[127,8,117,5],[127,15,117,5,"_performOperationAndHandleStatusAsync"],[127,52,117,5],[128,6,117,5],[129,4,117,5],[130,6,117,5,"key"],[130,9,117,5],[131,6,117,5,"value"],[131,11,117,5],[131,13,118,4],[131,22,118,4,"_updateAudioSampleReceivedCallback"],[131,57,118,4],[131,59,118,41],[132,8,119,8],[132,12,119,12,"globalThis"],[132,22,119,22],[132,23,119,23,"__EXAV_setOnAudioSampleReceivedCallback"],[132,62,119,62],[132,66,119,66],[132,70,119,70],[132,72,119,72],[133,10,120,12],[133,14,120,16,"Platform"],[133,39,120,24],[133,40,120,25,"OS"],[133,42,120,27],[133,47,120,32],[133,52,120,37],[133,56,120,41,"Platform"],[133,81,120,49],[133,82,120,50,"OS"],[133,84,120,52],[133,89,120,57],[133,98,120,66],[133,100,120,68],[134,12,121,16,"console"],[134,19,121,23],[134,20,121,24,"warn"],[134,24,121,28],[134,25,121,29],[134,83,121,87],[134,86,122,20],[134,200,122,134],[134,203,123,20],[134,323,123,140],[134,324,123,141],[135,12,124,16],[136,10,125,12],[136,11,125,13],[136,17,126,17],[137,12,127,16],[137,18,127,22],[137,22,127,26,"UnavailabilityError"],[137,58,127,45],[137,59,127,46],[137,68,127,55],[137,70,127,57],[137,96,127,83],[137,97,127,84],[138,10,128,12],[139,8,129,8],[140,8,130,8],[140,12,130,12],[140,16,130,16],[140,17,130,17,"_key"],[140,21,130,21],[140,25,130,25],[140,29,130,29],[140,31,130,31],[141,10,131,12],[141,16,131,18],[141,20,131,22,"Error"],[141,25,131,27],[141,26,131,28],[141,137,131,139],[141,138,131,140],[142,8,132,8],[143,8,133,8],[143,12,133,12],[143,19,133,19],[143,23,133,23],[143,24,133,24,"_key"],[143,28,133,28],[143,33,133,33],[143,41,133,41],[143,43,133,43],[144,10,134,12],[144,16,134,18],[144,20,134,22,"Error"],[144,25,134,27],[144,26,134,29],[144,104,134,106],[144,111,134,113],[144,115,134,117],[144,116,135,17,"_key"],[144,120,135,22],[144,142,135,43],[144,143,135,44],[145,8,136,8],[146,8,137,8,"globalThis"],[146,18,137,18],[146,19,137,19,"__EXAV_setOnAudioSampleReceivedCallback"],[146,58,137,58],[146,59,137,59],[146,63,137,63],[146,64,137,64,"_key"],[146,68,137,68],[146,70,137,70],[146,74,137,74],[146,75,137,75,"_onAudioSampleReceived"],[146,97,137,97],[146,98,137,98],[147,6,138,4],[148,4,138,5],[149,6,138,5,"key"],[149,9,138,5],[150,6,138,5,"value"],[150,11,138,5],[151,6,154,4],[152,6,155,4],[152,15,155,4,"_subscribeToNativeEvents"],[152,40,155,4],[152,42,155,31],[153,8,156,8],[153,12,156,12],[153,16,156,16],[153,17,156,17,"_loaded"],[153,24,156,24],[153,26,156,26],[154,10,157,12],[154,14,157,16],[154,15,157,17,"_subscriptions"],[154,29,157,31],[154,30,157,32,"push"],[154,34,157,36],[154,35,157,37],[154,39,157,41],[154,40,157,42,"_eventEmitter"],[154,53,157,55],[154,54,157,56,"addListener"],[154,65,157,67],[154,66,157,68],[154,91,157,93],[154,93,157,95],[154,97,157,99],[154,98,157,100,"_internalStatusUpdateCallback"],[154,127,157,129],[154,128,157,130],[154,130,157,132],[154,134,157,136],[154,135,157,137,"_eventEmitter"],[154,148,157,150],[154,149,157,151,"addListener"],[154,160,157,162],[154,161,157,163],[154,180,157,182],[154,182,157,184],[154,186,157,188],[154,187,157,189,"_internalMetadataUpdateCallback"],[154,218,157,220],[154,219,157,221],[154,220,157,222],[155,10,158,12],[155,14,158,16],[155,15,158,17,"_subscriptions"],[155,29,158,31],[155,30,158,32,"push"],[155,34,158,36],[155,35,158,37],[155,39,158,41],[155,40,158,42,"_eventEmitter"],[155,53,158,55],[155,54,158,56,"addListener"],[155,65,158,67],[155,66,158,68],[155,86,158,88],[155,88,158,90],[155,92,158,94],[155,93,158,95,"_internalErrorCallback"],[155,115,158,117],[155,116,158,118],[155,117,158,119],[156,8,159,8],[157,6,160,4],[158,4,160,5],[159,6,160,5,"key"],[159,9,160,5],[160,6,160,5,"value"],[160,11,160,5],[160,13,161,4],[160,22,161,4,"_clearSubscriptions"],[160,42,161,4],[160,44,161,26],[161,8,162,8],[161,12,162,12],[161,13,162,13,"_subscriptions"],[161,27,162,27],[161,28,162,28,"forEach"],[161,35,162,35],[161,36,162,36],[161,46,162,37,"e"],[161,47,162,38],[162,10,162,38],[162,17,162,43,"e"],[162,18,162,44],[162,19,162,45,"remove"],[162,25,162,51],[162,26,162,52],[162,27,162,53],[163,8,162,53],[163,10,162,54],[164,8,163,8],[164,12,163,12],[164,13,163,13,"_subscriptions"],[164,27,163,27],[164,30,163,30],[164,32,163,32],[165,6,164,4],[166,4,164,5],[167,6,164,5,"key"],[167,9,164,5],[168,6,164,5,"value"],[168,11,164,5],[169,6,182,4],[170,0,183,0],[171,0,184,0],[172,0,185,0],[173,0,186,0],[174,0,187,0],[175,0,188,0],[176,0,189,0],[177,0,190,0],[178,0,191,0],[179,0,192,0],[180,0,193,0],[181,6,194,4],[181,15,194,4,"setOnPlaybackStatusUpdate"],[181,41,194,30,"onPlaybackStatusUpdate"],[181,63,194,52],[181,65,194,54],[182,8,195,8],[182,12,195,12],[182,13,195,13,"_onPlaybackStatusUpdate"],[182,36,195,36],[182,39,195,39,"onPlaybackStatusUpdate"],[182,61,195,61],[183,8,196,8],[183,12,196,12],[183,13,196,13,"getStatusAsync"],[183,27,196,27],[183,28,196,28],[183,29,196,29],[184,6,197,4],[185,6,198,4],[186,0,199,0],[187,0,200,0],[188,0,201,0],[189,0,202,0],[190,4,198,4],[191,6,198,4,"key"],[191,9,198,4],[192,6,198,4,"value"],[192,11,198,4],[192,13,203,4],[192,22,203,4,"setOnMetadataUpdate"],[192,42,203,24,"onMetadataUpdate"],[192,58,203,40],[192,60,203,42],[193,8,204,8],[193,12,204,12],[193,13,204,13,"_onMetadataUpdate"],[193,30,204,30],[193,33,204,33,"onMetadataUpdate"],[193,49,204,49],[194,6,205,4],[195,6,206,4],[196,0,207,0],[197,0,208,0],[198,0,209,0],[199,4,206,4],[200,6,206,4,"key"],[200,9,206,4],[201,6,206,4,"value"],[201,11,206,4],[201,13,210,4],[201,22,210,4,"setOnAudioSampleReceived"],[201,47,210,29,"callback"],[201,55,210,37],[201,57,210,39],[202,8,211,8],[202,12,211,12],[202,13,211,13,"_onAudioSampleReceived"],[202,35,211,35],[202,38,211,38,"callback"],[202,46,211,46],[203,8,212,8],[203,12,212,12],[203,16,212,16],[203,17,212,17,"_key"],[203,21,212,21],[203,25,212,25],[203,29,212,29],[203,31,212,31],[204,10,213,12],[204,14,213,16],[204,15,213,17,"_updateAudioSampleReceivedCallback"],[204,49,213,51],[204,50,213,52],[204,51,213,53],[205,8,214,8],[206,6,215,4],[207,6,216,4],[208,4,216,4],[209,6,216,4,"key"],[209,9,216,4],[210,6,216,4,"value"],[210,11,216,4],[211,8,216,4],[211,12,216,4,"_loadAsync"],[211,22,216,4],[211,29,216,4,"_asyncToGenerator2"],[211,47,216,4],[211,48,216,4,"default"],[211,55,216,4],[211,57,217,4],[211,68,217,20,"source"],[211,74,217,26],[211,76,217,70],[212,10,217,70],[212,14,217,70,"_this2"],[212,20,217,70],[213,10,217,70],[213,14,217,28,"initialStatus"],[213,27,217,41],[213,30,217,41,"arguments"],[213,39,217,41],[213,40,217,41,"length"],[213,46,217,41],[213,54,217,41,"arguments"],[213,63,217,41],[213,71,217,41,"undefined"],[213,80,217,41],[213,83,217,41,"arguments"],[213,92,217,41],[213,98,217,44],[213,99,217,45],[213,100,217,46],[214,10,217,46],[214,14,217,48,"downloadFirst"],[214,27,217,61],[214,30,217,61,"arguments"],[214,39,217,61],[214,40,217,61,"length"],[214,46,217,61],[214,54,217,61,"arguments"],[214,63,217,61],[214,71,217,61,"undefined"],[214,80,217,61],[214,83,217,61,"arguments"],[214,92,217,61],[214,98,217,64],[214,102,217,68],[215,10,218,8],[215,14,218,8,"throwIfAudioIsDisabled"],[215,55,218,30],[215,57,218,31],[215,58,218,32],[216,10,219,8],[216,14,219,12],[216,18,219,16],[216,19,219,17,"_loading"],[216,27,219,25],[216,29,219,27],[217,12,220,12],[217,18,220,18],[217,22,220,22,"Error"],[217,27,220,27],[217,28,220,28],[217,59,220,59],[217,60,220,60],[218,10,221,8],[219,10,222,8],[219,14,222,12],[219,15,222,13],[219,19,222,17],[219,20,222,18,"_loaded"],[219,27,222,25],[219,29,222,27],[220,12,223,12],[220,16,223,16],[220,17,223,17,"_loading"],[220,25,223,25],[220,28,223,28],[220,32,223,32],[221,12,224,12],[221,16,224,12,"_yield$getNativeSourc"],[221,37,224,12],[221,46,224,62],[221,50,224,62,"getNativeSourceAndFullInitialStatusForLoadAsync"],[221,101,224,109],[221,103,224,110,"source"],[221,109,224,116],[221,111,224,118,"initialStatus"],[221,124,224,131],[221,126,224,133,"downloadFirst"],[221,139,224,146],[221,140,224,147],[222,14,224,20,"nativeSource"],[222,26,224,32],[222,29,224,32,"_yield$getNativeSourc"],[222,50,224,32],[222,51,224,20,"nativeSource"],[222,63,224,32],[223,14,224,34,"fullInitialStatus"],[223,31,224,51],[223,34,224,51,"_yield$getNativeSourc"],[223,55,224,51],[223,56,224,34,"fullInitialStatus"],[223,73,224,51],[224,12,225,12],[225,12,226,12],[225,19,226,19],[225,23,226,23,"Promise"],[225,30,226,30],[225,31,226,31],[225,41,226,32,"resolve"],[225,48,226,39],[225,50,226,41,"reject"],[225,56,226,47],[225,58,226,52],[226,14,227,16],[226,18,227,22,"loadSuccess"],[226,29,227,33],[226,32,227,36],[226,41,227,22,"loadSuccess"],[226,52,227,33,"loadSuccess"],[226,53,227,37,"result"],[226,59,227,43],[226,61,227,48],[227,16,228,20],[227,20,228,20,"_result"],[227,27,228,20],[227,34,228,20,"_slicedToArray2"],[227,49,228,20],[227,50,228,20,"default"],[227,57,228,20],[227,59,228,42,"result"],[227,65,228,48],[228,18,228,27,"key"],[228,21,228,30],[228,24,228,30,"_result"],[228,31,228,30],[229,18,228,32,"status"],[229,24,228,38],[229,27,228,38,"_result"],[229,34,228,38],[230,16,229,20,"_this2"],[230,22,229,24],[230,23,229,25,"_key"],[230,27,229,29],[230,30,229,32,"key"],[230,33,229,35],[231,16,230,20,"_this2"],[231,22,230,24],[231,23,230,25,"_loaded"],[231,30,230,32],[231,33,230,35],[231,37,230,39],[232,16,231,20,"_this2"],[232,22,231,24],[232,23,231,25,"_loading"],[232,31,231,33],[232,34,231,36],[232,39,231,41],[233,16,232,20,"_this2"],[233,22,232,24],[233,23,232,25,"_subscribeToNativeEvents"],[233,47,232,49],[233,48,232,50],[233,49,232,51],[234,16,233,20,"_this2"],[234,22,233,24],[234,23,233,25,"_callOnPlaybackStatusUpdateForNewStatus"],[234,62,233,64],[234,63,233,65,"status"],[234,69,233,71],[234,70,233,72],[235,16,234,20,"resolve"],[235,23,234,27],[235,24,234,28,"status"],[235,30,234,34],[235,31,234,35],[236,14,235,16],[236,15,235,17],[237,14,236,16],[237,18,236,22,"loadError"],[237,27,236,31],[237,30,236,34],[237,39,236,22,"loadError"],[237,48,236,31,"loadError"],[237,49,236,35,"error"],[237,54,236,40],[237,56,236,45],[238,16,237,20,"_this2"],[238,22,237,24],[238,23,237,25,"_loading"],[238,31,237,33],[238,34,237,36],[238,39,237,41],[239,16,238,20,"reject"],[239,22,238,26],[239,23,238,27,"error"],[239,28,238,32],[239,29,238,33],[240,14,239,16],[240,15,239,17],[241,14,240,16,"ExponentAV"],[241,33,240,26],[241,34,240,27,"loadForSound"],[241,46,240,39],[241,47,240,40,"nativeSource"],[241,59,240,52],[241,61,240,54,"fullInitialStatus"],[241,78,240,71],[241,79,240,72],[241,80,240,73,"then"],[241,84,240,77],[241,85,240,78,"loadSuccess"],[241,96,240,89],[241,97,240,90],[241,98,240,91,"catch"],[241,103,240,96],[241,104,240,97,"loadError"],[241,113,240,106],[241,114,240,107],[242,12,241,12],[242,13,241,13],[242,14,241,14],[243,10,242,8],[243,11,242,9],[243,17,243,13],[244,12,244,12],[244,18,244,18],[244,22,244,22,"Error"],[244,27,244,27],[244,28,244,28],[244,58,244,58],[244,59,244,59],[245,10,245,8],[246,8,246,4],[246,9,246,5],[247,8,246,5],[247,17,246,5,"loadAsync"],[247,27,246,5,"_x2"],[247,30,246,5],[248,10,246,5],[248,17,246,5,"_loadAsync"],[248,27,246,5],[248,28,246,5,"apply"],[248,33,246,5],[248,40,246,5,"arguments"],[248,49,246,5],[249,8,246,5],[250,8,246,5],[250,15,246,5,"loadAsync"],[250,24,246,5],[251,6,246,5],[252,4,246,5],[253,6,246,5,"key"],[253,9,246,5],[254,6,246,5,"value"],[254,11,246,5],[255,8,246,5],[255,12,246,5,"_unloadAsync"],[255,24,246,5],[255,31,246,5,"_asyncToGenerator2"],[255,49,246,5],[255,50,246,5,"default"],[255,57,246,5],[255,59,247,4],[255,72,247,24],[256,10,248,8],[256,14,248,12],[256,18,248,16],[256,19,248,17,"_loaded"],[256,26,248,24],[256,28,248,26],[257,12,249,12],[257,16,249,16],[257,17,249,17,"_loaded"],[257,24,249,24],[257,27,249,27],[257,32,249,32],[258,12,250,12],[258,16,250,18,"key"],[258,19,250,21],[258,22,250,24],[258,26,250,28],[258,27,250,29,"_key"],[258,31,250,33],[259,12,251,12],[259,16,251,16],[259,17,251,17,"_key"],[259,21,251,21],[259,24,251,24],[259,28,251,28],[260,12,252,12],[260,16,252,18,"status"],[260,22,252,24],[260,31,252,33,"ExponentAV"],[260,50,252,43],[260,51,252,44,"unloadForSound"],[260,65,252,58],[260,66,252,59,"key"],[260,69,252,62],[260,70,252,63],[261,12,253,12],[261,16,253,16],[261,17,253,17,"_callOnPlaybackStatusUpdateForNewStatus"],[261,56,253,56],[261,57,253,57,"status"],[261,63,253,63],[261,64,253,64],[262,12,254,12],[262,16,254,16],[262,17,254,17,"_clearSubscriptions"],[262,36,254,36],[262,37,254,37],[262,38,254,38],[263,12,255,12],[263,19,255,19,"status"],[263,25,255,25],[264,10,256,8],[264,11,256,9],[264,17,257,13],[265,12,258,12],[265,19,258,19],[265,23,258,23],[265,24,258,24,"getStatusAsync"],[265,38,258,38],[265,39,258,39],[265,40,258,40],[265,41,258,41],[265,42,258,42],[266,10,259,8],[267,8,260,4],[267,9,260,5],[268,8,260,5],[268,17,260,5,"unloadAsync"],[268,29,260,5],[269,10,260,5],[269,17,260,5,"_unloadAsync"],[269,29,260,5],[269,30,260,5,"apply"],[269,35,260,5],[269,42,260,5,"arguments"],[269,51,260,5],[270,8,260,5],[271,8,260,5],[271,15,260,5,"unloadAsync"],[271,26,260,5],[272,6,260,5],[272,10,261,4],[273,4,261,4],[274,6,261,4,"key"],[274,9,261,4],[275,6,261,4,"value"],[275,11,261,4],[276,8,261,4],[276,12,261,4,"_setStatusAsync"],[276,27,261,4],[276,34,261,4,"_asyncToGenerator2"],[276,52,261,4],[276,53,261,4,"default"],[276,60,261,4],[276,62,262,4],[276,73,262,25,"status"],[276,79,262,31],[276,81,262,33],[277,10,262,33],[277,14,262,33,"_this3"],[277,20,262,33],[278,10,263,8],[278,14,263,8,"assertStatusValuesInBounds"],[278,44,263,34],[278,46,263,35,"status"],[278,52,263,41],[278,53,263,42],[279,10,264,8],[279,17,264,15],[279,21,264,19],[279,22,264,20,"_performOperationAndHandleStatusAsync"],[279,59,264,57],[279,60,264,58],[280,12,264,58],[280,19,264,64,"ExponentAV"],[280,38,264,74],[280,39,264,75,"setStatusForSound"],[280,56,264,92],[280,57,264,93,"_this3"],[280,63,264,97],[280,64,264,98,"_key"],[280,68,264,102],[280,70,264,104,"status"],[280,76,264,110],[280,77,264,111],[281,10,264,111],[281,12,264,112],[282,8,265,4],[282,9,265,5],[283,8,265,5],[283,17,265,5,"setStatusAsync"],[283,32,265,5,"_x3"],[283,35,265,5],[284,10,265,5],[284,17,265,5,"_setStatusAsync"],[284,32,265,5],[284,33,265,5,"apply"],[284,38,265,5],[284,45,265,5,"arguments"],[284,54,265,5],[285,8,265,5],[286,8,265,5],[286,15,265,5,"setStatusAsync"],[286,29,265,5],[287,6,265,5],[288,4,265,5],[289,6,265,5,"key"],[289,9,265,5],[290,6,265,5,"value"],[290,11,265,5],[291,8,265,5],[291,12,265,5,"_replayAsync"],[291,24,265,5],[291,31,265,5,"_asyncToGenerator2"],[291,49,265,5],[291,50,265,5,"default"],[291,57,265,5],[291,59,266,4],[291,72,266,35],[292,10,266,35],[292,14,266,35,"_this4"],[292,20,266,35],[293,10,266,35],[293,14,266,22,"status"],[293,20,266,28],[293,23,266,28,"arguments"],[293,32,266,28],[293,33,266,28,"length"],[293,39,266,28],[293,47,266,28,"arguments"],[293,56,266,28],[293,64,266,28,"undefined"],[293,73,266,28],[293,76,266,28,"arguments"],[293,85,266,28],[293,91,266,31],[293,92,266,32],[293,93,266,33],[294,10,267,8],[294,14,267,12,"status"],[294,20,267,18],[294,21,267,19,"positionMillis"],[294,35,267,33],[294,39,267,37,"status"],[294,45,267,43],[294,46,267,44,"positionMillis"],[294,60,267,58],[294,65,267,63],[294,66,267,64],[294,68,267,66],[295,12,268,12],[295,18,268,18],[295,22,268,22,"Error"],[295,27,268,27],[295,28,268,28],[295,74,268,74],[295,75,268,75],[296,10,269,8],[297,10,270,8],[297,17,270,15],[297,21,270,19],[297,22,270,20,"_performOperationAndHandleStatusAsync"],[297,59,270,57],[297,60,270,58],[298,12,270,58],[298,19,270,64,"ExponentAV"],[298,38,270,74],[298,39,270,75,"replaySound"],[298,50,270,86],[298,51,270,87,"_this4"],[298,57,270,91],[298,58,270,92,"_key"],[298,62,270,96],[298,64,270,96,"_objectSpread"],[298,77,270,96],[298,78,270,96,"_objectSpread"],[298,91,270,96],[298,96,271,15,"status"],[298,102,271,21],[299,14,272,12,"positionMillis"],[299,28,272,26],[299,30,272,28],[299,31,272,29],[300,14,273,12,"shouldPlay"],[300,24,273,22],[300,26,273,24],[301,12,273,28],[301,14,274,9],[301,15,274,10],[302,10,274,10],[302,12,274,11],[303,8,275,4],[303,9,275,5],[304,8,275,5],[304,17,275,5,"replayAsync"],[304,29,275,5],[305,10,275,5],[305,17,275,5,"_replayAsync"],[305,29,275,5],[305,30,275,5,"apply"],[305,35,275,5],[305,42,275,5,"arguments"],[305,51,275,5],[306,8,275,5],[307,8,275,5],[307,15,275,5,"replayAsync"],[307,26,275,5],[308,6,275,5],[308,10,276,4],[309,4,276,4],[310,4,276,4],[310,11,276,4,"Sound"],[310,16,276,4],[311,2,276,4],[312,2,276,4,"_class"],[312,8,276,4],[312,11,29,13,"Sound"],[312,16,29,18],[313,2,41,4],[314,2,29,13,"Sound"],[314,7,29,18],[314,8,42,11,"create"],[314,14,42,17],[315,4,42,17],[315,8,42,17,"_ref5"],[315,13,42,17],[315,20,42,17,"_asyncToGenerator2"],[315,38,42,17],[315,39,42,17,"default"],[315,46,42,17],[315,48,42,20],[315,59,42,27,"source"],[315,65,42,33],[315,67,42,111],[316,6,42,111],[316,10,42,35,"initialStatus"],[316,23,42,48],[316,26,42,48,"arguments"],[316,35,42,48],[316,36,42,48,"length"],[316,42,42,48],[316,50,42,48,"arguments"],[316,59,42,48],[316,67,42,48,"undefined"],[316,76,42,48],[316,79,42,48,"arguments"],[316,88,42,48],[316,94,42,51],[316,95,42,52],[316,96,42,53],[317,6,42,53],[317,10,42,55,"onPlaybackStatusUpdate"],[317,32,42,77],[317,35,42,77,"arguments"],[317,44,42,77],[317,45,42,77,"length"],[317,51,42,77],[317,59,42,77,"arguments"],[317,68,42,77],[317,76,42,77,"undefined"],[317,85,42,77],[317,88,42,77,"arguments"],[317,97,42,77],[317,103,42,80],[317,107,42,84],[318,6,42,84],[318,10,42,86,"downloadFirst"],[318,23,42,99],[318,26,42,99,"arguments"],[318,35,42,99],[318,36,42,99,"length"],[318,42,42,99],[318,50,42,99,"arguments"],[318,59,42,99],[318,67,42,99,"undefined"],[318,76,42,99],[318,79,42,99,"arguments"],[318,88,42,99],[318,94,42,102],[318,98,42,106],[319,6,43,8,"console"],[319,13,43,15],[319,14,43,16,"warn"],[319,18,43,20],[319,19,43,22],[319,126,43,128],[319,127,43,129],[320,6,44,8],[320,13,44,15,"Sound"],[320,19,44,20],[320,20,44,21,"createAsync"],[320,31,44,32],[320,32,44,33,"source"],[320,38,44,39],[320,40,44,41,"initialStatus"],[320,53,44,54],[320,55,44,56,"onPlaybackStatusUpdate"],[320,77,44,78],[320,79,44,80,"downloadFirst"],[320,92,44,93],[320,93,44,94],[321,4,45,4],[321,5,45,5],[322,4,45,5],[322,21,45,5,"_x4"],[322,24,45,5],[323,6,45,5],[323,13,45,5,"_ref5"],[323,18,45,5],[323,19,45,5,"apply"],[323,24,45,5],[323,31,45,5,"arguments"],[323,40,45,5],[324,4,45,5],[325,2,45,5],[326,2,46,4],[327,0,47,0],[328,0,48,0],[329,0,49,0],[330,0,50,0],[331,0,51,0],[332,0,52,0],[333,0,53,0],[334,0,54,0],[335,0,55,0],[336,0,56,0],[337,0,57,0],[338,0,58,0],[339,0,59,0],[340,0,60,0],[341,0,61,0],[342,0,62,0],[343,0,63,0],[344,0,64,0],[345,0,65,0],[346,0,66,0],[347,0,67,0],[348,0,68,0],[349,0,69,0],[350,0,70,0],[351,0,71,0],[352,0,72,0],[353,0,73,0],[354,0,74,0],[355,0,75,0],[356,0,76,0],[357,0,77,0],[358,0,78,0],[359,0,79,0],[360,0,80,0],[361,0,81,0],[362,0,82,0],[363,0,83,0],[364,0,84,0],[365,0,85,0],[366,0,86,0],[367,0,87,0],[368,0,88,0],[369,0,89,0],[370,2,29,13,"Sound"],[370,7,29,18],[370,8,90,11,"createAsync"],[370,19,90,22],[371,4,90,22],[371,8,90,22,"_ref6"],[371,13,90,22],[371,20,90,22,"_asyncToGenerator2"],[371,38,90,22],[371,39,90,22,"default"],[371,46,90,22],[371,48,90,25],[371,59,90,32,"source"],[371,65,90,38],[371,67,90,116],[372,6,90,116],[372,10,90,40,"initialStatus"],[372,23,90,53],[372,26,90,53,"arguments"],[372,35,90,53],[372,36,90,53,"length"],[372,42,90,53],[372,50,90,53,"arguments"],[372,59,90,53],[372,67,90,53,"undefined"],[372,76,90,53],[372,79,90,53,"arguments"],[372,88,90,53],[372,94,90,56],[372,95,90,57],[372,96,90,58],[373,6,90,58],[373,10,90,60,"onPlaybackStatusUpdate"],[373,32,90,82],[373,35,90,82,"arguments"],[373,44,90,82],[373,45,90,82,"length"],[373,51,90,82],[373,59,90,82,"arguments"],[373,68,90,82],[373,76,90,82,"undefined"],[373,85,90,82],[373,88,90,82,"arguments"],[373,97,90,82],[373,103,90,85],[373,107,90,89],[374,6,90,89],[374,10,90,91,"downloadFirst"],[374,23,90,104],[374,26,90,104,"arguments"],[374,35,90,104],[374,36,90,104,"length"],[374,42,90,104],[374,50,90,104,"arguments"],[374,59,90,104],[374,67,90,104,"undefined"],[374,76,90,104],[374,79,90,104,"arguments"],[374,88,90,104],[374,94,90,107],[374,98,90,111],[375,6,91,8],[375,10,91,14,"sound"],[375,15,91,19],[375,18,91,22],[375,22,91,26,"Sound"],[375,28,91,31],[375,29,91,32],[375,30,91,33],[376,6,92,8,"sound"],[376,11,92,13],[376,12,92,14,"setOnPlaybackStatusUpdate"],[376,37,92,39],[376,38,92,40,"onPlaybackStatusUpdate"],[376,60,92,62],[376,61,92,63],[377,6,93,8],[377,10,93,14,"status"],[377,16,93,20],[377,25,93,29,"sound"],[377,30,93,34],[377,31,93,35,"loadAsync"],[377,40,93,44],[377,41,93,45,"source"],[377,47,93,51],[377,49,93,53,"initialStatus"],[377,62,93,66],[377,64,93,68,"downloadFirst"],[377,77,93,81],[377,78,93,82],[378,6,94,8],[378,13,94,15],[379,8,94,17,"sound"],[379,13,94,22],[379,15,94,17,"sound"],[379,20,94,22],[380,8,94,24,"status"],[380,14,94,30],[380,16,94,24,"status"],[381,6,94,31],[381,7,94,32],[382,4,95,4],[382,5,95,5],[383,4,95,5],[383,21,95,5,"_x5"],[383,24,95,5],[384,6,95,5],[384,13,95,5,"_ref6"],[384,18,95,5],[384,19,95,5,"apply"],[384,24,95,5],[384,31,95,5,"arguments"],[384,40,95,5],[385,4,95,5],[386,2,95,5],[387,2,288,0,"Object"],[387,8,288,6],[387,9,288,7,"assign"],[387,15,288,13],[387,16,288,14,"Sound"],[387,21,288,19],[387,22,288,20,"prototype"],[387,31,288,29],[387,33,288,31,"PlaybackMixin"],[387,50,288,44],[387,51,288,45],[388,0,288,46]],"functionMap":{"names":["<global>","Sound","create","createAsync","_callOnPlaybackStatusUpdateForNewStatus","_performOperationAndHandleStatusAsync","_updateAudioSampleReceivedCallback","_internalStatusUpdateCallback","_internalMetadataUpdateCallback","_internalErrorCallback","_subscribeToNativeEvents","_clearSubscriptions","_subscriptions.forEach$argument_0","_errorCallback","getStatusAsync","_performOperationAndHandleStatusAsync$argument_0","setOnPlaybackStatusUpdate","setOnMetadataUpdate","setOnAudioSampleReceived","loadAsync","Promise$argument_0","loadSuccess","loadError","unloadAsync","setStatusAsync","replayAsync"],"mappings":"AAA;OC4B;oBCa;KDG;yBE6C;KFK;IGE;KHS;IIC;KJU;IKC;KLoB;oCMC;KNI;sCOC;KPI;6BQC;KRI;ISE;KTK;IUC;oCCC,iBD;KVE;qBYC;KZK;qBaI;8DCE,6CD;KbK;Iea;KfG;IgBM;KhBE;IiBK;KjBK;IkBE;+BCS;oCCC;iBDQ;kCEC;iBFG;aDE;KlBK;IsBC;KtBa;IuBE;0DTE,qDS;KvBC;IwBC;0DVI;UUI;KxBC;CDY"}},"type":"js/module"}]}