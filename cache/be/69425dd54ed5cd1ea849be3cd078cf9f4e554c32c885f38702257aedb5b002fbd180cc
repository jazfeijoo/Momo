{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":729,"column":0,"index":23424}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":729,"column":0,"index":23424}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":729,"column":0,"index":23424}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":729,"column":0,"index":23424}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":729,"column":0,"index":23424}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@react-navigation/routers","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":12,"column":35,"index":216}}],"key":"vzJhU8p+EXFUpX28ANa6h4NbBWk="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":217},"end":{"line":13,"column":31,"index":248}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-is","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":249},"end":{"line":14,"column":46,"index":295}}],"key":"Kh8377WtECxkHj9j3Lmfo9R8et4="}},{"name":"./Group","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":297},"end":{"line":16,"column":28,"index":325}}],"key":"uNleX3pwofcMWCahdeAH0mgOSdg="}},{"name":"./isArrayEqual","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":326},"end":{"line":17,"column":42,"index":368}}],"key":"ZRD0ObrDdrLEYM/Q9Fj9n7SkSvM="}},{"name":"./isRecordEqual","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":369},"end":{"line":18,"column":44,"index":413}}],"key":"pw8YlvPJDdJfKar8vhjqPTWeOZI="}},{"name":"./NavigationHelpersContext","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":414},"end":{"line":19,"column":66,"index":480}}],"key":"bfpcc4PKGUY4cOH11RBCoNeDt9Y="}},{"name":"./NavigationRouteContext","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":481},"end":{"line":20,"column":62,"index":543}}],"key":"HeyVDSY+CsJeYUdsxrU2U3K5dPs="}},{"name":"./NavigationStateContext","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":544},"end":{"line":21,"column":62,"index":606}}],"key":"TdfjuPPN8UAMLY+O68wyv7/xOLM="}},{"name":"./PreventRemoveProvider","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":607},"end":{"line":22,"column":60,"index":667}}],"key":"z9WX0oLAN2LLqXDcJA7enuyrIwg="}},{"name":"./Screen","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":668},"end":{"line":23,"column":30,"index":698}}],"key":"G3xOnz3HBe1ZIrfK8klW9dyqMPY="}},{"name":"./types","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":699},"end":{"line":32,"column":17,"index":858}}],"key":"iIKQjZN3KyZkTfDCw2LYIWkd0O0="}},{"name":"./useChildListeners","data":{"asyncType":null,"locs":[{"start":{"line":33,"column":0,"index":859},"end":{"line":33,"column":52,"index":911}}],"key":"WPTPsPIaZK0S1S+uJsMy/PqnEec="}},{"name":"./useComponent","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":0,"index":912},"end":{"line":34,"column":42,"index":954}}],"key":"GpukJdAyJrfPbuHShCE1NQzuDqI="}},{"name":"./useCurrentRender","data":{"asyncType":null,"locs":[{"start":{"line":35,"column":0,"index":955},"end":{"line":35,"column":50,"index":1005}}],"key":"BuvWs0hx7QRHxEVcJU93IYobY4U="}},{"name":"./useDescriptors","data":{"asyncType":null,"locs":[{"start":{"line":36,"column":0,"index":1006},"end":{"line":36,"column":74,"index":1080}}],"key":"AdTaN5dYxOSp3tbVnoednh5fJsY="}},{"name":"./useEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":37,"column":0,"index":1081},"end":{"line":37,"column":48,"index":1129}}],"key":"gGOGBM4JILdHmMnpmWo/TmubEUc="}},{"name":"./useFocusedListenersChildrenAdapter","data":{"asyncType":null,"locs":[{"start":{"line":38,"column":0,"index":1130},"end":{"line":38,"column":86,"index":1216}}],"key":"jcnOq3oaC/d3GYH0SWzVvzMUJVk="}},{"name":"./useFocusEvents","data":{"asyncType":null,"locs":[{"start":{"line":39,"column":0,"index":1217},"end":{"line":39,"column":46,"index":1263}}],"key":"b/JCwe5yKTc7g9FCkR3E2NcDt3w="}},{"name":"./useKeyedChildListeners","data":{"asyncType":null,"locs":[{"start":{"line":40,"column":0,"index":1264},"end":{"line":40,"column":62,"index":1326}}],"key":"s6vFWiXFAuz43T6agWirVpCfNpw="}},{"name":"./useNavigationHelpers","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":0,"index":1327},"end":{"line":41,"column":58,"index":1385}}],"key":"I4pBpYLY4ybtQy9CzYv1LNfxOtQ="}},{"name":"./useOnAction","data":{"asyncType":null,"locs":[{"start":{"line":42,"column":0,"index":1386},"end":{"line":42,"column":40,"index":1426}}],"key":"94kvdz3XrzBAxRtwLJRi4KHggW0="}},{"name":"./useOnGetState","data":{"asyncType":null,"locs":[{"start":{"line":43,"column":0,"index":1427},"end":{"line":43,"column":44,"index":1471}}],"key":"0gwhYUb7HxgzU1bYmB1uojP2nvo="}},{"name":"./useOnRouteFocus","data":{"asyncType":null,"locs":[{"start":{"line":44,"column":0,"index":1472},"end":{"line":44,"column":48,"index":1520}}],"key":"3jzCMwBvTnKTStwdsd6mdgXrCPM="}},{"name":"./useRegisterNavigator","data":{"asyncType":null,"locs":[{"start":{"line":45,"column":0,"index":1521},"end":{"line":45,"column":58,"index":1579}}],"key":"lcnQhKrBO8vHXqqVrFf/9zVXqPY="}},{"name":"./useScheduleUpdate","data":{"asyncType":null,"locs":[{"start":{"line":46,"column":0,"index":1580},"end":{"line":46,"column":52,"index":1632}}],"key":"hniB9sOd6Cv7Incvq1ER4rDMHPU="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":729,"column":0,"index":23424}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useNavigationBuilder;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _routers = _$$_REQUIRE(_dependencyMap[5], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"react\"));\n  var _reactIs = _$$_REQUIRE(_dependencyMap[7], \"react-is\");\n  var _Group = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./Group\"));\n  var _isArrayEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./isArrayEqual\"));\n  var _isRecordEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./isRecordEqual\"));\n  var _NavigationHelpersContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./NavigationHelpersContext\"));\n  var _NavigationRouteContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./NavigationRouteContext\"));\n  var _NavigationStateContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./NavigationStateContext\"));\n  var _PreventRemoveProvider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./PreventRemoveProvider\"));\n  var _Screen = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./Screen\"));\n  var _types = _$$_REQUIRE(_dependencyMap[16], \"./types\");\n  var _useChildListeners2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./useChildListeners\"));\n  var _useComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./useComponent\"));\n  var _useCurrentRender = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./useCurrentRender\"));\n  var _useDescriptors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./useDescriptors\"));\n  var _useEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./useEventEmitter\"));\n  var _useFocusedListenersChildrenAdapter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./useFocusedListenersChildrenAdapter\"));\n  var _useFocusEvents = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./useFocusEvents\"));\n  var _useKeyedChildListeners = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./useKeyedChildListeners\"));\n  var _useNavigationHelpers = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./useNavigationHelpers\"));\n  var _useOnAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./useOnAction\"));\n  var _useOnGetState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27], \"./useOnGetState\"));\n  var _useOnRouteFocus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28], \"./useOnRouteFocus\"));\n  var _useRegisterNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29], \"./useRegisterNavigator\"));\n  var _useScheduleUpdate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30], \"./useScheduleUpdate\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[31], \"react/jsx-runtime\");\n  var _excluded = [\"children\", \"screenListeners\"]; // This is to make TypeScript compiler happy\n  // eslint-disable-next-line babel/no-unused-expressions\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  _types.PrivateValueStore;\n  var isValidKey = function isValidKey(key) {\n    return key === undefined || typeof key === 'string' && key !== '';\n  };\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  var getRouteConfigsFromChildren = function getRouteConfigsFromChildren(children, groupKey, groupOptions) {\n    var configs = React.Children.toArray(children).reduce(function (acc, child) {\n      var _child$type, _child$props;\n      if (React.isValidElement(child)) {\n        if (child.type === _Screen.default) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            props: child.props\n          });\n          return acc;\n        }\n        if (child.type === React.Fragment || child.type === _Group.default) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push.apply(acc, (0, _toConsumableArray2.default)(getRouteConfigsFromChildren(child.props.children, child.props.navigationKey, child.type !== _Group.default ? groupOptions : groupOptions != null ? [].concat((0, _toConsumableArray2.default)(groupOptions), [child.props.screenOptions]) : [child.props.screenOptions])));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : (_child$type = child.type) == null ? void 0 : _child$type.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && (_child$props = child.props) != null && _child$props.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(function (config) {\n        var _config$props = config.props,\n          name = _config$props.name,\n          children = _config$props.children,\n          component = _config$props.component,\n          getComponent = _config$props.getComponent;\n        if (typeof name !== 'string' || !name) {\n          throw new Error(`Got an invalid name (${JSON.stringify(name)}) for the screen. It must be a non-empty string.`);\n        }\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, _useRegisterNavigator.default)();\n    var route = React.useContext(_NavigationRouteContext.default);\n    var children = options.children,\n      screenListeners = options.screenListeners,\n      rest = (0, _objectWithoutProperties2.default)(options, _excluded);\n    var _React$useRef = React.useRef(createRouter(_objectSpread(_objectSpread({}, rest), route != null && route.params && route.params.state == null && route.params.initial !== false && typeof route.params.screen === 'string' ? {\n        initialRouteName: route.params.screen\n      } : null))),\n      router = _React$useRef.current;\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var screens = routeConfigs.reduce(function (acc, config) {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(function (config) {\n      return config.props.name;\n    });\n    var routeKeyList = routeNames.reduce(function (acc, curr) {\n      acc[curr] = screens[curr].keys.map(function (key) {\n        return key != null ? key : '';\n      }).join(':');\n      return acc;\n    }, {});\n    var routeParamList = routeNames.reduce(function (acc, curr) {\n      var initialParams = screens[curr].props.initialParams;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    var routeGetIdList = routeNames.reduce(function (acc, curr) {\n      return Object.assign(acc, (0, _defineProperty2.default)({}, curr, screens[curr].props.getId));\n    }, {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    var isStateValid = React.useCallback(function (state) {\n      return state.type === undefined || state.type === router.type;\n    }, [router.type]);\n    var isStateInitialized = React.useCallback(function (state) {\n      return state !== undefined && state.stale === false && isStateValid(state);\n    }, [isStateValid]);\n    var _React$useContext = React.useContext(_NavigationStateContext.default),\n      currentState = _React$useContext.state,\n      getCurrentState = _React$useContext.getState,\n      setCurrentState = _React$useContext.setState,\n      setKey = _React$useContext.setKey,\n      getKey = _React$useContext.getKey,\n      getIsInitial = _React$useContext.getIsInitial;\n    var stateCleanedUp = React.useRef(false);\n    var cleanUpState = React.useCallback(function () {\n      setCurrentState(undefined);\n      stateCleanedUp.current = true;\n    }, [setCurrentState]);\n    var setState = React.useCallback(function (state) {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    }, [setCurrentState]);\n    var _React$useMemo = React.useMemo(function () {\n        var _route$params4;\n        var initialRouteParamList = routeNames.reduce(function (acc, curr) {\n          var _route$params, _route$params2, _route$params3;\n          var initialParams = screens[curr].props.initialParams;\n          var initialParamsFromParams = (route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.state) == null && (route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.initial) !== false && (route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.screen) === curr ? route.params.params : undefined;\n          acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? _objectSpread(_objectSpread({}, initialParams), initialParamsFromParams) : undefined;\n          return acc;\n        }, {});\n\n        // If the current state isn't initialized on first render, we initialize it\n        // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n        // Otherwise assume that the state was provided as initial state\n        // So we need to rehydrate it to make it usable\n        if ((currentState === undefined || !isStateValid(currentState)) && (route == null ? void 0 : (_route$params4 = route.params) == null ? void 0 : _route$params4.state) == null) {\n          return [router.getInitialState({\n            routeNames: routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList: routeGetIdList\n          }), true];\n        } else {\n          var _route$params$state, _route$params5;\n          return [router.getRehydratedState((_route$params$state = route == null ? void 0 : (_route$params5 = route.params) == null ? void 0 : _route$params5.state) != null ? _route$params$state : currentState, {\n            routeNames: routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList: routeGetIdList\n          }), false];\n        }\n        // We explicitly don't include routeNames, route.params etc. in the dep list\n        // below. We want to avoid forcing a new state to be calculated in those cases\n        // Instead, we handle changes to these in the nextState code below. Note\n        // that some changes to routeConfigs are explicitly ignored, such as changes\n        // to initialParams\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentState, router, isStateValid]),\n      _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 2),\n      initializedState = _React$useMemo2[0],\n      isFirstStateInitialization = _React$useMemo2[1];\n    var previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(function () {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    var previousRouteKeyList = previousRouteKeyListRef.current;\n    var state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initalized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    var nextState = state;\n    if (!(0, _isArrayEqual.default)(state.routeNames, routeNames) || !(0, _isRecordEqual.default)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(function (name) {\n          return previousRouteKeyList.hasOwnProperty(name) && routeKeyList[name] !== previousRouteKeyList[name];\n        })\n      });\n    }\n    var previousNestedParamsRef = React.useRef(route == null ? void 0 : route.params);\n    React.useEffect(function () {\n      previousNestedParamsRef.current = route == null ? void 0 : route.params;\n    }, [route == null ? void 0 : route.params]);\n    if (route != null && route.params) {\n      var previousParams = previousNestedParamsRef.current;\n      var action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      var updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      }) : nextState;\n    }\n    var shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.default)(function () {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(function () {\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return function () {\n        // We need to clean up state for this navigator on unmount\n        // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n        // For example, if another navigator has started rendering, we should skip cleanup\n        // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n        setTimeout(function () {\n          if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n            cleanUpState();\n          }\n        }, 0);\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // We initialize this ref here to avoid a new getState getting initialized\n    // whenever initializedState changes. We want getState to have access to the\n    // latest initializedState, but don't need it to change when that happens\n    var initializedStateRef = React.useRef();\n    initializedStateRef.current = initializedState;\n    var getState = React.useCallback(function () {\n      var currentState = getCurrentState();\n      return isStateInitialized(currentState) ? currentState : initializedStateRef.current;\n    }, [getCurrentState, isStateInitialized]);\n    var emitter = (0, _useEventEmitter.default)(function (e) {\n      var _ref;\n      var routeNames = [];\n      var route;\n      if (e.target) {\n        var _route;\n        route = state.routes.find(function (route) {\n          return route.key === e.target;\n        });\n        if ((_route = route) != null && _route.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push.apply(routeNames, (0, _toConsumableArray2.default)(Object.keys(screens).filter(function (name) {\n          var _route2;\n          return ((_route2 = route) == null ? void 0 : _route2.name) === name;\n        })));\n      }\n      if (route == null) {\n        return;\n      }\n      var navigation = descriptors[route.key].navigation;\n      var listeners = (_ref = []).concat.apply(_ref, (0, _toConsumableArray2.default)([screenListeners].concat((0, _toConsumableArray2.default)(routeNames.map(function (name) {\n        var listeners = screens[name].props.listeners;\n        return listeners;\n      }))).map(function (listeners) {\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation: navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(function (type) {\n          return type === e.type;\n        }).map(function (type) {\n          return map == null ? void 0 : map[type];\n        }) : undefined;\n      })))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter(function (cb, i, self) {\n        return cb && self.lastIndexOf(cb) === i;\n      });\n      listeners.forEach(function (listener) {\n        return listener == null ? void 0 : listener(e);\n      });\n    });\n    (0, _useFocusEvents.default)({\n      state: state,\n      emitter: emitter\n    });\n    React.useEffect(function () {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state: state\n        }\n      });\n    }, [emitter, state]);\n    var _useChildListeners = (0, _useChildListeners2.default)(),\n      childListeners = _useChildListeners.listeners,\n      addListener = _useChildListeners.addListener;\n    var _useKeyedChildListene = (0, _useKeyedChildListeners.default)(),\n      keyedListeners = _useKeyedChildListene.keyedListeners,\n      addKeyedListener = _useKeyedChildListene.addKeyedListener;\n    var onAction = (0, _useOnAction.default)({\n      router: router,\n      getState: getState,\n      setState: setState,\n      key: route == null ? void 0 : route.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      },\n      emitter: emitter\n    });\n    var onRouteFocus = (0, _useOnRouteFocus.default)({\n      router: router,\n      key: route == null ? void 0 : route.key,\n      getState: getState,\n      setState: setState\n    });\n    var navigation = (0, _useNavigationHelpers.default)({\n      id: options.id,\n      onAction: onAction,\n      getState: getState,\n      emitter: emitter,\n      router: router\n    });\n    (0, _useFocusedListenersChildrenAdapter.default)({\n      navigation: navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.default)({\n      getState: getState,\n      getStateListeners: keyedListeners.getState\n    });\n    var descriptors = (0, _useDescriptors.default)({\n      state: state,\n      screens: screens,\n      navigation: navigation,\n      screenOptions: options.screenOptions,\n      defaultScreenOptions: options.defaultScreenOptions,\n      onAction: onAction,\n      getState: getState,\n      setState: setState,\n      onRouteFocus: onRouteFocus,\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      router: router,\n      // @ts-expect-error: this should have both core and custom events, but too much work right now\n      emitter: emitter\n    });\n    (0, _useCurrentRender.default)({\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    });\n    var NavigationContent = (0, _useComponent.default)(function (children) {\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.default.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.default, {\n          children: children\n        })\n      });\n    });\n    return {\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n      NavigationContent: NavigationContent\n    };\n  }\n});","lineCount":473,"map":[[11,2,1,0],[11,6,1,0,"_routers"],[11,14,1,0],[11,17,1,0,"_$$_REQUIRE"],[11,28,1,0],[11,29,1,0,"_dependencyMap"],[11,43,1,0],[12,2,13,0],[12,6,13,0,"React"],[12,11,13,0],[12,14,13,0,"_interopRequireWildcard"],[12,37,13,0],[12,38,13,0,"_$$_REQUIRE"],[12,49,13,0],[12,50,13,0,"_dependencyMap"],[12,64,13,0],[13,2,14,0],[13,6,14,0,"_reactIs"],[13,14,14,0],[13,17,14,0,"_$$_REQUIRE"],[13,28,14,0],[13,29,14,0,"_dependencyMap"],[13,43,14,0],[14,2,16,0],[14,6,16,0,"_Group"],[14,12,16,0],[14,15,16,0,"_interopRequireDefault"],[14,37,16,0],[14,38,16,0,"_$$_REQUIRE"],[14,49,16,0],[14,50,16,0,"_dependencyMap"],[14,64,16,0],[15,2,17,0],[15,6,17,0,"_isArrayEqual"],[15,19,17,0],[15,22,17,0,"_interopRequireDefault"],[15,44,17,0],[15,45,17,0,"_$$_REQUIRE"],[15,56,17,0],[15,57,17,0,"_dependencyMap"],[15,71,17,0],[16,2,18,0],[16,6,18,0,"_isRecordEqual"],[16,20,18,0],[16,23,18,0,"_interopRequireDefault"],[16,45,18,0],[16,46,18,0,"_$$_REQUIRE"],[16,57,18,0],[16,58,18,0,"_dependencyMap"],[16,72,18,0],[17,2,19,0],[17,6,19,0,"_NavigationHelpersContext"],[17,31,19,0],[17,34,19,0,"_interopRequireDefault"],[17,56,19,0],[17,57,19,0,"_$$_REQUIRE"],[17,68,19,0],[17,69,19,0,"_dependencyMap"],[17,83,19,0],[18,2,20,0],[18,6,20,0,"_NavigationRouteContext"],[18,29,20,0],[18,32,20,0,"_interopRequireDefault"],[18,54,20,0],[18,55,20,0,"_$$_REQUIRE"],[18,66,20,0],[18,67,20,0,"_dependencyMap"],[18,81,20,0],[19,2,21,0],[19,6,21,0,"_NavigationStateContext"],[19,29,21,0],[19,32,21,0,"_interopRequireDefault"],[19,54,21,0],[19,55,21,0,"_$$_REQUIRE"],[19,66,21,0],[19,67,21,0,"_dependencyMap"],[19,81,21,0],[20,2,22,0],[20,6,22,0,"_PreventRemoveProvider"],[20,28,22,0],[20,31,22,0,"_interopRequireDefault"],[20,53,22,0],[20,54,22,0,"_$$_REQUIRE"],[20,65,22,0],[20,66,22,0,"_dependencyMap"],[20,80,22,0],[21,2,23,0],[21,6,23,0,"_Screen"],[21,13,23,0],[21,16,23,0,"_interopRequireDefault"],[21,38,23,0],[21,39,23,0,"_$$_REQUIRE"],[21,50,23,0],[21,51,23,0,"_dependencyMap"],[21,65,23,0],[22,2,24,0],[22,6,24,0,"_types"],[22,12,24,0],[22,15,24,0,"_$$_REQUIRE"],[22,26,24,0],[22,27,24,0,"_dependencyMap"],[22,41,24,0],[23,2,33,0],[23,6,33,0,"_useChildListeners2"],[23,25,33,0],[23,28,33,0,"_interopRequireDefault"],[23,50,33,0],[23,51,33,0,"_$$_REQUIRE"],[23,62,33,0],[23,63,33,0,"_dependencyMap"],[23,77,33,0],[24,2,34,0],[24,6,34,0,"_useComponent"],[24,19,34,0],[24,22,34,0,"_interopRequireDefault"],[24,44,34,0],[24,45,34,0,"_$$_REQUIRE"],[24,56,34,0],[24,57,34,0,"_dependencyMap"],[24,71,34,0],[25,2,35,0],[25,6,35,0,"_useCurrentRender"],[25,23,35,0],[25,26,35,0,"_interopRequireDefault"],[25,48,35,0],[25,49,35,0,"_$$_REQUIRE"],[25,60,35,0],[25,61,35,0,"_dependencyMap"],[25,75,35,0],[26,2,36,0],[26,6,36,0,"_useDescriptors"],[26,21,36,0],[26,24,36,0,"_interopRequireDefault"],[26,46,36,0],[26,47,36,0,"_$$_REQUIRE"],[26,58,36,0],[26,59,36,0,"_dependencyMap"],[26,73,36,0],[27,2,37,0],[27,6,37,0,"_useEventEmitter"],[27,22,37,0],[27,25,37,0,"_interopRequireDefault"],[27,47,37,0],[27,48,37,0,"_$$_REQUIRE"],[27,59,37,0],[27,60,37,0,"_dependencyMap"],[27,74,37,0],[28,2,38,0],[28,6,38,0,"_useFocusedListenersChildrenAdapter"],[28,41,38,0],[28,44,38,0,"_interopRequireDefault"],[28,66,38,0],[28,67,38,0,"_$$_REQUIRE"],[28,78,38,0],[28,79,38,0,"_dependencyMap"],[28,93,38,0],[29,2,39,0],[29,6,39,0,"_useFocusEvents"],[29,21,39,0],[29,24,39,0,"_interopRequireDefault"],[29,46,39,0],[29,47,39,0,"_$$_REQUIRE"],[29,58,39,0],[29,59,39,0,"_dependencyMap"],[29,73,39,0],[30,2,40,0],[30,6,40,0,"_useKeyedChildListeners"],[30,29,40,0],[30,32,40,0,"_interopRequireDefault"],[30,54,40,0],[30,55,40,0,"_$$_REQUIRE"],[30,66,40,0],[30,67,40,0,"_dependencyMap"],[30,81,40,0],[31,2,41,0],[31,6,41,0,"_useNavigationHelpers"],[31,27,41,0],[31,30,41,0,"_interopRequireDefault"],[31,52,41,0],[31,53,41,0,"_$$_REQUIRE"],[31,64,41,0],[31,65,41,0,"_dependencyMap"],[31,79,41,0],[32,2,42,0],[32,6,42,0,"_useOnAction"],[32,18,42,0],[32,21,42,0,"_interopRequireDefault"],[32,43,42,0],[32,44,42,0,"_$$_REQUIRE"],[32,55,42,0],[32,56,42,0,"_dependencyMap"],[32,70,42,0],[33,2,43,0],[33,6,43,0,"_useOnGetState"],[33,20,43,0],[33,23,43,0,"_interopRequireDefault"],[33,45,43,0],[33,46,43,0,"_$$_REQUIRE"],[33,57,43,0],[33,58,43,0,"_dependencyMap"],[33,72,43,0],[34,2,44,0],[34,6,44,0,"_useOnRouteFocus"],[34,22,44,0],[34,25,44,0,"_interopRequireDefault"],[34,47,44,0],[34,48,44,0,"_$$_REQUIRE"],[34,59,44,0],[34,60,44,0,"_dependencyMap"],[34,74,44,0],[35,2,45,0],[35,6,45,0,"_useRegisterNavigator"],[35,27,45,0],[35,30,45,0,"_interopRequireDefault"],[35,52,45,0],[35,53,45,0,"_$$_REQUIRE"],[35,64,45,0],[35,65,45,0,"_dependencyMap"],[35,79,45,0],[36,2,46,0],[36,6,46,0,"_useScheduleUpdate"],[36,24,46,0],[36,27,46,0,"_interopRequireDefault"],[36,49,46,0],[36,50,46,0,"_$$_REQUIRE"],[36,61,46,0],[36,62,46,0,"_dependencyMap"],[36,76,46,0],[37,2,46,52],[37,6,46,52,"_jsxRuntime"],[37,17,46,52],[37,20,46,52,"_$$_REQUIRE"],[37,31,46,52],[37,32,46,52,"_dependencyMap"],[37,46,46,52],[38,2,46,52],[38,6,46,52,"_excluded"],[38,15,46,52],[38,51,48,0],[39,2,49,0],[40,2,49,0],[40,11,49,0,"_getRequireWildcardCache"],[40,36,49,0,"e"],[40,37,49,0],[40,66,49,0,"WeakMap"],[40,73,49,0],[40,92,49,0,"r"],[40,93,49,0],[40,100,49,0,"WeakMap"],[40,107,49,0],[40,111,49,0,"t"],[40,112,49,0],[40,119,49,0,"WeakMap"],[40,126,49,0],[40,138,49,0,"_getRequireWildcardCache"],[40,162,49,0],[40,174,49,0,"_getRequireWildcardCache"],[40,199,49,0,"e"],[40,200,49,0],[40,211,49,0,"e"],[40,212,49,0],[40,215,49,0,"t"],[40,216,49,0],[40,219,49,0,"r"],[40,220,49,0],[40,225,49,0,"e"],[40,226,49,0],[41,2,49,0],[41,11,49,0,"_interopRequireWildcard"],[41,35,49,0,"e"],[41,36,49,0],[41,38,49,0,"r"],[41,39,49,0],[41,48,49,0,"r"],[41,49,49,0],[41,53,49,0,"e"],[41,54,49,0],[41,58,49,0,"e"],[41,59,49,0],[41,60,49,0,"__esModule"],[41,70,49,0],[41,79,49,0,"e"],[41,80,49,0],[41,95,49,0,"e"],[41,96,49,0],[41,119,49,0,"e"],[41,120,49,0],[41,145,49,0,"e"],[41,146,49,0],[41,157,49,0,"default"],[41,164,49,0],[41,166,49,0,"e"],[41,167,49,0],[41,175,49,0,"t"],[41,176,49,0],[41,179,49,0,"_getRequireWildcardCache"],[41,203,49,0],[41,204,49,0,"r"],[41,205,49,0],[41,212,49,0,"t"],[41,213,49,0],[41,217,49,0,"t"],[41,218,49,0],[41,219,49,0,"has"],[41,222,49,0],[41,223,49,0,"e"],[41,224,49,0],[41,234,49,0,"t"],[41,235,49,0],[41,236,49,0,"get"],[41,239,49,0],[41,240,49,0,"e"],[41,241,49,0],[41,248,49,0,"n"],[41,249,49,0],[41,254,49,0,"__proto__"],[41,263,49,0],[41,273,49,0,"a"],[41,274,49,0],[41,277,49,0,"Object"],[41,283,49,0],[41,284,49,0,"defineProperty"],[41,298,49,0],[41,302,49,0,"Object"],[41,308,49,0],[41,309,49,0,"getOwnPropertyDescriptor"],[41,333,49,0],[41,344,49,0,"u"],[41,345,49,0],[41,349,49,0,"e"],[41,350,49,0],[41,370,49,0,"u"],[41,371,49,0],[41,375,49,0,"Object"],[41,381,49,0],[41,382,49,0,"prototype"],[41,391,49,0],[41,392,49,0,"hasOwnProperty"],[41,406,49,0],[41,407,49,0,"call"],[41,411,49,0],[41,412,49,0,"e"],[41,413,49,0],[41,415,49,0,"u"],[41,416,49,0],[41,425,49,0,"i"],[41,426,49,0],[41,429,49,0,"a"],[41,430,49,0],[41,433,49,0,"Object"],[41,439,49,0],[41,440,49,0,"getOwnPropertyDescriptor"],[41,464,49,0],[41,465,49,0,"e"],[41,466,49,0],[41,468,49,0,"u"],[41,469,49,0],[41,479,49,0,"i"],[41,480,49,0],[41,485,49,0,"i"],[41,486,49,0],[41,487,49,0,"get"],[41,490,49,0],[41,494,49,0,"i"],[41,495,49,0],[41,496,49,0,"set"],[41,499,49,0],[41,503,49,0,"Object"],[41,509,49,0],[41,510,49,0,"defineProperty"],[41,524,49,0],[41,525,49,0,"n"],[41,526,49,0],[41,528,49,0,"u"],[41,529,49,0],[41,531,49,0,"i"],[41,532,49,0],[41,536,49,0,"n"],[41,537,49,0],[41,538,49,0,"u"],[41,539,49,0],[41,543,49,0,"e"],[41,544,49,0],[41,545,49,0,"u"],[41,546,49,0],[41,558,49,0,"n"],[41,559,49,0],[41,560,49,0,"default"],[41,567,49,0],[41,570,49,0,"e"],[41,571,49,0],[41,573,49,0,"t"],[41,574,49,0],[41,578,49,0,"t"],[41,579,49,0],[41,580,49,0,"set"],[41,583,49,0],[41,584,49,0,"e"],[41,585,49,0],[41,587,49,0,"n"],[41,588,49,0],[41,591,49,0,"n"],[41,592,49,0],[42,2,49,0],[42,11,49,0,"ownKeys"],[42,19,49,0,"e"],[42,20,49,0],[42,22,49,0,"r"],[42,23,49,0],[42,31,49,0,"t"],[42,32,49,0],[42,35,49,0,"Object"],[42,41,49,0],[42,42,49,0,"keys"],[42,46,49,0],[42,47,49,0,"e"],[42,48,49,0],[42,55,49,0,"Object"],[42,61,49,0],[42,62,49,0,"getOwnPropertySymbols"],[42,83,49,0],[42,91,49,0,"o"],[42,92,49,0],[42,95,49,0,"Object"],[42,101,49,0],[42,102,49,0,"getOwnPropertySymbols"],[42,123,49,0],[42,124,49,0,"e"],[42,125,49,0],[42,128,49,0,"r"],[42,129,49,0],[42,134,49,0,"o"],[42,135,49,0],[42,138,49,0,"o"],[42,139,49,0],[42,140,49,0,"filter"],[42,146,49,0],[42,157,49,0,"r"],[42,158,49,0],[42,169,49,0,"Object"],[42,175,49,0],[42,176,49,0,"getOwnPropertyDescriptor"],[42,200,49,0],[42,201,49,0,"e"],[42,202,49,0],[42,204,49,0,"r"],[42,205,49,0],[42,207,49,0,"enumerable"],[42,217,49,0],[42,224,49,0,"t"],[42,225,49,0],[42,226,49,0,"push"],[42,230,49,0],[42,231,49,0,"apply"],[42,236,49,0],[42,237,49,0,"t"],[42,238,49,0],[42,240,49,0,"o"],[42,241,49,0],[42,253,49,0,"t"],[42,254,49,0],[43,2,49,0],[43,11,49,0,"_objectSpread"],[43,25,49,0,"e"],[43,26,49,0],[43,39,49,0,"r"],[43,40,49,0],[43,46,49,0,"r"],[43,47,49,0],[43,50,49,0,"arguments"],[43,59,49,0],[43,60,49,0,"length"],[43,66,49,0],[43,68,49,0,"r"],[43,69,49,0],[43,79,49,0,"t"],[43,80,49,0],[43,91,49,0,"arguments"],[43,100,49,0],[43,101,49,0,"r"],[43,102,49,0],[43,106,49,0,"arguments"],[43,115,49,0],[43,116,49,0,"r"],[43,117,49,0],[43,125,49,0,"r"],[43,126,49,0],[43,133,49,0,"ownKeys"],[43,140,49,0],[43,141,49,0,"Object"],[43,147,49,0],[43,148,49,0,"t"],[43,149,49,0],[43,156,49,0,"forEach"],[43,163,49,0],[43,174,49,0,"r"],[43,175,49,0],[43,183,49,0,"_defineProperty2"],[43,199,49,0],[43,200,49,0,"default"],[43,207,49,0],[43,209,49,0,"e"],[43,210,49,0],[43,212,49,0,"r"],[43,213,49,0],[43,215,49,0,"t"],[43,216,49,0],[43,217,49,0,"r"],[43,218,49,0],[43,227,49,0,"Object"],[43,233,49,0],[43,234,49,0,"getOwnPropertyDescriptors"],[43,259,49,0],[43,262,49,0,"Object"],[43,268,49,0],[43,269,49,0,"defineProperties"],[43,285,49,0],[43,286,49,0,"e"],[43,287,49,0],[43,289,49,0,"Object"],[43,295,49,0],[43,296,49,0,"getOwnPropertyDescriptors"],[43,321,49,0],[43,322,49,0,"t"],[43,323,49,0],[43,328,49,0,"ownKeys"],[43,335,49,0],[43,336,49,0,"Object"],[43,342,49,0],[43,343,49,0,"t"],[43,344,49,0],[43,347,49,0,"forEach"],[43,354,49,0],[43,365,49,0,"r"],[43,366,49,0],[43,370,49,0,"Object"],[43,376,49,0],[43,377,49,0,"defineProperty"],[43,391,49,0],[43,392,49,0,"e"],[43,393,49,0],[43,395,49,0,"r"],[43,396,49,0],[43,398,49,0,"Object"],[43,404,49,0],[43,405,49,0,"getOwnPropertyDescriptor"],[43,429,49,0],[43,430,49,0,"t"],[43,431,49,0],[43,433,49,0,"r"],[43,434,49,0],[43,451,49,0,"e"],[43,452,49,0],[44,2,50,0,"PrivateValueStore"],[44,26,50,17],[45,2,71,0],[45,6,71,6,"isValidKey"],[45,16,71,16],[45,19,71,19],[45,28,71,6,"isValidKey"],[45,38,71,16,"isValidKey"],[45,39,71,20,"key"],[45,42,71,32],[46,4,71,32],[46,11,72,2,"key"],[46,14,72,5],[46,19,72,10,"undefined"],[46,28,72,19],[46,32,72,24],[46,39,72,31,"key"],[46,42,72,34],[46,47,72,39],[46,55,72,47],[46,59,72,51,"key"],[46,62,72,54],[46,67,72,59],[46,69,72,62],[47,2,72,62],[49,2,74,0],[50,0,75,0],[51,0,76,0],[52,0,77,0],[53,0,78,0],[54,2,79,0],[54,6,79,6,"getRouteConfigsFromChildren"],[54,33,79,33],[54,36,79,36],[54,45,79,6,"getRouteConfigsFromChildren"],[54,72,79,33,"getRouteConfigsFromChildren"],[54,73,84,2,"children"],[54,81,84,27],[54,83,85,2,"groupKey"],[54,91,85,19],[54,93,86,2,"groupOptions"],[54,105,90,14],[54,107,91,5],[55,4,92,2],[55,8,92,8,"configs"],[55,15,92,15],[55,18,92,18,"React"],[55,23,92,23],[55,24,92,24,"Children"],[55,32,92,32],[55,33,92,33,"toArray"],[55,40,92,40],[55,41,92,41,"children"],[55,49,92,49],[55,50,92,50],[55,51,92,51,"reduce"],[55,57,92,57],[55,58,94,4],[55,68,94,5,"acc"],[55,71,94,8],[55,73,94,10,"child"],[55,78,94,15],[55,80,94,20],[56,6,94,20],[56,10,94,20,"_child$type"],[56,21,94,20],[56,23,94,20,"_child$props"],[56,35,94,20],[57,6,95,4],[57,10,95,8,"React"],[57,15,95,13],[57,16,95,14,"isValidElement"],[57,30,95,28],[57,31,95,29,"child"],[57,36,95,34],[57,37,95,35],[57,39,95,37],[58,8,96,6],[58,12,96,10,"child"],[58,17,96,15],[58,18,96,16,"type"],[58,22,96,20],[58,27,96,25,"Screen"],[58,42,96,31],[58,44,96,33],[59,10,97,8],[60,10,98,8],[62,10,100,8],[62,14,100,12],[62,15,100,13,"isValidKey"],[62,25,100,23],[62,26,100,24,"child"],[62,31,100,29],[62,32,100,30,"props"],[62,37,100,35],[62,38,100,36,"navigationKey"],[62,51,100,49],[62,52,100,50],[62,54,100,52],[63,12,101,10],[63,18,101,16],[63,22,101,20,"Error"],[63,27,101,25],[63,28,102,13],[63,68,102,52,"JSON"],[63,72,102,56],[63,73,102,57,"stringify"],[63,82,102,66],[63,83,103,14,"child"],[63,88,103,19],[63,89,103,20,"props"],[63,94,103,25],[63,95,103,26,"navigationKey"],[63,108,104,12],[63,109,104,14],[63,130,105,14,"child"],[63,135,105,19],[63,136,105,20,"props"],[63,141,105,25],[63,142,105,26,"name"],[63,146,106,13],[63,196,107,10],[63,197,107,11],[64,10,108,8],[65,10,110,8,"acc"],[65,13,110,11],[65,14,110,12,"push"],[65,18,110,16],[65,19,110,17],[66,12,111,10,"keys"],[66,16,111,14],[66,18,111,16],[66,19,111,17,"groupKey"],[66,27,111,25],[66,29,111,27,"child"],[66,34,111,32],[66,35,111,33,"props"],[66,40,111,38],[66,41,111,39,"navigationKey"],[66,54,111,52],[66,55,111,53],[67,12,112,10,"options"],[67,19,112,17],[67,21,112,19,"groupOptions"],[67,33,112,31],[68,12,113,10,"props"],[68,17,113,15],[68,19,113,17,"child"],[68,24,113,22],[68,25,113,23,"props"],[69,10,120,8],[69,11,120,9],[69,12,120,10],[70,10,121,8],[70,17,121,15,"acc"],[70,20,121,18],[71,8,122,6],[72,8,124,6],[72,12,124,10,"child"],[72,17,124,15],[72,18,124,16,"type"],[72,22,124,20],[72,27,124,25,"React"],[72,32,124,30],[72,33,124,31,"Fragment"],[72,41,124,39],[72,45,124,43,"child"],[72,50,124,48],[72,51,124,49,"type"],[72,55,124,53],[72,60,124,58,"Group"],[72,74,124,63],[72,76,124,65],[73,10,125,8],[73,14,125,12],[73,15,125,13,"isValidKey"],[73,25,125,23],[73,26,125,24,"child"],[73,31,125,29],[73,32,125,30,"props"],[73,37,125,35],[73,38,125,36,"navigationKey"],[73,51,125,49],[73,52,125,50],[73,54,125,52],[74,12,126,10],[74,18,126,16],[74,22,126,20,"Error"],[74,27,126,25],[74,28,127,13],[74,68,127,52,"JSON"],[74,72,127,56],[74,73,127,57,"stringify"],[74,82,127,66],[74,83,128,14,"child"],[74,88,128,19],[74,89,128,20,"props"],[74,94,128,25],[74,95,128,26,"navigationKey"],[74,108,129,12],[74,109,129,14],[74,173,130,10],[74,174,130,11],[75,10,131,8],[77,10,133,8],[78,10,134,8],[79,10,135,8,"acc"],[79,13,135,11],[79,14,135,12,"push"],[79,18,135,16],[79,19,135,16,"apply"],[79,24,135,16],[79,25,135,8,"acc"],[79,28,135,11],[79,34,135,11,"_toConsumableArray2"],[79,53,135,11],[79,54,135,11,"default"],[79,61,135,11],[79,63,136,13,"getRouteConfigsFromChildren"],[79,90,136,40],[79,91,137,12,"child"],[79,96,137,17],[79,97,137,18,"props"],[79,102,137,23],[79,103,137,24,"children"],[79,111,137,32],[79,113,138,12,"child"],[79,118,138,17],[79,119,138,18,"props"],[79,124,138,23],[79,125,138,24,"navigationKey"],[79,138,138,37],[79,140,139,12,"child"],[79,145,139,17],[79,146,139,18,"type"],[79,150,139,22],[79,155,139,27,"Group"],[79,169,139,32],[79,172,140,16,"groupOptions"],[79,184,140,28],[79,187,141,16,"groupOptions"],[79,199,141,28],[79,203,141,32],[79,207,141,36],[79,213,141,36,"concat"],[79,219,141,36],[79,224,141,36,"_toConsumableArray2"],[79,243,141,36],[79,244,141,36,"default"],[79,251,141,36],[79,253,142,20,"groupOptions"],[79,265,142,32],[79,269,142,34,"child"],[79,274,142,39],[79,275,142,40,"props"],[79,280,142,45],[79,281,142,46,"screenOptions"],[79,294,142,59],[79,299,143,16],[79,300,143,17,"child"],[79,305,143,22],[79,306,143,23,"props"],[79,311,143,28],[79,312,143,29,"screenOptions"],[79,325,143,42],[79,326,144,10],[79,327,144,11],[79,328,145,8],[79,329,145,9],[80,10,146,8],[80,17,146,15,"acc"],[80,20,146,18],[81,8,147,6],[82,6,148,4],[83,6,150,4],[83,12,150,10],[83,16,150,14,"Error"],[83,21,150,19],[83,22,151,7],[83,122,152,8,"React"],[83,127,152,13],[83,128,152,14,"isValidElement"],[83,142,152,28],[83,143,152,29,"child"],[83,148,152,34],[83,149,152,35],[83,152,153,13],[83,156,154,14],[83,163,154,21,"child"],[83,168,154,26],[83,169,154,27,"type"],[83,173,154,31],[83,178,154,36],[83,186,154,44],[83,189,154,47,"child"],[83,194,154,52],[83,195,154,53,"type"],[83,199,154,57],[83,203,154,57,"_child$type"],[83,214,154,57],[83,217,154,60,"child"],[83,222,154,65],[83,223,154,66,"type"],[83,227,154,70],[83,248,154,60,"_child$type"],[83,259,154,60],[83,260,154,72,"name"],[83,264,155,13],[83,268,156,14,"child"],[83,273,156,19],[83,274,156,20,"props"],[83,279,156,25],[83,283,156,29],[83,287,156,33],[83,291,157,14],[83,298,157,21,"child"],[83,303,157,26],[83,304,157,27,"props"],[83,309,157,32],[83,314,157,37],[83,322,157,45],[83,326,158,14],[83,332,158,20],[83,336,158,24,"child"],[83,341,158,29],[83,342,158,30,"props"],[83,347,158,35],[83,352,158,35,"_child$props"],[83,364,158,35],[83,367,159,14,"child"],[83,372,159,19],[83,373,159,20,"props"],[83,378,159,25],[83,391,159,14,"_child$props"],[83,403,159,14],[83,404,159,27,"name"],[83,408,159,31],[83,411,160,19],[83,431,160,38,"child"],[83,436,160,43],[83,437,160,44,"props"],[83,442,160,49],[83,443,160,50,"name"],[83,447,160,55],[83,450,160,57],[83,453,161,18],[83,455,162,13],[83,457,162,14],[83,460,163,12],[83,467,163,19,"child"],[83,472,163,24],[83,477,163,29],[83,485,163,37],[83,488,164,12,"JSON"],[83,492,164,16],[83,493,164,17,"stringify"],[83,502,164,26],[83,503,164,27,"child"],[83,508,164,32],[83,509,164,33],[83,512,165,13],[83,516,165,16,"String"],[83,522,165,22],[83,523,165,23,"child"],[83,528,165,28],[83,529,165,30],[83,532,166,7],[83,624,167,4],[83,625,167,5],[84,4,168,2],[84,5,168,3],[84,7,168,5],[84,9,168,7],[84,10,168,8],[85,4,170,2],[85,8,170,6,"process"],[85,15,170,13],[85,16,170,14,"env"],[85,19,170,17],[85,20,170,18,"NODE_ENV"],[85,28,170,26],[85,33,170,31],[85,45,170,43],[85,47,170,45],[86,6,171,4,"configs"],[86,13,171,11],[86,14,171,12,"forEach"],[86,21,171,19],[86,22,171,20],[86,32,171,21,"config"],[86,38,171,27],[86,40,171,32],[87,8,172,6],[87,12,172,6,"_config$props"],[87,25,172,6],[87,28,172,58,"config"],[87,34,172,64],[87,35,172,65,"props"],[87,40,172,70],[88,10,172,14,"name"],[88,14,172,18],[88,17,172,18,"_config$props"],[88,30,172,18],[88,31,172,14,"name"],[88,35,172,18],[89,10,172,20,"children"],[89,18,172,28],[89,21,172,28,"_config$props"],[89,34,172,28],[89,35,172,20,"children"],[89,43,172,28],[90,10,172,30,"component"],[90,19,172,39],[90,22,172,39,"_config$props"],[90,35,172,39],[90,36,172,30,"component"],[90,45,172,39],[91,10,172,41,"getComponent"],[91,22,172,53],[91,25,172,53,"_config$props"],[91,38,172,53],[91,39,172,41,"getComponent"],[91,51,172,53],[92,8,174,6],[92,12,174,10],[92,19,174,17,"name"],[92,23,174,21],[92,28,174,26],[92,36,174,34],[92,40,174,38],[92,41,174,39,"name"],[92,45,174,43],[92,47,174,45],[93,10,175,8],[93,16,175,14],[93,20,175,18,"Error"],[93,25,175,23],[93,26,176,11],[93,50,176,34,"JSON"],[93,54,176,38],[93,55,176,39,"stringify"],[93,64,176,48],[93,65,177,12,"name"],[93,69,178,10],[93,70,178,12],[93,120,179,8],[93,121,179,9],[94,8,180,6],[95,8,182,6],[95,12,183,8,"children"],[95,20,183,16],[95,24,183,20],[95,28,183,24],[95,32,184,8,"component"],[95,41,184,17],[95,46,184,22,"undefined"],[95,55,184,31],[95,59,185,8,"getComponent"],[95,71,185,20],[95,76,185,25,"undefined"],[95,85,185,34],[95,87,186,8],[96,10,187,8],[96,14,187,12,"children"],[96,22,187,20],[96,26,187,24],[96,30,187,28],[96,34,187,32,"component"],[96,43,187,41],[96,48,187,46,"undefined"],[96,57,187,55],[96,59,187,57],[97,12,188,10],[97,18,188,16],[97,22,188,20,"Error"],[97,27,188,25],[97,28,189,13],[97,89,189,73,"name"],[97,93,189,78],[97,129,190,10],[97,130,190,11],[98,10,191,8],[99,10,193,8],[99,14,193,12,"children"],[99,22,193,20],[99,26,193,24],[99,30,193,28],[99,34,193,32,"getComponent"],[99,46,193,44],[99,51,193,49,"undefined"],[99,60,193,58],[99,62,193,60],[100,12,194,10],[100,18,194,16],[100,22,194,20,"Error"],[100,27,194,25],[100,28,195,13],[100,92,195,76,"name"],[100,96,195,81],[100,132,196,10],[100,133,196,11],[101,10,197,8],[102,10,199,8],[102,14,199,12,"component"],[102,23,199,21],[102,28,199,26,"undefined"],[102,37,199,35],[102,41,199,39,"getComponent"],[102,53,199,51],[102,58,199,56,"undefined"],[102,67,199,65],[102,69,199,67],[103,12,200,10],[103,18,200,16],[103,22,200,20,"Error"],[103,27,200,25],[103,28,201,13],[103,93,201,77,"name"],[103,97,201,82],[103,133,202,10],[103,134,202,11],[104,10,203,8],[105,10,205,8],[105,14,205,12,"children"],[105,22,205,20],[105,26,205,24],[105,30,205,28],[105,34,205,32],[105,41,205,39,"children"],[105,49,205,47],[105,54,205,52],[105,64,205,62],[105,66,205,64],[106,12,206,10],[106,18,206,16],[106,22,206,20,"Error"],[106,27,206,25],[106,28,207,13],[106,88,207,72,"name"],[106,92,207,77],[106,145,208,10],[106,146,208,11],[107,10,209,8],[108,10,211,8],[108,14,211,12,"component"],[108,23,211,21],[108,28,211,26,"undefined"],[108,37,211,35],[108,41,211,39],[108,42,211,40],[108,46,211,40,"isValidElementType"],[108,73,211,58],[108,75,211,59,"component"],[108,84,211,68],[108,85,211,69],[108,87,211,71],[109,12,212,10],[109,18,212,16],[109,22,212,20,"Error"],[109,27,212,25],[109,28,213,13],[109,89,213,73,"name"],[109,93,213,78],[109,133,214,10],[109,134,214,11],[110,10,215,8],[111,10,217,8],[111,14,217,12,"getComponent"],[111,26,217,24],[111,31,217,29,"undefined"],[111,40,217,38],[111,44,217,42],[111,51,217,49,"getComponent"],[111,63,217,61],[111,68,217,66],[111,78,217,76],[111,80,217,78],[112,12,218,10],[112,18,218,16],[112,22,218,20,"Error"],[112,27,218,25],[112,28,219,13],[112,92,219,76,"name"],[112,96,219,81],[112,151,220,10],[112,152,220,11],[113,10,221,8],[114,10,223,8],[114,14,223,12],[114,21,223,19,"component"],[114,30,223,28],[114,35,223,33],[114,45,223,43],[114,47,223,45],[115,12,224,10],[115,16,224,14,"component"],[115,25,224,23],[115,26,224,24,"name"],[115,30,224,28],[115,35,224,33],[115,46,224,44],[115,48,224,46],[116,14,225,12],[117,14,226,12],[118,14,227,12],[119,14,228,12,"console"],[119,21,228,19],[119,22,228,20,"warn"],[119,26,228,24],[119,27,229,15],[119,112,229,99,"name"],[119,116,229,104],[119,395,230,12],[119,396,230,13],[120,12,231,10],[120,13,231,11],[120,19,231,17],[120,23,231,21],[120,31,231,29],[120,32,231,30,"test"],[120,36,231,34],[120,37,231,35,"component"],[120,46,231,44],[120,47,231,45,"name"],[120,51,231,49],[120,52,231,50],[120,54,231,52],[121,14,232,12,"console"],[121,21,232,19],[121,22,232,20,"warn"],[121,26,232,24],[121,27,233,15],[121,61,233,48,"component"],[121,70,233,57],[121,71,233,58,"name"],[121,75,233,63],[121,96,233,83,"name"],[121,100,233,88],[121,301,234,12],[121,302,234,13],[122,12,235,10],[123,10,236,8],[124,8,237,6],[124,9,237,7],[124,15,237,13],[125,10,238,8],[125,16,238,14],[125,20,238,18,"Error"],[125,25,238,23],[125,26,239,11],[125,108,239,92,"name"],[125,112,239,97],[125,293,240,8],[125,294,240,9],[126,8,241,6],[127,6,242,4],[127,7,242,5],[127,8,242,6],[128,4,243,2],[129,4,245,2],[129,11,245,9,"configs"],[129,18,245,16],[130,2,246,0],[130,3,246,1],[132,2,248,0],[133,0,249,0],[134,0,250,0],[135,0,251,0],[136,0,252,0],[137,0,253,0],[138,0,254,0],[139,2,255,15],[139,11,255,24,"useNavigationBuilder"],[139,31,255,44,"useNavigationBuilder"],[139,32,262,2,"createRouter"],[139,44,262,56],[139,46,263,2,"options"],[139,53,270,17],[139,55,271,2],[140,4,272,2],[140,8,272,8,"navigatorKey"],[140,20,272,20],[140,23,272,23],[140,27,272,23,"useRegisterNavigator"],[140,56,272,43],[140,58,272,44],[140,59,272,45],[141,4,274,2],[141,8,274,8,"route"],[141,13,274,13],[141,16,274,16,"React"],[141,21,274,21],[141,22,274,22,"useContext"],[141,32,274,32],[141,33,274,33,"NavigationRouteContext"],[141,64,274,55],[141,65,276,15],[142,4,278,2],[142,8,278,10,"children"],[142,16,278,18],[142,19,278,49,"options"],[142,26,278,56],[142,27,278,10,"children"],[142,35,278,18],[143,6,278,20,"screenListeners"],[143,21,278,35],[143,24,278,49,"options"],[143,31,278,56],[143,32,278,20,"screenListeners"],[143,47,278,35],[144,6,278,40,"rest"],[144,10,278,44],[144,17,278,44,"_objectWithoutProperties2"],[144,42,278,44],[144,43,278,44,"default"],[144,50,278,44],[144,52,278,49,"options"],[144,59,278,56],[144,61,278,56,"_excluded"],[144,70,278,56],[145,4,279,2],[145,8,279,2,"_React$useRef"],[145,21,279,2],[145,24,279,30,"React"],[145,29,279,35],[145,30,279,36,"useRef"],[145,36,279,42],[145,37,280,4,"createRouter"],[145,49,280,16],[145,50,280,16,"_objectSpread"],[145,63,280,16],[145,64,280,16,"_objectSpread"],[145,77,280,16],[145,82,281,10,"rest"],[145,86,281,14],[145,89,282,10,"route"],[145,94,282,15],[145,106,282,10,"route"],[145,111,282,15],[145,112,282,17,"params"],[145,118,282,23],[145,122,283,6,"route"],[145,127,283,11],[145,128,283,12,"params"],[145,134,283,18],[145,135,283,19,"state"],[145,140,283,24],[145,144,283,28],[145,148,283,32],[145,152,284,6,"route"],[145,157,284,11],[145,158,284,12,"params"],[145,164,284,18],[145,165,284,19,"initial"],[145,172,284,26],[145,177,284,31],[145,182,284,36],[145,186,285,6],[145,193,285,13,"route"],[145,198,285,18],[145,199,285,19,"params"],[145,205,285,25],[145,206,285,26,"screen"],[145,212,285,32],[145,217,285,37],[145,225,285,45],[145,228,286,10],[146,8,286,12,"initialRouteName"],[146,24,286,28],[146,26,286,30,"route"],[146,31,286,35],[146,32,286,36,"params"],[146,38,286,42],[146,39,286,43,"screen"],[147,6,286,50],[147,7,286,51],[147,10,287,10],[147,14,287,14],[147,15,288,5],[147,16,289,2],[147,17,289,3],[148,6,279,19,"router"],[148,12,279,25],[148,15,279,25,"_React$useRef"],[148,28,279,25],[148,29,279,10,"current"],[148,36,279,17],[149,4,291,2],[149,8,291,8,"routeConfigs"],[149,20,291,20],[149,23,291,23,"getRouteConfigsFromChildren"],[149,50,291,50],[149,51,295,4,"children"],[149,59,295,12],[149,60,295,13],[150,4,297,2],[150,8,297,8,"screens"],[150,15,297,15],[150,18,297,18,"routeConfigs"],[150,30,297,30],[150,31,297,31,"reduce"],[150,37,297,37],[150,38,299,4],[150,48,299,5,"acc"],[150,51,299,8],[150,53,299,10,"config"],[150,59,299,16],[150,61,299,21],[151,6,300,4],[151,10,300,8,"config"],[151,16,300,14],[151,17,300,15,"props"],[151,22,300,20],[151,23,300,21,"name"],[151,27,300,25],[151,31,300,29,"acc"],[151,34,300,32],[151,36,300,34],[152,8,301,6],[152,14,301,12],[152,18,301,16,"Error"],[152,23,301,21],[152,24,302,9],[152,133,302,117,"config"],[152,139,302,123],[152,140,302,124,"props"],[152,145,302,129],[152,146,302,130,"name"],[152,150,302,135],[152,154,303,6],[152,155,303,7],[153,6,304,4],[154,6,306,4,"acc"],[154,9,306,7],[154,10,306,8,"config"],[154,16,306,14],[154,17,306,15,"props"],[154,22,306,20],[154,23,306,21,"name"],[154,27,306,25],[154,28,306,26],[154,31,306,29,"config"],[154,37,306,35],[155,6,307,4],[155,13,307,11,"acc"],[155,16,307,14],[156,4,308,2],[156,5,308,3],[156,7,308,5],[156,8,308,6],[156,9,308,7],[156,10,308,8],[157,4,310,2],[157,8,310,8,"routeNames"],[157,18,310,18],[157,21,310,21,"routeConfigs"],[157,33,310,33],[157,34,310,34,"map"],[157,37,310,37],[157,38,310,38],[157,48,310,39,"config"],[157,54,310,45],[158,6,310,45],[158,13,310,50,"config"],[158,19,310,56],[158,20,310,57,"props"],[158,25,310,62],[158,26,310,63,"name"],[158,30,310,67],[159,4,310,67],[159,6,310,68],[160,4,311,2],[160,8,311,8,"routeKeyList"],[160,20,311,20],[160,23,311,23,"routeNames"],[160,33,311,33],[160,34,311,34,"reduce"],[160,40,311,40],[160,41,312,4],[160,51,312,5,"acc"],[160,54,312,8],[160,56,312,10,"curr"],[160,60,312,14],[160,62,312,19],[161,6,313,6,"acc"],[161,9,313,9],[161,10,313,10,"curr"],[161,14,313,14],[161,15,313,15],[161,18,313,18,"screens"],[161,25,313,25],[161,26,313,26,"curr"],[161,30,313,30],[161,31,313,31],[161,32,313,32,"keys"],[161,36,313,36],[161,37,313,37,"map"],[161,40,313,40],[161,41,313,41],[161,51,313,42,"key"],[161,54,313,45],[162,8,313,45],[162,15,313,50,"key"],[162,18,313,53],[162,29,313,50,"key"],[162,32,313,53],[162,35,313,57],[162,37,313,59],[163,6,313,59],[163,8,313,60],[163,9,313,61,"join"],[163,13,313,65],[163,14,313,66],[163,17,313,69],[163,18,313,70],[164,6,314,6],[164,13,314,13,"acc"],[164,16,314,16],[165,4,315,4],[165,5,315,5],[165,7,316,4],[165,8,316,5],[165,9,317,2],[165,10,317,3],[166,4,318,2],[166,8,318,8,"routeParamList"],[166,22,318,22],[166,25,318,25,"routeNames"],[166,35,318,35],[166,36,318,36,"reduce"],[166,42,318,42],[166,43,319,4],[166,53,319,5,"acc"],[166,56,319,8],[166,58,319,10,"curr"],[166,62,319,14],[166,64,319,19],[167,6,320,6],[167,10,320,14,"initialParams"],[167,23,320,27],[167,26,320,32,"screens"],[167,33,320,39],[167,34,320,40,"curr"],[167,38,320,44],[167,39,320,45],[167,40,320,46,"props"],[167,45,320,51],[167,46,320,14,"initialParams"],[167,59,320,27],[168,6,321,6,"acc"],[168,9,321,9],[168,10,321,10,"curr"],[168,14,321,14],[168,15,321,15],[168,18,321,18,"initialParams"],[168,31,321,31],[169,6,322,6],[169,13,322,13,"acc"],[169,16,322,16],[170,4,323,4],[170,5,323,5],[170,7,324,4],[170,8,324,5],[170,9,325,2],[170,10,325,3],[171,4,326,2],[171,8,326,8,"routeGetIdList"],[171,22,326,22],[171,25,326,25,"routeNames"],[171,35,326,35],[171,36,326,36,"reduce"],[171,42,326,42],[171,43,329,4],[171,53,329,5,"acc"],[171,56,329,8],[171,58,329,10,"curr"],[171,62,329,14],[172,6,329,14],[172,13,330,6,"Object"],[172,19,330,12],[172,20,330,13,"assign"],[172,26,330,19],[172,27,330,20,"acc"],[172,30,330,23],[172,36,330,23,"_defineProperty2"],[172,52,330,23],[172,53,330,23,"default"],[172,60,330,23],[172,66,331,9,"curr"],[172,70,331,13],[172,72,331,16,"screens"],[172,79,331,23],[172,80,331,24,"curr"],[172,84,331,28],[172,85,331,29],[172,86,331,30,"props"],[172,91,331,35],[172,92,331,36,"getId"],[172,97,331,41],[172,98,332,7],[172,99,332,8],[173,4,332,8],[173,7,333,4],[173,8,333,5],[173,9,334,2],[173,10,334,3],[174,4,336,2],[174,8,336,6],[174,9,336,7,"routeNames"],[174,19,336,17],[174,20,336,18,"length"],[174,26,336,24],[174,28,336,26],[175,6,337,4],[175,12,337,10],[175,16,337,14,"Error"],[175,21,337,19],[175,22,338,6],[175,114,339,4],[175,115,339,5],[176,4,340,2],[177,4,342,2],[177,8,342,8,"isStateValid"],[177,20,342,20],[177,23,342,23,"React"],[177,28,342,28],[177,29,342,29,"useCallback"],[177,40,342,40],[177,41,343,4],[177,51,343,5,"state"],[177,56,343,59],[178,6,343,59],[178,13,344,6,"state"],[178,18,344,11],[178,19,344,12,"type"],[178,23,344,16],[178,28,344,21,"undefined"],[178,37,344,30],[178,41,344,34,"state"],[178,46,344,39],[178,47,344,40,"type"],[178,51,344,44],[178,56,344,49,"router"],[178,62,344,55],[178,63,344,56,"type"],[178,67,344,60],[179,4,344,60],[179,7,345,4],[179,8,345,5,"router"],[179,14,345,11],[179,15,345,12,"type"],[179,19,345,16],[179,20,346,2],[179,21,346,3],[180,4,348,2],[180,8,348,8,"isStateInitialized"],[180,26,348,26],[180,29,348,29,"React"],[180,34,348,34],[180,35,348,35,"useCallback"],[180,46,348,46],[180,47,349,4],[180,57,349,5,"state"],[180,62,349,71],[181,6,349,71],[181,13,350,6,"state"],[181,18,350,11],[181,23,350,16,"undefined"],[181,32,350,25],[181,36,350,29,"state"],[181,41,350,34],[181,42,350,35,"stale"],[181,47,350,40],[181,52,350,45],[181,57,350,50],[181,61,350,54,"isStateValid"],[181,73,350,66],[181,74,350,67,"state"],[181,79,350,72],[181,80,350,73],[182,4,350,73],[182,7,351,4],[182,8,351,5,"isStateValid"],[182,20,351,17],[182,21,352,2],[182,22,352,3],[183,4,354,2],[183,8,354,2,"_React$useContext"],[183,25,354,2],[183,28,361,6,"React"],[183,33,361,11],[183,34,361,12,"useContext"],[183,44,361,22],[183,45,361,23,"NavigationStateContext"],[183,76,361,45],[183,77,361,46],[184,6,355,11,"currentState"],[184,18,355,23],[184,21,355,23,"_React$useContext"],[184,38,355,23],[184,39,355,4,"state"],[184,44,355,9],[185,6,356,14,"getCurrentState"],[185,21,356,29],[185,24,356,29,"_React$useContext"],[185,41,356,29],[185,42,356,4,"getState"],[185,50,356,12],[186,6,357,14,"setCurrentState"],[186,21,357,29],[186,24,357,29,"_React$useContext"],[186,41,357,29],[186,42,357,4,"setState"],[186,50,357,12],[187,6,358,4,"setKey"],[187,12,358,10],[187,15,358,10,"_React$useContext"],[187,32,358,10],[187,33,358,4,"setKey"],[187,39,358,10],[188,6,359,4,"getKey"],[188,12,359,10],[188,15,359,10,"_React$useContext"],[188,32,359,10],[188,33,359,4,"getKey"],[188,39,359,10],[189,6,360,4,"getIsInitial"],[189,18,360,16],[189,21,360,16,"_React$useContext"],[189,38,360,16],[189,39,360,4,"getIsInitial"],[189,51,360,16],[190,4,363,2],[190,8,363,8,"stateCleanedUp"],[190,22,363,22],[190,25,363,25,"React"],[190,30,363,30],[190,31,363,31,"useRef"],[190,37,363,37],[190,38,363,38],[190,43,363,43],[190,44,363,44],[191,4,365,2],[191,8,365,8,"cleanUpState"],[191,20,365,20],[191,23,365,23,"React"],[191,28,365,28],[191,29,365,29,"useCallback"],[191,40,365,40],[191,41,365,41],[191,53,365,47],[192,6,366,4,"setCurrentState"],[192,21,366,19],[192,22,366,20,"undefined"],[192,31,366,29],[192,32,366,30],[193,6,367,4,"stateCleanedUp"],[193,20,367,18],[193,21,367,19,"current"],[193,28,367,26],[193,31,367,29],[193,35,367,33],[194,4,368,2],[194,5,368,3],[194,7,368,5],[194,8,368,6,"setCurrentState"],[194,23,368,21],[194,24,368,22],[194,25,368,23],[195,4,370,2],[195,8,370,8,"setState"],[195,16,370,16],[195,19,370,19,"React"],[195,24,370,24],[195,25,370,25,"useCallback"],[195,36,370,36],[195,37,371,4],[195,47,371,5,"state"],[195,52,371,71],[195,54,371,76],[196,6,372,6],[196,10,372,10,"stateCleanedUp"],[196,24,372,24],[196,25,372,25,"current"],[196,32,372,32],[196,34,372,34],[197,8,373,8],[198,8,374,8],[199,8,375,8],[200,8,376,8],[201,6,377,6],[202,6,378,6,"setCurrentState"],[202,21,378,21],[202,22,378,22,"state"],[202,27,378,27],[202,28,378,28],[203,4,379,4],[203,5,379,5],[203,7,380,4],[203,8,380,5,"setCurrentState"],[203,23,380,20],[203,24,381,2],[203,25,381,3],[204,4,383,2],[204,8,383,2,"_React$useMemo"],[204,22,383,2],[204,25,383,57,"React"],[204,30,383,62],[204,31,383,63,"useMemo"],[204,38,383,70],[204,39,383,71],[204,51,383,77],[205,8,383,77],[205,12,383,77,"_route$params4"],[205,26,383,77],[206,8,384,4],[206,12,384,10,"initialRouteParamList"],[206,33,384,31],[206,36,384,34,"routeNames"],[206,46,384,44],[206,47,384,45,"reduce"],[206,53,384,51],[206,54,386,6],[206,64,386,7,"acc"],[206,67,386,10],[206,69,386,12,"curr"],[206,73,386,16],[206,75,386,21],[207,10,386,21],[207,14,386,21,"_route$params"],[207,27,386,21],[207,29,386,21,"_route$params2"],[207,43,386,21],[207,45,386,21,"_route$params3"],[207,59,386,21],[208,10,387,6],[208,14,387,14,"initialParams"],[208,27,387,27],[208,30,387,32,"screens"],[208,37,387,39],[208,38,387,40,"curr"],[208,42,387,44],[208,43,387,45],[208,44,387,46,"props"],[208,49,387,51],[208,50,387,14,"initialParams"],[208,63,387,27],[209,10,388,6],[209,14,388,12,"initialParamsFromParams"],[209,37,388,35],[209,40,389,8],[209,41,389,8,"route"],[209,46,389,13],[209,67,389,13,"_route$params"],[209,80,389,13],[209,83,389,8,"route"],[209,88,389,13],[209,89,389,15,"params"],[209,95,389,21],[209,116,389,8,"_route$params"],[209,129,389,8],[209,130,389,23,"state"],[209,135,389,28],[209,140,389,32],[209,144,389,36],[209,148,390,8],[209,149,390,8,"route"],[209,154,390,13],[209,175,390,13,"_route$params2"],[209,189,390,13],[209,192,390,8,"route"],[209,197,390,13],[209,198,390,15,"params"],[209,204,390,21],[209,225,390,8,"_route$params2"],[209,239,390,8],[209,240,390,23,"initial"],[209,247,390,30],[209,253,390,35],[209,258,390,40],[209,262,391,8],[209,263,391,8,"route"],[209,268,391,13],[209,289,391,13,"_route$params3"],[209,303,391,13],[209,306,391,8,"route"],[209,311,391,13],[209,312,391,15,"params"],[209,318,391,21],[209,339,391,8,"_route$params3"],[209,353,391,8],[209,354,391,23,"screen"],[209,360,391,29],[209,366,391,34,"curr"],[209,370,391,38],[209,373,392,12,"route"],[209,378,392,17],[209,379,392,18,"params"],[209,385,392,24],[209,386,392,25,"params"],[209,392,392,31],[209,395,393,12,"undefined"],[209,404,393,21],[210,10,395,6,"acc"],[210,13,395,9],[210,14,395,10,"curr"],[210,18,395,14],[210,19,395,15],[210,22,396,8,"initialParams"],[210,35,396,21],[210,40,396,26,"undefined"],[210,49,396,35],[210,53,396,39,"initialParamsFromParams"],[210,76,396,62],[210,81,396,67,"undefined"],[210,90,396,76],[210,93,396,76,"_objectSpread"],[210,106,396,76],[210,107,396,76,"_objectSpread"],[210,120,396,76],[210,125,398,17,"initialParams"],[210,138,398,30],[210,141,399,17,"initialParamsFromParams"],[210,164,399,40],[210,168,401,12,"undefined"],[210,177,401,21],[211,10,403,6],[211,17,403,13,"acc"],[211,20,403,16],[212,8,404,4],[212,9,404,5],[212,11,404,7],[212,12,404,8],[212,13,404,9],[212,14,404,10],[214,8,406,4],[215,8,407,4],[216,8,408,4],[217,8,409,4],[218,8,410,4],[218,12,411,6],[218,13,411,7,"currentState"],[218,25,411,19],[218,30,411,24,"undefined"],[218,39,411,33],[218,43,411,37],[218,44,411,38,"isStateValid"],[218,56,411,50],[218,57,411,51,"currentState"],[218,69,411,63],[218,70,411,64],[218,75,412,6],[218,76,412,6,"route"],[218,81,412,11],[218,102,412,11,"_route$params4"],[218,116,412,11],[218,119,412,6,"route"],[218,124,412,11],[218,125,412,13,"params"],[218,131,412,19],[218,152,412,6,"_route$params4"],[218,166,412,6],[218,167,412,21,"state"],[218,172,412,26],[218,177,412,30],[218,181,412,34],[218,183,413,6],[219,10,414,6],[219,17,414,13],[219,18,415,8,"router"],[219,24,415,14],[219,25,415,15,"getInitialState"],[219,40,415,30],[219,41,415,31],[220,12,416,10,"routeNames"],[220,22,416,20],[220,24,416,10,"routeNames"],[220,34,416,20],[221,12,417,10,"routeParamList"],[221,26,417,24],[221,28,417,26,"initialRouteParamList"],[221,49,417,47],[222,12,418,10,"routeGetIdList"],[222,26,418,24],[222,28,418,10,"routeGetIdList"],[223,10,419,8],[223,11,419,9],[223,12,419,10],[223,14,420,8],[223,18,420,12],[223,19,421,7],[224,8,422,4],[224,9,422,5],[224,15,422,11],[225,10,422,11],[225,14,422,11,"_route$params$state"],[225,33,422,11],[225,35,422,11,"_route$params5"],[225,49,422,11],[226,10,423,6],[226,17,423,13],[226,18,424,8,"router"],[226,24,424,14],[226,25,424,15,"getRehydratedState"],[226,43,424,33],[226,45,424,33,"_route$params$state"],[226,64,424,33],[226,67,425,10,"route"],[226,72,425,15],[226,93,425,15,"_route$params5"],[226,107,425,15],[226,110,425,10,"route"],[226,115,425,15],[226,116,425,17,"params"],[226,122,425,23],[226,143,425,10,"_route$params5"],[226,157,425,10],[226,158,425,25,"state"],[226,163,425,30],[226,175,425,30,"_route$params$state"],[226,194,425,30],[226,197,425,35,"currentState"],[226,209,425,47],[226,211,426,10],[227,12,427,12,"routeNames"],[227,22,427,22],[227,24,427,12,"routeNames"],[227,34,427,22],[228,12,428,12,"routeParamList"],[228,26,428,26],[228,28,428,28,"initialRouteParamList"],[228,49,428,49],[229,12,429,12,"routeGetIdList"],[229,26,429,26],[229,28,429,12,"routeGetIdList"],[230,10,430,10],[230,11,431,8],[230,12,431,9],[230,14,432,8],[230,19,432,13],[230,20,433,7],[231,8,434,4],[232,8,435,4],[233,8,436,4],[234,8,437,4],[235,8,438,4],[236,8,439,4],[237,8,440,4],[238,6,441,2],[238,7,441,3],[238,9,441,5],[238,10,441,6,"currentState"],[238,22,441,18],[238,24,441,20,"router"],[238,30,441,26],[238,32,441,28,"isStateValid"],[238,44,441,40],[238,45,441,41],[238,46,441,42],[239,6,441,42,"_React$useMemo2"],[239,21,441,42],[239,28,441,42,"_slicedToArray2"],[239,43,441,42],[239,44,441,42,"default"],[239,51,441,42],[239,53,441,42,"_React$useMemo"],[239,67,441,42],[240,6,383,9,"initializedState"],[240,22,383,25],[240,25,383,25,"_React$useMemo2"],[240,40,383,25],[241,6,383,27,"isFirstStateInitialization"],[241,32,383,53],[241,35,383,53,"_React$useMemo2"],[241,50,383,53],[242,4,443,2],[242,8,443,8,"previousRouteKeyListRef"],[242,31,443,31],[242,34,443,34,"React"],[242,39,443,39],[242,40,443,40,"useRef"],[242,46,443,46],[242,47,443,47,"routeKeyList"],[242,59,443,59],[242,60,443,60],[243,4,445,2,"React"],[243,9,445,7],[243,10,445,8,"useEffect"],[243,19,445,17],[243,20,445,18],[243,32,445,24],[244,6,446,4,"previousRouteKeyListRef"],[244,29,446,27],[244,30,446,28,"current"],[244,37,446,35],[244,40,446,38,"routeKeyList"],[244,52,446,50],[245,4,447,2],[245,5,447,3],[245,6,447,4],[246,4,449,2],[246,8,449,8,"previousRouteKeyList"],[246,28,449,28],[246,31,449,31,"previousRouteKeyListRef"],[246,54,449,54],[246,55,449,55,"current"],[246,62,449,62],[247,4,451,2],[247,8,451,6,"state"],[247,13,451,11],[248,4,452,4],[249,4,453,4],[250,4,454,4],[251,4,455,4,"isStateInitialized"],[251,22,455,22],[251,23,455,23,"currentState"],[251,35,455,35],[251,36,455,36],[251,39,456,9,"currentState"],[251,51,456,21],[251,54,457,9,"initializedState"],[251,70,457,35],[252,4,459,2],[252,8,459,6,"nextState"],[252,17,459,22],[252,20,459,25,"state"],[252,25,459,30],[253,4,461,2],[253,8,462,4],[253,9,462,5],[253,13,462,5,"isArrayEqual"],[253,34,462,17],[253,36,462,18,"state"],[253,41,462,23],[253,42,462,24,"routeNames"],[253,52,462,34],[253,54,462,36,"routeNames"],[253,64,462,46],[253,65,462,47],[253,69,463,4],[253,70,463,5],[253,74,463,5,"isRecordEqual"],[253,96,463,18],[253,98,463,19,"routeKeyList"],[253,110,463,31],[253,112,463,33,"previousRouteKeyList"],[253,132,463,53],[253,133,463,54],[253,135,464,4],[254,6,465,4],[255,6,466,4,"nextState"],[255,15,466,13],[255,18,466,16,"router"],[255,24,466,22],[255,25,466,23,"getStateForRouteNamesChange"],[255,52,466,50],[255,53,466,51,"state"],[255,58,466,56],[255,60,466,58],[256,8,467,6,"routeNames"],[256,18,467,16],[256,20,467,6,"routeNames"],[256,30,467,16],[257,8,468,6,"routeParamList"],[257,22,468,20],[257,24,468,6,"routeParamList"],[257,38,468,20],[258,8,469,6,"routeGetIdList"],[258,22,469,20],[258,24,469,6,"routeGetIdList"],[258,38,469,20],[259,8,470,6,"routeKeyChanges"],[259,23,470,21],[259,25,470,23,"Object"],[259,31,470,29],[259,32,470,30,"keys"],[259,36,470,34],[259,37,470,35,"routeKeyList"],[259,49,470,47],[259,50,470,48],[259,51,470,49,"filter"],[259,57,470,55],[259,58,471,8],[259,68,471,9,"name"],[259,72,471,13],[260,10,471,13],[260,17,472,10,"previousRouteKeyList"],[260,37,472,30],[260,38,472,31,"hasOwnProperty"],[260,52,472,45],[260,53,472,46,"name"],[260,57,472,50],[260,58,472,51],[260,62,473,10,"routeKeyList"],[260,74,473,22],[260,75,473,23,"name"],[260,79,473,27],[260,80,473,28],[260,85,473,33,"previousRouteKeyList"],[260,105,473,53],[260,106,473,54,"name"],[260,110,473,58],[260,111,473,59],[261,8,473,59],[261,9,474,6],[262,6,475,4],[262,7,475,5],[262,8,475,6],[263,4,476,2],[264,4,478,2],[264,8,478,8,"previousNestedParamsRef"],[264,31,478,31],[264,34,478,34,"React"],[264,39,478,39],[264,40,478,40,"useRef"],[264,46,478,46],[264,47,478,47,"route"],[264,52,478,52],[264,72,478,47,"route"],[264,77,478,52],[264,78,478,54,"params"],[264,84,478,60],[264,85,478,61],[265,4,480,2,"React"],[265,9,480,7],[265,10,480,8,"useEffect"],[265,19,480,17],[265,20,480,18],[265,32,480,24],[266,6,481,4,"previousNestedParamsRef"],[266,29,481,27],[266,30,481,28,"current"],[266,37,481,35],[266,40,481,38,"route"],[266,45,481,43],[266,65,481,38,"route"],[266,70,481,43],[266,71,481,45,"params"],[266,77,481,51],[267,4,482,2],[267,5,482,3],[267,7,482,5],[267,8,482,6,"route"],[267,13,482,11],[267,33,482,6,"route"],[267,38,482,11],[267,39,482,13,"params"],[267,45,482,19],[267,46,482,20],[267,47,482,21],[268,4,484,2],[268,8,484,6,"route"],[268,13,484,11],[268,25,484,6,"route"],[268,30,484,11],[268,31,484,13,"params"],[268,37,484,19],[268,39,484,21],[269,6,485,4],[269,10,485,10,"previousParams"],[269,24,485,24],[269,27,485,27,"previousNestedParamsRef"],[269,50,485,50],[269,51,485,51,"current"],[269,58,485,58],[270,6,487,4],[270,10,487,8,"action"],[270,16,487,48],[271,6,489,4],[271,10,490,6],[271,17,490,13,"route"],[271,22,490,18],[271,23,490,19,"params"],[271,29,490,25],[271,30,490,26,"state"],[271,35,490,31],[271,40,490,36],[271,48,490,44],[271,52,491,6,"route"],[271,57,491,11],[271,58,491,12,"params"],[271,64,491,18],[271,65,491,19,"state"],[271,70,491,24],[271,74,491,28],[271,78,491,32],[271,82,492,6,"route"],[271,87,492,11],[271,88,492,12,"params"],[271,94,492,18],[271,99,492,23,"previousParams"],[271,113,492,37],[271,115,493,6],[272,8,494,6],[273,8,495,6,"action"],[273,14,495,12],[273,17,495,15,"CommonActions"],[273,39,495,28],[273,40,495,29,"reset"],[273,45,495,34],[273,46,495,35,"route"],[273,51,495,40],[273,52,495,41,"params"],[273,58,495,47],[273,59,495,48,"state"],[273,64,495,53],[273,65,495,54],[274,6,496,4],[274,7,496,5],[274,13,496,11],[274,17,497,6],[274,24,497,13,"route"],[274,29,497,18],[274,30,497,19,"params"],[274,36,497,25],[274,37,497,26,"screen"],[274,43,497,32],[274,48,497,37],[274,56,497,45],[274,61,498,8,"route"],[274,66,498,13],[274,67,498,14,"params"],[274,73,498,20],[274,74,498,21,"initial"],[274,81,498,28],[274,86,498,33],[274,91,498,38],[274,95,498,42,"isFirstStateInitialization"],[274,121,498,68],[274,125,499,8,"route"],[274,130,499,13],[274,131,499,14,"params"],[274,137,499,20],[274,142,499,25,"previousParams"],[274,156,499,39],[274,157,499,40],[274,159,500,6],[275,8,501,6],[276,8,502,6,"action"],[276,14,502,12],[276,17,502,15,"CommonActions"],[276,39,502,28],[276,40,502,29,"navigate"],[276,48,502,37],[276,49,502,38],[277,10,503,8,"name"],[277,14,503,12],[277,16,503,14,"route"],[277,21,503,19],[277,22,503,20,"params"],[277,28,503,26],[277,29,503,27,"screen"],[277,35,503,33],[278,10,504,8,"params"],[278,16,504,14],[278,18,504,16,"route"],[278,23,504,21],[278,24,504,22,"params"],[278,30,504,28],[278,31,504,29,"params"],[278,37,504,35],[279,10,505,8,"path"],[279,14,505,12],[279,16,505,14,"route"],[279,21,505,19],[279,22,505,20,"params"],[279,28,505,26],[279,29,505,27,"path"],[280,8,506,6],[280,9,506,7],[280,10,506,8],[281,6,507,4],[283,6,509,4],[284,6,510,4],[284,10,510,10,"updatedState"],[284,22,510,22],[284,25,510,25,"action"],[284,31,510,31],[284,34,511,8,"router"],[284,40,511,14],[284,41,511,15,"getStateForAction"],[284,58,511,32],[284,59,511,33,"nextState"],[284,68,511,42],[284,70,511,44,"action"],[284,76,511,50],[284,78,511,52],[285,8,512,10,"routeNames"],[285,18,512,20],[285,20,512,10,"routeNames"],[285,30,512,20],[286,8,513,10,"routeParamList"],[286,22,513,24],[286,24,513,10,"routeParamList"],[286,38,513,24],[287,8,514,10,"routeGetIdList"],[287,22,514,24],[287,24,514,10,"routeGetIdList"],[288,6,515,8],[288,7,515,9],[288,8,515,10],[288,11,516,8],[288,15,516,12],[289,6,518,4,"nextState"],[289,15,518,13],[289,18,519,6,"updatedState"],[289,30,519,18],[289,35,519,23],[289,39,519,27],[289,42,520,10,"router"],[289,48,520,16],[289,49,520,17,"getRehydratedState"],[289,67,520,35],[289,68,520,36,"updatedState"],[289,80,520,48],[289,82,520,50],[290,8,521,12,"routeNames"],[290,18,521,22],[290,20,521,12,"routeNames"],[290,30,521,22],[291,8,522,12,"routeParamList"],[291,22,522,26],[291,24,522,12,"routeParamList"],[291,38,522,26],[292,8,523,12,"routeGetIdList"],[292,22,523,26],[292,24,523,12,"routeGetIdList"],[293,6,524,10],[293,7,524,11],[293,8,524,12],[293,11,525,10,"nextState"],[293,20,525,19],[294,4,526,2],[295,4,528,2],[295,8,528,8,"shouldUpdate"],[295,20,528,20],[295,23,528,23,"state"],[295,28,528,28],[295,33,528,33,"nextState"],[295,42,528,42],[296,4,530,2],[296,8,530,2,"useScheduleUpdate"],[296,34,530,19],[296,36,530,20],[296,48,530,26],[297,6,531,4],[297,10,531,8,"shouldUpdate"],[297,22,531,20],[297,24,531,22],[298,8,532,6],[299,8,533,6,"setState"],[299,16,533,14],[299,17,533,15,"nextState"],[299,26,533,24],[299,27,533,25],[300,6,534,4],[301,4,535,2],[301,5,535,3],[301,6,535,4],[303,4,537,2],[304,4,538,2],[305,4,539,2],[306,4,540,2,"state"],[306,9,540,7],[306,12,540,10,"nextState"],[306,21,540,19],[307,4,542,2,"React"],[307,9,542,7],[307,10,542,8,"useEffect"],[307,19,542,17],[307,20,542,18],[307,32,542,24],[308,6,543,4,"setKey"],[308,12,543,10],[308,13,543,11,"navigatorKey"],[308,25,543,23],[308,26,543,24],[309,6,545,4],[309,10,545,8],[309,11,545,9,"getIsInitial"],[309,23,545,21],[309,24,545,22],[309,25,545,23],[309,27,545,25],[310,8,546,6],[311,8,547,6],[312,8,548,6],[313,8,549,6,"setState"],[313,16,549,14],[313,17,549,15,"nextState"],[313,26,549,24],[313,27,549,25],[314,6,550,4],[315,6,552,4],[315,13,552,11],[315,25,552,17],[316,8,553,6],[317,8,554,6],[318,8,555,6],[319,8,556,6],[320,8,557,6,"setTimeout"],[320,18,557,16],[320,19,557,17],[320,31,557,23],[321,10,558,8],[321,14,558,12,"getCurrentState"],[321,29,558,27],[321,30,558,28],[321,31,558,29],[321,36,558,34,"undefined"],[321,45,558,43],[321,49,558,47,"getKey"],[321,55,558,53],[321,56,558,54],[321,57,558,55],[321,62,558,60,"navigatorKey"],[321,74,558,72],[321,76,558,74],[322,12,559,10,"cleanUpState"],[322,24,559,22],[322,25,559,23],[322,26,559,24],[323,10,560,8],[324,8,561,6],[324,9,561,7],[324,11,561,9],[324,12,561,10],[324,13,561,11],[325,6,562,4],[325,7,562,5],[326,6,563,4],[327,4,564,2],[327,5,564,3],[327,7,564,5],[327,9,564,7],[327,10,564,8],[329,4,566,2],[330,4,567,2],[331,4,568,2],[332,4,569,2],[332,8,569,8,"initializedStateRef"],[332,27,569,27],[332,30,569,30,"React"],[332,35,569,35],[332,36,569,36,"useRef"],[332,42,569,42],[332,43,569,50],[332,44,569,51],[333,4,570,2,"initializedStateRef"],[333,23,570,21],[333,24,570,22,"current"],[333,31,570,29],[333,34,570,32,"initializedState"],[333,50,570,48],[334,4,572,2],[334,8,572,8,"getState"],[334,16,572,16],[334,19,572,19,"React"],[334,24,572,24],[334,25,572,25,"useCallback"],[334,36,572,36],[334,37,572,37],[334,49,572,50],[335,6,573,4],[335,10,573,10,"currentState"],[335,22,573,22],[335,25,573,25,"getCurrentState"],[335,40,573,40],[335,41,573,41],[335,42,573,42],[336,6,575,4],[336,13,575,11,"isStateInitialized"],[336,31,575,29],[336,32,575,30,"currentState"],[336,44,575,42],[336,45,575,43],[336,48,576,9,"currentState"],[336,60,576,21],[336,63,577,9,"initializedStateRef"],[336,82,577,28],[336,83,577,29,"current"],[336,90,577,46],[337,4,578,2],[337,5,578,3],[337,7,578,5],[337,8,578,6,"getCurrentState"],[337,23,578,21],[337,25,578,23,"isStateInitialized"],[337,43,578,41],[337,44,578,42],[337,45,578,43],[338,4,580,2],[338,8,580,8,"emitter"],[338,15,580,15],[338,18,580,18],[338,22,580,18,"useEventEmitter"],[338,46,580,33],[338,48,580,55],[338,58,580,56,"e"],[338,59,580,57],[338,61,580,62],[339,6,580,62],[339,10,580,62,"_ref"],[339,14,580,62],[340,6,581,4],[340,10,581,8,"routeNames"],[340,20,581,18],[340,23,581,21],[340,25,581,23],[341,6,583,4],[341,10,583,8,"route"],[341,15,583,40],[342,6,585,4],[342,10,585,8,"e"],[342,11,585,9],[342,12,585,10,"target"],[342,18,585,16],[342,20,585,18],[343,8,585,18],[343,12,585,18,"_route"],[343,18,585,18],[344,8,586,6,"route"],[344,13,586,11],[344,16,586,14,"state"],[344,21,586,19],[344,22,586,20,"routes"],[344,28,586,26],[344,29,586,27,"find"],[344,33,586,31],[344,34,586,32],[344,44,586,33,"route"],[344,49,586,38],[345,10,586,38],[345,17,586,43,"route"],[345,22,586,48],[345,23,586,49,"key"],[345,26,586,52],[345,31,586,57,"e"],[345,32,586,58],[345,33,586,59,"target"],[345,39,586,65],[346,8,586,65],[346,10,586,66],[347,8,588,6],[347,13,588,6,"_route"],[347,19,588,6],[347,22,588,10,"route"],[347,27,588,15],[347,40,588,10,"_route"],[347,46,588,10],[347,47,588,17,"name"],[347,51,588,21],[347,53,588,23],[348,10,589,8,"routeNames"],[348,20,589,18],[348,21,589,19,"push"],[348,25,589,23],[348,26,589,24,"route"],[348,31,589,29],[348,32,589,30,"name"],[348,36,589,34],[348,37,589,35],[349,8,590,6],[350,6,591,4],[350,7,591,5],[350,13,591,11],[351,8,592,6,"route"],[351,13,592,11],[351,16,592,14,"state"],[351,21,592,19],[351,22,592,20,"routes"],[351,28,592,26],[351,29,592,27,"state"],[351,34,592,32],[351,35,592,33,"index"],[351,40,592,38],[351,41,592,39],[352,8,593,6,"routeNames"],[352,18,593,16],[352,19,593,17,"push"],[352,23,593,21],[352,24,593,21,"apply"],[352,29,593,21],[352,30,593,6,"routeNames"],[352,40,593,16],[352,46,593,16,"_toConsumableArray2"],[352,65,593,16],[352,66,593,16,"default"],[352,73,593,16],[352,75,594,11,"Object"],[352,81,594,17],[352,82,594,18,"keys"],[352,86,594,22],[352,87,594,23,"screens"],[352,94,594,30],[352,95,594,31],[352,96,594,32,"filter"],[352,102,594,38],[352,103,594,39],[352,113,594,40,"name"],[352,117,594,44],[353,10,594,44],[353,14,594,44,"_route2"],[353,21,594,44],[354,10,594,44],[354,17,594,49],[354,19,594,49,"_route2"],[354,26,594,49],[354,29,594,49,"route"],[354,34,594,54],[354,55,594,49,"_route2"],[354,62,594,49],[354,63,594,56,"name"],[354,67,594,60],[354,73,594,65,"name"],[354,77,594,69],[355,8,594,69],[355,10,594,70],[355,11,595,6],[355,12,595,7],[356,6,596,4],[357,6,598,4],[357,10,598,8,"route"],[357,15,598,13],[357,19,598,17],[357,23,598,21],[357,25,598,23],[358,8,599,6],[359,6,600,4],[360,6,602,4],[360,10,602,10,"navigation"],[360,20,602,20],[360,23,602,23,"descriptors"],[360,34,602,34],[360,35,602,35,"route"],[360,40,602,40],[360,41,602,41,"key"],[360,44,602,44],[360,45,602,45],[360,46,602,46,"navigation"],[360,56,602,56],[361,6,604,4],[361,10,604,10,"listeners"],[361,19,604,19],[361,22,604,22],[361,23,604,22,"_ref"],[361,27,604,22],[361,30,604,23],[361,32,604,25],[361,34,605,7,"concat"],[361,40,605,13],[361,41,605,13,"apply"],[361,46,605,13],[361,47,605,13,"_ref"],[361,51,605,13],[361,57,605,13,"_toConsumableArray2"],[361,76,605,13],[361,77,605,13,"default"],[361,84,605,13],[361,86,607,11],[361,87,608,10,"screenListeners"],[361,102,608,25],[361,104,608,25,"concat"],[361,110,608,25],[361,115,608,25,"_toConsumableArray2"],[361,134,608,25],[361,135,608,25,"default"],[361,142,608,25],[361,144,609,13,"routeNames"],[361,154,609,23],[361,155,609,24,"map"],[361,158,609,27],[361,159,609,28],[361,169,609,29,"name"],[361,173,609,33],[361,175,609,38],[362,8,610,12],[362,12,610,20,"listeners"],[362,21,610,29],[362,24,610,34,"screens"],[362,31,610,41],[362,32,610,42,"name"],[362,36,610,46],[362,37,610,47],[362,38,610,48,"props"],[362,43,610,53],[362,44,610,20,"listeners"],[362,53,610,29],[363,8,611,12],[363,15,611,19,"listeners"],[363,24,611,28],[364,6,612,10],[364,7,612,11],[364,8,612,12],[364,11,613,10,"map"],[364,14,613,13],[364,15,613,14],[364,25,613,15,"listeners"],[364,34,613,24],[364,36,613,29],[365,8,614,10],[365,12,614,16,"map"],[365,15,614,19],[365,18,615,12],[365,25,615,19,"listeners"],[365,34,615,28],[365,39,615,33],[365,49,615,43],[365,52,616,16,"listeners"],[365,61,616,25],[365,62,616,26],[366,10,616,28,"route"],[366,15,616,33],[366,17,616,35,"route"],[366,22,616,47],[367,10,616,49,"navigation"],[367,20,616,59],[367,22,616,49,"navigation"],[368,8,616,60],[368,9,616,61],[368,10,616,62],[368,13,617,16,"listeners"],[368,22,617,25],[369,8,619,10],[369,15,619,17,"map"],[369,18,619,20],[369,21,620,14,"Object"],[369,27,620,20],[369,28,620,21,"keys"],[369,32,620,25],[369,33,620,26,"map"],[369,36,620,29],[369,37,620,30],[369,38,621,17,"filter"],[369,44,621,23],[369,45,621,24],[369,55,621,25,"type"],[369,59,621,29],[370,10,621,29],[370,17,621,34,"type"],[370,21,621,38],[370,26,621,43,"e"],[370,27,621,44],[370,28,621,45,"type"],[370,32,621,49],[371,8,621,49],[371,10,621,50],[371,11,622,17,"map"],[371,14,622,20],[371,15,622,21],[371,25,622,22,"type"],[371,29,622,26],[372,10,622,26],[372,17,622,31,"map"],[372,20,622,34],[372,40,622,31,"map"],[372,43,622,34],[372,44,622,37,"type"],[372,48,622,41],[372,49,622,42],[373,8,622,42],[373,10,622,43],[373,13,623,14,"undefined"],[373,22,623,23],[374,6,624,8],[374,7,624,9],[374,8,624,10],[374,9,625,6],[375,6,626,6],[376,6,627,6],[377,6,627,6],[377,7,628,7,"filter"],[377,13,628,13],[377,14,628,14],[377,24,628,15,"cb"],[377,26,628,17],[377,28,628,19,"i"],[377,29,628,20],[377,31,628,22,"self"],[377,35,628,26],[378,8,628,26],[378,15,628,31,"cb"],[378,17,628,33],[378,21,628,37,"self"],[378,25,628,41],[378,26,628,42,"lastIndexOf"],[378,37,628,53],[378,38,628,54,"cb"],[378,40,628,56],[378,41,628,57],[378,46,628,62,"i"],[378,47,628,63],[379,6,628,63],[379,8,628,64],[380,6,630,4,"listeners"],[380,15,630,13],[380,16,630,14,"forEach"],[380,23,630,21],[380,24,630,22],[380,34,630,23,"listener"],[380,42,630,31],[381,8,630,31],[381,15,630,36,"listener"],[381,23,630,44],[381,43,630,36,"listener"],[381,51,630,44],[381,52,630,47,"e"],[381,53,630,48],[381,54,630,49],[382,6,630,49],[382,8,630,50],[383,4,631,2],[383,5,631,3],[383,6,631,4],[384,4,633,2],[384,8,633,2,"useFocusEvents"],[384,31,633,16],[384,33,633,17],[385,6,633,19,"state"],[385,11,633,24],[385,13,633,19,"state"],[385,18,633,24],[386,6,633,26,"emitter"],[386,13,633,33],[386,15,633,26,"emitter"],[387,4,633,34],[387,5,633,35],[387,6,633,36],[388,4,635,2,"React"],[388,9,635,7],[388,10,635,8,"useEffect"],[388,19,635,17],[388,20,635,18],[388,32,635,24],[389,6,636,4,"emitter"],[389,13,636,11],[389,14,636,12,"emit"],[389,18,636,16],[389,19,636,17],[390,8,636,19,"type"],[390,12,636,23],[390,14,636,25],[390,21,636,32],[391,8,636,34,"data"],[391,12,636,38],[391,14,636,40],[392,10,636,42,"state"],[392,15,636,47],[392,17,636,42,"state"],[393,8,636,48],[394,6,636,50],[394,7,636,51],[394,8,636,52],[395,4,637,2],[395,5,637,3],[395,7,637,5],[395,8,637,6,"emitter"],[395,15,637,13],[395,17,637,15,"state"],[395,22,637,20],[395,23,637,21],[395,24,637,22],[396,4,639,2],[396,8,639,2,"_useChildListeners"],[396,26,639,2],[396,29,639,53],[396,33,639,53,"useChildListeners"],[396,60,639,70],[396,62,639,71],[396,63,639,72],[397,6,639,21,"childListeners"],[397,20,639,35],[397,23,639,35,"_useChildListeners"],[397,41,639,35],[397,42,639,10,"listeners"],[397,51,639,19],[398,6,639,37,"addListener"],[398,17,639,48],[398,20,639,48,"_useChildListeners"],[398,38,639,48],[398,39,639,37,"addListener"],[398,50,639,48],[399,4,641,2],[399,8,641,2,"_useKeyedChildListene"],[399,29,641,2],[399,32,641,47],[399,36,641,47,"useKeyedChildListeners"],[399,67,641,69],[399,69,641,70],[399,70,641,71],[400,6,641,10,"keyedListeners"],[400,20,641,24],[400,23,641,24,"_useKeyedChildListene"],[400,44,641,24],[400,45,641,10,"keyedListeners"],[400,59,641,24],[401,6,641,26,"addKeyedListener"],[401,22,641,42],[401,25,641,42,"_useKeyedChildListene"],[401,46,641,42],[401,47,641,26,"addKeyedListener"],[401,63,641,42],[402,4,643,2],[402,8,643,8,"onAction"],[402,16,643,16],[402,19,643,19],[402,23,643,19,"useOnAction"],[402,43,643,30],[402,45,643,31],[403,6,644,4,"router"],[403,12,644,10],[403,14,644,4,"router"],[403,20,644,10],[404,6,645,4,"getState"],[404,14,645,12],[404,16,645,4,"getState"],[404,24,645,12],[405,6,646,4,"setState"],[405,14,646,12],[405,16,646,4,"setState"],[405,24,646,12],[406,6,647,4,"key"],[406,9,647,7],[406,11,647,9,"route"],[406,16,647,14],[406,36,647,9,"route"],[406,41,647,14],[406,42,647,16,"key"],[406,45,647,19],[407,6,648,4,"actionListeners"],[407,21,648,19],[407,23,648,21,"childListeners"],[407,37,648,35],[407,38,648,36,"action"],[407,44,648,42],[408,6,649,4,"beforeRemoveListeners"],[408,27,649,25],[408,29,649,27,"keyedListeners"],[408,43,649,41],[408,44,649,42,"beforeRemove"],[408,56,649,54],[409,6,650,4,"routerConfigOptions"],[409,25,650,23],[409,27,650,25],[410,8,651,6,"routeNames"],[410,18,651,16],[410,20,651,6,"routeNames"],[410,30,651,16],[411,8,652,6,"routeParamList"],[411,22,652,20],[411,24,652,6,"routeParamList"],[411,38,652,20],[412,8,653,6,"routeGetIdList"],[412,22,653,20],[412,24,653,6,"routeGetIdList"],[413,6,654,4],[413,7,654,5],[414,6,655,4,"emitter"],[414,13,655,11],[414,15,655,4,"emitter"],[415,4,656,2],[415,5,656,3],[415,6,656,4],[416,4,658,2],[416,8,658,8,"onRouteFocus"],[416,20,658,20],[416,23,658,23],[416,27,658,23,"useOnRouteFocus"],[416,51,658,38],[416,53,658,39],[417,6,659,4,"router"],[417,12,659,10],[417,14,659,4,"router"],[417,20,659,10],[418,6,660,4,"key"],[418,9,660,7],[418,11,660,9,"route"],[418,16,660,14],[418,36,660,9,"route"],[418,41,660,14],[418,42,660,16,"key"],[418,45,660,19],[419,6,661,4,"getState"],[419,14,661,12],[419,16,661,4,"getState"],[419,24,661,12],[420,6,662,4,"setState"],[420,14,662,12],[420,16,662,4,"setState"],[421,4,663,2],[421,5,663,3],[421,6,663,4],[422,4,665,2],[422,8,665,8,"navigation"],[422,18,665,18],[422,21,665,21],[422,25,665,21,"useNavigationHelpers"],[422,54,665,41],[422,56,670,4],[423,6,671,4,"id"],[423,8,671,6],[423,10,671,8,"options"],[423,17,671,15],[423,18,671,16,"id"],[423,20,671,18],[424,6,672,4,"onAction"],[424,14,672,12],[424,16,672,4,"onAction"],[424,24,672,12],[425,6,673,4,"getState"],[425,14,673,12],[425,16,673,4,"getState"],[425,24,673,12],[426,6,674,4,"emitter"],[426,13,674,11],[426,15,674,4,"emitter"],[426,22,674,11],[427,6,675,4,"router"],[427,12,675,10],[427,14,675,4,"router"],[428,4,676,2],[428,5,676,3],[428,6,676,4],[429,4,678,2],[429,8,678,2,"useFocusedListenersChildrenAdapter"],[429,51,678,36],[429,53,678,37],[430,6,679,4,"navigation"],[430,16,679,14],[430,18,679,4,"navigation"],[430,28,679,14],[431,6,680,4,"focusedListeners"],[431,22,680,20],[431,24,680,22,"childListeners"],[431,38,680,36],[431,39,680,37,"focus"],[432,4,681,2],[432,5,681,3],[432,6,681,4],[433,4,683,2],[433,8,683,2,"useOnGetState"],[433,30,683,15],[433,32,683,16],[434,6,684,4,"getState"],[434,14,684,12],[434,16,684,4,"getState"],[434,24,684,12],[435,6,685,4,"getStateListeners"],[435,23,685,21],[435,25,685,23,"keyedListeners"],[435,39,685,37],[435,40,685,38,"getState"],[436,4,686,2],[436,5,686,3],[436,6,686,4],[437,4,688,2],[437,8,688,8,"descriptors"],[437,19,688,19],[437,22,688,22],[437,26,688,22,"useDescriptors"],[437,49,688,36],[437,51,693,4],[438,6,694,4,"state"],[438,11,694,9],[438,13,694,4,"state"],[438,18,694,9],[439,6,695,4,"screens"],[439,13,695,11],[439,15,695,4,"screens"],[439,22,695,11],[440,6,696,4,"navigation"],[440,16,696,14],[440,18,696,4,"navigation"],[440,28,696,14],[441,6,697,4,"screenOptions"],[441,19,697,17],[441,21,697,19,"options"],[441,28,697,26],[441,29,697,27,"screenOptions"],[441,42,697,40],[442,6,698,4,"defaultScreenOptions"],[442,26,698,24],[442,28,698,26,"options"],[442,35,698,33],[442,36,698,34,"defaultScreenOptions"],[442,56,698,54],[443,6,699,4,"onAction"],[443,14,699,12],[443,16,699,4,"onAction"],[443,24,699,12],[444,6,700,4,"getState"],[444,14,700,12],[444,16,700,4,"getState"],[444,24,700,12],[445,6,701,4,"setState"],[445,14,701,12],[445,16,701,4,"setState"],[445,24,701,12],[446,6,702,4,"onRouteFocus"],[446,18,702,16],[446,20,702,4,"onRouteFocus"],[446,32,702,16],[447,6,703,4,"addListener"],[447,17,703,15],[447,19,703,4,"addListener"],[447,30,703,15],[448,6,704,4,"addKeyedListener"],[448,22,704,20],[448,24,704,4,"addKeyedListener"],[448,40,704,20],[449,6,705,4,"router"],[449,12,705,10],[449,14,705,4,"router"],[449,20,705,10],[450,6,706,4],[451,6,707,4,"emitter"],[451,13,707,11],[451,15,707,4,"emitter"],[452,4,708,2],[452,5,708,3],[452,6,708,4],[453,4,710,2],[453,8,710,2,"useCurrentRender"],[453,33,710,18],[453,35,710,19],[454,6,711,4,"state"],[454,11,711,9],[454,13,711,4,"state"],[454,18,711,9],[455,6,712,4,"navigation"],[455,16,712,14],[455,18,712,4,"navigation"],[455,28,712,14],[456,6,713,4,"descriptors"],[456,17,713,15],[456,19,713,4,"descriptors"],[457,4,714,2],[457,5,714,3],[457,6,714,4],[458,4,716,2],[458,8,716,8,"NavigationContent"],[458,25,716,25],[458,28,716,28],[458,32,716,28,"useComponent"],[458,53,716,40],[458,55,716,41],[458,65,716,42,"children"],[458,73,716,67],[459,6,716,67],[459,26,717,4],[459,30,717,4,"_jsxRuntime"],[459,41,717,4],[459,42,717,4,"jsx"],[459,45,717,4],[459,47,717,5,"_NavigationHelpersContext"],[459,72,717,5],[459,73,717,5,"default"],[459,80,717,29],[459,81,717,30,"Provider"],[459,89,717,38],[460,8,717,39,"value"],[460,13,717,44],[460,15,717,46,"navigation"],[460,25,717,57],[461,8,717,57,"children"],[461,16,717,57],[461,31,718,6],[461,35,718,6,"_jsxRuntime"],[461,46,718,6],[461,47,718,6,"jsx"],[461,50,718,6],[461,52,718,7,"_PreventRemoveProvider"],[461,74,718,7],[461,75,718,7,"default"],[461,82,718,28],[462,10,718,28,"children"],[462,18,718,28],[462,20,718,30,"children"],[463,8,718,38],[463,9,718,62],[464,6,718,63],[464,7,719,39],[464,8,719,40],[465,4,719,40],[465,5,720,3],[465,6,720,4],[466,4,722,2],[466,11,722,9],[467,6,723,4,"state"],[467,11,723,9],[467,13,723,4,"state"],[467,18,723,9],[468,6,724,4,"navigation"],[468,16,724,14],[468,18,724,4,"navigation"],[468,28,724,14],[469,6,725,4,"descriptors"],[469,17,725,15],[469,19,725,4,"descriptors"],[469,30,725,15],[470,6,726,4,"NavigationContent"],[470,23,726,21],[470,25,726,4,"NavigationContent"],[471,4,727,2],[471,5,727,3],[472,2,728,0],[473,0,728,1]],"functionMap":{"names":["<global>","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","cleanUpState","setState","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","setTimeout$argument_0","getState","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;mBCsE;8DDC;oCEO;ICe;GD0E;oBEG;KFuE;CFI;eKS;IC4C;GDS;sCEE,6BF;IGE;yCCC,kBD;KHE;IGI;KHI;IGM;QHG;IKW;4DLC;IMK;yENC;yCOe;GPG;IQG;KRQ;uESI;MNG;KMkB;GTqC;kBUI;GVE;QWwB;2DXE;kBUO;GVE;oBYgD;GZK;kBUO;WGU;iBCK;ODI;KHC;GVE;qCeQ;GfM;uDgBE;gCCM,iCD;uCLQ,8BK;4BEe;WFG;cGC;wBRQ,yBQ;qBCC,qBD;SHE;cKI,iDL;sBME,2BN;GhBC;kBUI;GVE;yCuB+E;GvBI;CLQ"}},"type":"js/module"}]}