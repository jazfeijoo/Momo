{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  /**\n   * A pretty-format plugin for React's FiberNode objects, which are very large trees that are too\n   * large and verbose to print.\n   */\n  var _default = exports.default = {\n    test: function test(value) {\n      return value && value instanceof Object && value.hasOwnProperty('tag') && value.hasOwnProperty('key') && value.hasOwnProperty('type');\n    },\n    serialize: function serialize(node, config, indentation, depth, refs, printer) {\n      return `${config.min ? '' : 'FiberNode '}{${_printProperties(node, ['tag', 'key', 'type'], config, indentation, depth, refs, printer)}}`;\n    }\n  };\n  function _printProperties(object, keys, config, indentation, depth, refs, printer) {\n    var result = config.spacingOuter;\n    var propertyIndentation = indentation + config.indent;\n    for (var ii = 0; ii < keys.length; ii++) {\n      var key = keys[ii];\n      var name = printer(key, config, propertyIndentation, depth, refs);\n      var value = printer(object[key], config, propertyIndentation, depth, refs);\n      result += `${propertyIndentation}${name}: ${value}`;\n      if (ii < keys.length - 1) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n    result += config.spacingOuter + indentation;\n    return result;\n  }\n});","lineCount":35,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,2,1,0],[10,6,1,0,"_default"],[10,14,1,0],[10,17,1,0,"exports"],[10,24,1,0],[10,25,1,0,"default"],[10,32,1,0],[10,35,5,15],[11,4,6,4,"test"],[11,8,6,8],[11,19,6,8,"test"],[11,24,6,9,"value"],[11,29,6,14],[11,31,6,16],[12,6,7,8],[12,13,7,16,"value"],[12,18,7,21],[12,22,8,12,"value"],[12,27,8,17],[12,39,8,29,"Object"],[12,45,8,35],[12,49,9,12,"value"],[12,54,9,17],[12,55,9,18,"hasOwnProperty"],[12,69,9,32],[12,70,9,33],[12,75,9,38],[12,76,9,39],[12,80,10,12,"value"],[12,85,10,17],[12,86,10,18,"hasOwnProperty"],[12,100,10,32],[12,101,10,33],[12,106,10,38],[12,107,10,39],[12,111,11,12,"value"],[12,116,11,17],[12,117,11,18,"hasOwnProperty"],[12,131,11,32],[12,132,11,33],[12,138,11,39],[12,139,11,40],[13,4,12,4],[13,5,12,5],[14,4,13,4,"serialize"],[14,13,13,13],[14,24,13,13,"serialize"],[14,34,13,14,"node"],[14,38,13,18],[14,40,13,20,"config"],[14,46,13,26],[14,48,13,28,"indentation"],[14,59,13,39],[14,61,13,41,"depth"],[14,66,13,46],[14,68,13,48,"refs"],[14,72,13,52],[14,74,13,54,"printer"],[14,81,13,61],[14,83,13,63],[15,6,14,8],[15,13,14,16],[15,16,14,18,"config"],[15,22,14,24],[15,23,14,25,"min"],[15,26,14,28],[15,29,14,31],[15,31,14,33],[15,34,14,36],[15,46,14,49],[15,50,14,52,"_printProperties"],[15,66,14,68],[15,67,14,69,"node"],[15,71,14,73],[15,73,14,75],[15,74,14,76],[15,79,14,81],[15,81,14,83],[15,86,14,88],[15,88,14,90],[15,94,14,96],[15,95,14,97],[15,97,14,99,"config"],[15,103,14,105],[15,105,14,107,"indentation"],[15,116,14,118],[15,118,14,120,"depth"],[15,123,14,125],[15,125,14,127,"refs"],[15,129,14,131],[15,131,14,133,"printer"],[15,138,14,140],[15,139,14,142],[15,142,14,144],[16,4,15,4],[17,2,16,0],[17,3,16,1],[18,2,17,0],[18,11,17,9,"_printProperties"],[18,27,17,25,"_printProperties"],[18,28,17,26,"object"],[18,34,17,32],[18,36,17,34,"keys"],[18,40,17,38],[18,42,17,40,"config"],[18,48,17,46],[18,50,17,48,"indentation"],[18,61,17,59],[18,63,17,61,"depth"],[18,68,17,66],[18,70,17,68,"refs"],[18,74,17,72],[18,76,17,74,"printer"],[18,83,17,81],[18,85,17,83],[19,4,18,4],[19,8,18,8,"result"],[19,14,18,14],[19,17,18,17,"config"],[19,23,18,23],[19,24,18,24,"spacingOuter"],[19,36,18,36],[20,4,19,4],[20,8,19,10,"propertyIndentation"],[20,27,19,29],[20,30,19,32,"indentation"],[20,41,19,43],[20,44,19,46,"config"],[20,50,19,52],[20,51,19,53,"indent"],[20,57,19,59],[21,4,20,4],[21,9,20,9],[21,13,20,13,"ii"],[21,15,20,15],[21,18,20,18],[21,19,20,19],[21,21,20,21,"ii"],[21,23,20,23],[21,26,20,26,"keys"],[21,30,20,30],[21,31,20,31,"length"],[21,37,20,37],[21,39,20,39,"ii"],[21,41,20,41],[21,43,20,43],[21,45,20,45],[22,6,21,8],[22,10,21,14,"key"],[22,13,21,17],[22,16,21,20,"keys"],[22,20,21,24],[22,21,21,25,"ii"],[22,23,21,27],[22,24,21,28],[23,6,22,8],[23,10,22,14,"name"],[23,14,22,18],[23,17,22,21,"printer"],[23,24,22,28],[23,25,22,29,"key"],[23,28,22,32],[23,30,22,34,"config"],[23,36,22,40],[23,38,22,42,"propertyIndentation"],[23,57,22,61],[23,59,22,63,"depth"],[23,64,22,68],[23,66,22,70,"refs"],[23,70,22,74],[23,71,22,75],[24,6,23,8],[24,10,23,14,"value"],[24,15,23,19],[24,18,23,22,"printer"],[24,25,23,29],[24,26,23,30,"object"],[24,32,23,36],[24,33,23,37,"key"],[24,36,23,40],[24,37,23,41],[24,39,23,43,"config"],[24,45,23,49],[24,47,23,51,"propertyIndentation"],[24,66,23,70],[24,68,23,72,"depth"],[24,73,23,77],[24,75,23,79,"refs"],[24,79,23,83],[24,80,23,84],[25,6,24,8,"result"],[25,12,24,14],[25,16,24,19],[25,19,24,21,"propertyIndentation"],[25,38,24,41],[25,41,24,43,"name"],[25,45,24,48],[25,50,24,52,"value"],[25,55,24,58],[25,57,24,59],[26,6,25,8],[26,10,25,12,"ii"],[26,12,25,14],[26,15,25,17,"keys"],[26,19,25,21],[26,20,25,22,"length"],[26,26,25,28],[26,29,25,31],[26,30,25,32],[26,32,25,34],[27,8,26,12,"result"],[27,14,26,18],[27,18,26,22],[27,21,26,25],[27,24,26,28,"config"],[27,30,26,34],[27,31,26,35,"spacingInner"],[27,43,26,47],[28,6,27,8],[28,7,27,9],[28,13,28,13],[28,17,28,17],[28,18,28,18,"config"],[28,24,28,24],[28,25,28,25,"min"],[28,28,28,28],[28,30,28,30],[29,8,29,12,"result"],[29,14,29,18],[29,18,29,22],[29,21,29,25],[30,6,30,8],[31,4,31,4],[32,4,32,4,"result"],[32,10,32,10],[32,14,32,14,"config"],[32,20,32,20],[32,21,32,21,"spacingOuter"],[32,33,32,33],[32,36,32,36,"indentation"],[32,47,32,47],[33,4,33,4],[33,11,33,11,"result"],[33,17,33,17],[34,2,34,0],[35,0,34,1]],"functionMap":{"names":["<global>","default.test","default.serialize","_printProperties"],"mappings":"AAA;ICK;KDM;IEC;KFE;AGE;CHiB"}},"type":"js/module"}]}