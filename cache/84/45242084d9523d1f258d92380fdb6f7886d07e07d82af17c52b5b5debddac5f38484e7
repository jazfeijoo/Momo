{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Unique ID creation requires a high quality random # generator.  In the\n  // browser this is a little complicated due to unknown quality of Math.random()\n  // and inconsistent support for the `crypto` API.  We do the best we can via\n  // feature-detection\n\n  // getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n  // implementation. Also, find the complete implementation of crypto on IE11.\n  var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\n  if (getRandomValues) {\n    // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n    var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n    module.exports = function whatwgRNG() {\n      getRandomValues(rnds8);\n      return rnds8;\n    };\n  } else {\n    // Math.random()-based (RNG)\n    //\n    // If all else fails, use Math.random().  It's fast, but is of unspecified\n    // quality.\n    var rnds = new Array(16);\n    module.exports = function mathRNG() {\n      for (var i = 0, r; i < 16; i++) {\n        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n        rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n      }\n      return rnds;\n    };\n  }\n});","lineCount":32,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[5,2,4,0],[7,2,6,0],[8,2,7,0],[9,2,8,0],[9,6,8,4,"getRandomValues"],[9,21,8,19],[9,24,8,23],[9,31,8,30,"crypto"],[9,37,8,37],[9,41,8,41],[9,52,8,52],[9,56,8,56,"crypto"],[9,62,8,62],[9,63,8,63,"getRandomValues"],[9,78,8,78],[9,82,8,82,"crypto"],[9,88,8,88],[9,89,8,89,"getRandomValues"],[9,104,8,104],[9,105,8,105,"bind"],[9,109,8,109],[9,110,8,110,"crypto"],[9,116,8,116],[9,117,8,117],[9,121,9,23],[9,128,9,30,"msCrypto"],[9,136,9,39],[9,140,9,43],[9,151,9,54],[9,155,9,58],[9,162,9,65,"window"],[9,168,9,71],[9,169,9,72,"msCrypto"],[9,177,9,80],[9,178,9,81,"getRandomValues"],[9,193,9,96],[9,197,9,100],[9,207,9,110],[9,211,9,114,"msCrypto"],[9,219,9,122],[9,220,9,123,"getRandomValues"],[9,235,9,138],[9,236,9,139,"bind"],[9,240,9,143],[9,241,9,144,"msCrypto"],[9,249,9,152],[9,250,9,154],[10,2,11,0],[10,6,11,4,"getRandomValues"],[10,21,11,19],[10,23,11,21],[11,4,12,2],[12,4,13,2],[12,8,13,6,"rnds8"],[12,13,13,11],[12,16,13,14],[12,20,13,18,"Uint8Array"],[12,30,13,28],[12,31,13,29],[12,33,13,31],[12,34,13,32],[12,35,13,33],[12,36,13,34],[14,4,15,2,"module"],[14,10,15,8],[14,11,15,9,"exports"],[14,18,15,16],[14,21,15,19],[14,30,15,28,"whatwgRNG"],[14,39,15,37,"whatwgRNG"],[14,40,15,37],[14,42,15,40],[15,6,16,4,"getRandomValues"],[15,21,16,19],[15,22,16,20,"rnds8"],[15,27,16,25],[15,28,16,26],[16,6,17,4],[16,13,17,11,"rnds8"],[16,18,17,16],[17,4,18,2],[17,5,18,3],[18,2,19,0],[18,3,19,1],[18,9,19,7],[19,4,20,2],[20,4,21,2],[21,4,22,2],[22,4,23,2],[23,4,24,2],[23,8,24,6,"rnds"],[23,12,24,10],[23,15,24,13],[23,19,24,17,"Array"],[23,24,24,22],[23,25,24,23],[23,27,24,25],[23,28,24,26],[24,4,26,2,"module"],[24,10,26,8],[24,11,26,9,"exports"],[24,18,26,16],[24,21,26,19],[24,30,26,28,"mathRNG"],[24,37,26,35,"mathRNG"],[24,38,26,35],[24,40,26,38],[25,6,27,4],[25,11,27,9],[25,15,27,13,"i"],[25,16,27,14],[25,19,27,17],[25,20,27,18],[25,22,27,20,"r"],[25,23,27,21],[25,25,27,23,"i"],[25,26,27,24],[25,29,27,27],[25,31,27,29],[25,33,27,31,"i"],[25,34,27,32],[25,36,27,34],[25,38,27,36],[26,8,28,6],[26,12,28,10],[26,13,28,11,"i"],[26,14,28,12],[26,17,28,15],[26,21,28,19],[26,27,28,25],[26,28,28,26],[26,30,28,28,"r"],[26,31,28,29],[26,34,28,32,"Math"],[26,38,28,36],[26,39,28,37,"random"],[26,45,28,43],[26,46,28,44],[26,47,28,45],[26,50,28,48],[26,61,28,59],[27,8,29,6,"rnds"],[27,12,29,10],[27,13,29,11,"i"],[27,14,29,12],[27,15,29,13],[27,18,29,16,"r"],[27,19,29,17],[27,25,29,23],[27,26,29,24,"i"],[27,27,29,25],[27,30,29,28],[27,34,29,32],[27,39,29,37],[27,40,29,38],[27,41,29,39],[27,44,29,42],[27,48,29,46],[28,6,30,4],[29,6,32,4],[29,13,32,11,"rnds"],[29,17,32,15],[30,4,33,2],[30,5,33,3],[31,2,34,0],[32,0,34,1]],"functionMap":{"names":["<global>","whatwgRNG","mathRNG"],"mappings":"AAA;mBCc;GDG;mBEQ;GFO"}},"type":"js/module"}]}