{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":408,"column":0,"index":10132}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":408,"column":0,"index":10132}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"nanoid/non-secure","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"aLLVXWB8QP15fri3afEUab9H+Os="}},{"name":"./BaseRouter","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":45},"end":{"line":3,"column":38,"index":83}}],"key":"1AJ7xeIZIqyL6CYOeCndb3n2akI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TabActions = void 0;\n  exports.default = TabRouter;\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\");\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./BaseRouter\"));\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  var TYPE_ROUTE = 'route';\n  var TabActions = exports.TabActions = {\n    jumpTo: function jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    }\n  };\n  var getRouteHistory = function getRouteHistory(routes, index, backBehavior, initialRouteName) {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n        break;\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n        break;\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(function (route) {\n          return route.name === initialRouteName;\n        });\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n        break;\n      case 'history':\n        // The history will fill up on navigation\n        break;\n    }\n    return history;\n  };\n  var changeIndex = function changeIndex(state, index, backBehavior, initialRouteName) {\n    var history;\n    if (backBehavior === 'history') {\n      var currentKey = state.routes[index].key;\n      history = state.history.filter(function (it) {\n        return it.type === 'route' ? it.key !== currentKey : false;\n      }).concat({\n        type: TYPE_ROUTE,\n        key: currentKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: index,\n      history: history\n    });\n  };\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n      _ref$backBehavior = _ref.backBehavior,\n      backBehavior = _ref$backBehavior === void 0 ? 'firstRoute' : _ref$backBehavior;\n    var router = _objectSpread(_objectSpread({}, _BaseRouter.default), {}, {\n      type: 'tab',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(function (name) {\n          return {\n            name: name,\n            key: `${name}-${(0, _nonSecure.nanoid)()}`,\n            params: routeParamList[name]\n          };\n        });\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nonSecure.nanoid)()}`,\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var _state$routes, _state$index, _state$history$filter, _state$history;\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = routeNames.map(function (name) {\n          var route = state.routes.find(function (r) {\n            return r.name === name;\n          });\n          return _objectSpread(_objectSpread({}, route), {}, {\n            name: name,\n            key: route && route.name === name && route.key ? route.key : `${name}-${(0, _nonSecure.nanoid)()}`,\n            params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), route ? route.params : undefined) : route ? route.params : undefined\n          });\n        });\n        var index = Math.min(Math.max(routeNames.indexOf((_state$routes = state.routes[(_state$index = state == null ? void 0 : state.index) != null ? _state$index : 0]) == null ? void 0 : _state$routes.name), 0), routes.length - 1);\n        var history = (_state$history$filter = (_state$history = state.history) == null ? void 0 : _state$history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        })) != null ? _state$history$filter : [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nonSecure.nanoid)()}`,\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n          routeParamList = _ref4.routeParamList,\n          routeKeyChanges = _ref4.routeKeyChanges;\n        var routes = routeNames.map(function (name) {\n          return state.routes.find(function (r) {\n            return r.name === name && !routeKeyChanges.includes(r.name);\n          }) || {\n            name: name,\n            key: `${name}-${(0, _nonSecure.nanoid)()}`,\n            params: routeParamList[name]\n          };\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        function (it) {\n          return it.type !== 'route' || routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n        return _objectSpread(_objectSpread({}, state), {}, {\n          history: history,\n          routeNames: routeNames,\n          routes: routes,\n          index: index\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction: function getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList,\n          routeGetIdList = _ref5.routeGetIdList;\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n            {\n              var index = -1;\n              if (action.type === 'NAVIGATE' && action.payload.key) {\n                index = state.routes.findIndex(function (route) {\n                  return route.key === action.payload.key;\n                });\n              } else {\n                index = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name;\n                });\n              }\n              if (index === -1) {\n                return null;\n              }\n              return changeIndex(_objectSpread(_objectSpread({}, state), {}, {\n                routes: state.routes.map(function (route, i) {\n                  if (i !== index) {\n                    return route;\n                  }\n                  var getId = routeGetIdList[route.name];\n                  var currentId = getId == null ? void 0 : getId({\n                    params: route.params\n                  });\n                  var nextId = getId == null ? void 0 : getId({\n                    params: action.payload.params\n                  });\n                  var key = currentId === nextId ? route.key : `${route.name}-${(0, _nonSecure.nanoid)()}`;\n                  var params;\n                  if (action.type === 'NAVIGATE' && action.payload.merge && currentId === nextId) {\n                    params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread(_objectSpread({}, routeParamList[route.name]), route.params), action.payload.params) : route.params;\n                  } else {\n                    params = routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), action.payload.params) : action.payload.params;\n                  }\n                  var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                  return params !== route.params || path !== route.path ? _objectSpread(_objectSpread({}, route), {}, {\n                    key: key,\n                    path: path,\n                    params: params\n                  }) : route;\n                })\n              }), index, backBehavior, initialRouteName);\n            }\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n              var previousKey = state.history[state.history.length - 2].key;\n              var _index = state.routes.findIndex(function (route) {\n                return route.key === previousKey;\n              });\n              if (_index === -1) {\n                return null;\n              }\n              return _objectSpread(_objectSpread({}, state), {}, {\n                history: state.history.slice(0, -1),\n                index: _index\n              });\n            }\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n        return action.type === 'NAVIGATE';\n      },\n      actionCreators: TabActions\n    });\n    return router;\n  }\n});","lineCount":262,"map":[[9,2,1,0],[9,6,1,0,"_nonSecure"],[9,16,1,0],[9,19,1,0,"_$$_REQUIRE"],[9,30,1,0],[9,31,1,0,"_dependencyMap"],[9,45,1,0],[10,2,3,0],[10,6,3,0,"_BaseRouter"],[10,17,3,0],[10,20,3,0,"_interopRequireDefault"],[10,42,3,0],[10,43,3,0,"_$$_REQUIRE"],[10,54,3,0],[10,55,3,0,"_dependencyMap"],[10,69,3,0],[11,2,3,38],[11,11,3,38,"ownKeys"],[11,19,3,38,"e"],[11,20,3,38],[11,22,3,38,"r"],[11,23,3,38],[11,31,3,38,"t"],[11,32,3,38],[11,35,3,38,"Object"],[11,41,3,38],[11,42,3,38,"keys"],[11,46,3,38],[11,47,3,38,"e"],[11,48,3,38],[11,55,3,38,"Object"],[11,61,3,38],[11,62,3,38,"getOwnPropertySymbols"],[11,83,3,38],[11,91,3,38,"o"],[11,92,3,38],[11,95,3,38,"Object"],[11,101,3,38],[11,102,3,38,"getOwnPropertySymbols"],[11,123,3,38],[11,124,3,38,"e"],[11,125,3,38],[11,128,3,38,"r"],[11,129,3,38],[11,134,3,38,"o"],[11,135,3,38],[11,138,3,38,"o"],[11,139,3,38],[11,140,3,38,"filter"],[11,146,3,38],[11,157,3,38,"r"],[11,158,3,38],[11,169,3,38,"Object"],[11,175,3,38],[11,176,3,38,"getOwnPropertyDescriptor"],[11,200,3,38],[11,201,3,38,"e"],[11,202,3,38],[11,204,3,38,"r"],[11,205,3,38],[11,207,3,38,"enumerable"],[11,217,3,38],[11,224,3,38,"t"],[11,225,3,38],[11,226,3,38,"push"],[11,230,3,38],[11,231,3,38,"apply"],[11,236,3,38],[11,237,3,38,"t"],[11,238,3,38],[11,240,3,38,"o"],[11,241,3,38],[11,253,3,38,"t"],[11,254,3,38],[12,2,3,38],[12,11,3,38,"_objectSpread"],[12,25,3,38,"e"],[12,26,3,38],[12,39,3,38,"r"],[12,40,3,38],[12,46,3,38,"r"],[12,47,3,38],[12,50,3,38,"arguments"],[12,59,3,38],[12,60,3,38,"length"],[12,66,3,38],[12,68,3,38,"r"],[12,69,3,38],[12,79,3,38,"t"],[12,80,3,38],[12,91,3,38,"arguments"],[12,100,3,38],[12,101,3,38,"r"],[12,102,3,38],[12,106,3,38,"arguments"],[12,115,3,38],[12,116,3,38,"r"],[12,117,3,38],[12,125,3,38,"r"],[12,126,3,38],[12,133,3,38,"ownKeys"],[12,140,3,38],[12,141,3,38,"Object"],[12,147,3,38],[12,148,3,38,"t"],[12,149,3,38],[12,156,3,38,"forEach"],[12,163,3,38],[12,174,3,38,"r"],[12,175,3,38],[12,183,3,38,"_defineProperty2"],[12,199,3,38],[12,200,3,38,"default"],[12,207,3,38],[12,209,3,38,"e"],[12,210,3,38],[12,212,3,38,"r"],[12,213,3,38],[12,215,3,38,"t"],[12,216,3,38],[12,217,3,38,"r"],[12,218,3,38],[12,227,3,38,"Object"],[12,233,3,38],[12,234,3,38,"getOwnPropertyDescriptors"],[12,259,3,38],[12,262,3,38,"Object"],[12,268,3,38],[12,269,3,38,"defineProperties"],[12,285,3,38],[12,286,3,38,"e"],[12,287,3,38],[12,289,3,38,"Object"],[12,295,3,38],[12,296,3,38,"getOwnPropertyDescriptors"],[12,321,3,38],[12,322,3,38,"t"],[12,323,3,38],[12,328,3,38,"ownKeys"],[12,335,3,38],[12,336,3,38,"Object"],[12,342,3,38],[12,343,3,38,"t"],[12,344,3,38],[12,347,3,38,"forEach"],[12,354,3,38],[12,365,3,38,"r"],[12,366,3,38],[12,370,3,38,"Object"],[12,376,3,38],[12,377,3,38,"defineProperty"],[12,391,3,38],[12,392,3,38,"e"],[12,393,3,38],[12,395,3,38,"r"],[12,396,3,38],[12,398,3,38,"Object"],[12,404,3,38],[12,405,3,38,"getOwnPropertyDescriptor"],[12,429,3,38],[12,430,3,38,"t"],[12,431,3,38],[12,433,3,38,"r"],[12,434,3,38],[12,451,3,38,"e"],[12,452,3,38],[13,2,60,0],[13,6,60,6,"TYPE_ROUTE"],[13,16,60,16],[13,19,60,19],[13,26,60,35],[14,2,62,7],[14,6,62,13,"TabActions"],[14,16,62,23],[14,19,62,23,"exports"],[14,26,62,23],[14,27,62,23,"TabActions"],[14,37,62,23],[14,40,62,26],[15,4,63,2,"jumpTo"],[15,10,63,8],[15,21,63,8,"jumpTo"],[15,28,63,9,"name"],[15,32,63,21],[15,34,63,23,"params"],[15,40,63,38],[15,42,63,55],[16,6,64,4],[16,13,64,11],[17,8,64,13,"type"],[17,12,64,17],[17,14,64,19],[17,23,64,28],[18,8,64,30,"payload"],[18,15,64,37],[18,17,64,39],[19,10,64,41,"name"],[19,14,64,45],[19,16,64,41,"name"],[19,20,64,45],[20,10,64,47,"params"],[20,16,64,53],[20,18,64,47,"params"],[21,8,64,54],[22,6,64,56],[22,7,64,57],[23,4,65,2],[24,2,66,0],[24,3,66,1],[25,2,68,0],[25,6,68,6,"getRouteHistory"],[25,21,68,21],[25,24,68,24],[25,33,68,6,"getRouteHistory"],[25,48,68,21,"getRouteHistory"],[25,49,69,2,"routes"],[25,55,69,25],[25,57,70,2,"index"],[25,62,70,15],[25,64,71,2,"backBehavior"],[25,76,71,28],[25,78,72,2,"initialRouteName"],[25,94,72,38],[25,96,73,5],[26,4,74,2],[26,8,74,8,"history"],[26,15,74,15],[26,18,74,18],[26,19,74,19],[27,6,74,21,"type"],[27,10,74,25],[27,12,74,27,"TYPE_ROUTE"],[27,22,74,37],[28,6,74,39,"key"],[28,9,74,42],[28,11,74,44,"routes"],[28,17,74,50],[28,18,74,51,"index"],[28,23,74,56],[28,24,74,57],[28,25,74,58,"key"],[29,4,74,62],[29,5,74,63],[29,6,74,64],[30,4,75,2],[30,8,75,6,"initialRouteIndex"],[30,25,75,23],[31,4,77,2],[31,12,77,10,"backBehavior"],[31,24,77,22],[32,6,78,4],[32,11,78,9],[32,18,78,16],[33,8,79,6],[33,13,79,11],[33,17,79,15,"i"],[33,18,79,16],[33,21,79,19,"index"],[33,26,79,24],[33,28,79,26,"i"],[33,29,79,27],[33,32,79,30],[33,33,79,31],[33,35,79,33,"i"],[33,36,79,34],[33,38,79,36],[33,40,79,38],[34,10,80,8,"history"],[34,17,80,15],[34,18,80,16,"unshift"],[34,25,80,23],[34,26,80,24],[35,12,80,26,"type"],[35,16,80,30],[35,18,80,32,"TYPE_ROUTE"],[35,28,80,42],[36,12,80,44,"key"],[36,15,80,47],[36,17,80,49,"routes"],[36,23,80,55],[36,24,80,56,"i"],[36,25,80,57],[36,28,80,60],[36,29,80,61],[36,30,80,62],[36,31,80,63,"key"],[37,10,80,67],[37,11,80,68],[37,12,80,69],[38,8,81,6],[39,8,82,6],[40,6,83,4],[40,11,83,9],[40,23,83,21],[41,8,84,6],[41,12,84,10,"index"],[41,17,84,15],[41,22,84,20],[41,23,84,21],[41,25,84,23],[42,10,85,8,"history"],[42,17,85,15],[42,18,85,16,"unshift"],[42,25,85,23],[42,26,85,24],[43,12,86,10,"type"],[43,16,86,14],[43,18,86,16,"TYPE_ROUTE"],[43,28,86,26],[44,12,87,10,"key"],[44,15,87,13],[44,17,87,15,"routes"],[44,23,87,21],[44,24,87,22],[44,25,87,23],[44,26,87,24],[44,27,87,25,"key"],[45,10,88,8],[45,11,88,9],[45,12,88,10],[46,8,89,6],[47,8,90,6],[48,6,91,4],[48,11,91,9],[48,25,91,23],[49,8,92,6,"initialRouteIndex"],[49,25,92,23],[49,28,92,26,"routes"],[49,34,92,32],[49,35,92,33,"findIndex"],[49,44,92,42],[49,45,93,8],[49,55,93,9,"route"],[49,60,93,14],[50,10,93,14],[50,17,93,19,"route"],[50,22,93,24],[50,23,93,25,"name"],[50,27,93,29],[50,32,93,34,"initialRouteName"],[50,48,93,50],[51,8,93,50],[51,9,94,6],[51,10,94,7],[52,8,95,6,"initialRouteIndex"],[52,25,95,23],[52,28,95,26,"initialRouteIndex"],[52,45,95,43],[52,50,95,48],[52,51,95,49],[52,52,95,50],[52,55,95,53],[52,56,95,54],[52,59,95,57,"initialRouteIndex"],[52,76,95,74],[53,8,97,6],[53,12,97,10,"index"],[53,17,97,15],[53,22,97,20,"initialRouteIndex"],[53,39,97,37],[53,41,97,39],[54,10,98,8,"history"],[54,17,98,15],[54,18,98,16,"unshift"],[54,25,98,23],[54,26,98,24],[55,12,99,10,"type"],[55,16,99,14],[55,18,99,16,"TYPE_ROUTE"],[55,28,99,26],[56,12,100,10,"key"],[56,15,100,13],[56,17,100,15,"routes"],[56,23,100,21],[56,24,100,22,"initialRouteIndex"],[56,41,100,39],[56,42,100,40],[56,43,100,41,"key"],[57,10,101,8],[57,11,101,9],[57,12,101,10],[58,8,102,6],[59,8,103,6],[60,6,104,4],[60,11,104,9],[60,20,104,18],[61,8,105,6],[62,8,106,6],[63,4,107,2],[64,4,109,2],[64,11,109,9,"history"],[64,18,109,16],[65,2,110,0],[65,3,110,1],[66,2,112,0],[66,6,112,6,"changeIndex"],[66,17,112,17],[66,20,112,20],[66,29,112,6,"changeIndex"],[66,40,112,17,"changeIndex"],[66,41,113,2,"state"],[66,46,113,42],[66,48,114,2,"index"],[66,53,114,15],[66,55,115,2,"backBehavior"],[66,67,115,28],[66,69,116,2,"initialRouteName"],[66,85,116,38],[66,87,117,5],[67,4,118,2],[67,8,118,6,"history"],[67,15,118,13],[68,4,120,2],[68,8,120,6,"backBehavior"],[68,20,120,18],[68,25,120,23],[68,34,120,32],[68,36,120,34],[69,6,121,4],[69,10,121,10,"currentKey"],[69,20,121,20],[69,23,121,23,"state"],[69,28,121,28],[69,29,121,29,"routes"],[69,35,121,35],[69,36,121,36,"index"],[69,41,121,41],[69,42,121,42],[69,43,121,43,"key"],[69,46,121,46],[70,6,123,4,"history"],[70,13,123,11],[70,16,123,14,"state"],[70,21,123,19],[70,22,123,20,"history"],[70,29,123,27],[70,30,124,7,"filter"],[70,36,124,13],[70,37,124,14],[70,47,124,15,"it"],[70,49,124,17],[71,8,124,17],[71,15,124,23,"it"],[71,17,124,25],[71,18,124,26,"type"],[71,22,124,30],[71,27,124,35],[71,34,124,42],[71,37,124,45,"it"],[71,39,124,47],[71,40,124,48,"key"],[71,43,124,51],[71,48,124,56,"currentKey"],[71,58,124,66],[71,61,124,69],[71,66,124,74],[72,6,124,74],[72,7,124,75],[72,8,124,76],[72,9,125,7,"concat"],[72,15,125,13],[72,16,125,14],[73,8,125,16,"type"],[73,12,125,20],[73,14,125,22,"TYPE_ROUTE"],[73,24,125,32],[74,8,125,34,"key"],[74,11,125,37],[74,13,125,39,"currentKey"],[75,6,125,50],[75,7,125,51],[75,8,125,52],[76,4,126,2],[76,5,126,3],[76,11,126,9],[77,6,127,4,"history"],[77,13,127,11],[77,16,127,14,"getRouteHistory"],[77,31,127,29],[77,32,128,6,"state"],[77,37,128,11],[77,38,128,12,"routes"],[77,44,128,18],[77,46,129,6,"index"],[77,51,129,11],[77,53,130,6,"backBehavior"],[77,65,130,18],[77,67,131,6,"initialRouteName"],[77,83,132,4],[77,84,132,5],[78,4,133,2],[79,4,135,2],[79,11,135,2,"_objectSpread"],[79,24,135,2],[79,25,135,2,"_objectSpread"],[79,38,135,2],[79,43,136,7,"state"],[79,48,136,12],[80,6,137,4,"index"],[80,11,137,9],[80,13,137,4,"index"],[80,18,137,9],[81,6,138,4,"history"],[81,13,138,11],[81,15,138,4,"history"],[82,4,138,11],[83,2,140,0],[83,3,140,1],[84,2,142,15],[84,11,142,24,"TabRouter"],[84,20,142,33,"TabRouter"],[84,21,142,33,"_ref"],[84,25,142,33],[84,27,145,21],[85,4,145,21],[85,8,143,2,"initialRouteName"],[85,24,143,18],[85,27,143,18,"_ref"],[85,31,143,18],[85,32,143,2,"initialRouteName"],[85,48,143,18],[86,6,143,18,"_ref$backBehavior"],[86,23,143,18],[86,26,143,18,"_ref"],[86,30,143,18],[86,31,144,2,"backBehavior"],[86,43,144,14],[87,6,144,2,"backBehavior"],[87,18,144,14],[87,21,144,14,"_ref$backBehavior"],[87,38,144,14],[87,52,144,17],[87,64,144,29],[87,67,144,29,"_ref$backBehavior"],[87,84,144,29],[88,4,146,2],[88,8,146,8,"router"],[88,14,149,3],[88,17,149,3,"_objectSpread"],[88,30,149,3],[88,31,149,3,"_objectSpread"],[88,44,149,3],[88,49,150,7,"BaseRouter"],[88,68,150,17],[89,6,152,4,"type"],[89,10,152,8],[89,12,152,10],[89,17,152,15],[90,6,154,4,"getInitialState"],[90,21,154,19],[90,32,154,19,"getInitialState"],[90,48,154,19,"_ref2"],[90,53,154,19],[90,55,154,52],[91,8,154,52],[91,12,154,22,"routeNames"],[91,22,154,32],[91,25,154,32,"_ref2"],[91,30,154,32],[91,31,154,22,"routeNames"],[91,41,154,32],[92,10,154,34,"routeParamList"],[92,24,154,48],[92,27,154,48,"_ref2"],[92,32,154,48],[92,33,154,34,"routeParamList"],[92,47,154,48],[93,8,155,6],[93,12,155,12,"index"],[93,17,155,17],[93,20,156,8,"initialRouteName"],[93,36,156,24],[93,41,156,29,"undefined"],[93,50,156,38],[93,54,156,42,"routeNames"],[93,64,156,52],[93,65,156,53,"includes"],[93,73,156,61],[93,74,156,62,"initialRouteName"],[93,90,156,78],[93,91,156,79],[93,94,157,12,"routeNames"],[93,104,157,22],[93,105,157,23,"indexOf"],[93,112,157,30],[93,113,157,31,"initialRouteName"],[93,129,157,47],[93,130,157,48],[93,133,158,12],[93,134,158,13],[94,8,160,6],[94,12,160,12,"routes"],[94,18,160,18],[94,21,160,21,"routeNames"],[94,31,160,31],[94,32,160,32,"map"],[94,35,160,35],[94,36,160,36],[94,46,160,37,"name"],[94,50,160,41],[95,10,160,41],[95,17,160,47],[96,12,161,8,"name"],[96,16,161,12],[96,18,161,8,"name"],[96,22,161,12],[97,12,162,8,"key"],[97,15,162,11],[97,17,162,14],[97,20,162,16,"name"],[97,24,162,21],[97,28,162,24],[97,32,162,24,"nanoid"],[97,49,162,30],[97,51,162,31],[97,52,162,33],[97,54,162,34],[98,12,163,8,"params"],[98,18,163,14],[98,20,163,16,"routeParamList"],[98,34,163,30],[98,35,163,31,"name"],[98,39,163,35],[99,10,164,6],[99,11,164,7],[100,8,164,7],[100,9,164,8],[100,10,164,9],[101,8,166,6],[101,12,166,12,"history"],[101,19,166,19],[101,22,166,22,"getRouteHistory"],[101,37,166,37],[101,38,167,8,"routes"],[101,44,167,14],[101,46,168,8,"index"],[101,51,168,13],[101,53,169,8,"backBehavior"],[101,65,169,20],[101,67,170,8,"initialRouteName"],[101,83,171,6],[101,84,171,7],[102,8,173,6],[102,15,173,13],[103,10,174,8,"stale"],[103,15,174,13],[103,17,174,15],[103,22,174,20],[104,10,175,8,"type"],[104,14,175,12],[104,16,175,14],[104,21,175,19],[105,10,176,8,"key"],[105,13,176,11],[105,15,176,14],[105,22,176,20],[105,26,176,20,"nanoid"],[105,43,176,26],[105,45,176,27],[105,46,176,29],[105,48,176,30],[106,10,177,8,"index"],[106,15,177,13],[106,17,177,8,"index"],[106,22,177,13],[107,10,178,8,"routeNames"],[107,20,178,18],[107,22,178,8,"routeNames"],[107,32,178,18],[108,10,179,8,"history"],[108,17,179,15],[108,19,179,8,"history"],[108,26,179,15],[109,10,180,8,"routes"],[109,16,180,14],[109,18,180,8,"routes"],[110,8,181,6],[110,9,181,7],[111,6,182,4],[111,7,182,5],[112,6,184,4,"getRehydratedState"],[112,24,184,22],[112,35,184,22,"getRehydratedState"],[112,54,184,23,"partialState"],[112,66,184,35],[112,68,184,35,"_ref3"],[112,73,184,35],[112,75,184,69],[113,8,184,69],[113,12,184,69,"_state$routes"],[113,25,184,69],[113,27,184,69,"_state$index"],[113,39,184,69],[113,41,184,69,"_state$history$filter"],[113,62,184,69],[113,64,184,69,"_state$history"],[113,78,184,69],[114,8,184,69],[114,12,184,39,"routeNames"],[114,22,184,49],[114,25,184,49,"_ref3"],[114,30,184,49],[114,31,184,39,"routeNames"],[114,41,184,49],[115,10,184,51,"routeParamList"],[115,24,184,65],[115,27,184,65,"_ref3"],[115,32,184,65],[115,33,184,51,"routeParamList"],[115,47,184,65],[116,8,185,6],[116,12,185,10,"state"],[116,17,185,15],[116,20,185,18,"partialState"],[116,32,185,30],[117,8,187,6],[117,12,187,10,"state"],[117,17,187,15],[117,18,187,16,"stale"],[117,23,187,21],[117,28,187,26],[117,33,187,31],[117,35,187,33],[118,10,188,8],[118,17,188,15,"state"],[118,22,188,20],[119,8,189,6],[120,8,191,6],[120,12,191,12,"routes"],[120,18,191,18],[120,21,191,21,"routeNames"],[120,31,191,31],[120,32,191,32,"map"],[120,35,191,35],[120,36,191,36],[120,46,191,37,"name"],[120,50,191,41],[120,52,191,46],[121,10,192,8],[121,14,192,14,"route"],[121,19,192,19],[121,22,193,10,"state"],[121,27,193,15],[121,28,194,10,"routes"],[121,34,194,16],[121,35,194,17,"find"],[121,39,194,21],[121,40,194,22],[121,50,194,23,"r"],[121,51,194,24],[122,12,194,24],[122,19,194,29,"r"],[122,20,194,30],[122,21,194,31,"name"],[122,25,194,35],[122,30,194,40,"name"],[122,34,194,44],[123,10,194,44],[123,12,194,45],[124,10,196,8],[124,17,196,8,"_objectSpread"],[124,30,196,8],[124,31,196,8,"_objectSpread"],[124,44,196,8],[124,49,197,13,"route"],[124,54,197,18],[125,12,198,10,"name"],[125,16,198,14],[125,18,198,10,"name"],[125,22,198,14],[126,12,199,10,"key"],[126,15,199,13],[126,17,200,12,"route"],[126,22,200,17],[126,26,200,21,"route"],[126,31,200,26],[126,32,200,27,"name"],[126,36,200,31],[126,41,200,36,"name"],[126,45,200,40],[126,49,200,44,"route"],[126,54,200,49],[126,55,200,50,"key"],[126,58,200,53],[126,61,201,16,"route"],[126,66,201,21],[126,67,201,22,"key"],[126,70,201,25],[126,73,202,17],[126,76,202,19,"name"],[126,80,202,24],[126,84,202,27],[126,88,202,27,"nanoid"],[126,105,202,33],[126,107,202,34],[126,108,202,36],[126,110,202,37],[127,12,203,10,"params"],[127,18,203,16],[127,20,204,12,"routeParamList"],[127,34,204,26],[127,35,204,27,"name"],[127,39,204,31],[127,40,204,32],[127,45,204,37,"undefined"],[127,54,204,46],[127,57,204,46,"_objectSpread"],[127,70,204,46],[127,71,204,46,"_objectSpread"],[127,84,204,46],[127,89,206,21,"routeParamList"],[127,103,206,35],[127,104,206,36,"name"],[127,108,206,40],[127,109,206,41],[127,112,207,22,"route"],[127,117,207,27],[127,120,207,30,"route"],[127,125,207,35],[127,126,207,36,"params"],[127,132,207,42],[127,135,207,45,"undefined"],[127,144,207,54],[127,148,209,16,"route"],[127,153,209,21],[127,156,210,16,"route"],[127,161,210,21],[127,162,210,22,"params"],[127,168,210,28],[127,171,211,16,"undefined"],[128,10,211,25],[129,8,213,6],[129,9,213,7],[129,10,213,8],[130,8,215,6],[130,12,215,12,"index"],[130,17,215,17],[130,20,215,20,"Math"],[130,24,215,24],[130,25,215,25,"min"],[130,28,215,28],[130,29,216,8,"Math"],[130,33,216,12],[130,34,216,13,"max"],[130,37,216,16],[130,38,216,17,"routeNames"],[130,48,216,27],[130,49,216,28,"indexOf"],[130,56,216,35],[130,58,216,35,"_state$routes"],[130,71,216,35],[130,74,216,36,"state"],[130,79,216,41],[130,80,216,42,"routes"],[130,86,216,48],[130,88,216,48,"_state$index"],[130,100,216,48],[130,103,216,49,"state"],[130,108,216,54],[130,128,216,49,"state"],[130,133,216,54],[130,134,216,56,"index"],[130,139,216,61],[130,151,216,61,"_state$index"],[130,163,216,61],[130,166,216,65],[130,167,216,66],[130,168,216,67],[130,189,216,36,"_state$routes"],[130,202,216,36],[130,203,216,69,"name"],[130,207,216,73],[130,208,216,74],[130,210,216,76],[130,211,216,77],[130,212,216,78],[130,214,217,8,"routes"],[130,220,217,14],[130,221,217,15,"length"],[130,227,217,21],[130,230,217,24],[130,231,218,6],[130,232,218,7],[131,8,220,6],[131,12,220,12,"history"],[131,19,220,19],[131,23,220,19,"_state$history$filter"],[131,44,220,19],[131,48,220,19,"_state$history"],[131,62,220,19],[131,65,221,8,"state"],[131,70,221,13],[131,71,221,14,"history"],[131,78,221,21],[131,99,221,8,"_state$history"],[131,113,221,8],[131,114,221,23,"filter"],[131,120,221,29],[131,121,221,30],[131,131,221,31,"it"],[131,133,221,33],[132,10,221,33],[132,17,221,38,"routes"],[132,23,221,44],[132,24,221,45,"find"],[132,28,221,49],[132,29,221,50],[132,39,221,51,"r"],[132,40,221,52],[133,12,221,52],[133,19,221,57,"r"],[133,20,221,58],[133,21,221,59,"key"],[133,24,221,62],[133,29,221,67,"it"],[133,31,221,69],[133,32,221,70,"key"],[133,35,221,73],[134,10,221,73],[134,12,221,74],[135,8,221,74],[135,10,221,75],[135,22,221,75,"_state$history$filter"],[135,43,221,75],[135,46,222,8],[135,48,222,10],[136,8,224,6],[136,15,224,13,"changeIndex"],[136,26,224,24],[136,27,225,8],[137,10,226,10,"stale"],[137,15,226,15],[137,17,226,17],[137,22,226,22],[138,10,227,10,"type"],[138,14,227,14],[138,16,227,16],[138,21,227,21],[139,10,228,10,"key"],[139,13,228,13],[139,15,228,16],[139,22,228,22],[139,26,228,22,"nanoid"],[139,43,228,28],[139,45,228,29],[139,46,228,31],[139,48,228,32],[140,10,229,10,"index"],[140,15,229,15],[140,17,229,10,"index"],[140,22,229,15],[141,10,230,10,"routeNames"],[141,20,230,20],[141,22,230,10,"routeNames"],[141,32,230,20],[142,10,231,10,"history"],[142,17,231,17],[142,19,231,10,"history"],[142,26,231,17],[143,10,232,10,"routes"],[143,16,232,16],[143,18,232,10,"routes"],[144,8,233,8],[144,9,233,9],[144,11,234,8,"index"],[144,16,234,13],[144,18,235,8,"backBehavior"],[144,30,235,20],[144,32,236,8,"initialRouteName"],[144,48,237,6],[144,49,237,7],[145,6,238,4],[145,7,238,5],[146,6,240,4,"getStateForRouteNamesChange"],[146,33,240,31],[146,44,240,31,"getStateForRouteNamesChange"],[146,72,241,6,"state"],[146,77,241,11],[146,79,241,11,"_ref4"],[146,84,241,11],[146,86,243,6],[147,8,243,6],[147,12,242,8,"routeNames"],[147,22,242,18],[147,25,242,18,"_ref4"],[147,30,242,18],[147,31,242,8,"routeNames"],[147,41,242,18],[148,10,242,20,"routeParamList"],[148,24,242,34],[148,27,242,34,"_ref4"],[148,32,242,34],[148,33,242,20,"routeParamList"],[148,47,242,34],[149,10,242,36,"routeKeyChanges"],[149,25,242,51],[149,28,242,51,"_ref4"],[149,33,242,51],[149,34,242,36,"routeKeyChanges"],[149,49,242,51],[150,8,244,6],[150,12,244,12,"routes"],[150,18,244,18],[150,21,244,21,"routeNames"],[150,31,244,31],[150,32,244,32,"map"],[150,35,244,35],[150,36,245,8],[150,46,245,9,"name"],[150,50,245,13],[151,10,245,13],[151,17,246,10,"state"],[151,22,246,15],[151,23,246,16,"routes"],[151,29,246,22],[151,30,246,23,"find"],[151,34,246,27],[151,35,247,12],[151,45,247,13,"r"],[151,46,247,14],[152,12,247,14],[152,19,247,19,"r"],[152,20,247,20],[152,21,247,21,"name"],[152,25,247,25],[152,30,247,30,"name"],[152,34,247,34],[152,38,247,38],[152,39,247,39,"routeKeyChanges"],[152,54,247,54],[152,55,247,55,"includes"],[152,63,247,63],[152,64,247,64,"r"],[152,65,247,65],[152,66,247,66,"name"],[152,70,247,70],[152,71,247,71],[153,10,247,71],[153,11,248,10],[153,12,248,11],[153,16,248,15],[154,12,249,12,"name"],[154,16,249,16],[154,18,249,12,"name"],[154,22,249,16],[155,12,250,12,"key"],[155,15,250,15],[155,17,250,18],[155,20,250,20,"name"],[155,24,250,25],[155,28,250,28],[155,32,250,28,"nanoid"],[155,49,250,34],[155,51,250,35],[155,52,250,37],[155,54,250,38],[156,12,251,12,"params"],[156,18,251,18],[156,20,251,20,"routeParamList"],[156,34,251,34],[156,35,251,35,"name"],[156,39,251,39],[157,10,252,10],[157,11,252,11],[158,8,252,11],[158,9,253,6],[158,10,253,7],[159,8,255,6],[159,12,255,12,"index"],[159,17,255,17],[159,20,255,20,"Math"],[159,24,255,24],[159,25,255,25,"max"],[159,28,255,28],[159,29,256,8],[159,30,256,9],[159,32,257,8,"routeNames"],[159,42,257,18],[159,43,257,19,"indexOf"],[159,50,257,26],[159,51,257,27,"state"],[159,56,257,32],[159,57,257,33,"routes"],[159,63,257,39],[159,64,257,40,"state"],[159,69,257,45],[159,70,257,46,"index"],[159,75,257,51],[159,76,257,52],[159,77,257,53,"name"],[159,81,257,57],[159,82,258,6],[159,83,258,7],[160,8,260,6],[160,12,260,10,"history"],[160,19,260,17],[160,22,260,20,"state"],[160,27,260,25],[160,28,260,26,"history"],[160,35,260,33],[160,36,260,34,"filter"],[160,42,260,40],[161,8,261,8],[162,8,262,8],[162,18,262,9,"it"],[162,20,262,11],[163,10,262,11],[163,17,262,16,"it"],[163,19,262,18],[163,20,262,19,"type"],[163,24,262,23],[163,29,262,28],[163,36,262,35],[163,40,262,39,"routes"],[163,46,262,45],[163,47,262,46,"find"],[163,51,262,50],[163,52,262,51],[163,62,262,52,"r"],[163,63,262,53],[164,12,262,53],[164,19,262,58,"r"],[164,20,262,59],[164,21,262,60,"key"],[164,24,262,63],[164,29,262,68,"it"],[164,31,262,70],[164,32,262,71,"key"],[164,35,262,74],[165,10,262,74],[165,12,262,75],[166,8,262,75],[166,9,263,6],[166,10,263,7],[167,8,265,6],[167,12,265,10],[167,13,265,11,"history"],[167,20,265,18],[167,21,265,19,"length"],[167,27,265,25],[167,29,265,27],[168,10,266,8,"history"],[168,17,266,15],[168,20,266,18,"getRouteHistory"],[168,35,266,33],[168,36,267,10,"routes"],[168,42,267,16],[168,44,268,10,"index"],[168,49,268,15],[168,51,269,10,"backBehavior"],[168,63,269,22],[168,65,270,10,"initialRouteName"],[168,81,271,8],[168,82,271,9],[169,8,272,6],[170,8,274,6],[170,15,274,6,"_objectSpread"],[170,28,274,6],[170,29,274,6,"_objectSpread"],[170,42,274,6],[170,47,275,11,"state"],[170,52,275,16],[171,10,276,8,"history"],[171,17,276,15],[171,19,276,8,"history"],[171,26,276,15],[172,10,277,8,"routeNames"],[172,20,277,18],[172,22,277,8,"routeNames"],[172,32,277,18],[173,10,278,8,"routes"],[173,16,278,14],[173,18,278,8,"routes"],[173,24,278,14],[174,10,279,8,"index"],[174,15,279,13],[174,17,279,8,"index"],[175,8,279,13],[176,6,281,4],[176,7,281,5],[177,6,283,4,"getStateForRouteFocus"],[177,27,283,25],[177,38,283,25,"getStateForRouteFocus"],[177,60,283,26,"state"],[177,65,283,31],[177,67,283,33,"key"],[177,70,283,36],[177,72,283,38],[178,8,284,6],[178,12,284,12,"index"],[178,17,284,17],[178,20,284,20,"state"],[178,25,284,25],[178,26,284,26,"routes"],[178,32,284,32],[178,33,284,33,"findIndex"],[178,42,284,42],[178,43,284,43],[178,53,284,44,"r"],[178,54,284,45],[179,10,284,45],[179,17,284,50,"r"],[179,18,284,51],[179,19,284,52,"key"],[179,22,284,55],[179,27,284,60,"key"],[179,30,284,63],[180,8,284,63],[180,10,284,64],[181,8,286,6],[181,12,286,10,"index"],[181,17,286,15],[181,22,286,20],[181,23,286,21],[181,24,286,22],[181,28,286,26,"index"],[181,33,286,31],[181,38,286,36,"state"],[181,43,286,41],[181,44,286,42,"index"],[181,49,286,47],[181,51,286,49],[182,10,287,8],[182,17,287,15,"state"],[182,22,287,20],[183,8,288,6],[184,8,290,6],[184,15,290,13,"changeIndex"],[184,26,290,24],[184,27,290,25,"state"],[184,32,290,30],[184,34,290,32,"index"],[184,39,290,37],[184,41,290,39,"backBehavior"],[184,53,290,51],[184,55,290,53,"initialRouteName"],[184,71,290,69],[184,72,290,70],[185,6,291,4],[185,7,291,5],[186,6,293,4,"getStateForAction"],[186,23,293,21],[186,34,293,21,"getStateForAction"],[186,52,293,22,"state"],[186,57,293,27],[186,59,293,29,"action"],[186,65,293,35],[186,67,293,35,"_ref5"],[186,72,293,35],[186,74,293,73],[187,8,293,73],[187,12,293,39,"routeParamList"],[187,26,293,53],[187,29,293,53,"_ref5"],[187,34,293,53],[187,35,293,39,"routeParamList"],[187,49,293,53],[188,10,293,55,"routeGetIdList"],[188,24,293,69],[188,27,293,69,"_ref5"],[188,32,293,69],[188,33,293,55,"routeGetIdList"],[188,47,293,69],[189,8,294,6],[189,16,294,14,"action"],[189,22,294,20],[189,23,294,21,"type"],[189,27,294,25],[190,10,295,8],[190,15,295,13],[190,24,295,22],[191,10,296,8],[191,15,296,13],[191,25,296,23],[192,12,296,25],[193,14,297,10],[193,18,297,14,"index"],[193,23,297,19],[193,26,297,22],[193,27,297,23],[193,28,297,24],[194,14,299,10],[194,18,299,14,"action"],[194,24,299,20],[194,25,299,21,"type"],[194,29,299,25],[194,34,299,30],[194,44,299,40],[194,48,299,44,"action"],[194,54,299,50],[194,55,299,51,"payload"],[194,62,299,58],[194,63,299,59,"key"],[194,66,299,62],[194,68,299,64],[195,16,300,12,"index"],[195,21,300,17],[195,24,300,20,"state"],[195,29,300,25],[195,30,300,26,"routes"],[195,36,300,32],[195,37,300,33,"findIndex"],[195,46,300,42],[195,47,301,14],[195,57,301,15,"route"],[195,62,301,20],[196,18,301,20],[196,25,301,25,"route"],[196,30,301,30],[196,31,301,31,"key"],[196,34,301,34],[196,39,301,39,"action"],[196,45,301,45],[196,46,301,46,"payload"],[196,53,301,53],[196,54,301,54,"key"],[196,57,301,57],[197,16,301,57],[197,17,302,12],[197,18,302,13],[198,14,303,10],[198,15,303,11],[198,21,303,17],[199,16,304,12,"index"],[199,21,304,17],[199,24,304,20,"state"],[199,29,304,25],[199,30,304,26,"routes"],[199,36,304,32],[199,37,304,33,"findIndex"],[199,46,304,42],[199,47,305,14],[199,57,305,15,"route"],[199,62,305,20],[200,18,305,20],[200,25,305,25,"route"],[200,30,305,30],[200,31,305,31,"name"],[200,35,305,35],[200,40,305,40,"action"],[200,46,305,46],[200,47,305,47,"payload"],[200,54,305,54],[200,55,305,55,"name"],[200,59,305,59],[201,16,305,59],[201,17,306,12],[201,18,306,13],[202,14,307,10],[203,14,309,10],[203,18,309,14,"index"],[203,23,309,19],[203,28,309,24],[203,29,309,25],[203,30,309,26],[203,32,309,28],[204,16,310,12],[204,23,310,19],[204,27,310,23],[205,14,311,10],[206,14,313,10],[206,21,313,17,"changeIndex"],[206,32,313,28],[206,33,313,28,"_objectSpread"],[206,46,313,28],[206,47,313,28,"_objectSpread"],[206,60,313,28],[206,65,315,17,"state"],[206,70,315,22],[207,16,316,14,"routes"],[207,22,316,20],[207,24,316,22,"state"],[207,29,316,27],[207,30,316,28,"routes"],[207,36,316,34],[207,37,316,35,"map"],[207,40,316,38],[207,41,316,39],[207,51,316,40,"route"],[207,56,316,45],[207,58,316,47,"i"],[207,59,316,48],[207,61,316,53],[208,18,317,16],[208,22,317,20,"i"],[208,23,317,21],[208,28,317,26,"index"],[208,33,317,31],[208,35,317,33],[209,20,318,18],[209,27,318,25,"route"],[209,32,318,30],[210,18,319,16],[211,18,321,16],[211,22,321,22,"getId"],[211,27,321,27],[211,30,321,30,"routeGetIdList"],[211,44,321,44],[211,45,321,45,"route"],[211,50,321,50],[211,51,321,51,"name"],[211,55,321,55],[211,56,321,56],[212,18,323,16],[212,22,323,22,"currentId"],[212,31,323,31],[212,34,323,34,"getId"],[212,39,323,39],[212,59,323,34,"getId"],[212,64,323,39],[212,65,323,42],[213,20,323,44,"params"],[213,26,323,50],[213,28,323,52,"route"],[213,33,323,57],[213,34,323,58,"params"],[214,18,323,65],[214,19,323,66],[214,20,323,67],[215,18,324,16],[215,22,324,22,"nextId"],[215,28,324,28],[215,31,324,31,"getId"],[215,36,324,36],[215,56,324,31,"getId"],[215,61,324,36],[215,62,324,39],[216,20,324,41,"params"],[216,26,324,47],[216,28,324,49,"action"],[216,34,324,55],[216,35,324,56,"payload"],[216,42,324,63],[216,43,324,64,"params"],[217,18,324,71],[217,19,324,72],[217,20,324,73],[218,18,326,16],[218,22,326,22,"key"],[218,25,326,25],[218,28,327,18,"currentId"],[218,37,327,27],[218,42,327,32,"nextId"],[218,48,327,38],[218,51,328,22,"route"],[218,56,328,27],[218,57,328,28,"key"],[218,60,328,31],[218,63,329,23],[218,66,329,25,"route"],[218,71,329,30],[218,72,329,31,"name"],[218,76,329,36],[218,80,329,39],[218,84,329,39,"nanoid"],[218,101,329,45],[218,103,329,46],[218,104,329,48],[218,106,329,49],[219,18,331,16],[219,22,331,20,"params"],[219,28,331,26],[220,18,333,16],[220,22,334,18,"action"],[220,28,334,24],[220,29,334,25,"type"],[220,33,334,29],[220,38,334,34],[220,48,334,44],[220,52,335,18,"action"],[220,58,335,24],[220,59,335,25,"payload"],[220,66,335,32],[220,67,335,33,"merge"],[220,72,335,38],[220,76,336,18,"currentId"],[220,85,336,27],[220,90,336,32,"nextId"],[220,96,336,38],[220,98,337,18],[221,20,338,18,"params"],[221,26,338,24],[221,29,339,20,"action"],[221,35,339,26],[221,36,339,27,"payload"],[221,43,339,34],[221,44,339,35,"params"],[221,50,339,41],[221,55,339,46,"undefined"],[221,64,339,55],[221,68,340,20,"routeParamList"],[221,82,340,34],[221,83,340,35,"route"],[221,88,340,40],[221,89,340,41,"name"],[221,93,340,45],[221,94,340,46],[221,99,340,51,"undefined"],[221,108,340,60],[221,111,340,60,"_objectSpread"],[221,124,340,60],[221,125,340,60,"_objectSpread"],[221,138,340,60],[221,139,340,60,"_objectSpread"],[221,152,340,60],[221,157,342,29,"routeParamList"],[221,171,342,43],[221,172,342,44,"route"],[221,177,342,49],[221,178,342,50,"name"],[221,182,342,54],[221,183,342,55],[221,186,343,29,"route"],[221,191,343,34],[221,192,343,35,"params"],[221,198,343,41],[221,201,344,29,"action"],[221,207,344,35],[221,208,344,36,"payload"],[221,215,344,43],[221,216,344,44,"params"],[221,222,344,50],[221,226,346,24,"route"],[221,231,346,29],[221,232,346,30,"params"],[221,238,346,36],[222,18,347,16],[222,19,347,17],[222,25,347,23],[223,20,348,18,"params"],[223,26,348,24],[223,29,349,20,"routeParamList"],[223,43,349,34],[223,44,349,35,"route"],[223,49,349,40],[223,50,349,41,"name"],[223,54,349,45],[223,55,349,46],[223,60,349,51,"undefined"],[223,69,349,60],[223,72,349,60,"_objectSpread"],[223,85,349,60],[223,86,349,60,"_objectSpread"],[223,99,349,60],[223,104,351,29,"routeParamList"],[223,118,351,43],[223,119,351,44,"route"],[223,124,351,49],[223,125,351,50,"name"],[223,129,351,54],[223,130,351,55],[223,133,352,29,"action"],[223,139,352,35],[223,140,352,36,"payload"],[223,147,352,43],[223,148,352,44,"params"],[223,154,352,50],[223,158,354,24,"action"],[223,164,354,30],[223,165,354,31,"payload"],[223,172,354,38],[223,173,354,39,"params"],[223,179,354,45],[224,18,355,16],[225,18,357,16],[225,22,357,22,"path"],[225,26,357,26],[225,29,358,18,"action"],[225,35,358,24],[225,36,358,25,"type"],[225,40,358,29],[225,45,358,34],[225,55,358,44],[225,59,358,48,"action"],[225,65,358,54],[225,66,358,55,"payload"],[225,73,358,62],[225,74,358,63,"path"],[225,78,358,67],[225,82,358,71],[225,86,358,75],[225,89,359,22,"action"],[225,95,359,28],[225,96,359,29,"payload"],[225,103,359,36],[225,104,359,37,"path"],[225,108,359,41],[225,111,360,22,"route"],[225,116,360,27],[225,117,360,28,"path"],[225,121,360,32],[226,18,362,16],[226,25,362,23,"params"],[226,31,362,29],[226,36,362,34,"route"],[226,41,362,39],[226,42,362,40,"params"],[226,48,362,46],[226,52,362,50,"path"],[226,56,362,54],[226,61,362,59,"route"],[226,66,362,64],[226,67,362,65,"path"],[226,71,362,69],[226,74,362,69,"_objectSpread"],[226,87,362,69],[226,88,362,69,"_objectSpread"],[226,101,362,69],[226,106,363,25,"route"],[226,111,363,30],[227,20,363,32,"key"],[227,23,363,35],[227,25,363,32,"key"],[227,28,363,35],[228,20,363,37,"path"],[228,24,363,41],[228,26,363,37,"path"],[228,30,363,41],[229,20,363,43,"params"],[229,26,363,49],[229,28,363,43,"params"],[230,18,363,49],[230,23,364,20,"route"],[230,28,364,25],[231,16,365,14],[231,17,365,15],[232,14,365,16],[232,18,367,12,"index"],[232,23,367,17],[232,25,368,12,"backBehavior"],[232,37,368,24],[232,39,369,12,"initialRouteName"],[232,55,370,10],[232,56,370,11],[233,12,371,8],[234,10,373,8],[234,15,373,13],[234,24,373,22],[235,12,373,24],[236,14,374,10],[236,18,374,14,"state"],[236,23,374,19],[236,24,374,20,"history"],[236,31,374,27],[236,32,374,28,"length"],[236,38,374,34],[236,43,374,39],[236,44,374,40],[236,46,374,42],[237,16,375,12],[237,23,375,19],[237,27,375,23],[238,14,376,10],[239,14,378,10],[239,18,378,16,"previousKey"],[239,29,378,27],[239,32,378,30,"state"],[239,37,378,35],[239,38,378,36,"history"],[239,45,378,43],[239,46,378,44,"state"],[239,51,378,49],[239,52,378,50,"history"],[239,59,378,57],[239,60,378,58,"length"],[239,66,378,64],[239,69,378,67],[239,70,378,68],[239,71,378,69],[239,72,378,70,"key"],[239,75,378,73],[240,14,379,10],[240,18,379,16,"index"],[240,24,379,21],[240,27,379,24,"state"],[240,32,379,29],[240,33,379,30,"routes"],[240,39,379,36],[240,40,379,37,"findIndex"],[240,49,379,46],[240,50,380,12],[240,60,380,13,"route"],[240,65,380,18],[241,16,380,18],[241,23,380,23,"route"],[241,28,380,28],[241,29,380,29,"key"],[241,32,380,32],[241,37,380,37,"previousKey"],[241,48,380,48],[242,14,380,48],[242,15,381,10],[242,16,381,11],[243,14,383,10],[243,18,383,14,"index"],[243,24,383,19],[243,29,383,24],[243,30,383,25],[243,31,383,26],[243,33,383,28],[244,16,384,12],[244,23,384,19],[244,27,384,23],[245,14,385,10],[246,14,387,10],[246,21,387,10,"_objectSpread"],[246,34,387,10],[246,35,387,10,"_objectSpread"],[246,48,387,10],[246,53,388,15,"state"],[246,58,388,20],[247,16,389,12,"history"],[247,23,389,19],[247,25,389,21,"state"],[247,30,389,26],[247,31,389,27,"history"],[247,38,389,34],[247,39,389,35,"slice"],[247,44,389,40],[247,45,389,41],[247,46,389,42],[247,48,389,44],[247,49,389,45],[247,50,389,46],[247,51,389,47],[248,16,390,12,"index"],[248,21,390,17],[248,23,390,12,"index"],[249,14,390,17],[250,12,392,8],[251,10,394,8],[252,12,395,10],[252,19,395,17,"BaseRouter"],[252,38,395,27],[252,39,395,28,"getStateForAction"],[252,56,395,45],[252,57,395,46,"state"],[252,62,395,51],[252,64,395,53,"action"],[252,70,395,59],[252,71,395,60],[253,8,396,6],[254,6,397,4],[254,7,397,5],[255,6,399,4,"shouldActionChangeFocus"],[255,29,399,27],[255,40,399,27,"shouldActionChangeFocus"],[255,64,399,28,"action"],[255,70,399,34],[255,72,399,36],[256,8,400,6],[256,15,400,13,"action"],[256,21,400,19],[256,22,400,20,"type"],[256,26,400,24],[256,31,400,29],[256,41,400,39],[257,6,401,4],[257,7,401,5],[258,6,403,4,"actionCreators"],[258,20,403,18],[258,22,403,20,"TabActions"],[259,4,403,30],[259,6,404,3],[260,4,406,2],[260,11,406,9,"router"],[260,17,406,15],[261,2,407,0],[262,0,407,1]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","state.history.filter$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","routes.find$argument_0","router.getStateForRouteNamesChange","state.routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","router.shouldActionChangeFocus"],"mappings":"AAA;EC8D;GDE;wBEG;QCyB,0CD;CFiB;oBIE;cCY,6DD;CJgB;eME;ICY;oCCM;QDI;KDkB;IGE;oCDO;sBEG,sBF;OCmB;8BJQ,oBK,uBL,CI;KHiB;IKE;QHK;YIE,2DJ;WGK;QNU,2CK,uBL,CM;KLmB;IOE;2CCC,oBD;KPO;ISE;cDQ,2CC;cDI,6CC;uCCW;eDiD;YDe,oCC;KTiB;IWE;KXE;CNM"}},"type":"js/module"}]}