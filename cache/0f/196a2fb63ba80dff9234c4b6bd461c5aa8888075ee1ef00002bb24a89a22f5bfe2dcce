{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":496,"column":0,"index":13848}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":496,"column":0,"index":13848}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":496,"column":0,"index":13848}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"nanoid/non-secure","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"aLLVXWB8QP15fri3afEUab9H+Os="}},{"name":"./BaseRouter","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":45},"end":{"line":3,"column":38,"index":83}}],"key":"1AJ7xeIZIqyL6CYOeCndb3n2akI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StackActions = void 0;\n  exports.default = StackRouter;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\");\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./BaseRouter\"));\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  var StackActions = exports.StackActions = {\n    replace: function replace(name, params) {\n      return {\n        type: 'REPLACE',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    push: function push(name, params) {\n      return {\n        type: 'PUSH',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    pop: function pop() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return {\n        type: 'POP',\n        payload: {\n          count: count\n        }\n      };\n    },\n    popToTop: function popToTop() {\n      return {\n        type: 'POP_TO_TOP'\n      };\n    }\n  };\n  function StackRouter(options) {\n    var router = _objectSpread(_objectSpread({}, _BaseRouter.default), {}, {\n      type: 'stack',\n      getInitialState: function getInitialState(_ref) {\n        var routeNames = _ref.routeNames,\n          routeParamList = _ref.routeParamList;\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        return {\n          stale: false,\n          type: 'stack',\n          key: `stack-${(0, _nonSecure.nanoid)()}`,\n          index: 0,\n          routeNames: routeNames,\n          routes: [{\n            key: `${initialRouteName}-${(0, _nonSecure.nanoid)()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          }]\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        }).map(function (route) {\n          return _objectSpread(_objectSpread({}, route), {}, {\n            key: route.key || `${route.name}-${(0, _nonSecure.nanoid)()}`,\n            params: routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), route.params) : route.params\n          });\n        });\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: `${initialRouteName}-${(0, _nonSecure.nanoid)()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n        return {\n          stale: false,\n          type: 'stack',\n          key: `stack-${(0, _nonSecure.nanoid)()}`,\n          index: routes.length - 1,\n          routeNames: routeNames,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList,\n          routeKeyChanges = _ref3.routeKeyChanges;\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name) && !routeKeyChanges.includes(route.name);\n        });\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: `${initialRouteName}-${(0, _nonSecure.nanoid)()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n        return _objectSpread(_objectSpread({}, state), {}, {\n          routeNames: routeNames,\n          routes: routes,\n          index: Math.min(state.index, routes.length - 1)\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return _objectSpread(_objectSpread({}, state), {}, {\n          index: index,\n          routes: state.routes.slice(0, index + 1)\n        });\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        var routeParamList = options.routeParamList;\n        switch (action.type) {\n          case 'REPLACE':\n            {\n              var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n              if (index === -1) {\n                return null;\n              }\n              var _action$payload = action.payload,\n                name = _action$payload.name,\n                key = _action$payload.key,\n                _params = _action$payload.params;\n              if (!state.routeNames.includes(name)) {\n                return null;\n              }\n              return _objectSpread(_objectSpread({}, state), {}, {\n                routes: state.routes.map(function (route, i) {\n                  return i === index ? {\n                    key: key !== undefined ? key : `${name}-${(0, _nonSecure.nanoid)()}`,\n                    name: name,\n                    params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), _params) : _params\n                  } : route;\n                })\n              });\n            }\n          case 'PUSH':\n            if (state.routeNames.includes(action.payload.name)) {\n              var getId = options.routeGetIdList[action.payload.name];\n              var id = getId == null ? void 0 : getId({\n                params: action.payload.params\n              });\n              var route = id ? state.routes.find(function (route) {\n                return route.name === action.payload.name && id === (getId == null ? void 0 : getId({\n                  params: route.params\n                }));\n              }) : undefined;\n              var routes;\n              if (route) {\n                routes = state.routes.filter(function (r) {\n                  return r.key !== route.key;\n                });\n                routes.push(_objectSpread(_objectSpread({}, route), {}, {\n                  params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n                }));\n              } else {\n                routes = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: `${action.payload.name}-${(0, _nonSecure.nanoid)()}`,\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n                }]);\n              }\n              return _objectSpread(_objectSpread({}, state), {}, {\n                index: routes.length - 1,\n                routes: routes\n              });\n            }\n            return null;\n          case 'POP':\n            {\n              var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n              if (_index > 0) {\n                var _count = Math.max(_index - action.payload.count + 1, 1);\n                var _routes = state.routes.slice(0, _count).concat(state.routes.slice(_index + 1));\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  index: _routes.length - 1,\n                  routes: _routes\n                });\n              }\n              return null;\n            }\n          case 'POP_TO_TOP':\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: state.routes.length - 1\n              }\n            }, options);\n          case 'NAVIGATE':\n            if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n              return null;\n            }\n            if (action.payload.key || action.payload.name) {\n              var _action$payload$path;\n              // If the route already exists, navigate to that\n              var _index2 = -1;\n              var _getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n              var _id = _getId == null ? void 0 : _getId({\n                params: action.payload.params\n              });\n              if (_id) {\n                _index2 = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name && _id === (_getId == null ? void 0 : _getId({\n                    params: route.params\n                  }));\n                });\n              } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n                _index2 = state.index;\n              } else {\n                for (var i = state.routes.length - 1; i >= 0; i--) {\n                  if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                    _index2 = i;\n                    break;\n                  }\n                }\n              }\n              if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n                return null;\n              }\n              if (_index2 === -1 && action.payload.name !== undefined) {\n                var _action$payload$key;\n                var _routes2 = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: (_action$payload$key = action.payload.key) != null ? _action$payload$key : `${action.payload.name}-${(0, _nonSecure.nanoid)()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n                }]);\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  routes: _routes2,\n                  index: _routes2.length - 1\n                });\n              }\n              var _route = state.routes[_index2];\n              var _params2;\n              if (action.payload.merge) {\n                _params2 = action.payload.params !== undefined || routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread(_objectSpread({}, routeParamList[_route.name]), _route.params), action.payload.params) : _route.params;\n              } else {\n                _params2 = routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[_route.name]), action.payload.params) : action.payload.params;\n              }\n              return _objectSpread(_objectSpread({}, state), {}, {\n                index: _index2,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [_params2 !== _route.params || action.payload.path && action.payload.path !== _route.path ? _objectSpread(_objectSpread({}, _route), {}, {\n                  path: (_action$payload$path = action.payload.path) != null ? _action$payload$path : _route.path,\n                  params: _params2\n                }) : state.routes[_index2]])\n              });\n            }\n            return null;\n          case 'GO_BACK':\n            if (state.index > 0) {\n              return router.getStateForAction(state, {\n                type: 'POP',\n                payload: {\n                  count: 1\n                },\n                target: action.target,\n                source: action.source\n              }, options);\n            }\n            return null;\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      actionCreators: StackActions\n    });\n    return router;\n  }\n});","lineCount":297,"map":[[10,2,1,0],[10,6,1,0,"_nonSecure"],[10,16,1,0],[10,19,1,0,"_$$_REQUIRE"],[10,30,1,0],[10,31,1,0,"_dependencyMap"],[10,45,1,0],[11,2,3,0],[11,6,3,0,"_BaseRouter"],[11,17,3,0],[11,20,3,0,"_interopRequireDefault"],[11,42,3,0],[11,43,3,0,"_$$_REQUIRE"],[11,54,3,0],[11,55,3,0,"_dependencyMap"],[11,69,3,0],[12,2,3,38],[12,11,3,38,"ownKeys"],[12,19,3,38,"e"],[12,20,3,38],[12,22,3,38,"r"],[12,23,3,38],[12,31,3,38,"t"],[12,32,3,38],[12,35,3,38,"Object"],[12,41,3,38],[12,42,3,38,"keys"],[12,46,3,38],[12,47,3,38,"e"],[12,48,3,38],[12,55,3,38,"Object"],[12,61,3,38],[12,62,3,38,"getOwnPropertySymbols"],[12,83,3,38],[12,91,3,38,"o"],[12,92,3,38],[12,95,3,38,"Object"],[12,101,3,38],[12,102,3,38,"getOwnPropertySymbols"],[12,123,3,38],[12,124,3,38,"e"],[12,125,3,38],[12,128,3,38,"r"],[12,129,3,38],[12,134,3,38,"o"],[12,135,3,38],[12,138,3,38,"o"],[12,139,3,38],[12,140,3,38,"filter"],[12,146,3,38],[12,157,3,38,"r"],[12,158,3,38],[12,169,3,38,"Object"],[12,175,3,38],[12,176,3,38,"getOwnPropertyDescriptor"],[12,200,3,38],[12,201,3,38,"e"],[12,202,3,38],[12,204,3,38,"r"],[12,205,3,38],[12,207,3,38,"enumerable"],[12,217,3,38],[12,224,3,38,"t"],[12,225,3,38],[12,226,3,38,"push"],[12,230,3,38],[12,231,3,38,"apply"],[12,236,3,38],[12,237,3,38,"t"],[12,238,3,38],[12,240,3,38,"o"],[12,241,3,38],[12,253,3,38,"t"],[12,254,3,38],[13,2,3,38],[13,11,3,38,"_objectSpread"],[13,25,3,38,"e"],[13,26,3,38],[13,39,3,38,"r"],[13,40,3,38],[13,46,3,38,"r"],[13,47,3,38],[13,50,3,38,"arguments"],[13,59,3,38],[13,60,3,38,"length"],[13,66,3,38],[13,68,3,38,"r"],[13,69,3,38],[13,79,3,38,"t"],[13,80,3,38],[13,91,3,38,"arguments"],[13,100,3,38],[13,101,3,38,"r"],[13,102,3,38],[13,106,3,38,"arguments"],[13,115,3,38],[13,116,3,38,"r"],[13,117,3,38],[13,125,3,38,"r"],[13,126,3,38],[13,133,3,38,"ownKeys"],[13,140,3,38],[13,141,3,38,"Object"],[13,147,3,38],[13,148,3,38,"t"],[13,149,3,38],[13,156,3,38,"forEach"],[13,163,3,38],[13,174,3,38,"r"],[13,175,3,38],[13,183,3,38,"_defineProperty2"],[13,199,3,38],[13,200,3,38,"default"],[13,207,3,38],[13,209,3,38,"e"],[13,210,3,38],[13,212,3,38,"r"],[13,213,3,38],[13,215,3,38,"t"],[13,216,3,38],[13,217,3,38,"r"],[13,218,3,38],[13,227,3,38,"Object"],[13,233,3,38],[13,234,3,38,"getOwnPropertyDescriptors"],[13,259,3,38],[13,262,3,38,"Object"],[13,268,3,38],[13,269,3,38,"defineProperties"],[13,285,3,38],[13,286,3,38,"e"],[13,287,3,38],[13,289,3,38,"Object"],[13,295,3,38],[13,296,3,38,"getOwnPropertyDescriptors"],[13,321,3,38],[13,322,3,38,"t"],[13,323,3,38],[13,328,3,38,"ownKeys"],[13,335,3,38],[13,336,3,38,"Object"],[13,342,3,38],[13,343,3,38,"t"],[13,344,3,38],[13,347,3,38,"forEach"],[13,354,3,38],[13,365,3,38,"r"],[13,366,3,38],[13,370,3,38,"Object"],[13,376,3,38],[13,377,3,38,"defineProperty"],[13,391,3,38],[13,392,3,38,"e"],[13,393,3,38],[13,395,3,38,"r"],[13,396,3,38],[13,398,3,38,"Object"],[13,404,3,38],[13,405,3,38,"getOwnPropertyDescriptor"],[13,429,3,38],[13,430,3,38,"t"],[13,431,3,38],[13,433,3,38,"r"],[13,434,3,38],[13,451,3,38,"e"],[13,452,3,38],[14,2,84,7],[14,6,84,13,"StackActions"],[14,18,84,25],[14,21,84,25,"exports"],[14,28,84,25],[14,29,84,25,"StackActions"],[14,41,84,25],[14,44,84,28],[15,4,85,2,"replace"],[15,11,85,9],[15,22,85,9,"replace"],[15,30,85,10,"name"],[15,34,85,22],[15,36,85,24,"params"],[15,42,85,39],[15,44,85,58],[16,6,86,4],[16,13,86,11],[17,8,86,13,"type"],[17,12,86,17],[17,14,86,19],[17,23,86,28],[18,8,86,30,"payload"],[18,15,86,37],[18,17,86,39],[19,10,86,41,"name"],[19,14,86,45],[19,16,86,41,"name"],[19,20,86,45],[20,10,86,47,"params"],[20,16,86,53],[20,18,86,47,"params"],[21,8,86,54],[22,6,86,56],[22,7,86,57],[23,4,87,2],[23,5,87,3],[24,4,88,2,"push"],[24,8,88,6],[24,19,88,6,"push"],[24,24,88,7,"name"],[24,28,88,19],[24,30,88,21,"params"],[24,36,88,36],[24,38,88,55],[25,6,89,4],[25,13,89,11],[26,8,89,13,"type"],[26,12,89,17],[26,14,89,19],[26,20,89,25],[27,8,89,27,"payload"],[27,15,89,34],[27,17,89,36],[28,10,89,38,"name"],[28,14,89,42],[28,16,89,38,"name"],[28,20,89,42],[29,10,89,44,"params"],[29,16,89,50],[29,18,89,44,"params"],[30,8,89,51],[31,6,89,53],[31,7,89,54],[32,4,90,2],[32,5,90,3],[33,4,91,2,"pop"],[33,7,91,5],[33,18,91,5,"pop"],[33,22,91,5],[33,24,91,42],[34,6,91,42],[34,10,91,6,"count"],[34,15,91,19],[34,18,91,19,"arguments"],[34,27,91,19],[34,28,91,19,"length"],[34,34,91,19],[34,42,91,19,"arguments"],[34,51,91,19],[34,59,91,19,"undefined"],[34,68,91,19],[34,71,91,19,"arguments"],[34,80,91,19],[34,86,91,22],[34,87,91,23],[35,6,92,4],[35,13,92,11],[36,8,92,13,"type"],[36,12,92,17],[36,14,92,19],[36,19,92,24],[37,8,92,26,"payload"],[37,15,92,33],[37,17,92,35],[38,10,92,37,"count"],[38,15,92,42],[38,17,92,37,"count"],[39,8,92,43],[40,6,92,45],[40,7,92,46],[41,4,93,2],[41,5,93,3],[42,4,94,2,"popToTop"],[42,12,94,10],[42,23,94,10,"popToTop"],[42,32,94,10],[42,34,94,30],[43,6,95,4],[43,13,95,11],[44,8,95,13,"type"],[44,12,95,17],[44,14,95,19],[45,6,95,32],[45,7,95,33],[46,4,96,2],[47,2,97,0],[47,3,97,1],[48,2,99,15],[48,11,99,24,"StackRouter"],[48,22,99,35,"StackRouter"],[48,23,99,36,"options"],[48,30,99,63],[48,32,99,65],[49,4,100,2],[49,8,100,8,"router"],[49,14,103,3],[49,17,103,3,"_objectSpread"],[49,30,103,3],[49,31,103,3,"_objectSpread"],[49,44,103,3],[49,49,104,7,"BaseRouter"],[49,68,104,17],[50,6,106,4,"type"],[50,10,106,8],[50,12,106,10],[50,19,106,17],[51,6,108,4,"getInitialState"],[51,21,108,19],[51,32,108,19,"getInitialState"],[51,48,108,19,"_ref"],[51,52,108,19],[51,54,108,52],[52,8,108,52],[52,12,108,22,"routeNames"],[52,22,108,32],[52,25,108,32,"_ref"],[52,29,108,32],[52,30,108,22,"routeNames"],[52,40,108,32],[53,10,108,34,"routeParamList"],[53,24,108,48],[53,27,108,48,"_ref"],[53,31,108,48],[53,32,108,34,"routeParamList"],[53,46,108,48],[54,8,109,6],[54,12,109,12,"initialRouteName"],[54,28,109,28],[54,31,110,8,"options"],[54,38,110,15],[54,39,110,16,"initialRouteName"],[54,55,110,32],[54,60,110,37,"undefined"],[54,69,110,46],[54,73,111,8,"routeNames"],[54,83,111,18],[54,84,111,19,"includes"],[54,92,111,27],[54,93,111,28,"options"],[54,100,111,35],[54,101,111,36,"initialRouteName"],[54,117,111,52],[54,118,111,53],[54,121,112,12,"options"],[54,128,112,19],[54,129,112,20,"initialRouteName"],[54,145,112,36],[54,148,113,12,"routeNames"],[54,158,113,22],[54,159,113,23],[54,160,113,24],[54,161,113,25],[55,8,115,6],[55,15,115,13],[56,10,116,8,"stale"],[56,15,116,13],[56,17,116,15],[56,22,116,20],[57,10,117,8,"type"],[57,14,117,12],[57,16,117,14],[57,23,117,21],[58,10,118,8,"key"],[58,13,118,11],[58,15,118,14],[58,24,118,22],[58,28,118,22,"nanoid"],[58,45,118,28],[58,47,118,29],[58,48,118,31],[58,50,118,32],[59,10,119,8,"index"],[59,15,119,13],[59,17,119,15],[59,18,119,16],[60,10,120,8,"routeNames"],[60,20,120,18],[60,22,120,8,"routeNames"],[60,32,120,18],[61,10,121,8,"routes"],[61,16,121,14],[61,18,121,16],[61,19,122,10],[62,12,123,12,"key"],[62,15,123,15],[62,17,123,18],[62,20,123,20,"initialRouteName"],[62,36,123,37],[62,40,123,40],[62,44,123,40,"nanoid"],[62,61,123,46],[62,63,123,47],[62,64,123,49],[62,66,123,50],[63,12,124,12,"name"],[63,16,124,16],[63,18,124,18,"initialRouteName"],[63,34,124,34],[64,12,125,12,"params"],[64,18,125,18],[64,20,125,20,"routeParamList"],[64,34,125,34],[64,35,125,35,"initialRouteName"],[64,51,125,51],[65,10,126,10],[65,11,126,11],[66,8,128,6],[66,9,128,7],[67,6,129,4],[67,7,129,5],[68,6,131,4,"getRehydratedState"],[68,24,131,22],[68,35,131,22,"getRehydratedState"],[68,54,131,23,"partialState"],[68,66,131,35],[68,68,131,35,"_ref2"],[68,73,131,35],[68,75,131,69],[69,8,131,69],[69,12,131,39,"routeNames"],[69,22,131,49],[69,25,131,49,"_ref2"],[69,30,131,49],[69,31,131,39,"routeNames"],[69,41,131,49],[70,10,131,51,"routeParamList"],[70,24,131,65],[70,27,131,65,"_ref2"],[70,32,131,65],[70,33,131,51,"routeParamList"],[70,47,131,65],[71,8,132,6],[71,12,132,10,"state"],[71,17,132,15],[71,20,132,18,"partialState"],[71,32,132,30],[72,8,134,6],[72,12,134,10,"state"],[72,17,134,15],[72,18,134,16,"stale"],[72,23,134,21],[72,28,134,26],[72,33,134,31],[72,35,134,33],[73,10,135,8],[73,17,135,15,"state"],[73,22,135,20],[74,8,136,6],[75,8,138,6],[75,12,138,12,"routes"],[75,18,138,18],[75,21,138,21,"state"],[75,26,138,26],[75,27,138,27,"routes"],[75,33,138,33],[75,34,139,9,"filter"],[75,40,139,15],[75,41,139,16],[75,51,139,17,"route"],[75,56,139,22],[76,10,139,22],[76,17,139,27,"routeNames"],[76,27,139,37],[76,28,139,38,"includes"],[76,36,139,46],[76,37,139,47,"route"],[76,42,139,52],[76,43,139,53,"name"],[76,47,139,57],[76,48,139,58],[77,8,139,58],[77,10,139,59],[77,11,140,9,"map"],[77,14,140,12],[77,15,141,10],[77,25,141,11,"route"],[77,30,141,16],[78,10,141,16],[78,17,141,16,"_objectSpread"],[78,30,141,16],[78,31,141,16,"_objectSpread"],[78,44,141,16],[78,49,143,17,"route"],[78,54,143,22],[79,12,144,14,"key"],[79,15,144,17],[79,17,144,19,"route"],[79,22,144,24],[79,23,144,25,"key"],[79,26,144,28],[79,30,144,33],[79,33,144,35,"route"],[79,38,144,40],[79,39,144,41,"name"],[79,43,144,46],[79,47,144,49],[79,51,144,49,"nanoid"],[79,68,144,55],[79,70,144,56],[79,71,144,58],[79,73,144,59],[80,12,145,14,"params"],[80,18,145,20],[80,20,146,16,"routeParamList"],[80,34,146,30],[80,35,146,31,"route"],[80,40,146,36],[80,41,146,37,"name"],[80,45,146,41],[80,46,146,42],[80,51,146,47,"undefined"],[80,60,146,56],[80,63,146,56,"_objectSpread"],[80,76,146,56],[80,77,146,56,"_objectSpread"],[80,90,146,56],[80,95,148,25,"routeParamList"],[80,109,148,39],[80,110,148,40,"route"],[80,115,148,45],[80,116,148,46,"name"],[80,120,148,50],[80,121,148,51],[80,124,149,25,"route"],[80,129,149,30],[80,130,149,31,"params"],[80,136,149,37],[80,140,151,20,"route"],[80,145,151,25],[80,146,151,26,"params"],[81,10,151,32],[82,8,151,32],[82,9,153,8],[82,10,153,9],[83,8,155,6],[83,12,155,10,"routes"],[83,18,155,16],[83,19,155,17,"length"],[83,25,155,23],[83,30,155,28],[83,31,155,29],[83,33,155,31],[84,10,156,8],[84,14,156,14,"initialRouteName"],[84,30,156,30],[84,33,157,10,"options"],[84,40,157,17],[84,41,157,18,"initialRouteName"],[84,57,157,34],[84,62,157,39,"undefined"],[84,71,157,48],[84,74,158,14,"options"],[84,81,158,21],[84,82,158,22,"initialRouteName"],[84,98,158,38],[84,101,159,14,"routeNames"],[84,111,159,24],[84,112,159,25],[84,113,159,26],[84,114,159,27],[85,10,161,8,"routes"],[85,16,161,14],[85,17,161,15,"push"],[85,21,161,19],[85,22,161,20],[86,12,162,10,"key"],[86,15,162,13],[86,17,162,16],[86,20,162,18,"initialRouteName"],[86,36,162,35],[86,40,162,38],[86,44,162,38,"nanoid"],[86,61,162,44],[86,63,162,45],[86,64,162,47],[86,66,162,48],[87,12,163,10,"name"],[87,16,163,14],[87,18,163,16,"initialRouteName"],[87,34,163,32],[88,12,164,10,"params"],[88,18,164,16],[88,20,164,18,"routeParamList"],[88,34,164,32],[88,35,164,33,"initialRouteName"],[88,51,164,49],[89,10,165,8],[89,11,165,9],[89,12,165,10],[90,8,166,6],[91,8,168,6],[91,15,168,13],[92,10,169,8,"stale"],[92,15,169,13],[92,17,169,15],[92,22,169,20],[93,10,170,8,"type"],[93,14,170,12],[93,16,170,14],[93,23,170,21],[94,10,171,8,"key"],[94,13,171,11],[94,15,171,14],[94,24,171,22],[94,28,171,22,"nanoid"],[94,45,171,28],[94,47,171,29],[94,48,171,31],[94,50,171,32],[95,10,172,8,"index"],[95,15,172,13],[95,17,172,15,"routes"],[95,23,172,21],[95,24,172,22,"length"],[95,30,172,28],[95,33,172,31],[95,34,172,32],[96,10,173,8,"routeNames"],[96,20,173,18],[96,22,173,8,"routeNames"],[96,32,173,18],[97,10,174,8,"routes"],[97,16,174,14],[97,18,174,8,"routes"],[98,8,175,6],[98,9,175,7],[99,6,176,4],[99,7,176,5],[100,6,178,4,"getStateForRouteNamesChange"],[100,33,178,31],[100,44,178,31,"getStateForRouteNamesChange"],[100,72,179,6,"state"],[100,77,179,11],[100,79,179,11,"_ref3"],[100,84,179,11],[100,86,181,6],[101,8,181,6],[101,12,180,8,"routeNames"],[101,22,180,18],[101,25,180,18,"_ref3"],[101,30,180,18],[101,31,180,8,"routeNames"],[101,41,180,18],[102,10,180,20,"routeParamList"],[102,24,180,34],[102,27,180,34,"_ref3"],[102,32,180,34],[102,33,180,20,"routeParamList"],[102,47,180,34],[103,10,180,36,"routeKeyChanges"],[103,25,180,51],[103,28,180,51,"_ref3"],[103,33,180,51],[103,34,180,36,"routeKeyChanges"],[103,49,180,51],[104,8,182,6],[104,12,182,12,"routes"],[104,18,182,18],[104,21,182,21,"state"],[104,26,182,26],[104,27,182,27,"routes"],[104,33,182,33],[104,34,182,34,"filter"],[104,40,182,40],[104,41,183,8],[104,51,183,9,"route"],[104,56,183,14],[105,10,183,14],[105,17,184,10,"routeNames"],[105,27,184,20],[105,28,184,21,"includes"],[105,36,184,29],[105,37,184,30,"route"],[105,42,184,35],[105,43,184,36,"name"],[105,47,184,40],[105,48,184,41],[105,52,185,10],[105,53,185,11,"routeKeyChanges"],[105,68,185,26],[105,69,185,27,"includes"],[105,77,185,35],[105,78,185,36,"route"],[105,83,185,41],[105,84,185,42,"name"],[105,88,185,46],[105,89,185,47],[106,8,185,47],[106,9,186,6],[106,10,186,7],[107,8,188,6],[107,12,188,10,"routes"],[107,18,188,16],[107,19,188,17,"length"],[107,25,188,23],[107,30,188,28],[107,31,188,29],[107,33,188,31],[108,10,189,8],[108,14,189,14,"initialRouteName"],[108,30,189,30],[108,33,190,10,"options"],[108,40,190,17],[108,41,190,18,"initialRouteName"],[108,57,190,34],[108,62,190,39,"undefined"],[108,71,190,48],[108,75,191,10,"routeNames"],[108,85,191,20],[108,86,191,21,"includes"],[108,94,191,29],[108,95,191,30,"options"],[108,102,191,37],[108,103,191,38,"initialRouteName"],[108,119,191,54],[108,120,191,55],[108,123,192,14,"options"],[108,130,192,21],[108,131,192,22,"initialRouteName"],[108,147,192,38],[108,150,193,14,"routeNames"],[108,160,193,24],[108,161,193,25],[108,162,193,26],[108,163,193,27],[109,10,195,8,"routes"],[109,16,195,14],[109,17,195,15,"push"],[109,21,195,19],[109,22,195,20],[110,12,196,10,"key"],[110,15,196,13],[110,17,196,16],[110,20,196,18,"initialRouteName"],[110,36,196,35],[110,40,196,38],[110,44,196,38,"nanoid"],[110,61,196,44],[110,63,196,45],[110,64,196,47],[110,66,196,48],[111,12,197,10,"name"],[111,16,197,14],[111,18,197,16,"initialRouteName"],[111,34,197,32],[112,12,198,10,"params"],[112,18,198,16],[112,20,198,18,"routeParamList"],[112,34,198,32],[112,35,198,33,"initialRouteName"],[112,51,198,49],[113,10,199,8],[113,11,199,9],[113,12,199,10],[114,8,200,6],[115,8,202,6],[115,15,202,6,"_objectSpread"],[115,28,202,6],[115,29,202,6,"_objectSpread"],[115,42,202,6],[115,47,203,11,"state"],[115,52,203,16],[116,10,204,8,"routeNames"],[116,20,204,18],[116,22,204,8,"routeNames"],[116,32,204,18],[117,10,205,8,"routes"],[117,16,205,14],[117,18,205,8,"routes"],[117,24,205,14],[118,10,206,8,"index"],[118,15,206,13],[118,17,206,15,"Math"],[118,21,206,19],[118,22,206,20,"min"],[118,25,206,23],[118,26,206,24,"state"],[118,31,206,29],[118,32,206,30,"index"],[118,37,206,35],[118,39,206,37,"routes"],[118,45,206,43],[118,46,206,44,"length"],[118,52,206,50],[118,55,206,53],[118,56,206,54],[119,8,206,55],[120,6,208,4],[120,7,208,5],[121,6,210,4,"getStateForRouteFocus"],[121,27,210,25],[121,38,210,25,"getStateForRouteFocus"],[121,60,210,26,"state"],[121,65,210,31],[121,67,210,33,"key"],[121,70,210,36],[121,72,210,38],[122,8,211,6],[122,12,211,12,"index"],[122,17,211,17],[122,20,211,20,"state"],[122,25,211,25],[122,26,211,26,"routes"],[122,32,211,32],[122,33,211,33,"findIndex"],[122,42,211,42],[122,43,211,43],[122,53,211,44,"r"],[122,54,211,45],[123,10,211,45],[123,17,211,50,"r"],[123,18,211,51],[123,19,211,52,"key"],[123,22,211,55],[123,27,211,60,"key"],[123,30,211,63],[124,8,211,63],[124,10,211,64],[125,8,213,6],[125,12,213,10,"index"],[125,17,213,15],[125,22,213,20],[125,23,213,21],[125,24,213,22],[125,28,213,26,"index"],[125,33,213,31],[125,38,213,36,"state"],[125,43,213,41],[125,44,213,42,"index"],[125,49,213,47],[125,51,213,49],[126,10,214,8],[126,17,214,15,"state"],[126,22,214,20],[127,8,215,6],[128,8,217,6],[128,15,217,6,"_objectSpread"],[128,28,217,6],[128,29,217,6,"_objectSpread"],[128,42,217,6],[128,47,218,11,"state"],[128,52,218,16],[129,10,219,8,"index"],[129,15,219,13],[129,17,219,8,"index"],[129,22,219,13],[130,10,220,8,"routes"],[130,16,220,14],[130,18,220,16,"state"],[130,23,220,21],[130,24,220,22,"routes"],[130,30,220,28],[130,31,220,29,"slice"],[130,36,220,34],[130,37,220,35],[130,38,220,36],[130,40,220,38,"index"],[130,45,220,43],[130,48,220,46],[130,49,220,47],[131,8,220,48],[132,6,222,4],[132,7,222,5],[133,6,224,4,"getStateForAction"],[133,23,224,21],[133,34,224,21,"getStateForAction"],[133,52,224,22,"state"],[133,57,224,27],[133,59,224,29,"action"],[133,65,224,35],[133,67,224,37,"options"],[133,74,224,44],[133,76,224,46],[134,8,225,6],[134,12,225,14,"routeParamList"],[134,26,225,28],[134,29,225,33,"options"],[134,36,225,40],[134,37,225,14,"routeParamList"],[134,51,225,28],[135,8,227,6],[135,16,227,14,"action"],[135,22,227,20],[135,23,227,21,"type"],[135,27,227,25],[136,10,228,8],[136,15,228,13],[136,24,228,22],[137,12,228,24],[138,14,229,10],[138,18,229,16,"index"],[138,23,229,21],[138,26,230,12,"action"],[138,32,230,18],[138,33,230,19,"target"],[138,39,230,25],[138,44,230,30,"state"],[138,49,230,35],[138,50,230,36,"key"],[138,53,230,39],[138,57,230,43,"action"],[138,63,230,49],[138,64,230,50,"source"],[138,70,230,56],[138,73,231,16,"state"],[138,78,231,21],[138,79,231,22,"routes"],[138,85,231,28],[138,86,231,29,"findIndex"],[138,95,231,38],[138,96,231,39],[138,106,231,40,"r"],[138,107,231,41],[139,16,231,41],[139,23,231,46,"r"],[139,24,231,47],[139,25,231,48,"key"],[139,28,231,51],[139,33,231,56,"action"],[139,39,231,62],[139,40,231,63,"source"],[139,46,231,69],[140,14,231,69],[140,16,231,70],[140,19,232,16,"state"],[140,24,232,21],[140,25,232,22,"index"],[140,30,232,27],[141,14,234,10],[141,18,234,14,"index"],[141,23,234,19],[141,28,234,24],[141,29,234,25],[141,30,234,26],[141,32,234,28],[142,16,235,12],[142,23,235,19],[142,27,235,23],[143,14,236,10],[144,14,238,10],[144,18,238,10,"_action$payload"],[144,33,238,10],[144,36,238,40,"action"],[144,42,238,46],[144,43,238,47,"payload"],[144,50,238,54],[145,16,238,18,"name"],[145,20,238,22],[145,23,238,22,"_action$payload"],[145,38,238,22],[145,39,238,18,"name"],[145,43,238,22],[146,16,238,24,"key"],[146,19,238,27],[146,22,238,27,"_action$payload"],[146,37,238,27],[146,38,238,24,"key"],[146,41,238,27],[147,16,238,29,"params"],[147,23,238,35],[147,26,238,35,"_action$payload"],[147,41,238,35],[147,42,238,29,"params"],[147,48,238,35],[148,14,240,10],[148,18,240,14],[148,19,240,15,"state"],[148,24,240,20],[148,25,240,21,"routeNames"],[148,35,240,31],[148,36,240,32,"includes"],[148,44,240,40],[148,45,240,41,"name"],[148,49,240,45],[148,50,240,46],[148,52,240,48],[149,16,241,12],[149,23,241,19],[149,27,241,23],[150,14,242,10],[151,14,244,10],[151,21,244,10,"_objectSpread"],[151,34,244,10],[151,35,244,10,"_objectSpread"],[151,48,244,10],[151,53,245,15,"state"],[151,58,245,20],[152,16,246,12,"routes"],[152,22,246,18],[152,24,246,20,"state"],[152,29,246,25],[152,30,246,26,"routes"],[152,36,246,32],[152,37,246,33,"map"],[152,40,246,36],[152,41,246,37],[152,51,246,38,"route"],[152,56,246,43],[152,58,246,45,"i"],[152,59,246,46],[153,18,246,46],[153,25,247,14,"i"],[153,26,247,15],[153,31,247,20,"index"],[153,36,247,25],[153,39,248,18],[154,20,249,20,"key"],[154,23,249,23],[154,25,249,25,"key"],[154,28,249,28],[154,33,249,33,"undefined"],[154,42,249,42],[154,45,249,45,"key"],[154,48,249,48],[154,51,249,52],[154,54,249,54,"name"],[154,58,249,59],[154,62,249,62],[154,66,249,62,"nanoid"],[154,83,249,68],[154,85,249,69],[154,86,249,71],[154,88,249,72],[155,20,250,20,"name"],[155,24,250,24],[155,26,250,20,"name"],[155,30,250,24],[156,20,251,20,"params"],[156,26,251,26],[156,28,252,22,"routeParamList"],[156,42,252,36],[156,43,252,37,"name"],[156,47,252,41],[156,48,252,42],[156,53,252,47,"undefined"],[156,62,252,56],[156,65,252,56,"_objectSpread"],[156,78,252,56],[156,79,252,56,"_objectSpread"],[156,92,252,56],[156,97,254,31,"routeParamList"],[156,111,254,45],[156,112,254,46,"name"],[156,116,254,50],[156,117,254,51],[156,120,255,31,"params"],[156,127,255,37],[156,131,257,26,"params"],[157,18,258,18],[157,19,258,19],[157,22,259,18,"route"],[157,27,259,23],[158,16,259,23],[158,17,260,12],[159,14,260,13],[160,12,262,8],[161,10,264,8],[161,15,264,13],[161,21,264,19],[162,12,265,10],[162,16,265,14,"state"],[162,21,265,19],[162,22,265,20,"routeNames"],[162,32,265,30],[162,33,265,31,"includes"],[162,41,265,39],[162,42,265,40,"action"],[162,48,265,46],[162,49,265,47,"payload"],[162,56,265,54],[162,57,265,55,"name"],[162,61,265,59],[162,62,265,60],[162,64,265,62],[163,14,266,12],[163,18,266,18,"getId"],[163,23,266,23],[163,26,266,26,"options"],[163,33,266,33],[163,34,266,34,"routeGetIdList"],[163,48,266,48],[163,49,266,49,"action"],[163,55,266,55],[163,56,266,56,"payload"],[163,63,266,63],[163,64,266,64,"name"],[163,68,266,68],[163,69,266,69],[164,14,267,12],[164,18,267,18,"id"],[164,20,267,20],[164,23,267,23,"getId"],[164,28,267,28],[164,48,267,23,"getId"],[164,53,267,28],[164,54,267,31],[165,16,267,33,"params"],[165,22,267,39],[165,24,267,41,"action"],[165,30,267,47],[165,31,267,48,"payload"],[165,38,267,55],[165,39,267,56,"params"],[166,14,267,63],[166,15,267,64],[166,16,267,65],[167,14,269,12],[167,18,269,18,"route"],[167,23,269,23],[167,26,269,26,"id"],[167,28,269,28],[167,31,270,16,"state"],[167,36,270,21],[167,37,270,22,"routes"],[167,43,270,28],[167,44,270,29,"find"],[167,48,270,33],[167,49,271,18],[167,59,271,19,"route"],[167,64,271,24],[168,16,271,24],[168,23,272,20,"route"],[168,28,272,25],[168,29,272,26,"name"],[168,33,272,30],[168,38,272,35,"action"],[168,44,272,41],[168,45,272,42,"payload"],[168,52,272,49],[168,53,272,50,"name"],[168,57,272,54],[168,61,273,20,"id"],[168,63,273,22],[168,69,273,27,"getId"],[168,74,273,32],[168,94,273,27,"getId"],[168,99,273,32],[168,100,273,35],[169,18,273,37,"params"],[169,24,273,43],[169,26,273,45,"route"],[169,31,273,50],[169,32,273,51,"params"],[170,16,273,58],[170,17,273,59],[170,18,273,60],[171,14,273,60],[171,15,274,16],[171,16,274,17],[171,19,275,16,"undefined"],[171,28,275,25],[172,14,277,12],[172,18,277,16,"routes"],[172,24,277,39],[173,14,279,12],[173,18,279,16,"route"],[173,23,279,21],[173,25,279,23],[174,16,280,14,"routes"],[174,22,280,20],[174,25,280,23,"state"],[174,30,280,28],[174,31,280,29,"routes"],[174,37,280,35],[174,38,280,36,"filter"],[174,44,280,42],[174,45,280,43],[174,55,280,44,"r"],[174,56,280,45],[175,18,280,45],[175,25,280,50,"r"],[175,26,280,51],[175,27,280,52,"key"],[175,30,280,55],[175,35,280,60,"route"],[175,40,280,65],[175,41,280,66,"key"],[175,44,280,69],[176,16,280,69],[176,18,280,70],[177,16,281,14,"routes"],[177,22,281,20],[177,23,281,21,"push"],[177,27,281,25],[177,28,281,25,"_objectSpread"],[177,41,281,25],[177,42,281,25,"_objectSpread"],[177,55,281,25],[177,60,282,19,"route"],[177,65,282,24],[178,18,283,16,"params"],[178,24,283,22],[178,26,284,18,"routeParamList"],[178,40,284,32],[178,41,284,33,"action"],[178,47,284,39],[178,48,284,40,"payload"],[178,55,284,47],[178,56,284,48,"name"],[178,60,284,52],[178,61,284,53],[178,66,284,58,"undefined"],[178,75,284,67],[178,78,284,67,"_objectSpread"],[178,91,284,67],[178,92,284,67,"_objectSpread"],[178,105,284,67],[178,110,286,27,"routeParamList"],[178,124,286,41],[178,125,286,42,"action"],[178,131,286,48],[178,132,286,49,"payload"],[178,139,286,56],[178,140,286,57,"name"],[178,144,286,61],[178,145,286,62],[178,148,287,27,"action"],[178,154,287,33],[178,155,287,34,"payload"],[178,162,287,41],[178,163,287,42,"params"],[178,169,287,48],[178,173,289,22,"action"],[178,179,289,28],[178,180,289,29,"payload"],[178,187,289,36],[178,188,289,37,"params"],[179,16,289,43],[179,18,290,15],[179,19,290,16],[180,14,291,12],[180,15,291,13],[180,21,291,19],[181,16,292,14,"routes"],[181,22,292,20],[181,28,292,20,"concat"],[181,34,292,20],[181,39,292,20,"_toConsumableArray2"],[181,58,292,20],[181,59,292,20,"default"],[181,66,292,20],[181,68,293,19,"state"],[181,73,293,24],[181,74,293,25,"routes"],[181,80,293,31],[181,84,294,16],[182,18,295,18,"key"],[182,21,295,21],[182,23,295,24],[182,26,295,26,"action"],[182,32,295,32],[182,33,295,33,"payload"],[182,40,295,40],[182,41,295,41,"name"],[182,45,295,46],[182,49,295,49],[182,53,295,49,"nanoid"],[182,70,295,55],[182,72,295,56],[182,73,295,58],[182,75,295,59],[183,18,296,18,"name"],[183,22,296,22],[183,24,296,24,"action"],[183,30,296,30],[183,31,296,31,"payload"],[183,38,296,38],[183,39,296,39,"name"],[183,43,296,43],[184,18,297,18,"params"],[184,24,297,24],[184,26,298,20,"routeParamList"],[184,40,298,34],[184,41,298,35,"action"],[184,47,298,41],[184,48,298,42,"payload"],[184,55,298,49],[184,56,298,50,"name"],[184,60,298,54],[184,61,298,55],[184,66,298,60,"undefined"],[184,75,298,69],[184,78,298,69,"_objectSpread"],[184,91,298,69],[184,92,298,69,"_objectSpread"],[184,105,298,69],[184,110,300,29,"routeParamList"],[184,124,300,43],[184,125,300,44,"action"],[184,131,300,50],[184,132,300,51,"payload"],[184,139,300,58],[184,140,300,59,"name"],[184,144,300,63],[184,145,300,64],[184,148,301,29,"action"],[184,154,301,35],[184,155,301,36,"payload"],[184,162,301,43],[184,163,301,44,"params"],[184,169,301,50],[184,173,303,24,"action"],[184,179,303,30],[184,180,303,31,"payload"],[184,187,303,38],[184,188,303,39,"params"],[185,16,304,16],[185,17,304,17],[185,19,305,15],[186,14,306,12],[187,14,308,12],[187,21,308,12,"_objectSpread"],[187,34,308,12],[187,35,308,12,"_objectSpread"],[187,48,308,12],[187,53,309,17,"state"],[187,58,309,22],[188,16,310,14,"index"],[188,21,310,19],[188,23,310,21,"routes"],[188,29,310,27],[188,30,310,28,"length"],[188,36,310,34],[188,39,310,37],[188,40,310,38],[189,16,311,14,"routes"],[189,22,311,20],[189,24,311,14,"routes"],[190,14,311,20],[191,12,313,10],[192,12,315,10],[192,19,315,17],[192,23,315,21],[193,10,317,8],[193,15,317,13],[193,20,317,18],[194,12,317,20],[195,14,318,10],[195,18,318,16,"index"],[195,24,318,21],[195,27,319,12,"action"],[195,33,319,18],[195,34,319,19,"target"],[195,40,319,25],[195,45,319,30,"state"],[195,50,319,35],[195,51,319,36,"key"],[195,54,319,39],[195,58,319,43,"action"],[195,64,319,49],[195,65,319,50,"source"],[195,71,319,56],[195,74,320,16,"state"],[195,79,320,21],[195,80,320,22,"routes"],[195,86,320,28],[195,87,320,29,"findIndex"],[195,96,320,38],[195,97,320,39],[195,107,320,40,"r"],[195,108,320,41],[196,16,320,41],[196,23,320,46,"r"],[196,24,320,47],[196,25,320,48,"key"],[196,28,320,51],[196,33,320,56,"action"],[196,39,320,62],[196,40,320,63,"source"],[196,46,320,69],[197,14,320,69],[197,16,320,70],[197,19,321,16,"state"],[197,24,321,21],[197,25,321,22,"index"],[197,30,321,27],[198,14,323,10],[198,18,323,14,"index"],[198,24,323,19],[198,27,323,22],[198,28,323,23],[198,30,323,25],[199,16,324,12],[199,20,324,18,"count"],[199,26,324,23],[199,29,324,26,"Math"],[199,33,324,30],[199,34,324,31,"max"],[199,37,324,34],[199,38,324,35,"index"],[199,44,324,40],[199,47,324,43,"action"],[199,53,324,49],[199,54,324,50,"payload"],[199,61,324,57],[199,62,324,58,"count"],[199,67,324,63],[199,70,324,66],[199,71,324,67],[199,73,324,69],[199,74,324,70],[199,75,324,71],[200,16,325,12],[200,20,325,18,"routes"],[200,27,325,24],[200,30,325,27,"state"],[200,35,325,32],[200,36,325,33,"routes"],[200,42,325,39],[200,43,326,15,"slice"],[200,48,326,20],[200,49,326,21],[200,50,326,22],[200,52,326,24,"count"],[200,58,326,29],[200,59,326,30],[200,60,327,15,"concat"],[200,66,327,21],[200,67,327,22,"state"],[200,72,327,27],[200,73,327,28,"routes"],[200,79,327,34],[200,80,327,35,"slice"],[200,85,327,40],[200,86,327,41,"index"],[200,92,327,46],[200,95,327,49],[200,96,327,50],[200,97,327,51],[200,98,327,52],[201,16,329,12],[201,23,329,12,"_objectSpread"],[201,36,329,12],[201,37,329,12,"_objectSpread"],[201,50,329,12],[201,55,330,17,"state"],[201,60,330,22],[202,18,331,14,"index"],[202,23,331,19],[202,25,331,21,"routes"],[202,32,331,27],[202,33,331,28,"length"],[202,39,331,34],[202,42,331,37],[202,43,331,38],[203,18,332,14,"routes"],[203,24,332,20],[203,26,332,14,"routes"],[204,16,332,20],[205,14,334,10],[206,14,336,10],[206,21,336,17],[206,25,336,21],[207,12,337,8],[208,10,339,8],[208,15,339,13],[208,27,339,25],[209,12,340,10],[209,19,340,17,"router"],[209,25,340,23],[209,26,340,24,"getStateForAction"],[209,43,340,41],[209,44,341,12,"state"],[209,49,341,17],[209,51,342,12],[210,14,343,14,"type"],[210,18,343,18],[210,20,343,20],[210,25,343,25],[211,14,344,14,"payload"],[211,21,344,21],[211,23,344,23],[212,16,344,25,"count"],[212,21,344,30],[212,23,344,32,"state"],[212,28,344,37],[212,29,344,38,"routes"],[212,35,344,44],[212,36,344,45,"length"],[212,42,344,51],[212,45,344,54],[213,14,344,56],[214,12,345,12],[214,13,345,13],[214,15,346,12,"options"],[214,22,347,10],[214,23,347,11],[215,10,349,8],[215,15,349,13],[215,25,349,23],[216,12,350,10],[216,16,351,12,"action"],[216,22,351,18],[216,23,351,19,"payload"],[216,30,351,26],[216,31,351,27,"name"],[216,35,351,31],[216,40,351,36,"undefined"],[216,49,351,45],[216,53,352,12],[216,54,352,13,"state"],[216,59,352,18],[216,60,352,19,"routeNames"],[216,70,352,29],[216,71,352,30,"includes"],[216,79,352,38],[216,80,352,39,"action"],[216,86,352,45],[216,87,352,46,"payload"],[216,94,352,53],[216,95,352,54,"name"],[216,99,352,58],[216,100,352,59],[216,102,353,12],[217,14,354,12],[217,21,354,19],[217,25,354,23],[218,12,355,10],[219,12,357,10],[219,16,357,14,"action"],[219,22,357,20],[219,23,357,21,"payload"],[219,30,357,28],[219,31,357,29,"key"],[219,34,357,32],[219,38,357,36,"action"],[219,44,357,42],[219,45,357,43,"payload"],[219,52,357,50],[219,53,357,51,"name"],[219,57,357,55],[219,59,357,57],[220,14,357,57],[220,18,357,57,"_action$payload$path"],[220,38,357,57],[221,14,358,12],[222,14,359,12],[222,18,359,16,"index"],[222,25,359,21],[222,28,359,24],[222,29,359,25],[222,30,359,26],[223,14,361,12],[223,18,361,18,"getId"],[223,24,361,23],[224,14,362,14],[225,14,363,14,"action"],[225,20,363,20],[225,21,363,21,"payload"],[225,28,363,28],[225,29,363,29,"key"],[225,32,363,32],[225,37,363,37,"undefined"],[225,46,363,46],[225,50,364,14,"action"],[225,56,364,20],[225,57,364,21,"payload"],[225,64,364,28],[225,65,364,29,"name"],[225,69,364,33],[225,74,364,38,"undefined"],[225,83,364,47],[225,86,365,18,"options"],[225,93,365,25],[225,94,365,26,"routeGetIdList"],[225,108,365,40],[225,109,365,41,"action"],[225,115,365,47],[225,116,365,48,"payload"],[225,123,365,55],[225,124,365,56,"name"],[225,128,365,60],[225,129,365,61],[225,132,366,18,"undefined"],[225,141,366,27],[226,14,367,12],[226,18,367,18,"id"],[226,21,367,20],[226,24,367,23,"getId"],[226,30,367,28],[226,50,367,23,"getId"],[226,56,367,28],[226,57,367,31],[227,16,367,33,"params"],[227,22,367,39],[227,24,367,41,"action"],[227,30,367,47],[227,31,367,48,"payload"],[227,38,367,55],[227,39,367,56,"params"],[228,14,367,63],[228,15,367,64],[228,16,367,65],[229,14,369,12],[229,18,369,16,"id"],[229,21,369,18],[229,23,369,20],[230,16,370,14,"index"],[230,23,370,19],[230,26,370,22,"state"],[230,31,370,27],[230,32,370,28,"routes"],[230,38,370,34],[230,39,370,35,"findIndex"],[230,48,370,44],[230,49,371,16],[230,59,371,17,"route"],[230,64,371,22],[231,18,371,22],[231,25,372,18,"route"],[231,30,372,23],[231,31,372,24,"name"],[231,35,372,28],[231,40,372,33,"action"],[231,46,372,39],[231,47,372,40,"payload"],[231,54,372,47],[231,55,372,48,"name"],[231,59,372,52],[231,63,373,18,"id"],[231,66,373,20],[231,72,373,25,"getId"],[231,78,373,30],[231,98,373,25,"getId"],[231,104,373,30],[231,105,373,33],[232,20,373,35,"params"],[232,26,373,41],[232,28,373,43,"route"],[232,33,373,48],[232,34,373,49,"params"],[233,18,373,56],[233,19,373,57],[233,20,373,58],[234,16,373,58],[234,17,374,14],[234,18,374,15],[235,14,375,12],[235,15,375,13],[235,21,375,19],[235,25,376,15,"state"],[235,30,376,20],[235,31,376,21,"routes"],[235,37,376,27],[235,38,376,28,"state"],[235,43,376,33],[235,44,376,34,"index"],[235,49,376,39],[235,50,376,40],[235,51,376,41,"name"],[235,55,376,45],[235,60,376,50,"action"],[235,66,376,56],[235,67,376,57,"payload"],[235,74,376,64],[235,75,376,65,"name"],[235,79,376,69],[235,83,377,16,"action"],[235,89,377,22],[235,90,377,23,"payload"],[235,97,377,30],[235,98,377,31,"key"],[235,101,377,34],[235,106,377,39,"undefined"],[235,115,377,48],[235,119,378,14,"state"],[235,124,378,19],[235,125,378,20,"routes"],[235,131,378,26],[235,132,378,27,"state"],[235,137,378,32],[235,138,378,33,"index"],[235,143,378,38],[235,144,378,39],[235,145,378,40,"key"],[235,148,378,43],[235,153,378,48,"action"],[235,159,378,54],[235,160,378,55,"payload"],[235,167,378,62],[235,168,378,63,"key"],[235,171,378,66],[235,173,379,14],[236,16,380,14,"index"],[236,23,380,19],[236,26,380,22,"state"],[236,31,380,27],[236,32,380,28,"index"],[236,37,380,33],[237,14,381,12],[237,15,381,13],[237,21,381,19],[238,16,382,14],[238,21,382,19],[238,25,382,23,"i"],[238,26,382,24],[238,29,382,27,"state"],[238,34,382,32],[238,35,382,33,"routes"],[238,41,382,39],[238,42,382,40,"length"],[238,48,382,46],[238,51,382,49],[238,52,382,50],[238,54,382,52,"i"],[238,55,382,53],[238,59,382,57],[238,60,382,58],[238,62,382,60,"i"],[238,63,382,61],[238,65,382,63],[238,67,382,65],[239,18,383,16],[239,22,384,19,"state"],[239,27,384,24],[239,28,384,25,"routes"],[239,34,384,31],[239,35,384,32,"i"],[239,36,384,33],[239,37,384,34],[239,38,384,35,"name"],[239,42,384,39],[239,47,384,44,"action"],[239,53,384,50],[239,54,384,51,"payload"],[239,61,384,58],[239,62,384,59,"name"],[239,66,384,63],[239,70,385,20,"action"],[239,76,385,26],[239,77,385,27,"payload"],[239,84,385,34],[239,85,385,35,"key"],[239,88,385,38],[239,93,385,43,"undefined"],[239,102,385,52],[239,106,386,18,"state"],[239,111,386,23],[239,112,386,24,"routes"],[239,118,386,30],[239,119,386,31,"i"],[239,120,386,32],[239,121,386,33],[239,122,386,34,"key"],[239,125,386,37],[239,130,386,42,"action"],[239,136,386,48],[239,137,386,49,"payload"],[239,144,386,56],[239,145,386,57,"key"],[239,148,386,60],[239,150,387,18],[240,20,388,18,"index"],[240,27,388,23],[240,30,388,26,"i"],[240,31,388,27],[241,20,389,18],[242,18,390,16],[243,16,391,14],[244,14,392,12],[245,14,394,12],[245,18,395,14,"index"],[245,25,395,19],[245,30,395,24],[245,31,395,25],[245,32,395,26],[245,36,396,14,"action"],[245,42,396,20],[245,43,396,21,"payload"],[245,50,396,28],[245,51,396,29,"key"],[245,54,396,32],[245,58,397,14,"action"],[245,64,397,20],[245,65,397,21,"payload"],[245,72,397,28],[245,73,397,29,"name"],[245,77,397,33],[245,82,397,38,"undefined"],[245,91,397,47],[245,93,398,14],[246,16,399,14],[246,23,399,21],[246,27,399,25],[247,14,400,12],[248,14,402,12],[248,18,402,16,"index"],[248,25,402,21],[248,30,402,26],[248,31,402,27],[248,32,402,28],[248,36,402,32,"action"],[248,42,402,38],[248,43,402,39,"payload"],[248,50,402,46],[248,51,402,47,"name"],[248,55,402,51],[248,60,402,56,"undefined"],[248,69,402,65],[248,71,402,67],[249,16,402,67],[249,20,402,67,"_action$payload$key"],[249,39,402,67],[250,16,403,14],[250,20,403,20,"routes"],[250,28,403,26],[250,34,403,26,"concat"],[250,40,403,26],[250,45,403,26,"_toConsumableArray2"],[250,64,403,26],[250,65,403,26,"default"],[250,72,403,26],[250,74,404,19,"state"],[250,79,404,24],[250,80,404,25,"routes"],[250,86,404,31],[250,90,405,16],[251,18,406,18,"key"],[251,21,406,21],[251,24,406,21,"_action$payload$key"],[251,43,406,21],[251,46,407,20,"action"],[251,52,407,26],[251,53,407,27,"payload"],[251,60,407,34],[251,61,407,35,"key"],[251,64,407,38],[251,76,407,38,"_action$payload$key"],[251,95,407,38],[251,98,407,43],[251,101,407,45,"action"],[251,107,407,51],[251,108,407,52,"payload"],[251,115,407,59],[251,116,407,60,"name"],[251,120,407,65],[251,124,407,68],[251,128,407,68,"nanoid"],[251,145,407,74],[251,147,407,75],[251,148,407,77],[251,150,407,78],[252,18,408,18,"name"],[252,22,408,22],[252,24,408,24,"action"],[252,30,408,30],[252,31,408,31,"payload"],[252,38,408,38],[252,39,408,39,"name"],[252,43,408,43],[253,18,409,18,"path"],[253,22,409,22],[253,24,409,24,"action"],[253,30,409,30],[253,31,409,31,"payload"],[253,38,409,38],[253,39,409,39,"path"],[253,43,409,43],[254,18,410,18,"params"],[254,24,410,24],[254,26,411,20,"routeParamList"],[254,40,411,34],[254,41,411,35,"action"],[254,47,411,41],[254,48,411,42,"payload"],[254,55,411,49],[254,56,411,50,"name"],[254,60,411,54],[254,61,411,55],[254,66,411,60,"undefined"],[254,75,411,69],[254,78,411,69,"_objectSpread"],[254,91,411,69],[254,92,411,69,"_objectSpread"],[254,105,411,69],[254,110,413,29,"routeParamList"],[254,124,413,43],[254,125,413,44,"action"],[254,131,413,50],[254,132,413,51,"payload"],[254,139,413,58],[254,140,413,59,"name"],[254,144,413,63],[254,145,413,64],[254,148,414,29,"action"],[254,154,414,35],[254,155,414,36,"payload"],[254,162,414,43],[254,163,414,44,"params"],[254,169,414,50],[254,173,416,24,"action"],[254,179,416,30],[254,180,416,31,"payload"],[254,187,416,38],[254,188,416,39,"params"],[255,16,417,16],[255,17,417,17],[255,19,418,15],[256,16,420,14],[256,23,420,14,"_objectSpread"],[256,36,420,14],[256,37,420,14,"_objectSpread"],[256,50,420,14],[256,55,421,19,"state"],[256,60,421,24],[257,18,422,16,"routes"],[257,24,422,22],[257,26,422,16,"routes"],[257,34,422,22],[258,18,423,16,"index"],[258,23,423,21],[258,25,423,23,"routes"],[258,33,423,29],[258,34,423,30,"length"],[258,40,423,36],[258,43,423,39],[259,16,423,40],[260,14,425,12],[261,14,427,12],[261,18,427,18,"route"],[261,24,427,23],[261,27,427,26,"state"],[261,32,427,31],[261,33,427,32,"routes"],[261,39,427,38],[261,40,427,39,"index"],[261,47,427,44],[261,48,427,45],[262,14,429,12],[262,18,429,16,"params"],[262,26,429,22],[263,14,431,12],[263,18,431,16,"action"],[263,24,431,22],[263,25,431,23,"payload"],[263,32,431,30],[263,33,431,31,"merge"],[263,38,431,36],[263,40,431,38],[264,16,432,14,"params"],[264,24,432,20],[264,27,433,16,"action"],[264,33,433,22],[264,34,433,23,"payload"],[264,41,433,30],[264,42,433,31,"params"],[264,48,433,37],[264,53,433,42,"undefined"],[264,62,433,51],[264,66,434,16,"routeParamList"],[264,80,434,30],[264,81,434,31,"route"],[264,87,434,36],[264,88,434,37,"name"],[264,92,434,41],[264,93,434,42],[264,98,434,47,"undefined"],[264,107,434,56],[264,110,434,56,"_objectSpread"],[264,123,434,56],[264,124,434,56,"_objectSpread"],[264,137,434,56],[264,138,434,56,"_objectSpread"],[264,151,434,56],[264,156,436,25,"routeParamList"],[264,170,436,39],[264,171,436,40,"route"],[264,177,436,45],[264,178,436,46,"name"],[264,182,436,50],[264,183,436,51],[264,186,437,25,"route"],[264,192,437,30],[264,193,437,31,"params"],[264,199,437,37],[264,202,438,25,"action"],[264,208,438,31],[264,209,438,32,"payload"],[264,216,438,39],[264,217,438,40,"params"],[264,223,438,46],[264,227,440,20,"route"],[264,233,440,25],[264,234,440,26,"params"],[264,240,440,32],[265,14,441,12],[265,15,441,13],[265,21,441,19],[266,16,442,14,"params"],[266,24,442,20],[266,27,443,16,"routeParamList"],[266,41,443,30],[266,42,443,31,"route"],[266,48,443,36],[266,49,443,37,"name"],[266,53,443,41],[266,54,443,42],[266,59,443,47,"undefined"],[266,68,443,56],[266,71,443,56,"_objectSpread"],[266,84,443,56],[266,85,443,56,"_objectSpread"],[266,98,443,56],[266,103,445,25,"routeParamList"],[266,117,445,39],[266,118,445,40,"route"],[266,124,445,45],[266,125,445,46,"name"],[266,129,445,50],[266,130,445,51],[266,133,446,25,"action"],[266,139,446,31],[266,140,446,32,"payload"],[266,147,446,39],[266,148,446,40,"params"],[266,154,446,46],[266,158,448,20,"action"],[266,164,448,26],[266,165,448,27,"payload"],[266,172,448,34],[266,173,448,35,"params"],[266,179,448,41],[267,14,449,12],[268,14,451,12],[268,21,451,12,"_objectSpread"],[268,34,451,12],[268,35,451,12,"_objectSpread"],[268,48,451,12],[268,53,452,17,"state"],[268,58,452,22],[269,16,453,14,"index"],[269,21,453,19],[269,23,453,14,"index"],[269,30,453,19],[270,16,454,14,"routes"],[270,22,454,20],[270,27,454,20,"concat"],[270,33,454,20],[270,38,454,20,"_toConsumableArray2"],[270,57,454,20],[270,58,454,20,"default"],[270,65,454,20],[270,67,455,19,"state"],[270,72,455,24],[270,73,455,25,"routes"],[270,79,455,31],[270,80,455,32,"slice"],[270,85,455,37],[270,86,455,38],[270,87,455,39],[270,89,455,41,"index"],[270,96,455,46],[270,97,455,47],[270,101,456,16,"params"],[270,109,456,22],[270,114,456,27,"route"],[270,120,456,32],[270,121,456,33,"params"],[270,127,456,39],[270,131,457,17,"action"],[270,137,457,23],[270,138,457,24,"payload"],[270,145,457,31],[270,146,457,32,"path"],[270,150,457,36],[270,154,457,40,"action"],[270,160,457,46],[270,161,457,47,"payload"],[270,168,457,54],[270,169,457,55,"path"],[270,173,457,59],[270,178,457,64,"route"],[270,184,457,69],[270,185,457,70,"path"],[270,189,457,75],[270,192,457,75,"_objectSpread"],[270,205,457,75],[270,206,457,75,"_objectSpread"],[270,219,457,75],[270,224,459,25,"route"],[270,230,459,30],[271,18,460,22,"path"],[271,22,460,26],[271,25,460,26,"_action$payload$path"],[271,45,460,26],[271,48,460,28,"action"],[271,54,460,34],[271,55,460,35,"payload"],[271,62,460,42],[271,63,460,43,"path"],[271,67,460,47],[271,79,460,47,"_action$payload$path"],[271,99,460,47],[271,102,460,51,"route"],[271,108,460,56],[271,109,460,57,"path"],[271,113,460,61],[272,18,461,22,"params"],[272,24,461,28],[272,26,461,22,"params"],[273,16,461,28],[273,21,463,20,"state"],[273,26,463,25],[273,27,463,26,"routes"],[273,33,463,32],[273,34,463,33,"index"],[273,41,463,38],[273,42,463,39],[274,14,464,15],[275,12,466,10],[276,12,468,10],[276,19,468,17],[276,23,468,21],[277,10,470,8],[277,15,470,13],[277,24,470,22],[278,12,471,10],[278,16,471,14,"state"],[278,21,471,19],[278,22,471,20,"index"],[278,27,471,25],[278,30,471,28],[278,31,471,29],[278,33,471,31],[279,14,472,12],[279,21,472,19,"router"],[279,27,472,25],[279,28,472,26,"getStateForAction"],[279,45,472,43],[279,46,473,14,"state"],[279,51,473,19],[279,53,474,14],[280,16,475,16,"type"],[280,20,475,20],[280,22,475,22],[280,27,475,27],[281,16,476,16,"payload"],[281,23,476,23],[281,25,476,25],[282,18,476,27,"count"],[282,23,476,32],[282,25,476,34],[283,16,476,36],[283,17,476,37],[284,16,477,16,"target"],[284,22,477,22],[284,24,477,24,"action"],[284,30,477,30],[284,31,477,31,"target"],[284,37,477,37],[285,16,478,16,"source"],[285,22,478,22],[285,24,478,24,"action"],[285,30,478,30],[285,31,478,31,"source"],[286,14,479,14],[286,15,479,15],[286,17,480,14,"options"],[286,24,481,12],[286,25,481,13],[287,12,482,10],[288,12,484,10],[288,19,484,17],[288,23,484,21],[289,10,486,8],[290,12,487,10],[290,19,487,17,"BaseRouter"],[290,38,487,27],[290,39,487,28,"getStateForAction"],[290,56,487,45],[290,57,487,46,"state"],[290,62,487,51],[290,64,487,53,"action"],[290,70,487,59],[290,71,487,60],[291,8,488,6],[292,6,489,4],[292,7,489,5],[293,6,491,4,"actionCreators"],[293,20,491,18],[293,22,491,20,"StackActions"],[294,4,491,32],[294,6,492,3],[295,4,494,2],[295,11,494,9,"router"],[295,17,494,15],[296,2,495,0],[297,0,495,1]],"functionMap":{"names":["<global>","StackActions.replace","StackActions.push","StackActions.pop","StackActions.popToTop","StackRouter","router.getInitialState","router.getRehydratedState","state.routes.filter$argument_0","state.routes.filter.map$argument_0","router.getStateForRouteNamesChange","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","state.routes.find$argument_0"],"mappings":"AAA;ECoF;GDE;EEC;GFE;EGC;GHE;EIC;GJE;eKG;ICS;KDqB;IEE;gBCQ,0CD;UEE;+BFW;KFwB;IKE;QFK;+CEE;KLuB;IME;2CCC,oBD;KNW;IQE;uCDO,8BC;qCCe;uBDa;kBEY;4DFE;2CLO,0BK;uCDwC,8BC;gBDmD;0DCE;KRoH;CLM"}},"type":"js/module"}]}