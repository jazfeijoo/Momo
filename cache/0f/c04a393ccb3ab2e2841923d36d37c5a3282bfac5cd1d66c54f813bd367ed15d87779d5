{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":37,"index":37}}],"key":"llq4nuOBKCCL4A7IFpRswh14toM="}},{"name":"./Raw","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":14,"index":58},"end":{"line":2,"column":30,"index":74}}],"key":"CRtWRCAsJqkolcO7tw5z7Pwo7Vw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n  var rawMode = _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode;\n  var WHITESPACE = TYPE.WhiteSpace;\n  var COMMENT = TYPE.Comment;\n  var SEMICOLON = TYPE.Semicolon;\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\n  }\n  module.exports = {\n    name: 'DeclarationList',\n    structure: {\n      children: [['Declaration']]\n    },\n    parse: function parse() {\n      var children = this.createList();\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case WHITESPACE:\n          case COMMENT:\n          case SEMICOLON:\n            this.scanner.next();\n            break;\n          default:\n            children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n        }\n      }\n      return {\n        type: 'DeclarationList',\n        loc: this.getLocationFromList(children),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node, function (prev) {\n        if (prev.type === 'Declaration') {\n          this.chunk(';');\n        }\n      });\n    }\n  };\n});","lineCount":42,"map":[[2,2,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,25,1,18,"_dependencyMap"],[2,39,1,18],[2,61,1,36],[2,62,1,37],[2,63,1,38,"TYPE"],[2,67,1,42],[3,2,2,0],[3,6,2,4,"rawMode"],[3,13,2,11],[3,16,2,14,"require"],[3,27,2,21],[3,28,2,21,"_dependencyMap"],[3,42,2,21],[3,54,2,29],[3,55,2,30],[3,56,2,31,"mode"],[3,60,2,35],[4,2,4,0],[4,6,4,4,"WHITESPACE"],[4,16,4,14],[4,19,4,17,"TYPE"],[4,23,4,21],[4,24,4,22,"WhiteSpace"],[4,34,4,32],[5,2,5,0],[5,6,5,4,"COMMENT"],[5,13,5,11],[5,16,5,14,"TYPE"],[5,20,5,18],[5,21,5,19,"Comment"],[5,28,5,26],[6,2,6,0],[6,6,6,4,"SEMICOLON"],[6,15,6,13],[6,18,6,16,"TYPE"],[6,22,6,20],[6,23,6,21,"Semicolon"],[6,32,6,30],[7,2,8,0],[7,11,8,9,"consumeRaw"],[7,21,8,19,"consumeRaw"],[7,22,8,20,"startToken"],[7,32,8,30],[7,34,8,32],[8,4,9,4],[8,11,9,11],[8,15,9,15],[8,16,9,16,"Raw"],[8,19,9,19],[8,20,9,20,"startToken"],[8,30,9,30],[8,32,9,32,"rawMode"],[8,39,9,39],[8,40,9,40,"semicolonIncluded"],[8,57,9,57],[8,59,9,59],[8,63,9,63],[8,64,9,64],[9,2,10,0],[10,2,12,0,"module"],[10,8,12,6],[10,9,12,7,"exports"],[10,16,12,14],[10,19,12,17],[11,4,13,4,"name"],[11,8,13,8],[11,10,13,10],[11,27,13,27],[12,4,14,4,"structure"],[12,13,14,13],[12,15,14,15],[13,6,15,8,"children"],[13,14,15,16],[13,16,15,18],[13,17,15,19],[13,18,16,12],[13,31,16,25],[13,32,17,9],[14,4,18,4],[14,5,18,5],[15,4,19,4,"parse"],[15,9,19,9],[15,11,19,11],[15,20,19,11,"parse"],[15,26,19,11],[15,28,19,22],[16,6,20,8],[16,10,20,12,"children"],[16,18,20,20],[16,21,20,23],[16,25,20,27],[16,26,20,28,"createList"],[16,36,20,38],[16,37,20,39],[16,38,20,40],[17,6,22,8,"scan"],[17,10,22,12],[17,12,23,8],[17,19,23,15],[17,20,23,16],[17,24,23,20],[17,25,23,21,"scanner"],[17,32,23,28],[17,33,23,29,"eof"],[17,36,23,32],[17,38,23,34],[18,8,24,12],[18,16,24,20],[18,20,24,24],[18,21,24,25,"scanner"],[18,28,24,32],[18,29,24,33,"tokenType"],[18,38,24,42],[19,10,25,16],[19,15,25,21,"WHITESPACE"],[19,25,25,31],[20,10,26,16],[20,15,26,21,"COMMENT"],[20,22,26,28],[21,10,27,16],[21,15,27,21,"SEMICOLON"],[21,24,27,30],[22,12,28,20],[22,16,28,24],[22,17,28,25,"scanner"],[22,24,28,32],[22,25,28,33,"next"],[22,29,28,37],[22,30,28,38],[22,31,28,39],[23,12,29,20],[24,10,31,16],[25,12,32,20,"children"],[25,20,32,28],[25,21,32,29,"push"],[25,25,32,33],[25,26,32,34],[25,30,32,38],[25,31,32,39,"parseWithFallback"],[25,48,32,56],[25,49,32,57],[25,53,32,61],[25,54,32,62,"Declaration"],[25,65,32,73],[25,67,32,75,"consumeRaw"],[25,77,32,85],[25,78,32,86],[25,79,32,87],[26,8,33,12],[27,6,34,8],[28,6,36,8],[28,13,36,15],[29,8,37,12,"type"],[29,12,37,16],[29,14,37,18],[29,31,37,35],[30,8,38,12,"loc"],[30,11,38,15],[30,13,38,17],[30,17,38,21],[30,18,38,22,"getLocationFromList"],[30,37,38,41],[30,38,38,42,"children"],[30,46,38,50],[30,47,38,51],[31,8,39,12,"children"],[31,16,39,20],[31,18,39,22,"children"],[32,6,40,8],[32,7,40,9],[33,4,41,4],[33,5,41,5],[34,4,42,4,"generate"],[34,12,42,12],[34,14,42,14],[34,23,42,14,"generate"],[34,32,42,23,"node"],[34,36,42,27],[34,38,42,29],[35,6,43,8],[35,10,43,12],[35,11,43,13,"children"],[35,19,43,21],[35,20,43,22,"node"],[35,24,43,26],[35,26,43,28],[35,36,43,37,"prev"],[35,40,43,41],[35,42,43,43],[36,8,44,12],[36,12,44,16,"prev"],[36,16,44,20],[36,17,44,21,"type"],[36,21,44,25],[36,26,44,30],[36,39,44,43],[36,41,44,45],[37,10,45,16],[37,14,45,20],[37,15,45,21,"chunk"],[37,20,45,26],[37,21,45,27],[37,24,45,30],[37,25,45,31],[38,8,46,12],[39,6,47,8],[39,7,47,9],[39,8,47,10],[40,4,48,4],[41,2,49,0],[41,3,49,1],[42,0,49,2]],"functionMap":{"names":["<global>","consumeRaw","module.exports.parse","module.exports.generate","children$argument_1"],"mappings":"AAA;ACO;CDE;WES;KFsB;cGC;4BCC;SDI;KHC"}},"type":"js/module"}]}