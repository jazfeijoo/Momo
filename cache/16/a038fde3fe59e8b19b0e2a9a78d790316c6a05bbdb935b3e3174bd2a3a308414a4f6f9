{"dependencies":[{"name":"./lib/markup","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":14,"index":156},"end":{"line":8,"column":37,"index":179}}],"key":"0OASQXKiBa31R599Q71JZrfBlUk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.default = exports.serialize = exports.test = void 0;\n  var _markup = _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\");\n\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var ELEMENT_NODE = 1;\n  var TEXT_NODE = 3;\n  var COMMENT_NODE = 8;\n  var FRAGMENT_NODE = 11;\n  var ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n  var testNode = function testNode(val) {\n    var _val$hasAttribute;\n    var constructorName = val.constructor.name;\n    var nodeType = val.nodeType,\n      tagName = val.tagName;\n    var isCustomElement = typeof tagName === 'string' && tagName.includes('-') || ((_val$hasAttribute = val.hasAttribute) === null || _val$hasAttribute === void 0 ? void 0 : _val$hasAttribute.call(val, 'is'));\n    return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n  };\n  var test = function test(val) {\n    var _val$constructor;\n    return (val === null || val === void 0 ? void 0 : (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) && testNode(val);\n  };\n  exports.test = test;\n  function nodeIsText(node) {\n    return node.nodeType === TEXT_NODE;\n  }\n  function nodeIsComment(node) {\n    return node.nodeType === COMMENT_NODE;\n  }\n  function nodeIsFragment(node) {\n    return node.nodeType === FRAGMENT_NODE;\n  }\n  var serialize = function serialize(node, config, indentation, depth, refs, printer) {\n    if (nodeIsText(node)) {\n      return (0, _markup.printText)(node.data, config);\n    }\n    if (nodeIsComment(node)) {\n      return (0, _markup.printComment)(node.data, config);\n    }\n    var type = nodeIsFragment(node) ? `DocumentFragment` : node.tagName.toLowerCase();\n    if (++depth > config.maxDepth) {\n      return (0, _markup.printElementAsLeaf)(type, config);\n    }\n    return (0, _markup.printElement)(type, (0, _markup.printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes).map(function (attr) {\n      return attr.name;\n    }).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce(function (props, attribute) {\n      props[attribute.name] = attribute.value;\n      return props;\n    }, {}), config, indentation + config.indent, depth, refs, printer), (0, _markup.printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n  };\n  exports.serialize = serialize;\n  var plugin = {\n    serialize: serialize,\n    test: test\n  };\n  var _default = plugin;\n  exports.default = _default;\n});","lineCount":68,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,15],[7,20,6,18,"exports"],[7,27,6,25],[7,28,6,26,"serialize"],[7,37,6,35],[7,40,6,38,"exports"],[7,47,6,45],[7,48,6,46,"test"],[7,52,6,50],[7,55,6,53],[7,60,6,58],[7,61,6,59],[8,2,8,0],[8,6,8,4,"_markup"],[8,13,8,11],[8,16,8,14,"require"],[8,27,8,21],[8,28,8,21,"_dependencyMap"],[8,42,8,21],[8,61,8,36],[8,62,8,37],[10,2,10,0],[11,0,11,0],[12,0,12,0],[13,0,13,0],[14,0,14,0],[15,0,15,0],[16,2,16,0],[16,6,16,6,"ELEMENT_NODE"],[16,18,16,18],[16,21,16,21],[16,22,16,22],[17,2,17,0],[17,6,17,6,"TEXT_NODE"],[17,15,17,15],[17,18,17,18],[17,19,17,19],[18,2,18,0],[18,6,18,6,"COMMENT_NODE"],[18,18,18,18],[18,21,18,21],[18,22,18,22],[19,2,19,0],[19,6,19,6,"FRAGMENT_NODE"],[19,19,19,19],[19,22,19,22],[19,24,19,24],[20,2,20,0],[20,6,20,6,"ELEMENT_REGEXP"],[20,20,20,20],[20,23,20,23],[20,50,20,50],[21,2,22,0],[21,6,22,6,"testNode"],[21,14,22,14],[21,17,22,17],[21,26,22,6,"testNode"],[21,34,22,14,"testNode"],[21,35,22,17,"val"],[21,38,22,20],[21,40,22,24],[22,4,23,2],[22,8,23,6,"_val$hasAttribute"],[22,25,23,23],[23,4,25,2],[23,8,25,8,"constructorName"],[23,23,25,23],[23,26,25,26,"val"],[23,29,25,29],[23,30,25,30,"constructor"],[23,41,25,41],[23,42,25,42,"name"],[23,46,25,46],[24,4,26,2],[24,8,26,9,"nodeType"],[24,16,26,17],[24,19,26,30,"val"],[24,22,26,33],[24,23,26,9,"nodeType"],[24,31,26,17],[25,6,26,19,"tagName"],[25,13,26,26],[25,16,26,30,"val"],[25,19,26,33],[25,20,26,19,"tagName"],[25,27,26,26],[26,4,27,2],[26,8,27,8,"isCustomElement"],[26,23,27,23],[26,26,28,5],[26,33,28,12,"tagName"],[26,40,28,19],[26,45,28,24],[26,53,28,32],[26,57,28,36,"tagName"],[26,64,28,43],[26,65,28,44,"includes"],[26,73,28,52],[26,74,28,53],[26,77,28,56],[26,78,28,57],[26,83,29,5],[26,84,29,6,"_val$hasAttribute"],[26,101,29,23],[26,104,29,26,"val"],[26,107,29,29],[26,108,29,30,"hasAttribute"],[26,120,29,42],[26,126,29,48],[26,130,29,52],[26,134,30,4,"_val$hasAttribute"],[26,151,30,21],[26,156,30,26],[26,161,30,31],[26,162,30,32],[26,165,31,8],[26,170,31,13],[26,171,31,14],[26,174,32,8,"_val$hasAttribute"],[26,191,32,25],[26,192,32,26,"call"],[26,196,32,30],[26,197,32,31,"val"],[26,200,32,34],[26,202,32,36],[26,206,32,40],[26,207,32,41],[26,208,32,42],[27,4,33,2],[27,11,34,5,"nodeType"],[27,19,34,13],[27,24,34,18,"ELEMENT_NODE"],[27,36,34,30],[27,41,35,7,"ELEMENT_REGEXP"],[27,55,35,21],[27,56,35,22,"test"],[27,60,35,26],[27,61,35,27,"constructorName"],[27,76,35,42],[27,77,35,43],[27,81,35,47,"isCustomElement"],[27,96,35,62],[27,97,35,63],[27,101,36,5,"nodeType"],[27,109,36,13],[27,114,36,18,"TEXT_NODE"],[27,123,36,27],[27,127,36,31,"constructorName"],[27,142,36,46],[27,147,36,51],[27,153,36,58],[27,157,37,5,"nodeType"],[27,165,37,13],[27,170,37,18,"COMMENT_NODE"],[27,182,37,30],[27,186,37,34,"constructorName"],[27,201,37,49],[27,206,37,54],[27,215,37,64],[27,219,38,5,"nodeType"],[27,227,38,13],[27,232,38,18,"FRAGMENT_NODE"],[27,245,38,31],[27,249,38,35,"constructorName"],[27,264,38,50],[27,269,38,55],[27,287,38,74],[28,2,40,0],[28,3,40,1],[29,2,42,0],[29,6,42,6,"test"],[29,10,42,10],[29,13,42,13],[29,22,42,6,"test"],[29,26,42,10,"test"],[29,27,42,13,"val"],[29,30,42,16],[29,32,42,20],[30,4,43,2],[30,8,43,6,"_val$constructor"],[30,24,43,22],[31,4,45,2],[31,11,46,4],[31,12,46,5,"val"],[31,15,46,8],[31,20,46,13],[31,24,46,17],[31,28,46,21,"val"],[31,31,46,24],[31,36,46,29],[31,41,46,34],[31,42,46,35],[31,45,47,8],[31,50,47,13],[31,51,47,14],[31,54,48,8],[31,55,48,9,"_val$constructor"],[31,71,48,25],[31,74,48,28,"val"],[31,77,48,31],[31,78,48,32,"constructor"],[31,89,48,43],[31,95,48,49],[31,99,48,53],[31,103,49,8,"_val$constructor"],[31,119,49,24],[31,124,49,29],[31,129,49,34],[31,130,49,35],[31,133,50,8],[31,138,50,13],[31,139,50,14],[31,142,51,8,"_val$constructor"],[31,158,51,24],[31,159,51,25,"name"],[31,163,51,29],[31,168,51,34,"testNode"],[31,176,51,42],[31,177,51,43,"val"],[31,180,51,46],[31,181,51,47],[32,2,53,0],[32,3,53,1],[33,2,55,0,"exports"],[33,9,55,7],[33,10,55,8,"test"],[33,14,55,12],[33,17,55,15,"test"],[33,21,55,19],[34,2,57,0],[34,11,57,9,"nodeIsText"],[34,21,57,19,"nodeIsText"],[34,22,57,20,"node"],[34,26,57,24],[34,28,57,26],[35,4,58,2],[35,11,58,9,"node"],[35,15,58,13],[35,16,58,14,"nodeType"],[35,24,58,22],[35,29,58,27,"TEXT_NODE"],[35,38,58,36],[36,2,59,0],[37,2,61,0],[37,11,61,9,"nodeIsComment"],[37,24,61,22,"nodeIsComment"],[37,25,61,23,"node"],[37,29,61,27],[37,31,61,29],[38,4,62,2],[38,11,62,9,"node"],[38,15,62,13],[38,16,62,14,"nodeType"],[38,24,62,22],[38,29,62,27,"COMMENT_NODE"],[38,41,62,39],[39,2,63,0],[40,2,65,0],[40,11,65,9,"nodeIsFragment"],[40,25,65,23,"nodeIsFragment"],[40,26,65,24,"node"],[40,30,65,28],[40,32,65,30],[41,4,66,2],[41,11,66,9,"node"],[41,15,66,13],[41,16,66,14,"nodeType"],[41,24,66,22],[41,29,66,27,"FRAGMENT_NODE"],[41,42,66,40],[42,2,67,0],[43,2,69,0],[43,6,69,6,"serialize"],[43,15,69,15],[43,18,69,18],[43,27,69,6,"serialize"],[43,36,69,15,"serialize"],[43,37,69,19,"node"],[43,41,69,23],[43,43,69,25,"config"],[43,49,69,31],[43,51,69,33,"indentation"],[43,62,69,44],[43,64,69,46,"depth"],[43,69,69,51],[43,71,69,53,"refs"],[43,75,69,57],[43,77,69,59,"printer"],[43,84,69,66],[43,86,69,71],[44,4,70,2],[44,8,70,6,"nodeIsText"],[44,18,70,16],[44,19,70,17,"node"],[44,23,70,21],[44,24,70,22],[44,26,70,24],[45,6,71,4],[45,13,71,11],[45,14,71,12],[45,15,71,13],[45,17,71,15,"_markup"],[45,24,71,22],[45,25,71,23,"printText"],[45,34,71,32],[45,36,71,34,"node"],[45,40,71,38],[45,41,71,39,"data"],[45,45,71,43],[45,47,71,45,"config"],[45,53,71,51],[45,54,71,52],[46,4,72,2],[47,4,74,2],[47,8,74,6,"nodeIsComment"],[47,21,74,19],[47,22,74,20,"node"],[47,26,74,24],[47,27,74,25],[47,29,74,27],[48,6,75,4],[48,13,75,11],[48,14,75,12],[48,15,75,13],[48,17,75,15,"_markup"],[48,24,75,22],[48,25,75,23,"printComment"],[48,37,75,35],[48,39,75,37,"node"],[48,43,75,41],[48,44,75,42,"data"],[48,48,75,46],[48,50,75,48,"config"],[48,56,75,54],[48,57,75,55],[49,4,76,2],[50,4,78,2],[50,8,78,8,"type"],[50,12,78,12],[50,15,78,15,"nodeIsFragment"],[50,29,78,29],[50,30,78,30,"node"],[50,34,78,34],[50,35,78,35],[50,38,79,7],[50,56,79,24],[50,59,80,6,"node"],[50,63,80,10],[50,64,80,11,"tagName"],[50,71,80,18],[50,72,80,19,"toLowerCase"],[50,83,80,30],[50,84,80,31],[50,85,80,32],[51,4,82,2],[51,8,82,6],[51,10,82,8,"depth"],[51,15,82,13],[51,18,82,16,"config"],[51,24,82,22],[51,25,82,23,"maxDepth"],[51,33,82,31],[51,35,82,33],[52,6,83,4],[52,13,83,11],[52,14,83,12],[52,15,83,13],[52,17,83,15,"_markup"],[52,24,83,22],[52,25,83,23,"printElementAsLeaf"],[52,43,83,41],[52,45,83,43,"type"],[52,49,83,47],[52,51,83,49,"config"],[52,57,83,55],[52,58,83,56],[53,4,84,2],[54,4,86,2],[54,11,86,9],[54,12,86,10],[54,13,86,11],[54,15,86,13,"_markup"],[54,22,86,20],[54,23,86,21,"printElement"],[54,35,86,33],[54,37,87,4,"type"],[54,41,87,8],[54,43,88,4],[54,44,88,5],[54,45,88,6],[54,47,88,8,"_markup"],[54,54,88,15],[54,55,88,16,"printProps"],[54,65,88,26],[54,67,89,6,"nodeIsFragment"],[54,81,89,20],[54,82,89,21,"node"],[54,86,89,25],[54,87,89,26],[54,90,90,10],[54,92,90,12],[54,95,91,10,"Array"],[54,100,91,15],[54,101,91,16,"from"],[54,105,91,20],[54,106,91,21,"node"],[54,110,91,25],[54,111,91,26,"attributes"],[54,121,91,36],[54,122,91,37],[54,123,92,13,"map"],[54,126,92,16],[54,127,92,17],[54,137,92,17,"attr"],[54,141,92,21],[55,6,92,21],[55,13,92,25,"attr"],[55,17,92,29],[55,18,92,30,"name"],[55,22,92,34],[56,4,92,34],[56,6,92,35],[56,7,93,13,"sort"],[56,11,93,17],[56,12,93,18],[56,13,93,19],[56,15,94,6,"nodeIsFragment"],[56,29,94,20],[56,30,94,21,"node"],[56,34,94,25],[56,35,94,26],[56,38,95,10],[56,39,95,11],[56,40,95,12],[56,43,96,10,"Array"],[56,48,96,15],[56,49,96,16,"from"],[56,53,96,20],[56,54,96,21,"node"],[56,58,96,25],[56,59,96,26,"attributes"],[56,69,96,36],[56,70,96,37],[56,71,96,38,"reduce"],[56,77,96,44],[56,78,96,45],[56,88,96,46,"props"],[56,93,96,51],[56,95,96,53,"attribute"],[56,104,96,62],[56,106,96,67],[57,6,97,12,"props"],[57,11,97,17],[57,12,97,18,"attribute"],[57,21,97,27],[57,22,97,28,"name"],[57,26,97,32],[57,27,97,33],[57,30,97,36,"attribute"],[57,39,97,45],[57,40,97,46,"value"],[57,45,97,51],[58,6,98,12],[58,13,98,19,"props"],[58,18,98,24],[59,4,99,10],[59,5,99,11],[59,7,99,13],[59,8,99,14],[59,9,99,15],[59,10,99,16],[59,12,100,6,"config"],[59,18,100,12],[59,20,101,6,"indentation"],[59,31,101,17],[59,34,101,20,"config"],[59,40,101,26],[59,41,101,27,"indent"],[59,47,101,33],[59,49,102,6,"depth"],[59,54,102,11],[59,56,103,6,"refs"],[59,60,103,10],[59,62,104,6,"printer"],[59,69,105,4],[59,70,105,5],[59,72,106,4],[59,73,106,5],[59,74,106,6],[59,76,106,8,"_markup"],[59,83,106,15],[59,84,106,16,"printChildren"],[59,97,106,29],[59,99,107,6,"Array"],[59,104,107,11],[59,105,107,12,"prototype"],[59,114,107,21],[59,115,107,22,"slice"],[59,120,107,27],[59,121,107,28,"call"],[59,125,107,32],[59,126,107,33,"node"],[59,130,107,37],[59,131,107,38,"childNodes"],[59,141,107,48],[59,145,107,52,"node"],[59,149,107,56],[59,150,107,57,"children"],[59,158,107,65],[59,159,107,66],[59,161,108,6,"config"],[59,167,108,12],[59,169,109,6,"indentation"],[59,180,109,17],[59,183,109,20,"config"],[59,189,109,26],[59,190,109,27,"indent"],[59,196,109,33],[59,198,110,6,"depth"],[59,203,110,11],[59,205,111,6,"refs"],[59,209,111,10],[59,211,112,6,"printer"],[59,218,113,4],[59,219,113,5],[59,221,114,4,"config"],[59,227,114,10],[59,229,115,4,"indentation"],[59,240,116,2],[59,241,116,3],[60,2,117,0],[60,3,117,1],[61,2,119,0,"exports"],[61,9,119,7],[61,10,119,8,"serialize"],[61,19,119,17],[61,22,119,20,"serialize"],[61,31,119,29],[62,2,120,0],[62,6,120,6,"plugin"],[62,12,120,12],[62,15,120,15],[63,4,121,2,"serialize"],[63,13,121,11],[63,15,121,2,"serialize"],[63,24,121,11],[64,4,122,2,"test"],[64,8,122,6],[64,10,122,2,"test"],[65,2,123,0],[65,3,123,1],[66,2,124,0],[66,6,124,4,"_default"],[66,14,124,12],[66,17,124,15,"plugin"],[66,23,124,21],[67,2,125,0,"exports"],[67,9,125,7],[67,10,125,8,"default"],[67,17,125,15],[67,20,125,18,"_default"],[67,28,125,26],[68,0,125,27]],"functionMap":{"names":["<global>","testNode","test","nodeIsText","nodeIsComment","nodeIsFragment","serialize","Array.from.map$argument_0","Array.from.reduce$argument_0"],"mappings":"AAA;iBCqB;CDkB;aEE;CFW;AGI;CHE;AIE;CJE;AKE;CLE;kBME;iBCuB,iBD;6CEI;WFG;CNkB"}},"type":"js/module"}]}