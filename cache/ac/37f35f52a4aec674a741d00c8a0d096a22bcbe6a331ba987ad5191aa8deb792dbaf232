{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":83,"column":0,"index":2702}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./NativeFrameRateLogger","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":228},"end":{"line":11,"column":60,"index":288}}],"key":"L+awpgm2JLReD6/QhgABtnIN3WU="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":18,"index":308},"end":{"line":13,"column":38,"index":328}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _NativeFrameRateLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./NativeFrameRateLogger\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var invariant = _$$_REQUIRE(_dependencyMap[2], \"invariant\");\n\n  /**\n   * Flow API for native FrameRateLogger module. If the native module is not installed, function calls\n   * are just no-ops.\n   *\n   * Typical behavior is that `setContext` is called when a new screen is loaded (e.g. via a\n   * navigation integration), and then `beginScroll` is called by `ScrollResponder` at which point the\n   * native module then begins tracking frame drops. When `ScrollResponder` calls `endScroll`, the\n   * native module gathers up all it's frame drop data and reports it via an analytics pipeline for\n   * analysis.\n   *\n   * Note that `beginScroll` may be called multiple times by `ScrollResponder` - unclear if that's a\n   * bug, but the native module should be robust to that.\n   *\n   * In the future we may add support for tracking frame drops in other types of interactions beyond\n   * scrolling.\n   */\n  var FrameRateLogger = {\n    /**\n     * Enable `debug` to see local logs of what's going on. `reportStackTraces` will grab stack traces\n     * during UI thread stalls and upload them if the native module supports it.\n     */\n    setGlobalOptions: function setGlobalOptions(options) {\n      if (options.debug !== undefined) {\n        invariant(_NativeFrameRateLogger.default, 'Trying to debug FrameRateLogger without the native module!');\n      }\n      if (_NativeFrameRateLogger.default) {\n        // Needs to clone the object first to avoid modifying the argument.\n        var optionsClone = {\n          debug: !!options.debug,\n          reportStackTraces: !!options.reportStackTraces\n        };\n        _NativeFrameRateLogger.default.setGlobalOptions(optionsClone);\n      }\n    },\n    /**\n     * Must call `setContext` before any events can be properly tracked, which is done automatically\n     * in `AppRegistry`, but navigation is also a common place to hook in.\n     */\n    setContext: function setContext(context) {\n      _NativeFrameRateLogger.default && _NativeFrameRateLogger.default.setContext(context);\n    },\n    /**\n     * Called in `ScrollResponder` so any component that uses that module will handle this\n     * automatically.\n     */\n    beginScroll: function beginScroll() {\n      _NativeFrameRateLogger.default && _NativeFrameRateLogger.default.beginScroll();\n    },\n    /**\n     * Called in `ScrollResponder` so any component that uses that module will handle this\n     * automatically.\n     */\n    endScroll: function endScroll() {\n      _NativeFrameRateLogger.default && _NativeFrameRateLogger.default.endScroll();\n    }\n  };\n  module.exports = FrameRateLogger;\n});","lineCount":73,"map":[[3,2,11,0],[3,6,11,0,"_NativeFrameRateLogger"],[3,28,11,0],[3,31,11,0,"_interopRequireDefault"],[3,53,11,0],[3,54,11,0,"_$$_REQUIRE"],[3,65,11,0],[3,66,11,0,"_dependencyMap"],[3,80,11,0],[4,2,1,0],[5,0,2,0],[6,0,3,0],[7,0,4,0],[8,0,5,0],[9,0,6,0],[10,0,7,0],[11,0,8,0],[12,0,9,0],[14,2,13,0],[14,6,13,6,"invariant"],[14,15,13,15],[14,18,13,18,"require"],[14,29,13,25],[14,30,13,25,"_dependencyMap"],[14,44,13,25],[14,60,13,37],[14,61,13,38],[16,2,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,2,31,0],[32,6,31,6,"FrameRateLogger"],[32,21,31,21],[32,24,31,24],[33,4,32,2],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,4,36,2,"setGlobalOptions"],[37,20,36,18],[37,22,36,20],[37,31,36,20,"setGlobalOptions"],[37,48,36,30,"options"],[37,55,40,3],[37,57,40,5],[38,6,41,4],[38,10,41,8,"options"],[38,17,41,15],[38,18,41,16,"debug"],[38,23,41,21],[38,28,41,26,"undefined"],[38,37,41,35],[38,39,41,37],[39,8,42,6,"invariant"],[39,17,42,15],[39,18,43,8,"NativeFrameRateLogger"],[39,48,43,29],[39,50,44,8],[39,110,45,6],[39,111,45,7],[40,6,46,4],[41,6,47,4],[41,10,47,8,"NativeFrameRateLogger"],[41,40,47,29],[41,42,47,31],[42,8,48,6],[43,8,49,6],[43,12,49,12,"optionsClone"],[43,24,49,24],[43,27,49,27],[44,10,50,8,"debug"],[44,15,50,13],[44,17,50,15],[44,18,50,16],[44,19,50,17,"options"],[44,26,50,24],[44,27,50,25,"debug"],[44,32,50,30],[45,10,51,8,"reportStackTraces"],[45,27,51,25],[45,29,51,27],[45,30,51,28],[45,31,51,29,"options"],[45,38,51,36],[45,39,51,37,"reportStackTraces"],[46,8,52,6],[46,9,52,7],[47,8,53,6,"NativeFrameRateLogger"],[47,38,53,27],[47,39,53,28,"setGlobalOptions"],[47,55,53,44],[47,56,53,45,"optionsClone"],[47,68,53,57],[47,69,53,58],[48,6,54,4],[49,4,55,2],[49,5,55,3],[50,4,57,2],[51,0,58,0],[52,0,59,0],[53,0,60,0],[54,4,61,2,"setContext"],[54,14,61,12],[54,16,61,14],[54,25,61,14,"setContext"],[54,36,61,24,"context"],[54,43,61,39],[54,45,61,41],[55,6,62,4,"NativeFrameRateLogger"],[55,36,62,25],[55,40,62,29,"NativeFrameRateLogger"],[55,70,62,50],[55,71,62,51,"setContext"],[55,81,62,61],[55,82,62,62,"context"],[55,89,62,69],[55,90,62,70],[56,4,63,2],[56,5,63,3],[57,4,65,2],[58,0,66,0],[59,0,67,0],[60,0,68,0],[61,4,69,2,"beginScroll"],[61,15,69,13],[61,26,69,13,"beginScroll"],[61,38,69,13],[61,40,69,16],[62,6,70,4,"NativeFrameRateLogger"],[62,36,70,25],[62,40,70,29,"NativeFrameRateLogger"],[62,70,70,50],[62,71,70,51,"beginScroll"],[62,82,70,62],[62,83,70,63],[62,84,70,64],[63,4,71,2],[63,5,71,3],[64,4,73,2],[65,0,74,0],[66,0,75,0],[67,0,76,0],[68,4,77,2,"endScroll"],[68,13,77,11],[68,24,77,11,"endScroll"],[68,34,77,11],[68,36,77,14],[69,6,78,4,"NativeFrameRateLogger"],[69,36,78,25],[69,40,78,29,"NativeFrameRateLogger"],[69,70,78,50],[69,71,78,51,"endScroll"],[69,80,78,60],[69,81,78,61],[69,82,78,62],[70,4,79,2],[71,2,80,0],[71,3,80,1],[72,2,82,0,"module"],[72,8,82,6],[72,9,82,7,"exports"],[72,16,82,14],[72,19,82,17,"FrameRateLogger"],[72,34,82,32],[73,0,82,33]],"functionMap":{"names":["<global>","setGlobalOptions","setContext","beginScroll","endScroll"],"mappings":"AAA;oBCmC;GDmB;cEM;GFE;EGM;GHE;EIM;GJE"}},"type":"js/module"}]}