{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":362,"column":0,"index":10686}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":362,"column":0,"index":10686}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../Core/Devtools/getDevServer","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":287},"end":{"line":13,"column":57,"index":344}}],"key":"CDOAZrJtJK3ncDS10RhsB35XuEQ="}},{"name":"../LogBox/LogBox","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":345},"end":{"line":14,"column":38,"index":383}}],"key":"fwJDagRE4W+Nl3AUrPArsAYvpNg="}},{"name":"../NativeModules/specs/NativeRedBox","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":384},"end":{"line":15,"column":63,"index":447}}],"key":"GGG5fr8azKaacO33FuNWUBj5LpE="}},{"name":"./DevSettings","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":20,"index":469},"end":{"line":17,"column":44,"index":493}}],"key":"c7PTqC4IpweOjQRhL95ktmcVpLA="}},{"name":"./Platform","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":17,"index":512},"end":{"line":18,"column":38,"index":533}}],"key":"/sSz/mesZD63XZJGd6L1Y4QPlDs="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"metro-runtime/src/modules/HMRClient","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":23,"index":598},"end":{"line":20,"column":69,"index":644}}],"key":"XoxpMp0tSxL+XVSt2TU4IzZE23M="}},{"name":"pretty-format","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":21,"index":667},"end":{"line":21,"column":45,"index":691}}],"key":"Lk6dnOlknI2idzN76JnVT0sQ8BY="}},{"name":"./LoadingView","data":{"asyncType":null,"locs":[{"start":{"line":71,"column":24,"index":2020},"end":{"line":71,"column":48,"index":2044}},{"start":{"line":159,"column":24,"index":4753},"end":{"line":159,"column":48,"index":4777}}],"key":"6q4qNMFSsj2L+wO00M1+XXtEciE="}},{"name":"../Core/NativeExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":333,"column":6,"index":9816},"end":{"line":333,"column":48,"index":9858}}],"key":"RdjI2jNeevV+uqzr7renKP1bjuA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _getDevServer2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../Core/Devtools/getDevServer\"));\n  var _LogBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../LogBox/LogBox\"));\n  var _NativeRedBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../NativeModules/specs/NativeRedBox\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var DevSettings = _$$_REQUIRE(_dependencyMap[5], \"./DevSettings\");\n  var Platform = _$$_REQUIRE(_dependencyMap[6], \"./Platform\");\n  var invariant = _$$_REQUIRE(_dependencyMap[7], \"invariant\");\n  var MetroHMRClient = _$$_REQUIRE(_dependencyMap[8], \"metro-runtime/src/modules/HMRClient\");\n  var prettyFormat = _$$_REQUIRE(_dependencyMap[9], \"pretty-format\");\n  var pendingEntryPoints = [];\n  var hmrClient = null;\n  var hmrUnavailableReason = null;\n  var currentCompileErrorMessage = null;\n  var didConnect = false;\n  var pendingLogs = [];\n  /**\n   * HMR Client that receives from the server HMR updates and propagates them\n   * runtime to reflects those changes.\n   */\n  var HMRClient = {\n    enable: function enable() {\n      if (hmrUnavailableReason !== null) {\n        // If HMR became unavailable while you weren't using it,\n        // explain why when you try to turn it on.\n        // This is an error (and not a warning) because it is shown\n        // in response to a direct user action.\n        throw new Error(hmrUnavailableReason);\n      }\n      invariant(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      var LoadingView = _$$_REQUIRE(_dependencyMap[10], \"./LoadingView\");\n\n      // We use this for internal logging only.\n      // It doesn't affect the logic.\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n\n      // When toggling Fast Refresh on, we might already have some stashed updates.\n      // Since they'll get applied now, we'll show a banner.\n      var hasUpdates = hmrClient.hasPendingUpdates();\n      if (hasUpdates) {\n        LoadingView.showMessage('Refreshing...', 'refresh');\n      }\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          LoadingView.hide();\n        }\n      }\n\n      // There could be a compile error while Fast Refresh was off,\n      // but we ignored it at the time. Show it now.\n      showCompileError();\n    },\n    disable: function disable() {\n      invariant(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      hmrClient.disable();\n    },\n    registerBundle: function registerBundle(requestUrl) {\n      invariant(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log: function log(level, data) {\n      if (!hmrClient) {\n        // Catch a reasonable number of early logs\n        // in case hmrClient gets initialized later.\n        pendingLogs.push([level, data]);\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n        return;\n      }\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level: level,\n          mode: global.RN$Bridgeless === true ? 'NOBRIDGE' : 'BRIDGE',\n          data: data.map(function (item) {\n            return typeof item === 'string' ? item : prettyFormat(item, {\n              escapeString: true,\n              highlight: true,\n              maxDepth: 3,\n              min: true,\n              plugins: [prettyFormat.plugins.ReactElement]\n            });\n          })\n        }));\n      } catch (error) {\n        // If sending logs causes any failures we want to silently ignore them\n        // to ensure we do not cause infinite-logging loops.\n      }\n    },\n    // Called once by the bridge on startup, even if Fast Refresh is off.\n    // It creates the HMR client but doesn't actually set up the socket yet.\n    setup: function setup(platform, bundleEntry, host, port, isEnabled) {\n      var scheme = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'http';\n      invariant(platform, 'Missing required parameter `platform`');\n      invariant(bundleEntry, 'Missing required parameter `bundleEntry`');\n      invariant(host, 'Missing required parameter `host`');\n      invariant(!hmrClient, 'Cannot initialize hmrClient twice');\n\n      // Moving to top gives errors due to NativeModules not being initialized\n      var LoadingView = _$$_REQUIRE(_dependencyMap[10], \"./LoadingView\");\n      var serverHost = port !== null && port !== '' ? `${host}:${port}` : host;\n      var serverScheme = scheme;\n      var client = new MetroHMRClient(`${serverScheme}://${serverHost}/hot`);\n      hmrClient = client;\n      var _getDevServer = (0, _getDevServer2.default)(),\n        fullBundleUrl = _getDevServer.fullBundleUrl;\n      pendingEntryPoints.push( // HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl != null ? fullBundleUrl : `${serverScheme}://${serverHost}/hot?bundleEntry=${bundleEntry}&platform=${platform}`);\n      client.on('connection-error', function (e) {\n        var error = `Cannot connect to Metro.\n\nTry the following to fix the issue:\n- Ensure that Metro is running and available on the same network`;\n        if (\"android\" === 'ios') {\n          error += `\n- Ensure that the Metro URL is correctly set in AppDelegate`;\n        } else {\n          error += `\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run 'adb devices' to see a list of connected devices\n- If you're on a physical device connected to the same machine, run 'adb reverse tcp:8081 tcp:8081' to forward requests from your device\n- If your device is on the same Wi-Fi network, set 'Debug server host & port for device' in 'Dev settings' to your machine's IP address and the port of the local dev server - e.g. 10.0.1.1:8081`;\n        }\n        error += `\n\nURL: ${host}:${port}\n\nError: ${e.message}`;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', function (_ref) {\n        var isInitialUpdate = _ref.isInitialUpdate;\n        currentCompileErrorMessage = null;\n        didConnect = true;\n        if (client.isEnabled() && !isInitialUpdate) {\n          LoadingView.showMessage('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', function (_ref2) {\n        var isInitialUpdate = _ref2.isInitialUpdate;\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          _LogBox.default.clearAllLogs();\n        }\n      });\n      client.on('update-done', function () {\n        LoadingView.hide();\n      });\n      client.on('error', function (data) {\n        LoadingView.hide();\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = `${data.type} ${data.message}`;\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', function (closeEvent) {\n        LoadingView.hide();\n\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n        var isNormalOrUnsetCloseReason = closeEvent == null || closeEvent.code === 1000 || closeEvent.code === 1005 || closeEvent.code == null;\n        setHMRUnavailableReason(`${isNormalOrUnsetCloseReason ? 'Disconnected from Metro.' : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`}\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `);\n      });\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs(hmrClient);\n    }\n  };\n  function setHMRUnavailableReason(reason) {\n    invariant(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    if (hmrUnavailableReason !== null) {\n      // Don't show more than one warning.\n      return;\n    }\n    hmrUnavailableReason = reason;\n\n    // We only want to show a warning if Fast Refresh is on *and* if we ever\n    // previously managed to connect successfully. We don't want to show\n    // the warning to native engineers who use cached bundles without Metro.\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n      // (Not using the `warning` module to prevent a Buck cycle.)\n    }\n  }\n\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason != null) {\n      DevSettings.reload('Bundle Splitting – Metro disconnected');\n      return;\n    }\n    if (pendingEntryPoints.length > 0) {\n      client.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n  function flushEarlyLogs(client) {\n    try {\n      pendingLogs.forEach(function (_ref3) {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          level = _ref4[0],\n          data = _ref4[1];\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n  function dismissRedbox() {\n    if (\"android\" === 'ios' && _NativeRedBox.default != null && _NativeRedBox.default.dismiss != null) {\n      _NativeRedBox.default.dismiss();\n    } else {\n      var NativeExceptionsManager = _$$_REQUIRE(_dependencyMap[11], \"../Core/NativeExceptionsManager\").default;\n      NativeExceptionsManager && NativeExceptionsManager.dismissRedbox && NativeExceptionsManager.dismissRedbox();\n    }\n  }\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    // Even if there is already a redbox, syntax errors are more important.\n    // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n    dismissRedbox();\n    var message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\n     * parameters */\n    var error = new Error(message);\n    // Symbolicating compile errors is wasted effort\n    // because the stack trace is meaningless:\n    error.preventSymbolication = true;\n    throw error;\n  }\n  module.exports = HMRClient;\n});","lineCount":274,"map":[[4,2,13,0],[4,6,13,0,"_getDevServer2"],[4,20,13,0],[4,23,13,0,"_interopRequireDefault"],[4,45,13,0],[4,46,13,0,"_$$_REQUIRE"],[4,57,13,0],[4,58,13,0,"_dependencyMap"],[4,72,13,0],[5,2,14,0],[5,6,14,0,"_LogBox"],[5,13,14,0],[5,16,14,0,"_interopRequireDefault"],[5,38,14,0],[5,39,14,0,"_$$_REQUIRE"],[5,50,14,0],[5,51,14,0,"_dependencyMap"],[5,65,14,0],[6,2,15,0],[6,6,15,0,"_NativeRedBox"],[6,19,15,0],[6,22,15,0,"_interopRequireDefault"],[6,44,15,0],[6,45,15,0,"_$$_REQUIRE"],[6,56,15,0],[6,57,15,0,"_dependencyMap"],[6,71,15,0],[7,2,1,0],[8,0,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[17,2,17,0],[17,6,17,6,"DevSettings"],[17,17,17,17],[17,20,17,20,"require"],[17,31,17,27],[17,32,17,27,"_dependencyMap"],[17,46,17,27],[17,66,17,43],[17,67,17,44],[18,2,18,0],[18,6,18,6,"Platform"],[18,14,18,14],[18,17,18,17,"require"],[18,28,18,24],[18,29,18,24,"_dependencyMap"],[18,43,18,24],[18,60,18,37],[18,61,18,38],[19,2,19,0],[19,6,19,6,"invariant"],[19,15,19,15],[19,18,19,18,"require"],[19,29,19,25],[19,30,19,25,"_dependencyMap"],[19,44,19,25],[19,60,19,37],[19,61,19,38],[20,2,20,0],[20,6,20,6,"MetroHMRClient"],[20,20,20,20],[20,23,20,23,"require"],[20,34,20,30],[20,35,20,30,"_dependencyMap"],[20,49,20,30],[20,91,20,68],[20,92,20,69],[21,2,21,0],[21,6,21,6,"prettyFormat"],[21,18,21,18],[21,21,21,21,"require"],[21,32,21,28],[21,33,21,28,"_dependencyMap"],[21,47,21,28],[21,67,21,44],[21,68,21,45],[22,2,23,0],[22,6,23,6,"pendingEntryPoints"],[22,24,23,24],[22,27,23,27],[22,29,23,29],[23,2,24,0],[23,6,24,4,"hmrClient"],[23,15,24,13],[23,18,24,16],[23,22,24,20],[24,2,25,0],[24,6,25,4,"hmrUnavailableReason"],[24,26,25,39],[24,29,25,42],[24,33,25,46],[25,2,26,0],[25,6,26,4,"currentCompileErrorMessage"],[25,32,26,45],[25,35,26,48],[25,39,26,52],[26,2,27,0],[26,6,27,4,"didConnect"],[26,16,27,23],[26,19,27,26],[26,24,27,31],[27,2,28,0],[27,6,28,4,"pendingLogs"],[27,17,28,57],[27,20,28,60],[27,22,28,62],[28,2,56,0],[29,0,57,0],[30,0,58,0],[31,0,59,0],[32,2,60,0],[32,6,60,6,"HMRClient"],[32,15,60,41],[32,18,60,44],[33,4,61,2,"enable"],[33,10,61,8],[33,21,61,8,"enable"],[33,28,61,8],[33,30,61,11],[34,6,62,4],[34,10,62,8,"hmrUnavailableReason"],[34,30,62,28],[34,35,62,33],[34,39,62,37],[34,41,62,39],[35,8,63,6],[36,8,64,6],[37,8,65,6],[38,8,66,6],[39,8,67,6],[39,14,67,12],[39,18,67,16,"Error"],[39,23,67,21],[39,24,67,22,"hmrUnavailableReason"],[39,44,67,42],[39,45,67,43],[40,6,68,4],[41,6,70,4,"invariant"],[41,15,70,13],[41,16,70,14,"hmrClient"],[41,25,70,23],[41,27,70,25],[41,72,70,70],[41,73,70,71],[42,6,71,4],[42,10,71,10,"LoadingView"],[42,21,71,21],[42,24,71,24,"require"],[42,35,71,31],[42,36,71,31,"_dependencyMap"],[42,50,71,31],[42,71,71,47],[42,72,71,48],[44,6,73,4],[45,6,74,4],[46,6,75,4,"hmrClient"],[46,15,75,13],[46,16,75,14,"send"],[46,20,75,18],[46,21,75,19,"JSON"],[46,25,75,23],[46,26,75,24,"stringify"],[46,35,75,33],[46,36,75,34],[47,8,75,35,"type"],[47,12,75,39],[47,14,75,41],[48,6,75,53],[48,7,75,54],[48,8,75,55],[48,9,75,56],[50,6,77,4],[51,6,78,4],[52,6,79,4],[52,10,79,10,"hasUpdates"],[52,20,79,20],[52,23,79,23,"hmrClient"],[52,32,79,32],[52,33,79,33,"hasPendingUpdates"],[52,50,79,50],[52,51,79,51],[52,52,79,52],[53,6,81,4],[53,10,81,8,"hasUpdates"],[53,20,81,18],[53,22,81,20],[54,8,82,6,"LoadingView"],[54,19,82,17],[54,20,82,18,"showMessage"],[54,31,82,29],[54,32,82,30],[54,47,82,45],[54,49,82,47],[54,58,82,56],[54,59,82,57],[55,6,83,4],[56,6,84,4],[56,10,84,8],[57,8,85,6,"hmrClient"],[57,17,85,15],[57,18,85,16,"enable"],[57,24,85,22],[57,25,85,23],[57,26,85,24],[58,6,86,4],[58,7,86,5],[58,16,86,14],[59,8,87,6],[59,12,87,10,"hasUpdates"],[59,22,87,20],[59,24,87,22],[60,10,88,8,"LoadingView"],[60,21,88,19],[60,22,88,20,"hide"],[60,26,88,24],[60,27,88,25],[60,28,88,26],[61,8,89,6],[62,6,90,4],[64,6,92,4],[65,6,93,4],[66,6,94,4,"showCompileError"],[66,22,94,20],[66,23,94,21],[66,24,94,22],[67,4,95,2],[67,5,95,3],[68,4,97,2,"disable"],[68,11,97,9],[68,22,97,9,"disable"],[68,30,97,9],[68,32,97,12],[69,6,98,4,"invariant"],[69,15,98,13],[69,16,98,14,"hmrClient"],[69,25,98,23],[69,27,98,25],[69,72,98,70],[69,73,98,71],[70,6,99,4,"hmrClient"],[70,15,99,13],[70,16,99,14,"disable"],[70,23,99,21],[70,24,99,22],[70,25,99,23],[71,4,100,2],[71,5,100,3],[72,4,102,2,"registerBundle"],[72,18,102,16],[72,29,102,16,"registerBundle"],[72,44,102,17,"requestUrl"],[72,54,102,35],[72,56,102,37],[73,6,103,4,"invariant"],[73,15,103,13],[73,16,103,14,"hmrClient"],[73,25,103,23],[73,27,103,25],[73,72,103,70],[73,73,103,71],[74,6,104,4,"pendingEntryPoints"],[74,24,104,22],[74,25,104,23,"push"],[74,29,104,27],[74,30,104,28,"requestUrl"],[74,40,104,38],[74,41,104,39],[75,6,105,4,"registerBundleEntryPoints"],[75,31,105,29],[75,32,105,30,"hmrClient"],[75,41,105,39],[75,42,105,40],[76,4,106,2],[76,5,106,3],[77,4,108,2,"log"],[77,7,108,5],[77,18,108,5,"log"],[77,22,108,6,"level"],[77,27,108,21],[77,29,108,23,"data"],[77,33,108,50],[77,35,108,52],[78,6,109,4],[78,10,109,8],[78,11,109,9,"hmrClient"],[78,20,109,18],[78,22,109,20],[79,8,110,6],[80,8,111,6],[81,8,112,6,"pendingLogs"],[81,19,112,17],[81,20,112,18,"push"],[81,24,112,22],[81,25,112,23],[81,26,112,24,"level"],[81,31,112,29],[81,33,112,31,"data"],[81,37,112,35],[81,38,112,36],[81,39,112,37],[82,8,113,6],[82,12,113,10,"pendingLogs"],[82,23,113,21],[82,24,113,22,"length"],[82,30,113,28],[82,33,113,31],[82,36,113,34],[82,38,113,36],[83,10,114,8,"pendingLogs"],[83,21,114,19],[83,22,114,20,"shift"],[83,27,114,25],[83,28,114,26],[83,29,114,27],[84,8,115,6],[85,8,116,6],[86,6,117,4],[87,6,118,4],[87,10,118,8],[88,8,119,6,"hmrClient"],[88,17,119,15],[88,18,119,16,"send"],[88,22,119,20],[88,23,120,8,"JSON"],[88,27,120,12],[88,28,120,13,"stringify"],[88,37,120,22],[88,38,120,23],[89,10,121,10,"type"],[89,14,121,14],[89,16,121,16],[89,21,121,21],[90,10,122,10,"level"],[90,15,122,15],[90,17,122,10,"level"],[90,22,122,15],[91,10,123,10,"mode"],[91,14,123,14],[91,16,123,16,"global"],[91,22,123,22],[91,23,123,23,"RN$Bridgeless"],[91,36,123,36],[91,41,123,41],[91,45,123,45],[91,48,123,48],[91,58,123,58],[91,61,123,61],[91,69,123,69],[92,10,124,10,"data"],[92,14,124,14],[92,16,124,16,"data"],[92,20,124,20],[92,21,124,21,"map"],[92,24,124,24],[92,25,124,25],[92,35,124,25,"item"],[92,39,124,29],[93,12,124,29],[93,19,125,12],[93,26,125,19,"item"],[93,30,125,23],[93,35,125,28],[93,43,125,36],[93,46,126,16,"item"],[93,50,126,20],[93,53,127,16,"prettyFormat"],[93,65,127,28],[93,66,127,29,"item"],[93,70,127,33],[93,72,127,35],[94,14,128,18,"escapeString"],[94,26,128,30],[94,28,128,32],[94,32,128,36],[95,14,129,18,"highlight"],[95,23,129,27],[95,25,129,29],[95,29,129,33],[96,14,130,18,"maxDepth"],[96,22,130,26],[96,24,130,28],[96,25,130,29],[97,14,131,18,"min"],[97,17,131,21],[97,19,131,23],[97,23,131,27],[98,14,132,18,"plugins"],[98,21,132,25],[98,23,132,27],[98,24,132,28,"prettyFormat"],[98,36,132,40],[98,37,132,41,"plugins"],[98,44,132,48],[98,45,132,49,"ReactElement"],[98,57,132,61],[99,12,133,16],[99,13,133,17],[99,14,133,18],[100,10,133,18],[100,11,134,10],[101,8,135,8],[101,9,135,9],[101,10,136,6],[101,11,136,7],[102,6,137,4],[102,7,137,5],[102,8,137,6],[102,15,137,13,"error"],[102,20,137,18],[102,22,137,20],[103,8,138,6],[104,8,139,6],[105,6,139,6],[106,4,141,2],[106,5,141,3],[107,4,143,2],[108,4,144,2],[109,4,145,2,"setup"],[109,9,145,7],[109,20,145,7,"setup"],[109,26,146,4,"platform"],[109,34,146,20],[109,36,147,4,"bundleEntry"],[109,47,147,23],[109,49,148,4,"host"],[109,53,148,16],[109,55,149,4,"port"],[109,59,149,25],[109,61,150,4,"isEnabled"],[109,70,150,22],[109,72,152,4],[110,6,152,4],[110,10,151,4,"scheme"],[110,16,151,19],[110,19,151,19,"arguments"],[110,28,151,19],[110,29,151,19,"length"],[110,35,151,19],[110,43,151,19,"arguments"],[110,52,151,19],[110,60,151,19,"undefined"],[110,69,151,19],[110,72,151,19,"arguments"],[110,81,151,19],[110,87,151,22],[110,93,151,28],[111,6,153,4,"invariant"],[111,15,153,13],[111,16,153,14,"platform"],[111,24,153,22],[111,26,153,24],[111,65,153,63],[111,66,153,64],[112,6,154,4,"invariant"],[112,15,154,13],[112,16,154,14,"bundleEntry"],[112,27,154,25],[112,29,154,27],[112,71,154,69],[112,72,154,70],[113,6,155,4,"invariant"],[113,15,155,13],[113,16,155,14,"host"],[113,20,155,18],[113,22,155,20],[113,57,155,55],[113,58,155,56],[114,6,156,4,"invariant"],[114,15,156,13],[114,16,156,14],[114,17,156,15,"hmrClient"],[114,26,156,24],[114,28,156,26],[114,63,156,61],[114,64,156,62],[116,6,158,4],[117,6,159,4],[117,10,159,10,"LoadingView"],[117,21,159,21],[117,24,159,24,"require"],[117,35,159,31],[117,36,159,31,"_dependencyMap"],[117,50,159,31],[117,71,159,47],[117,72,159,48],[118,6,161,4],[118,10,161,10,"serverHost"],[118,20,161,20],[118,23,161,23,"port"],[118,27,161,27],[118,32,161,32],[118,36,161,36],[118,40,161,40,"port"],[118,44,161,44],[118,49,161,49],[118,51,161,51],[118,54,161,55],[118,57,161,57,"host"],[118,61,161,62],[118,65,161,65,"port"],[118,69,161,70],[118,71,161,71],[118,74,161,74,"host"],[118,78,161,78],[119,6,163,4],[119,10,163,10,"serverScheme"],[119,22,163,22],[119,25,163,25,"scheme"],[119,31,163,31],[120,6,165,4],[120,10,165,10,"client"],[120,16,165,16],[120,19,165,19],[120,23,165,23,"MetroHMRClient"],[120,37,165,37],[120,38,165,39],[120,41,165,41,"serverScheme"],[120,53,165,54],[120,59,165,59,"serverHost"],[120,69,165,70],[120,75,165,75],[120,76,165,76],[121,6,167,4,"hmrClient"],[121,15,167,13],[121,18,167,16,"client"],[121,24,167,22],[122,6,169,4],[122,10,169,4,"_getDevServer"],[122,23,169,4],[122,26,169,28],[122,30,169,28,"getDevServer"],[122,52,169,40],[122,54,169,41],[122,55,169,42],[123,8,169,11,"fullBundleUrl"],[123,21,169,24],[123,24,169,24,"_getDevServer"],[123,37,169,24],[123,38,169,11,"fullBundleUrl"],[123,51,169,24],[124,6,170,4,"pendingEntryPoints"],[124,24,170,22],[124,25,170,23,"push"],[124,29,170,27],[124,31,171,6],[125,6,172,6],[126,6,173,6],[127,6,174,6,"fullBundleUrl"],[127,19,174,19],[127,30,174,6,"fullBundleUrl"],[127,43,174,19],[127,46,175,9],[127,49,175,11,"serverScheme"],[127,61,175,24],[127,67,175,29,"serverHost"],[127,77,175,40],[127,97,175,59,"bundleEntry"],[127,108,175,71],[127,121,175,83,"platform"],[127,129,175,92],[127,131,176,4],[127,132,176,5],[128,6,178,4,"client"],[128,12,178,10],[128,13,178,11,"on"],[128,15,178,13],[128,16,178,14],[128,34,178,32],[128,36,178,34],[128,46,178,34,"e"],[128,47,178,35],[128,49,178,39],[129,8,179,6],[129,12,179,10,"error"],[129,17,179,15],[129,20,179,19],[130,0,180,0],[131,0,181,0],[132,0,182,0],[132,65,182,65],[133,8,184,6],[133,12,184,10],[133,26,184,26],[133,31,184,31],[133,33,184,33],[134,10,185,8,"error"],[134,15,185,13],[134,19,185,18],[135,0,186,0],[135,60,186,60],[136,8,187,6],[136,9,187,7],[136,15,187,13],[137,10,188,8,"error"],[137,15,188,13],[137,19,188,18],[138,0,189,0],[139,0,190,0],[140,0,191,0],[140,194,191,194],[141,8,192,6],[142,8,194,6,"error"],[142,13,194,11],[142,17,194,16],[143,0,195,0],[144,0,196,0],[144,7,196,7,"host"],[144,11,196,12],[144,15,196,15,"port"],[144,19,196,20],[145,0,197,0],[146,0,198,0],[146,9,198,9,"e"],[146,10,198,10],[146,11,198,11,"message"],[146,18,198,19],[146,20,198,20],[147,8,200,6,"setHMRUnavailableReason"],[147,31,200,29],[147,32,200,30,"error"],[147,37,200,35],[147,38,200,36],[148,6,201,4],[148,7,201,5],[148,8,201,6],[149,6,203,4,"client"],[149,12,203,10],[149,13,203,11,"on"],[149,15,203,13],[149,16,203,14],[149,30,203,28],[149,32,203,30],[149,42,203,30,"_ref"],[149,46,203,30],[149,48,203,53],[150,8,203,53],[150,12,203,32,"isInitialUpdate"],[150,27,203,47],[150,30,203,47,"_ref"],[150,34,203,47],[150,35,203,32,"isInitialUpdate"],[150,50,203,47],[151,8,204,6,"currentCompileErrorMessage"],[151,34,204,32],[151,37,204,35],[151,41,204,39],[152,8,205,6,"didConnect"],[152,18,205,16],[152,21,205,19],[152,25,205,23],[153,8,207,6],[153,12,207,10,"client"],[153,18,207,16],[153,19,207,17,"isEnabled"],[153,28,207,26],[153,29,207,27],[153,30,207,28],[153,34,207,32],[153,35,207,33,"isInitialUpdate"],[153,50,207,48],[153,52,207,50],[154,10,208,8,"LoadingView"],[154,21,208,19],[154,22,208,20,"showMessage"],[154,33,208,31],[154,34,208,32],[154,49,208,47],[154,51,208,49],[154,60,208,58],[154,61,208,59],[155,8,209,6],[156,6,210,4],[156,7,210,5],[156,8,210,6],[157,6,212,4,"client"],[157,12,212,10],[157,13,212,11,"on"],[157,15,212,13],[157,16,212,14],[157,24,212,22],[157,26,212,24],[157,36,212,24,"_ref2"],[157,41,212,24],[157,43,212,47],[158,8,212,47],[158,12,212,26,"isInitialUpdate"],[158,27,212,41],[158,30,212,41,"_ref2"],[158,35,212,41],[158,36,212,26,"isInitialUpdate"],[158,51,212,41],[159,8,213,6],[159,12,213,10,"client"],[159,18,213,16],[159,19,213,17,"isEnabled"],[159,28,213,26],[159,29,213,27],[159,30,213,28],[159,34,213,32],[159,35,213,33,"isInitialUpdate"],[159,50,213,48],[159,52,213,50],[160,10,214,8,"dismissRedbox"],[160,23,214,21],[160,24,214,22],[160,25,214,23],[161,10,215,8,"LogBox"],[161,25,215,14],[161,26,215,15,"clearAllLogs"],[161,38,215,27],[161,39,215,28],[161,40,215,29],[162,8,216,6],[163,6,217,4],[163,7,217,5],[163,8,217,6],[164,6,219,4,"client"],[164,12,219,10],[164,13,219,11,"on"],[164,15,219,13],[164,16,219,14],[164,29,219,27],[164,31,219,29],[164,43,219,35],[165,8,220,6,"LoadingView"],[165,19,220,17],[165,20,220,18,"hide"],[165,24,220,22],[165,25,220,23],[165,26,220,24],[166,6,221,4],[166,7,221,5],[166,8,221,6],[167,6,223,4,"client"],[167,12,223,10],[167,13,223,11,"on"],[167,15,223,13],[167,16,223,14],[167,23,223,21],[167,25,223,23],[167,35,223,23,"data"],[167,39,223,27],[167,41,223,31],[168,8,224,6,"LoadingView"],[168,19,224,17],[168,20,224,18,"hide"],[168,24,224,22],[168,25,224,23],[168,26,224,24],[169,8,226,6],[169,12,226,10,"data"],[169,16,226,14],[169,17,226,15,"type"],[169,21,226,19],[169,26,226,24],[169,46,226,44],[169,48,226,46],[170,10,227,8,"client"],[170,16,227,14],[170,17,227,15,"close"],[170,22,227,20],[170,23,227,21],[170,24,227,22],[171,10,228,8,"setHMRUnavailableReason"],[171,33,228,31],[171,34,229,10],[171,97,230,8],[171,98,230,9],[172,8,231,6],[172,9,231,7],[172,15,231,13],[172,19,231,17,"data"],[172,23,231,21],[172,24,231,22,"type"],[172,28,231,26],[172,33,231,31],[172,56,231,54],[172,58,231,56],[173,10,232,8,"client"],[173,16,232,14],[173,17,232,15,"close"],[173,22,232,20],[173,23,232,21],[173,24,232,22],[174,10,233,8,"setHMRUnavailableReason"],[174,33,233,31],[174,34,234,10],[174,94,235,8],[174,95,235,9],[175,8,236,6],[175,9,236,7],[175,15,236,13],[176,10,237,8,"currentCompileErrorMessage"],[176,36,237,34],[176,39,237,38],[176,42,237,40,"data"],[176,46,237,44],[176,47,237,45,"type"],[176,51,237,50],[176,55,237,53,"data"],[176,59,237,57],[176,60,237,58,"message"],[176,67,237,66],[176,69,237,67],[177,10,238,8],[177,14,238,12,"client"],[177,20,238,18],[177,21,238,19,"isEnabled"],[177,30,238,28],[177,31,238,29],[177,32,238,30],[177,34,238,32],[178,12,239,10,"showCompileError"],[178,28,239,26],[178,29,239,27],[178,30,239,28],[179,10,240,8],[180,8,241,6],[181,6,242,4],[181,7,242,5],[181,8,242,6],[182,6,244,4,"client"],[182,12,244,10],[182,13,244,11,"on"],[182,15,244,13],[182,16,244,14],[182,23,244,21],[182,25,244,23],[182,35,244,23,"closeEvent"],[182,45,244,33],[182,47,244,37],[183,8,245,6,"LoadingView"],[183,19,245,17],[183,20,245,18,"hide"],[183,24,245,22],[183,25,245,23],[183,26,245,24],[185,8,247,6],[186,8,248,6],[187,8,249,6],[187,12,249,12,"isNormalOrUnsetCloseReason"],[187,38,249,38],[187,41,250,8,"closeEvent"],[187,51,250,18],[187,55,250,22],[187,59,250,26],[187,63,251,8,"closeEvent"],[187,73,251,18],[187,74,251,19,"code"],[187,78,251,23],[187,83,251,28],[187,87,251,32],[187,91,252,8,"closeEvent"],[187,101,252,18],[187,102,252,19,"code"],[187,106,252,23],[187,111,252,28],[187,115,252,32],[187,119,253,8,"closeEvent"],[187,129,253,18],[187,130,253,19,"code"],[187,134,253,23],[187,138,253,27],[187,142,253,31],[188,8,255,6,"setHMRUnavailableReason"],[188,31,255,29],[188,32,256,9],[188,35,257,10,"isNormalOrUnsetCloseReason"],[188,61,257,36],[188,64,258,14],[188,90,258,40],[188,93,259,15],[188,121,259,42,"closeEvent"],[188,131,259,52],[188,132,259,53,"code"],[188,136,259,58],[188,142,259,63,"closeEvent"],[188,152,259,73],[188,153,259,74,"reason"],[188,159,259,81],[188,164,260,9],[189,0,261,0],[190,0,262,0],[191,0,263,0],[192,0,264,0],[193,0,265,0],[193,7,266,6],[193,8,266,7],[194,6,267,4],[194,7,267,5],[194,8,267,6],[195,6,269,4],[195,10,269,8,"isEnabled"],[195,19,269,17],[195,21,269,19],[196,8,270,6,"HMRClient"],[196,17,270,15],[196,18,270,16,"enable"],[196,24,270,22],[196,25,270,23],[196,26,270,24],[197,6,271,4],[197,7,271,5],[197,13,271,11],[198,8,272,6,"HMRClient"],[198,17,272,15],[198,18,272,16,"disable"],[198,25,272,23],[198,26,272,24],[198,27,272,25],[199,6,273,4],[200,6,275,4,"registerBundleEntryPoints"],[200,31,275,29],[200,32,275,30,"hmrClient"],[200,41,275,39],[200,42,275,40],[201,6,276,4,"flushEarlyLogs"],[201,20,276,18],[201,21,276,19,"hmrClient"],[201,30,276,28],[201,31,276,29],[202,4,277,2],[203,2,278,0],[203,3,278,1],[204,2,280,0],[204,11,280,9,"setHMRUnavailableReason"],[204,34,280,32,"setHMRUnavailableReason"],[204,35,280,33,"reason"],[204,41,280,47],[204,43,280,49],[205,4,281,2,"invariant"],[205,13,281,11],[205,14,281,12,"hmrClient"],[205,23,281,21],[205,25,281,23],[205,70,281,68],[205,71,281,69],[206,4,282,2],[206,8,282,6,"hmrUnavailableReason"],[206,28,282,26],[206,33,282,31],[206,37,282,35],[206,39,282,37],[207,6,283,4],[208,6,284,4],[209,4,285,2],[210,4,286,2,"hmrUnavailableReason"],[210,24,286,22],[210,27,286,25,"reason"],[210,33,286,31],[212,4,288,2],[213,4,289,2],[214,4,290,2],[215,4,291,2],[215,8,291,6,"hmrClient"],[215,17,291,15],[215,18,291,16,"isEnabled"],[215,27,291,25],[215,28,291,26],[215,29,291,27],[215,33,291,31,"didConnect"],[215,43,291,41],[215,45,291,43],[216,6,292,4,"console"],[216,13,292,11],[216,14,292,12,"warn"],[216,18,292,16],[216,19,292,17,"reason"],[216,25,292,23],[216,26,292,24],[217,6,293,4],[218,4,294,2],[219,2,295,0],[221,2,297,0],[221,11,297,9,"registerBundleEntryPoints"],[221,36,297,34,"registerBundleEntryPoints"],[221,37,297,35,"client"],[221,43,297,57],[221,45,297,59],[222,4,298,2],[222,8,298,6,"hmrUnavailableReason"],[222,28,298,26],[222,32,298,30],[222,36,298,34],[222,38,298,36],[223,6,299,4,"DevSettings"],[223,17,299,15],[223,18,299,16,"reload"],[223,24,299,22],[223,25,299,23],[223,64,299,62],[223,65,299,63],[224,6,300,4],[225,4,301,2],[226,4,303,2],[226,8,303,6,"pendingEntryPoints"],[226,26,303,24],[226,27,303,25,"length"],[226,33,303,31],[226,36,303,34],[226,37,303,35],[226,39,303,37],[227,6,304,4,"client"],[227,12,304,10],[227,13,304,11,"send"],[227,17,304,15],[227,18,305,6,"JSON"],[227,22,305,10],[227,23,305,11,"stringify"],[227,32,305,20],[227,33,305,21],[228,8,306,8,"type"],[228,12,306,12],[228,14,306,14],[228,36,306,36],[229,8,307,8,"entryPoints"],[229,19,307,19],[229,21,307,21,"pendingEntryPoints"],[230,6,308,6],[230,7,308,7],[230,8,309,4],[230,9,309,5],[231,6,310,4,"pendingEntryPoints"],[231,24,310,22],[231,25,310,23,"length"],[231,31,310,29],[231,34,310,32],[231,35,310,33],[232,4,311,2],[233,2,312,0],[234,2,314,0],[234,11,314,9,"flushEarlyLogs"],[234,25,314,23,"flushEarlyLogs"],[234,26,314,24,"client"],[234,32,314,46],[234,34,314,48],[235,4,315,2],[235,8,315,6],[236,6,316,4,"pendingLogs"],[236,17,316,15],[236,18,316,16,"forEach"],[236,25,316,23],[236,26,316,24],[236,36,316,24,"_ref3"],[236,41,316,24],[236,43,316,43],[237,8,316,43],[237,12,316,43,"_ref4"],[237,17,316,43],[237,24,316,43,"_slicedToArray2"],[237,39,316,43],[237,40,316,43,"default"],[237,47,316,43],[237,49,316,43,"_ref3"],[237,54,316,43],[238,10,316,26,"level"],[238,15,316,31],[238,18,316,31,"_ref4"],[238,23,316,31],[239,10,316,33,"data"],[239,14,316,37],[239,17,316,37,"_ref4"],[239,22,316,37],[240,8,317,6,"HMRClient"],[240,17,317,15],[240,18,317,16,"log"],[240,21,317,19],[240,22,317,20,"level"],[240,27,317,25],[240,29,317,27,"data"],[240,33,317,31],[240,34,317,32],[241,6,318,4],[241,7,318,5],[241,8,318,6],[242,4,319,2],[242,5,319,3],[242,14,319,12],[243,6,320,4,"pendingLogs"],[243,17,320,15],[243,18,320,16,"length"],[243,24,320,22],[243,27,320,25],[243,28,320,26],[244,4,321,2],[245,2,322,0],[246,2,324,0],[246,11,324,9,"dismissRedbox"],[246,24,324,22,"dismissRedbox"],[246,25,324,22],[246,27,324,25],[247,4,325,2],[247,8,326,4],[247,22,326,20],[247,27,326,25],[247,31,327,4,"NativeRedBox"],[247,52,327,16],[247,56,327,20],[247,60,327,24],[247,64,328,4,"NativeRedBox"],[247,85,328,16],[247,86,328,17,"dismiss"],[247,93,328,24],[247,97,328,28],[247,101,328,32],[247,103,329,4],[248,6,330,4,"NativeRedBox"],[248,27,330,16],[248,28,330,17,"dismiss"],[248,35,330,24],[248,36,330,25],[248,37,330,26],[249,4,331,2],[249,5,331,3],[249,11,331,9],[250,6,332,4],[250,10,332,10,"NativeExceptionsManager"],[250,33,332,33],[250,36,333,6,"require"],[250,47,333,13],[250,48,333,13,"_dependencyMap"],[250,62,333,13],[250,101,333,47],[250,102,333,48],[250,103,333,49,"default"],[250,110,333,56],[251,6,334,4,"NativeExceptionsManager"],[251,29,334,27],[251,33,335,6,"NativeExceptionsManager"],[251,56,335,29],[251,57,335,30,"dismissRedbox"],[251,70,335,43],[251,74,336,6,"NativeExceptionsManager"],[251,97,336,29],[251,98,336,30,"dismissRedbox"],[251,111,336,43],[251,112,336,44],[251,113,336,45],[252,4,337,2],[253,2,338,0],[254,2,340,0],[254,11,340,9,"showCompileError"],[254,27,340,25,"showCompileError"],[254,28,340,25],[254,30,340,28],[255,4,341,2],[255,8,341,6,"currentCompileErrorMessage"],[255,34,341,32],[255,39,341,37],[255,43,341,41],[255,45,341,43],[256,6,342,4],[257,4,343,2],[259,4,345,2],[260,4,346,2],[261,4,347,2,"dismissRedbox"],[261,17,347,15],[261,18,347,16],[261,19,347,17],[262,4,349,2],[262,8,349,8,"message"],[262,15,349,15],[262,18,349,18,"currentCompileErrorMessage"],[262,44,349,44],[263,4,350,2,"currentCompileErrorMessage"],[263,30,350,28],[263,33,350,31],[263,37,350,35],[265,4,352,2],[266,0,353,0],[267,4,354,2],[267,8,354,8,"error"],[267,13,354,28],[267,16,354,31],[267,20,354,35,"Error"],[267,25,354,40],[267,26,354,41,"message"],[267,33,354,48],[267,34,354,49],[268,4,355,2],[269,4,356,2],[270,4,357,2,"error"],[270,9,357,7],[270,10,357,8,"preventSymbolication"],[270,30,357,28],[270,33,357,31],[270,37,357,35],[271,4,358,2],[271,10,358,8,"error"],[271,15,358,13],[272,2,359,0],[273,2,361,0,"module"],[273,8,361,6],[273,9,361,7,"exports"],[273,16,361,14],[273,19,361,17,"HMRClient"],[273,28,361,26],[274,0,361,27]],"functionMap":{"names":["<global>","enable","disable","registerBundle","log","data.map$argument_0","setup","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;EC4D;GDkC;EEE;GFG;EGE;GHI;EIE;yBCgB;kBDS;GJQ;EMI;kCCiC;KDuB;8BCE;KDO;wBCE;KDK;6BCE;KDE;uBCE;KDmB;uBCE;KDuB;GNU;AQG;CRe;ASE;CTe;AUE;wBCE;KDE;CVI;AYE;CZc;AaE;CbmB"}},"type":"js/module"}]}