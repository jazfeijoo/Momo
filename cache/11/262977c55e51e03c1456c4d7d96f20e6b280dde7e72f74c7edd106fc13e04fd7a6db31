{"dependencies":[{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":18,"index":336},"end":{"line":16,"column":38,"index":356}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":14,"index":372},"end":{"line":17,"column":30,"index":388}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var invariant = _$$_REQUIRE(_dependencyMap[0], \"invariant\");\n  var React = _$$_REQUIRE(_dependencyMap[1], \"react\");\n  var hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n  var renderers = findRenderers();\n  function findRenderers() {\n    var allRenderers = Array.from(hook.renderers.values());\n    invariant(allRenderers.length >= 1, 'Expected to find at least one React Native renderer on DevTools hook.');\n    return allRenderers;\n  }\n  module.exports = function getInspectorDataForViewAtPoint(inspectedView, locationX, locationY, callback) {\n    var shouldBreak = false;\n    // Check all renderers for inspector data.\n    for (var i = 0; i < renderers.length; i++) {\n      var _renderer$rendererCon;\n      if (shouldBreak) {\n        break;\n      }\n      var renderer = renderers[i];\n      if ((renderer == null ? void 0 : (_renderer$rendererCon = renderer.rendererConfig) == null ? void 0 : _renderer$rendererCon.getInspectorDataForViewAtPoint) != null) {\n        renderer.rendererConfig.getInspectorDataForViewAtPoint(inspectedView, locationX, locationY, function (viewData) {\n          // Only return with non-empty view data since only one renderer will have this view.\n          if (viewData && viewData.hierarchy.length > 0) {\n            shouldBreak = callback(viewData);\n          }\n        });\n      }\n    }\n  };\n});","lineCount":40,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,16,0],[12,6,16,6,"invariant"],[12,15,16,15],[12,18,16,18,"require"],[12,29,16,25],[12,30,16,25,"_dependencyMap"],[12,44,16,25],[12,60,16,37],[12,61,16,38],[13,2,17,0],[13,6,17,6,"React"],[13,11,17,11],[13,14,17,14,"require"],[13,25,17,21],[13,26,17,21,"_dependencyMap"],[13,40,17,21],[13,52,17,29],[13,53,17,30],[14,2,32,0],[14,6,32,6,"hook"],[14,10,32,10],[14,13,32,13,"window"],[14,19,32,19],[14,20,32,20,"__REACT_DEVTOOLS_GLOBAL_HOOK__"],[14,50,32,50],[15,2,33,0],[15,6,33,6,"renderers"],[15,15,33,15],[15,18,33,18,"findRenderers"],[15,31,33,31],[15,32,33,32],[15,33,33,33],[16,2,35,0],[16,11,35,9,"findRenderers"],[16,24,35,22,"findRenderers"],[16,25,35,22],[16,27,35,56],[17,4,36,2],[17,8,36,8,"allRenderers"],[17,20,36,20],[17,23,36,23,"Array"],[17,28,36,28],[17,29,36,29,"from"],[17,33,36,33],[17,34,36,34,"hook"],[17,38,36,38],[17,39,36,39,"renderers"],[17,48,36,48],[17,49,36,49,"values"],[17,55,36,55],[17,56,36,56],[17,57,36,57],[17,58,36,58],[18,4,37,2,"invariant"],[18,13,37,11],[18,14,38,4,"allRenderers"],[18,26,38,16],[18,27,38,17,"length"],[18,33,38,23],[18,37,38,27],[18,38,38,28],[18,40,39,4],[18,111,40,2],[18,112,40,3],[19,4,41,2],[19,11,41,9,"allRenderers"],[19,23,41,21],[20,2,42,0],[21,2,44,0,"module"],[21,8,44,6],[21,9,44,7,"exports"],[21,16,44,14],[21,19,44,17],[21,28,44,26,"getInspectorDataForViewAtPoint"],[21,58,44,56,"getInspectorDataForViewAtPoint"],[21,59,45,2,"inspectedView"],[21,72,45,25],[21,74,46,2,"locationX"],[21,83,46,19],[21,85,47,2,"locationY"],[21,94,47,19],[21,96,48,2,"callback"],[21,104,48,57],[21,106,49,2],[22,4,50,2],[22,8,50,6,"shouldBreak"],[22,19,50,17],[22,22,50,20],[22,27,50,25],[23,4,51,2],[24,4,52,2],[24,9,52,7],[24,13,52,11,"i"],[24,14,52,12],[24,17,52,15],[24,18,52,16],[24,20,52,18,"i"],[24,21,52,19],[24,24,52,22,"renderers"],[24,33,52,31],[24,34,52,32,"length"],[24,40,52,38],[24,42,52,40,"i"],[24,43,52,41],[24,45,52,43],[24,47,52,45],[25,6,52,45],[25,10,52,45,"_renderer$rendererCon"],[25,31,52,45],[26,6,53,4],[26,10,53,8,"shouldBreak"],[26,21,53,19],[26,23,53,21],[27,8,54,6],[28,6,55,4],[29,6,56,4],[29,10,56,10,"renderer"],[29,18,56,18],[29,21,56,21,"renderers"],[29,30,56,30],[29,31,56,31,"i"],[29,32,56,32],[29,33,56,33],[30,6,57,4],[30,10,57,8],[30,11,57,8,"renderer"],[30,19,57,16],[30,40,57,16,"_renderer$rendererCon"],[30,61,57,16],[30,64,57,8,"renderer"],[30,72,57,16],[30,73,57,18,"rendererConfig"],[30,87,57,32],[30,108,57,8,"_renderer$rendererCon"],[30,129,57,8],[30,130,57,34,"getInspectorDataForViewAtPoint"],[30,160,57,64],[30,165,57,68],[30,169,57,72],[30,171,57,74],[31,8,58,6,"renderer"],[31,16,58,14],[31,17,58,15,"rendererConfig"],[31,31,58,29],[31,32,58,30,"getInspectorDataForViewAtPoint"],[31,62,58,60],[31,63,59,8,"inspectedView"],[31,76,59,21],[31,78,60,8,"locationX"],[31,87,60,17],[31,89,61,8,"locationY"],[31,98,61,17],[31,100,62,8],[31,110,62,8,"viewData"],[31,118,62,16],[31,120,62,20],[32,10,63,10],[33,10,64,10],[33,14,64,14,"viewData"],[33,22,64,22],[33,26,64,26,"viewData"],[33,34,64,34],[33,35,64,35,"hierarchy"],[33,44,64,44],[33,45,64,45,"length"],[33,51,64,51],[33,54,64,54],[33,55,64,55],[33,57,64,57],[34,12,65,12,"shouldBreak"],[34,23,65,23],[34,26,65,26,"callback"],[34,34,65,34],[34,35,65,35,"viewData"],[34,43,65,43],[34,44,65,44],[35,10,66,10],[36,8,67,8],[36,9,68,6],[36,10,68,7],[37,6,69,4],[38,4,70,2],[39,2,71,0],[39,3,71,1],[40,0,71,2]],"functionMap":{"names":["<global>","findRenderers","getInspectorDataForViewAtPoint","renderer.rendererConfig.getInspectorDataForViewAtPoint$argument_3"],"mappings":"AAA;ACkC;CDO;iBEE;QCkB;SDK;CFI"}},"type":"js/module"}]}