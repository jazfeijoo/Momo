{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":75,"column":0,"index":2080}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":75,"column":0,"index":2080}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useSyncState;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"react\"));\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n  var UNINTIALIZED_STATE = {};\n\n  /**\n   * This is definitely not compatible with concurrent mode, but we don't have a solution for sync state yet.\n   */\n  function useSyncState(initialState) {\n    var stateRef = React.useRef(UNINTIALIZED_STATE);\n    var isSchedulingRef = React.useRef(false);\n    var isMountedRef = React.useRef(true);\n    React.useEffect(function () {\n      isMountedRef.current = true;\n      return function () {\n        isMountedRef.current = false;\n      };\n    }, []);\n    if (stateRef.current === UNINTIALIZED_STATE) {\n      stateRef.current =\n      // @ts-expect-error: initialState is a function, but TypeScript doesn't think so\n      typeof initialState === 'function' ? initialState() : initialState;\n    }\n    var _React$useState = React.useState(stateRef.current),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      trackingState = _React$useState2[0],\n      setTrackingState = _React$useState2[1];\n    var getState = React.useCallback(function () {\n      return stateRef.current;\n    }, []);\n    var setState = React.useCallback(function (state) {\n      if (state === stateRef.current || !isMountedRef.current) {\n        return;\n      }\n      stateRef.current = state;\n      if (!isSchedulingRef.current) {\n        setTrackingState(state);\n      }\n    }, []);\n    var scheduleUpdate = React.useCallback(function (callback) {\n      isSchedulingRef.current = true;\n      try {\n        callback();\n      } finally {\n        isSchedulingRef.current = false;\n      }\n    }, []);\n    var flushUpdates = React.useCallback(function () {\n      if (!isMountedRef.current) {\n        return;\n      }\n\n      // Make sure that the tracking state is up-to-date.\n      // We call it unconditionally, but React should skip the update if state is unchanged.\n      setTrackingState(stateRef.current);\n    }, []);\n\n    // If we're rendering and the tracking state is out of date, update it immediately\n    // This will make sure that our updates are applied as early as possible.\n    if (trackingState !== stateRef.current) {\n      setTrackingState(stateRef.current);\n    }\n    var state = stateRef.current;\n    React.useDebugValue(state);\n    return [state, getState, setState, scheduleUpdate, flushUpdates];\n  }\n});","lineCount":74,"map":[[8,2,1,0],[8,6,1,0,"React"],[8,11,1,0],[8,14,1,0,"_interopRequireWildcard"],[8,37,1,0],[8,38,1,0,"_$$_REQUIRE"],[8,49,1,0],[8,50,1,0,"_dependencyMap"],[8,64,1,0],[9,2,1,31],[9,11,1,31,"_getRequireWildcardCache"],[9,36,1,31,"nodeInterop"],[9,47,1,31],[9,62,1,31,"WeakMap"],[9,69,1,31],[9,103,1,31,"cacheBabelInterop"],[9,120,1,31],[9,127,1,31,"WeakMap"],[9,134,1,31],[9,142,1,31,"cacheNodeInterop"],[9,158,1,31],[9,165,1,31,"WeakMap"],[9,172,1,31],[9,184,1,31,"_getRequireWildcardCache"],[9,208,1,31],[9,220,1,31,"_getRequireWildcardCache"],[9,245,1,31,"nodeInterop"],[9,256,1,31],[9,267,1,31,"nodeInterop"],[9,278,1,31],[9,281,1,31,"cacheNodeInterop"],[9,297,1,31],[9,300,1,31,"cacheBabelInterop"],[9,317,1,31],[9,322,1,31,"nodeInterop"],[9,333,1,31],[10,2,1,31],[10,11,1,31,"_interopRequireWildcard"],[10,35,1,31,"obj"],[10,38,1,31],[10,40,1,31,"nodeInterop"],[10,51,1,31],[10,60,1,31,"nodeInterop"],[10,71,1,31],[10,75,1,31,"obj"],[10,78,1,31],[10,82,1,31,"obj"],[10,85,1,31],[10,86,1,31,"__esModule"],[10,96,1,31],[10,107,1,31,"obj"],[10,110,1,31],[10,118,1,31,"obj"],[10,121,1,31],[10,141,1,31,"obj"],[10,144,1,31],[10,168,1,31,"obj"],[10,171,1,31],[10,199,1,31,"default"],[10,206,1,31],[10,208,1,31,"obj"],[10,211,1,31],[10,221,1,31,"cache"],[10,226,1,31],[10,229,1,31,"_getRequireWildcardCache"],[10,253,1,31],[10,254,1,31,"nodeInterop"],[10,265,1,31],[10,272,1,31,"cache"],[10,277,1,31],[10,281,1,31,"cache"],[10,286,1,31],[10,287,1,31,"has"],[10,290,1,31],[10,291,1,31,"obj"],[10,294,1,31],[10,306,1,31,"cache"],[10,311,1,31],[10,312,1,31,"get"],[10,315,1,31],[10,316,1,31,"obj"],[10,319,1,31],[10,328,1,31,"newObj"],[10,334,1,31],[10,345,1,31,"hasPropertyDescriptor"],[10,366,1,31],[10,369,1,31,"Object"],[10,375,1,31],[10,376,1,31,"defineProperty"],[10,390,1,31],[10,394,1,31,"Object"],[10,400,1,31],[10,401,1,31,"getOwnPropertyDescriptor"],[10,425,1,31],[10,436,1,31,"key"],[10,439,1,31],[10,443,1,31,"obj"],[10,446,1,31],[10,454,1,31,"key"],[10,457,1,31],[10,475,1,31,"Object"],[10,481,1,31],[10,482,1,31,"prototype"],[10,491,1,31],[10,492,1,31,"hasOwnProperty"],[10,506,1,31],[10,507,1,31,"call"],[10,511,1,31],[10,512,1,31,"obj"],[10,515,1,31],[10,517,1,31,"key"],[10,520,1,31],[10,529,1,31,"desc"],[10,533,1,31],[10,536,1,31,"hasPropertyDescriptor"],[10,557,1,31],[10,560,1,31,"Object"],[10,566,1,31],[10,567,1,31,"getOwnPropertyDescriptor"],[10,591,1,31],[10,592,1,31,"obj"],[10,595,1,31],[10,597,1,31,"key"],[10,600,1,31],[10,614,1,31,"desc"],[10,618,1,31],[10,623,1,31,"desc"],[10,627,1,31],[10,628,1,31,"get"],[10,631,1,31],[10,635,1,31,"desc"],[10,639,1,31],[10,640,1,31,"set"],[10,643,1,31],[10,648,1,31,"Object"],[10,654,1,31],[10,655,1,31,"defineProperty"],[10,669,1,31],[10,670,1,31,"newObj"],[10,676,1,31],[10,678,1,31,"key"],[10,681,1,31],[10,683,1,31,"desc"],[10,687,1,31],[10,699,1,31,"newObj"],[10,705,1,31],[10,706,1,31,"key"],[10,709,1,31],[10,713,1,31,"obj"],[10,716,1,31],[10,717,1,31,"key"],[10,720,1,31],[10,729,1,31,"newObj"],[10,735,1,31],[10,736,1,31,"default"],[10,743,1,31],[10,746,1,31,"obj"],[10,749,1,31],[10,755,1,31,"cache"],[10,760,1,31],[10,764,1,31,"cache"],[10,769,1,31],[10,770,1,31,"set"],[10,773,1,31],[10,774,1,31,"obj"],[10,777,1,31],[10,779,1,31,"newObj"],[10,785,1,31],[10,797,1,31,"newObj"],[10,803,1,31],[11,2,3,0],[11,6,3,6,"UNINTIALIZED_STATE"],[11,24,3,24],[11,27,3,27],[11,28,3,28],[11,29,3,29],[13,2,5,0],[14,0,6,0],[15,0,7,0],[16,2,8,15],[16,11,8,24,"useSyncState"],[16,23,8,36,"useSyncState"],[16,24,8,40,"initialState"],[16,36,8,68],[16,38,8,70],[17,4,9,2],[17,8,9,8,"stateRef"],[17,16,9,16],[17,19,9,19,"React"],[17,24,9,24],[17,25,9,25,"useRef"],[17,31,9,31],[17,32,9,35,"UNINTIALIZED_STATE"],[17,50,9,60],[17,51,9,61],[18,4,10,2],[18,8,10,8,"isSchedulingRef"],[18,23,10,23],[18,26,10,26,"React"],[18,31,10,31],[18,32,10,32,"useRef"],[18,38,10,38],[18,39,10,39],[18,44,10,44],[18,45,10,45],[19,4,11,2],[19,8,11,8,"isMountedRef"],[19,20,11,20],[19,23,11,23,"React"],[19,28,11,28],[19,29,11,29,"useRef"],[19,35,11,35],[19,36,11,36],[19,40,11,40],[19,41,11,41],[20,4,13,2,"React"],[20,9,13,7],[20,10,13,8,"useEffect"],[20,19,13,17],[20,20,13,18],[20,32,13,24],[21,6,14,4,"isMountedRef"],[21,18,14,16],[21,19,14,17,"current"],[21,26,14,24],[21,29,14,27],[21,33,14,31],[22,6,16,4],[22,13,16,11],[22,25,16,17],[23,8,17,6,"isMountedRef"],[23,20,17,18],[23,21,17,19,"current"],[23,28,17,26],[23,31,17,29],[23,36,17,34],[24,6,18,4],[24,7,18,5],[25,4,19,2],[25,5,19,3],[25,7,19,5],[25,9,19,7],[25,10,19,8],[26,4,21,2],[26,8,21,6,"stateRef"],[26,16,21,14],[26,17,21,15,"current"],[26,24,21,22],[26,29,21,27,"UNINTIALIZED_STATE"],[26,47,21,45],[26,49,21,47],[27,6,22,4,"stateRef"],[27,14,22,12],[27,15,22,13,"current"],[27,22,22,20],[28,6,23,6],[29,6,24,6],[29,13,24,13,"initialState"],[29,25,24,25],[29,30,24,30],[29,40,24,40],[29,43,24,43,"initialState"],[29,55,24,55],[29,56,24,56],[29,57,24,57],[29,60,24,60,"initialState"],[29,72,24,72],[30,4,25,2],[31,4,27,2],[31,8,27,2,"_React$useState"],[31,23,27,2],[31,26,27,44,"React"],[31,31,27,49],[31,32,27,50,"useState"],[31,40,27,58],[31,41,27,59,"stateRef"],[31,49,27,67],[31,50,27,68,"current"],[31,57,27,75],[31,58,27,76],[32,6,27,76,"_React$useState2"],[32,22,27,76],[32,29,27,76,"_slicedToArray2"],[32,44,27,76],[32,45,27,76,"default"],[32,52,27,76],[32,54,27,76,"_React$useState"],[32,69,27,76],[33,6,27,9,"trackingState"],[33,19,27,22],[33,22,27,22,"_React$useState2"],[33,38,27,22],[34,6,27,24,"setTrackingState"],[34,22,27,40],[34,25,27,40,"_React$useState2"],[34,41,27,40],[35,4,29,2],[35,8,29,8,"getState"],[35,16,29,16],[35,19,29,19,"React"],[35,24,29,24],[35,25,29,25,"useCallback"],[35,36,29,36],[35,37,29,37],[36,6,29,37],[36,13,29,43,"stateRef"],[36,21,29,51],[36,22,29,52,"current"],[36,29,29,59],[37,4,29,59],[37,7,29,61],[37,9,29,63],[37,10,29,64],[38,4,31,2],[38,8,31,8,"setState"],[38,16,31,16],[38,19,31,19,"React"],[38,24,31,24],[38,25,31,25,"useCallback"],[38,36,31,36],[38,37,31,37],[38,47,31,38,"state"],[38,52,31,46],[38,54,31,51],[39,6,32,4],[39,10,32,8,"state"],[39,15,32,13],[39,20,32,18,"stateRef"],[39,28,32,26],[39,29,32,27,"current"],[39,36,32,34],[39,40,32,38],[39,41,32,39,"isMountedRef"],[39,53,32,51],[39,54,32,52,"current"],[39,61,32,59],[39,63,32,61],[40,8,33,6],[41,6,34,4],[42,6,36,4,"stateRef"],[42,14,36,12],[42,15,36,13,"current"],[42,22,36,20],[42,25,36,23,"state"],[42,30,36,28],[43,6,38,4],[43,10,38,8],[43,11,38,9,"isSchedulingRef"],[43,26,38,24],[43,27,38,25,"current"],[43,34,38,32],[43,36,38,34],[44,8,39,6,"setTrackingState"],[44,24,39,22],[44,25,39,23,"state"],[44,30,39,28],[44,31,39,29],[45,6,40,4],[46,4,41,2],[46,5,41,3],[46,7,41,5],[46,9,41,7],[46,10,41,8],[47,4,43,2],[47,8,43,8,"scheduleUpdate"],[47,22,43,22],[47,25,43,25,"React"],[47,30,43,30],[47,31,43,31,"useCallback"],[47,42,43,42],[47,43,43,43],[47,53,43,44,"callback"],[47,61,43,64],[47,63,43,69],[48,6,44,4,"isSchedulingRef"],[48,21,44,19],[48,22,44,20,"current"],[48,29,44,27],[48,32,44,30],[48,36,44,34],[49,6,46,4],[49,10,46,8],[50,8,47,6,"callback"],[50,16,47,14],[50,17,47,15],[50,18,47,16],[51,6,48,4],[51,7,48,5],[51,16,48,14],[52,8,49,6,"isSchedulingRef"],[52,23,49,21],[52,24,49,22,"current"],[52,31,49,29],[52,34,49,32],[52,39,49,37],[53,6,50,4],[54,4,51,2],[54,5,51,3],[54,7,51,5],[54,9,51,7],[54,10,51,8],[55,4,53,2],[55,8,53,8,"flushUpdates"],[55,20,53,20],[55,23,53,23,"React"],[55,28,53,28],[55,29,53,29,"useCallback"],[55,40,53,40],[55,41,53,41],[55,53,53,47],[56,6,54,4],[56,10,54,8],[56,11,54,9,"isMountedRef"],[56,23,54,21],[56,24,54,22,"current"],[56,31,54,29],[56,33,54,31],[57,8,55,6],[58,6,56,4],[60,6,58,4],[61,6,59,4],[62,6,60,4,"setTrackingState"],[62,22,60,20],[62,23,60,21,"stateRef"],[62,31,60,29],[62,32,60,30,"current"],[62,39,60,37],[62,40,60,38],[63,4,61,2],[63,5,61,3],[63,7,61,5],[63,9,61,7],[63,10,61,8],[65,4,63,2],[66,4,64,2],[67,4,65,2],[67,8,65,6,"trackingState"],[67,21,65,19],[67,26,65,24,"stateRef"],[67,34,65,32],[67,35,65,33,"current"],[67,42,65,40],[67,44,65,42],[68,6,66,4,"setTrackingState"],[68,22,66,20],[68,23,66,21,"stateRef"],[68,31,66,29],[68,32,66,30,"current"],[68,39,66,37],[68,40,66,38],[69,4,67,2],[70,4,69,2],[70,8,69,8,"state"],[70,13,69,13],[70,16,69,16,"stateRef"],[70,24,69,24],[70,25,69,25,"current"],[70,32,69,32],[71,4,71,2,"React"],[71,9,71,7],[71,10,71,8,"useDebugValue"],[71,23,71,21],[71,24,71,22,"state"],[71,29,71,27],[71,30,71,28],[72,4,73,2],[72,11,73,9],[72,12,73,10,"state"],[72,17,73,15],[72,19,73,17,"getState"],[72,27,73,25],[72,29,73,27,"setState"],[72,37,73,35],[72,39,73,37,"scheduleUpdate"],[72,53,73,51],[72,55,73,53,"flushUpdates"],[72,67,73,65],[72,68,73,66],[73,2,74,0],[74,0,74,1]],"functionMap":{"names":["<global>","useSyncState","React.useEffect$argument_0","<anonymous>","getState","setState","scheduleUpdate","flushUpdates"],"mappings":"AAA;eCO;kBCK;WCG;KDE;GDC;qCGU,sBH;qCIE;GJU;2CKE;GLQ;yCME;GNQ;CDa"}},"type":"js/module"}]}