{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":81,"column":42,"index":1984}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\n   * Safely retrieves R value of T object with reducer\n   *\n   * @param value (T | undefined) - unsafe object which should be processed\n   * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n   *\n   * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `undefined` otherwise\n   **/\n  function safe(value, reducer) {\n    if (value) {\n      return reducer(value);\n    }\n    return undefined;\n  }\n  exports.safe = safe;\n  /**\n   * Maps 2-dim array to 1-dim\n   *\n   * @param params (T[][]) - 2-dim array\n   *\n   * @return 1-dim array\n   */\n  function flatten(params) {\n    var _ref;\n    return (_ref = []).concat.apply(_ref, _toConsumableArray(params));\n  }\n  exports.flatten = flatten;\n  /**\n   * Removes all duplicates from array\n   *\n   * @param params (T[]) - array with possible duplicate values\n   *\n   * @return (T[]) - processed array\n   */\n  function noDuplicates(params) {\n    return _toConsumableArray(new Set(params));\n  }\n  exports.noDuplicates = noDuplicates;\n  /**\n   * Removes null and undefined values from array\n   *\n   * @param params (T[]) - array with possible null values\n   *\n   * @return (T[]) - processed array\n   */\n  function noNulls(params) {\n    return params.filter(Boolean);\n  }\n  exports.noNulls = noNulls;\n  /**\n   * Returns Object with string keys from array type [string, IndexSignatureBase]\n   *\n   * @param array like [string, IndexSignatureBase]\n   *\n   * @return object with string keys and IndexSignatureBase values\n   */\n  function toObject(array) {\n    return array.reduce(function (p, c) {\n      if (p && p.hasOwnProperty(c[0])) {\n        p[c[0]] = Object.assign(Object.assign({}, p[c[0]]), c[1]);\n      } else {\n        p[c[0]] = c[1];\n      }\n      return p;\n    }, {});\n  }\n  exports.toObject = toObject;\n  /**\n   * Check value for null or undefined\n   *\n   *\n   * @return boolean\n   * @param value\n   */\n  function isNil(value) {\n    return value === undefined || value === null;\n  }\n  exports.isNil = isNil;\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,2,11,0],[16,11,11,9,"safe"],[16,15,11,13,"safe"],[16,16,11,14,"value"],[16,21,11,19],[16,23,11,21,"reducer"],[16,30,11,28],[16,32,11,30],[17,4,12,4],[17,8,12,8,"value"],[17,13,12,13],[17,15,12,15],[18,6,13,8],[18,13,13,15,"reducer"],[18,20,13,22],[18,21,13,23,"value"],[18,26,13,28],[18,27,13,29],[19,4,14,4],[20,4,15,4],[20,11,15,11,"undefined"],[20,20,15,20],[21,2,16,0],[22,2,17,0,"exports"],[22,9,17,7],[22,10,17,8,"safe"],[22,14,17,12],[22,17,17,15,"safe"],[22,21,17,19],[23,2,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,2,25,0],[30,11,25,9,"flatten"],[30,18,25,16,"flatten"],[30,19,25,17,"params"],[30,25,25,23],[30,27,25,25],[31,4,25,25],[31,8,25,25,"_ref"],[31,12,25,25],[32,4,26,4],[32,11,26,11],[32,12,26,11,"_ref"],[32,16,26,11],[32,21,26,13],[32,23,26,14,"concat"],[32,29,26,20],[32,30,26,20,"apply"],[32,35,26,20],[32,36,26,20,"_ref"],[32,40,26,20],[32,42,26,20,"_toConsumableArray"],[32,60,26,20],[32,61,26,24,"params"],[32,67,26,30],[32,69,26,31],[33,2,27,0],[34,2,28,0,"exports"],[34,9,28,7],[34,10,28,8,"flatten"],[34,17,28,15],[34,20,28,18,"flatten"],[34,27,28,25],[35,2,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,2,36,0],[42,11,36,9,"noDuplicates"],[42,23,36,21,"noDuplicates"],[42,24,36,22,"params"],[42,30,36,28],[42,32,36,30],[43,4,37,4],[43,11,37,4,"_toConsumableArray"],[43,29,37,4],[43,30,37,15],[43,34,37,19,"Set"],[43,37,37,22],[43,38,37,23,"params"],[43,44,37,29],[43,45,37,30],[44,2,38,0],[45,2,39,0,"exports"],[45,9,39,7],[45,10,39,8,"noDuplicates"],[45,22,39,20],[45,25,39,23,"noDuplicates"],[45,37,39,35],[46,2,40,0],[47,0,41,0],[48,0,42,0],[49,0,43,0],[50,0,44,0],[51,0,45,0],[52,0,46,0],[53,2,47,0],[53,11,47,9,"noNulls"],[53,18,47,16,"noNulls"],[53,19,47,17,"params"],[53,25,47,23],[53,27,47,25],[54,4,48,4],[54,11,48,11,"params"],[54,17,48,17],[54,18,48,18,"filter"],[54,24,48,24],[54,25,48,25,"Boolean"],[54,32,48,32],[54,33,48,33],[55,2,49,0],[56,2,50,0,"exports"],[56,9,50,7],[56,10,50,8,"noNulls"],[56,17,50,15],[56,20,50,18,"noNulls"],[56,27,50,25],[57,2,51,0],[58,0,52,0],[59,0,53,0],[60,0,54,0],[61,0,55,0],[62,0,56,0],[63,0,57,0],[64,2,58,0],[64,11,58,9,"toObject"],[64,19,58,17,"toObject"],[64,20,58,18,"array"],[64,25,58,23],[64,27,58,25],[65,4,59,4],[65,11,59,11,"array"],[65,16,59,16],[65,17,59,17,"reduce"],[65,23,59,23],[65,24,59,24],[65,34,59,25,"p"],[65,35,59,26],[65,37,59,28,"c"],[65,38,59,29],[65,40,59,34],[66,6,60,8],[66,10,60,12,"p"],[66,11,60,13],[66,15,60,17,"p"],[66,16,60,18],[66,17,60,19,"hasOwnProperty"],[66,31,60,33],[66,32,60,34,"c"],[66,33,60,35],[66,34,60,36],[66,35,60,37],[66,36,60,38],[66,37,60,39],[66,39,60,41],[67,8,61,12,"p"],[67,9,61,13],[67,10,61,14,"c"],[67,11,61,15],[67,12,61,16],[67,13,61,17],[67,14,61,18],[67,15,61,19],[67,18,61,22,"Object"],[67,24,61,28],[67,25,61,29,"assign"],[67,31,61,35],[67,32,61,36,"Object"],[67,38,61,42],[67,39,61,43,"assign"],[67,45,61,49],[67,46,61,50],[67,47,61,51],[67,48,61,52],[67,50,61,54,"p"],[67,51,61,55],[67,52,61,56,"c"],[67,53,61,57],[67,54,61,58],[67,55,61,59],[67,56,61,60],[67,57,61,61],[67,58,61,62],[67,60,61,64,"c"],[67,61,61,65],[67,62,61,66],[67,63,61,67],[67,64,61,68],[67,65,61,69],[68,6,62,8],[68,7,62,9],[68,13,63,13],[69,8,64,12,"p"],[69,9,64,13],[69,10,64,14,"c"],[69,11,64,15],[69,12,64,16],[69,13,64,17],[69,14,64,18],[69,15,64,19],[69,18,64,22,"c"],[69,19,64,23],[69,20,64,24],[69,21,64,25],[69,22,64,26],[70,6,65,8],[71,6,66,8],[71,13,66,15,"p"],[71,14,66,16],[72,4,67,4],[72,5,67,5],[72,7,67,7],[72,8,67,8],[72,9,67,9],[72,10,67,10],[73,2,68,0],[74,2,69,0,"exports"],[74,9,69,7],[74,10,69,8,"toObject"],[74,18,69,16],[74,21,69,19,"toObject"],[74,29,69,27],[75,2,70,0],[76,0,71,0],[77,0,72,0],[78,0,73,0],[79,0,74,0],[80,0,75,0],[81,0,76,0],[82,2,77,0],[82,11,77,9,"isNil"],[82,16,77,14,"isNil"],[82,17,77,15,"value"],[82,22,77,20],[82,24,77,22],[83,4,78,4],[83,11,78,11,"value"],[83,16,78,16],[83,21,78,21,"undefined"],[83,30,78,30],[83,34,78,34,"value"],[83,39,78,39],[83,44,78,44],[83,48,78,48],[84,2,79,0],[85,2,80,0,"exports"],[85,9,80,7],[85,10,80,8,"isNil"],[85,15,80,13],[85,18,80,16,"isNil"],[85,23,80,21],[86,0,80,22]],"functionMap":{"names":["<global>","safe","flatten","noDuplicates","noNulls","toObject","array.reduce$argument_0","isNil"],"mappings":"AAA;ACU;CDK;AES;CFE;AGS;CHE;AIS;CJE;AKS;wBCC;KDQ;CLC;AOS;CPE"}},"type":"js/module"}]}