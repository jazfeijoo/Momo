{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":262,"column":0,"index":7408}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":352},"end":{"line":14,"column":45,"index":397}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"../Utilities/RCTLog","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":398},"end":{"line":15,"column":41,"index":439}}],"key":"Uuj/Cy2CxwSpVOuCB8J/Nbqu/Os="}},{"name":"./Data/LogBoxData","data":{"asyncType":null,"locs":[{"start":{"line":36,"column":21,"index":875},"end":{"line":36,"column":49,"index":903}}],"key":"K5kTudEgKIwocGVzIW0z8MB2Ajk="}},{"name":"./Data/parseLogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":37,"column":47,"index":952},"end":{"line":37,"column":79,"index":984}}],"key":"3iOElTH1ik3IcLhNaEJLMMKfNkk="}},{"name":"../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"locs":[{"start":{"line":55,"column":6,"index":1344},"end":{"line":55,"column":52,"index":1390}}],"key":"3NGMD8vmV28wtRZ8vh45i5e10Mo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../Utilities/Platform\"));\n  var _RCTLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../Utilities/RCTLog\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  var LogBox;\n  /**\n   * LogBox displays logs in the app.\n   */\n  if (__DEV__) {\n    var LogBoxData = _$$_REQUIRE(_dependencyMap[3], \"./Data/LogBoxData\");\n    var _require = _$$_REQUIRE(_dependencyMap[4], \"./Data/parseLogBoxLog\"),\n      parseLogBoxLog = _require.parseLogBoxLog,\n      parseInterpolation = _require.parseInterpolation;\n    var originalConsoleError;\n    var originalConsoleWarn;\n    var consoleErrorImpl;\n    var consoleWarnImpl;\n    var isLogBoxInstalled = false;\n    LogBox = {\n      install: function install() {\n        if (isLogBoxInstalled) {\n          return;\n        }\n        isLogBoxInstalled = true;\n\n        // Trigger lazy initialization of module.\n        _$$_REQUIRE(_dependencyMap[5], \"../NativeModules/specs/NativeLogBox\");\n\n        // IMPORTANT: we only overwrite `console.error` and `console.warn` once.\n        // When we uninstall we keep the same reference and only change its\n        // internal implementation\n        var isFirstInstall = originalConsoleError == null;\n        if (isFirstInstall) {\n          originalConsoleError = console.error.bind(console);\n          originalConsoleWarn = console.warn.bind(console);\n\n          // $FlowExpectedError[cannot-write]\n          console.error = function () {\n            consoleErrorImpl.apply(void 0, arguments);\n          };\n          // $FlowExpectedError[cannot-write]\n          console.warn = function () {\n            consoleWarnImpl.apply(void 0, arguments);\n          };\n        }\n        consoleErrorImpl = registerError;\n        consoleWarnImpl = registerWarning;\n        if (_Platform.default.isTesting) {\n          LogBoxData.setDisabled(true);\n        }\n        _RCTLog.default.setWarningHandler(function () {\n          registerWarning.apply(void 0, arguments);\n        });\n      },\n      uninstall: function uninstall() {\n        if (!isLogBoxInstalled) {\n          return;\n        }\n        isLogBoxInstalled = false;\n\n        // IMPORTANT: we don't re-assign to `console` in case the method has been\n        // decorated again after installing LogBox. E.g.:\n        // Before uninstalling: original > LogBox > OtherErrorHandler\n        // After uninstalling:  original > LogBox (noop) > OtherErrorHandler\n        consoleErrorImpl = originalConsoleError;\n        consoleWarnImpl = originalConsoleWarn;\n      },\n      isInstalled: function isInstalled() {\n        return isLogBoxInstalled;\n      },\n      ignoreLogs: function ignoreLogs(patterns) {\n        LogBoxData.addIgnorePatterns(patterns);\n      },\n      ignoreAllLogs: function ignoreAllLogs(value) {\n        LogBoxData.setDisabled(value == null ? true : value);\n      },\n      clearAllLogs: function clearAllLogs() {\n        LogBoxData.clear();\n      },\n      addLog: function addLog(log) {\n        if (isLogBoxInstalled) {\n          LogBoxData.addLog(log);\n        }\n      },\n      addException: function addException(error) {\n        if (isLogBoxInstalled) {\n          LogBoxData.addException(error);\n        }\n      }\n    };\n    var isRCTLogAdviceWarning = function isRCTLogAdviceWarning() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      // RCTLogAdvice is a native logging function designed to show users\n      // a message in the console, but not show it to them in Logbox.\n      return typeof args[0] === 'string' && args[0].startsWith('(ADVICE)');\n    };\n    var isWarningModuleWarning = function isWarningModuleWarning() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return typeof args[0] === 'string' && args[0].startsWith('Warning: ');\n    };\n    var registerWarning = function registerWarning() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      // Let warnings within LogBox itself fall through.\n      if (LogBoxData.isLogBoxErrorMessage(String(args[0]))) {\n        originalConsoleError.apply(void 0, args);\n        return;\n      } else {\n        // Be sure to pass LogBox warnings through.\n        originalConsoleWarn.apply(void 0, args);\n      }\n      try {\n        if (!isRCTLogAdviceWarning.apply(void 0, args)) {\n          var _parseLogBoxLog = parseLogBoxLog(args),\n            category = _parseLogBoxLog.category,\n            message = _parseLogBoxLog.message,\n            componentStack = _parseLogBoxLog.componentStack;\n          if (!LogBoxData.isMessageIgnored(message.content)) {\n            LogBoxData.addLog({\n              level: 'warn',\n              category: category,\n              message: message,\n              componentStack: componentStack\n            });\n          }\n        }\n      } catch (err) {\n        LogBoxData.reportLogBoxError(err);\n      }\n    };\n\n    /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n     * LTI update could not be added via codemod */\n    var registerError = function registerError() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      // Let errors within LogBox itself fall through.\n      if (LogBoxData.isLogBoxErrorMessage(args[0])) {\n        originalConsoleError.apply(void 0, args);\n        return;\n      }\n      try {\n        if (!isWarningModuleWarning.apply(void 0, args)) {\n          // Only show LogBox for the 'warning' module, otherwise pass through.\n          // By passing through, this will get picked up by the React console override,\n          // potentially adding the component stack. React then passes it back to the\n          // React Native ExceptionsManager, which reports it to LogBox as an error.\n          //\n          // The 'warning' module needs to be handled here because React internally calls\n          // `console.error('Warning: ')` with the component stack already included.\n          originalConsoleError.apply(void 0, args);\n          return;\n        }\n        var format = args[0].replace('Warning: ', '');\n        var filterResult = LogBoxData.checkWarningFilter(format);\n        if (filterResult.suppressCompletely) {\n          return;\n        }\n        var level = 'error';\n        if (filterResult.suppressDialog_LEGACY === true) {\n          level = 'warn';\n        } else if (filterResult.forceDialogImmediately === true) {\n          level = 'fatal'; // Do not downgrade. These are real bugs with same severity as throws.\n        }\n\n        // Unfortunately, we need to add the Warning: prefix back for downstream dependencies.\n        args[0] = `Warning: ${filterResult.finalFormat}`;\n        var _parseLogBoxLog2 = parseLogBoxLog(args),\n          category = _parseLogBoxLog2.category,\n          message = _parseLogBoxLog2.message,\n          componentStack = _parseLogBoxLog2.componentStack;\n\n        // Interpolate the message so they are formatted for adb and other CLIs.\n        // This is different than the message.content above because it includes component stacks.\n        var interpolated = parseInterpolation(args);\n        originalConsoleError(interpolated.message.content);\n        if (!LogBoxData.isMessageIgnored(message.content)) {\n          LogBoxData.addLog({\n            level: level,\n            category: category,\n            message: message,\n            componentStack: componentStack\n          });\n        }\n      } catch (err) {\n        LogBoxData.reportLogBoxError(err);\n      }\n    };\n  } else {\n    LogBox = {\n      install: function install() {\n        // Do nothing.\n      },\n      uninstall: function uninstall() {\n        // Do nothing.\n      },\n      isInstalled: function isInstalled() {\n        return false;\n      },\n      ignoreLogs: function ignoreLogs(patterns) {\n        // Do nothing.\n      },\n      ignoreAllLogs: function ignoreAllLogs(value) {\n        // Do nothing.\n      },\n      clearAllLogs: function clearAllLogs() {\n        // Do nothing.\n      },\n      addLog: function addLog(log) {\n        // Do nothing.\n      },\n      addException: function addException(error) {\n        // Do nothing.\n      }\n    };\n  }\n  var _default = exports.default = LogBox;\n});","lineCount":238,"map":[[7,2,14,0],[7,6,14,0,"_Platform"],[7,15,14,0],[7,18,14,0,"_interopRequireDefault"],[7,40,14,0],[7,41,14,0,"_$$_REQUIRE"],[7,52,14,0],[7,53,14,0,"_dependencyMap"],[7,67,14,0],[8,2,15,0],[8,6,15,0,"_RCTLog"],[8,13,15,0],[8,16,15,0,"_interopRequireDefault"],[8,38,15,0],[8,39,15,0,"_$$_REQUIRE"],[8,50,15,0],[8,51,15,0,"_dependencyMap"],[8,65,15,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[19,2,19,0],[19,6,19,4,"LogBox"],[19,12,19,10],[20,2,32,0],[21,0,33,0],[22,0,34,0],[23,2,35,0],[23,6,35,4,"__DEV__"],[23,13,35,11],[23,15,35,13],[24,4,36,2],[24,8,36,8,"LogBoxData"],[24,18,36,18],[24,21,36,21,"require"],[24,32,36,28],[24,33,36,28,"_dependencyMap"],[24,47,36,28],[24,71,36,48],[24,72,36,49],[25,4,37,2],[25,8,37,2,"_require"],[25,16,37,2],[25,19,37,47,"require"],[25,30,37,54],[25,31,37,54,"_dependencyMap"],[25,45,37,54],[25,73,37,78],[25,74,37,79],[26,6,37,9,"parseLogBoxLog"],[26,20,37,23],[26,23,37,23,"_require"],[26,31,37,23],[26,32,37,9,"parseLogBoxLog"],[26,46,37,23],[27,6,37,25,"parseInterpolation"],[27,24,37,43],[27,27,37,43,"_require"],[27,35,37,43],[27,36,37,25,"parseInterpolation"],[27,54,37,43],[28,4,39,2],[28,8,39,6,"originalConsoleError"],[28,28,39,26],[29,4,40,2],[29,8,40,6,"originalConsoleWarn"],[29,27,40,25],[30,4,41,2],[30,8,41,6,"consoleErrorImpl"],[30,24,41,22],[31,4,42,2],[31,8,42,6,"consoleWarnImpl"],[31,23,42,54],[32,4,44,2],[32,8,44,6,"isLogBoxInstalled"],[32,25,44,32],[32,28,44,35],[32,33,44,40],[33,4,46,2,"LogBox"],[33,10,46,8],[33,13,46,11],[34,6,47,4,"install"],[34,13,47,11],[34,24,47,11,"install"],[34,32,47,11],[34,34,47,20],[35,8,48,6],[35,12,48,10,"isLogBoxInstalled"],[35,29,48,27],[35,31,48,29],[36,10,49,8],[37,8,50,6],[38,8,52,6,"isLogBoxInstalled"],[38,25,52,23],[38,28,52,26],[38,32,52,30],[40,8,54,6],[41,8,55,6,"require"],[41,19,55,13],[41,20,55,13,"_dependencyMap"],[41,34,55,13],[41,76,55,51],[41,77,55,52],[43,8,57,6],[44,8,58,6],[45,8,59,6],[46,8,60,6],[46,12,60,12,"isFirstInstall"],[46,26,60,26],[46,29,60,29,"originalConsoleError"],[46,49,60,49],[46,53,60,53],[46,57,60,57],[47,8,61,6],[47,12,61,10,"isFirstInstall"],[47,26,61,24],[47,28,61,26],[48,10,62,8,"originalConsoleError"],[48,30,62,28],[48,33,62,31,"console"],[48,40,62,38],[48,41,62,39,"error"],[48,46,62,44],[48,47,62,45,"bind"],[48,51,62,49],[48,52,62,50,"console"],[48,59,62,57],[48,60,62,58],[49,10,63,8,"originalConsoleWarn"],[49,29,63,27],[49,32,63,30,"console"],[49,39,63,37],[49,40,63,38,"warn"],[49,44,63,42],[49,45,63,43,"bind"],[49,49,63,47],[49,50,63,48,"console"],[49,57,63,55],[49,58,63,56],[51,10,65,8],[52,10,66,8,"console"],[52,17,66,15],[52,18,66,16,"error"],[52,23,66,21],[52,26,66,24],[52,38,66,37],[53,12,67,10,"consoleErrorImpl"],[53,28,67,26],[53,29,67,26,"apply"],[53,34,67,26],[53,43,67,26,"arguments"],[53,52,67,34],[53,53,67,35],[54,10,68,8],[54,11,68,9],[55,10,69,8],[56,10,70,8,"console"],[56,17,70,15],[56,18,70,16,"warn"],[56,22,70,20],[56,25,70,23],[56,37,70,36],[57,12,71,10,"consoleWarnImpl"],[57,27,71,25],[57,28,71,25,"apply"],[57,33,71,25],[57,42,71,25,"arguments"],[57,51,71,33],[57,52,71,34],[58,10,72,8],[58,11,72,9],[59,8,73,6],[60,8,75,6,"consoleErrorImpl"],[60,24,75,22],[60,27,75,25,"registerError"],[60,40,75,38],[61,8,76,6,"consoleWarnImpl"],[61,23,76,21],[61,26,76,24,"registerWarning"],[61,41,76,39],[62,8,78,6],[62,12,78,10,"Platform"],[62,29,78,18],[62,30,78,19,"isTesting"],[62,39,78,28],[62,41,78,30],[63,10,79,8,"LogBoxData"],[63,20,79,18],[63,21,79,19,"setDisabled"],[63,32,79,30],[63,33,79,31],[63,37,79,35],[63,38,79,36],[64,8,80,6],[65,8,82,6,"RCTLog"],[65,23,82,12],[65,24,82,13,"setWarningHandler"],[65,41,82,30],[65,42,82,31],[65,54,82,44],[66,10,83,8,"registerWarning"],[66,25,83,23],[66,26,83,23,"apply"],[66,31,83,23],[66,40,83,23,"arguments"],[66,49,83,31],[66,50,83,32],[67,8,84,6],[67,9,84,7],[67,10,84,8],[68,6,85,4],[68,7,85,5],[69,6,87,4,"uninstall"],[69,15,87,13],[69,26,87,13,"uninstall"],[69,36,87,13],[69,38,87,22],[70,8,88,6],[70,12,88,10],[70,13,88,11,"isLogBoxInstalled"],[70,30,88,28],[70,32,88,30],[71,10,89,8],[72,8,90,6],[73,8,92,6,"isLogBoxInstalled"],[73,25,92,23],[73,28,92,26],[73,33,92,31],[75,8,94,6],[76,8,95,6],[77,8,96,6],[78,8,97,6],[79,8,98,6,"consoleErrorImpl"],[79,24,98,22],[79,27,98,25,"originalConsoleError"],[79,47,98,45],[80,8,99,6,"consoleWarnImpl"],[80,23,99,21],[80,26,99,24,"originalConsoleWarn"],[80,45,99,43],[81,6,100,4],[81,7,100,5],[82,6,102,4,"isInstalled"],[82,17,102,15],[82,28,102,15,"isInstalled"],[82,40,102,15],[82,42,102,27],[83,8,103,6],[83,15,103,13,"isLogBoxInstalled"],[83,32,103,30],[84,6,104,4],[84,7,104,5],[85,6,106,4,"ignoreLogs"],[85,16,106,14],[85,27,106,14,"ignoreLogs"],[85,38,106,15,"patterns"],[85,46,106,54],[85,48,106,62],[86,8,107,6,"LogBoxData"],[86,18,107,16],[86,19,107,17,"addIgnorePatterns"],[86,36,107,34],[86,37,107,35,"patterns"],[86,45,107,43],[86,46,107,44],[87,6,108,4],[87,7,108,5],[88,6,110,4,"ignoreAllLogs"],[88,19,110,17],[88,30,110,17,"ignoreAllLogs"],[88,44,110,18,"value"],[88,49,110,34],[88,51,110,42],[89,8,111,6,"LogBoxData"],[89,18,111,16],[89,19,111,17,"setDisabled"],[89,30,111,28],[89,31,111,29,"value"],[89,36,111,34],[89,40,111,38],[89,44,111,42],[89,47,111,45],[89,51,111,49],[89,54,111,52,"value"],[89,59,111,57],[89,60,111,58],[90,6,112,4],[90,7,112,5],[91,6,114,4,"clearAllLogs"],[91,18,114,16],[91,29,114,16,"clearAllLogs"],[91,42,114,16],[91,44,114,25],[92,8,115,6,"LogBoxData"],[92,18,115,16],[92,19,115,17,"clear"],[92,24,115,22],[92,25,115,23],[92,26,115,24],[93,6,116,4],[93,7,116,5],[94,6,118,4,"addLog"],[94,12,118,10],[94,23,118,10,"addLog"],[94,30,118,11,"log"],[94,33,118,23],[94,35,118,31],[95,8,119,6],[95,12,119,10,"isLogBoxInstalled"],[95,29,119,27],[95,31,119,29],[96,10,120,8,"LogBoxData"],[96,20,120,18],[96,21,120,19,"addLog"],[96,27,120,25],[96,28,120,26,"log"],[96,31,120,29],[96,32,120,30],[97,8,121,6],[98,6,122,4],[98,7,122,5],[99,6,124,4,"addException"],[99,18,124,16],[99,29,124,16,"addException"],[99,42,124,17,"error"],[99,47,124,45],[99,49,124,53],[100,8,125,6],[100,12,125,10,"isLogBoxInstalled"],[100,29,125,27],[100,31,125,29],[101,10,126,8,"LogBoxData"],[101,20,126,18],[101,21,126,19,"addException"],[101,33,126,31],[101,34,126,32,"error"],[101,39,126,37],[101,40,126,38],[102,8,127,6],[103,6,128,4],[104,4,129,2],[104,5,129,3],[105,4,131,2],[105,8,131,8,"isRCTLogAdviceWarning"],[105,29,131,29],[105,32,131,32],[105,41,131,8,"isRCTLogAdviceWarning"],[105,62,131,29,"isRCTLogAdviceWarning"],[105,63,131,29],[105,65,131,59],[106,6,131,59],[106,15,131,59,"_len"],[106,19,131,59],[106,22,131,59,"arguments"],[106,31,131,59],[106,32,131,59,"length"],[106,38,131,59],[106,40,131,36,"args"],[106,44,131,40],[106,51,131,40,"Array"],[106,56,131,40],[106,57,131,40,"_len"],[106,61,131,40],[106,64,131,40,"_key"],[106,68,131,40],[106,74,131,40,"_key"],[106,78,131,40],[106,81,131,40,"_len"],[106,85,131,40],[106,87,131,40,"_key"],[106,91,131,40],[107,8,131,36,"args"],[107,12,131,40],[107,13,131,40,"_key"],[107,17,131,40],[107,21,131,40,"arguments"],[107,30,131,40],[107,31,131,40,"_key"],[107,35,131,40],[108,6,131,40],[109,6,132,4],[110,6,133,4],[111,6,134,4],[111,13,134,11],[111,20,134,18,"args"],[111,24,134,22],[111,25,134,23],[111,26,134,24],[111,27,134,25],[111,32,134,30],[111,40,134,38],[111,44,134,42,"args"],[111,48,134,46],[111,49,134,47],[111,50,134,48],[111,51,134,49],[111,52,134,50,"startsWith"],[111,62,134,60],[111,63,134,61],[111,73,134,71],[111,74,134,72],[112,4,135,2],[112,5,135,3],[113,4,137,2],[113,8,137,8,"isWarningModuleWarning"],[113,30,137,30],[113,33,137,33],[113,42,137,8,"isWarningModuleWarning"],[113,64,137,30,"isWarningModuleWarning"],[113,65,137,30],[113,67,137,60],[114,6,137,60],[114,15,137,60,"_len2"],[114,20,137,60],[114,23,137,60,"arguments"],[114,32,137,60],[114,33,137,60,"length"],[114,39,137,60],[114,41,137,37,"args"],[114,45,137,41],[114,52,137,41,"Array"],[114,57,137,41],[114,58,137,41,"_len2"],[114,63,137,41],[114,66,137,41,"_key2"],[114,71,137,41],[114,77,137,41,"_key2"],[114,82,137,41],[114,85,137,41,"_len2"],[114,90,137,41],[114,92,137,41,"_key2"],[114,97,137,41],[115,8,137,37,"args"],[115,12,137,41],[115,13,137,41,"_key2"],[115,18,137,41],[115,22,137,41,"arguments"],[115,31,137,41],[115,32,137,41,"_key2"],[115,37,137,41],[116,6,137,41],[117,6,138,4],[117,13,138,11],[117,20,138,18,"args"],[117,24,138,22],[117,25,138,23],[117,26,138,24],[117,27,138,25],[117,32,138,30],[117,40,138,38],[117,44,138,42,"args"],[117,48,138,46],[117,49,138,47],[117,50,138,48],[117,51,138,49],[117,52,138,50,"startsWith"],[117,62,138,60],[117,63,138,61],[117,74,138,72],[117,75,138,73],[118,4,139,2],[118,5,139,3],[119,4,141,2],[119,8,141,8,"registerWarning"],[119,23,141,23],[119,26,141,26],[119,35,141,8,"registerWarning"],[119,50,141,23,"registerWarning"],[119,51,141,23],[119,53,141,59],[120,6,141,59],[120,15,141,59,"_len3"],[120,20,141,59],[120,23,141,59,"arguments"],[120,32,141,59],[120,33,141,59,"length"],[120,39,141,59],[120,41,141,30,"args"],[120,45,141,34],[120,52,141,34,"Array"],[120,57,141,34],[120,58,141,34,"_len3"],[120,63,141,34],[120,66,141,34,"_key3"],[120,71,141,34],[120,77,141,34,"_key3"],[120,82,141,34],[120,85,141,34,"_len3"],[120,90,141,34],[120,92,141,34,"_key3"],[120,97,141,34],[121,8,141,30,"args"],[121,12,141,34],[121,13,141,34,"_key3"],[121,18,141,34],[121,22,141,34,"arguments"],[121,31,141,34],[121,32,141,34,"_key3"],[121,37,141,34],[122,6,141,34],[123,6,142,4],[124,6,143,4],[124,10,143,8,"LogBoxData"],[124,20,143,18],[124,21,143,19,"isLogBoxErrorMessage"],[124,41,143,39],[124,42,143,40,"String"],[124,48,143,46],[124,49,143,47,"args"],[124,53,143,51],[124,54,143,52],[124,55,143,53],[124,56,143,54],[124,57,143,55],[124,58,143,56],[124,60,143,58],[125,8,144,6,"originalConsoleError"],[125,28,144,26],[125,29,144,26,"apply"],[125,34,144,26],[125,43,144,30,"args"],[125,47,144,34],[125,48,144,35],[126,8,145,6],[127,6,146,4],[127,7,146,5],[127,13,146,11],[128,8,147,6],[129,8,148,6,"originalConsoleWarn"],[129,27,148,25],[129,28,148,25,"apply"],[129,33,148,25],[129,42,148,29,"args"],[129,46,148,33],[129,47,148,34],[130,6,149,4],[131,6,151,4],[131,10,151,8],[132,8,152,6],[132,12,152,10],[132,13,152,11,"isRCTLogAdviceWarning"],[132,34,152,32],[132,35,152,32,"apply"],[132,40,152,32],[132,49,152,36,"args"],[132,53,152,40],[132,54,152,41],[132,56,152,43],[133,10,153,8],[133,14,153,8,"_parseLogBoxLog"],[133,29,153,8],[133,32,153,52,"parseLogBoxLog"],[133,46,153,66],[133,47,153,67,"args"],[133,51,153,71],[133,52,153,72],[134,12,153,15,"category"],[134,20,153,23],[134,23,153,23,"_parseLogBoxLog"],[134,38,153,23],[134,39,153,15,"category"],[134,47,153,23],[135,12,153,25,"message"],[135,19,153,32],[135,22,153,32,"_parseLogBoxLog"],[135,37,153,32],[135,38,153,25,"message"],[135,45,153,32],[136,12,153,34,"componentStack"],[136,26,153,48],[136,29,153,48,"_parseLogBoxLog"],[136,44,153,48],[136,45,153,34,"componentStack"],[136,59,153,48],[137,10,155,8],[137,14,155,12],[137,15,155,13,"LogBoxData"],[137,25,155,23],[137,26,155,24,"isMessageIgnored"],[137,42,155,40],[137,43,155,41,"message"],[137,50,155,48],[137,51,155,49,"content"],[137,58,155,56],[137,59,155,57],[137,61,155,59],[138,12,156,10,"LogBoxData"],[138,22,156,20],[138,23,156,21,"addLog"],[138,29,156,27],[138,30,156,28],[139,14,157,12,"level"],[139,19,157,17],[139,21,157,19],[139,27,157,25],[140,14,158,12,"category"],[140,22,158,20],[140,24,158,12,"category"],[140,32,158,20],[141,14,159,12,"message"],[141,21,159,19],[141,23,159,12,"message"],[141,30,159,19],[142,14,160,12,"componentStack"],[142,28,160,26],[142,30,160,12,"componentStack"],[143,12,161,10],[143,13,161,11],[143,14,161,12],[144,10,162,8],[145,8,163,6],[146,6,164,4],[146,7,164,5],[146,8,164,6],[146,15,164,13,"err"],[146,18,164,16],[146,20,164,18],[147,8,165,6,"LogBoxData"],[147,18,165,16],[147,19,165,17,"reportLogBoxError"],[147,36,165,34],[147,37,165,35,"err"],[147,40,165,38],[147,41,165,39],[148,6,166,4],[149,4,167,2],[149,5,167,3],[151,4,169,2],[152,0,170,0],[153,4,171,2],[153,8,171,8,"registerError"],[153,21,171,21],[153,24,171,24],[153,33,171,8,"registerError"],[153,46,171,21,"registerError"],[153,47,171,21],[153,49,171,43],[154,6,171,43],[154,15,171,43,"_len4"],[154,20,171,43],[154,23,171,43,"arguments"],[154,32,171,43],[154,33,171,43,"length"],[154,39,171,43],[154,41,171,28,"args"],[154,45,171,32],[154,52,171,32,"Array"],[154,57,171,32],[154,58,171,32,"_len4"],[154,63,171,32],[154,66,171,32,"_key4"],[154,71,171,32],[154,77,171,32,"_key4"],[154,82,171,32],[154,85,171,32,"_len4"],[154,90,171,32],[154,92,171,32,"_key4"],[154,97,171,32],[155,8,171,28,"args"],[155,12,171,32],[155,13,171,32,"_key4"],[155,18,171,32],[155,22,171,32,"arguments"],[155,31,171,32],[155,32,171,32,"_key4"],[155,37,171,32],[156,6,171,32],[157,6,172,4],[158,6,173,4],[158,10,173,8,"LogBoxData"],[158,20,173,18],[158,21,173,19,"isLogBoxErrorMessage"],[158,41,173,39],[158,42,173,40,"args"],[158,46,173,44],[158,47,173,45],[158,48,173,46],[158,49,173,47],[158,50,173,48],[158,52,173,50],[159,8,174,6,"originalConsoleError"],[159,28,174,26],[159,29,174,26,"apply"],[159,34,174,26],[159,43,174,30,"args"],[159,47,174,34],[159,48,174,35],[160,8,175,6],[161,6,176,4],[162,6,178,4],[162,10,178,8],[163,8,179,6],[163,12,179,10],[163,13,179,11,"isWarningModuleWarning"],[163,35,179,33],[163,36,179,33,"apply"],[163,41,179,33],[163,50,179,37,"args"],[163,54,179,41],[163,55,179,42],[163,57,179,44],[164,10,180,8],[165,10,181,8],[166,10,182,8],[167,10,183,8],[168,10,184,8],[169,10,185,8],[170,10,186,8],[171,10,187,8,"originalConsoleError"],[171,30,187,28],[171,31,187,28,"apply"],[171,36,187,28],[171,45,187,32,"args"],[171,49,187,36],[171,50,187,37],[172,10,188,8],[173,8,189,6],[174,8,191,6],[174,12,191,12,"format"],[174,18,191,18],[174,21,191,21,"args"],[174,25,191,25],[174,26,191,26],[174,27,191,27],[174,28,191,28],[174,29,191,29,"replace"],[174,36,191,36],[174,37,191,37],[174,48,191,48],[174,50,191,50],[174,52,191,52],[174,53,191,53],[175,8,192,6],[175,12,192,12,"filterResult"],[175,24,192,24],[175,27,192,27,"LogBoxData"],[175,37,192,37],[175,38,192,38,"checkWarningFilter"],[175,56,192,56],[175,57,192,57,"format"],[175,63,192,63],[175,64,192,64],[176,8,193,6],[176,12,193,10,"filterResult"],[176,24,193,22],[176,25,193,23,"suppressCompletely"],[176,43,193,41],[176,45,193,43],[177,10,194,8],[178,8,195,6],[179,8,197,6],[179,12,197,10,"level"],[179,17,197,15],[179,20,197,18],[179,27,197,25],[180,8,198,6],[180,12,198,10,"filterResult"],[180,24,198,22],[180,25,198,23,"suppressDialog_LEGACY"],[180,46,198,44],[180,51,198,49],[180,55,198,53],[180,57,198,55],[181,10,199,8,"level"],[181,15,199,13],[181,18,199,16],[181,24,199,22],[182,8,200,6],[182,9,200,7],[182,15,200,13],[182,19,200,17,"filterResult"],[182,31,200,29],[182,32,200,30,"forceDialogImmediately"],[182,54,200,52],[182,59,200,57],[182,63,200,61],[182,65,200,63],[183,10,201,8,"level"],[183,15,201,13],[183,18,201,16],[183,25,201,23],[183,26,201,24],[183,27,201,25],[184,8,202,6],[186,8,204,6],[187,8,205,6,"args"],[187,12,205,10],[187,13,205,11],[187,14,205,12],[187,15,205,13],[187,18,205,17],[187,30,205,28,"filterResult"],[187,42,205,40],[187,43,205,41,"finalFormat"],[187,54,205,53],[187,56,205,54],[188,8,206,6],[188,12,206,6,"_parseLogBoxLog2"],[188,28,206,6],[188,31,206,50,"parseLogBoxLog"],[188,45,206,64],[188,46,206,65,"args"],[188,50,206,69],[188,51,206,70],[189,10,206,13,"category"],[189,18,206,21],[189,21,206,21,"_parseLogBoxLog2"],[189,37,206,21],[189,38,206,13,"category"],[189,46,206,21],[190,10,206,23,"message"],[190,17,206,30],[190,20,206,30,"_parseLogBoxLog2"],[190,36,206,30],[190,37,206,23,"message"],[190,44,206,30],[191,10,206,32,"componentStack"],[191,24,206,46],[191,27,206,46,"_parseLogBoxLog2"],[191,43,206,46],[191,44,206,32,"componentStack"],[191,58,206,46],[193,8,208,6],[194,8,209,6],[195,8,210,6],[195,12,210,12,"interpolated"],[195,24,210,24],[195,27,210,27,"parseInterpolation"],[195,45,210,45],[195,46,210,46,"args"],[195,50,210,50],[195,51,210,51],[196,8,211,6,"originalConsoleError"],[196,28,211,26],[196,29,211,27,"interpolated"],[196,41,211,39],[196,42,211,40,"message"],[196,49,211,47],[196,50,211,48,"content"],[196,57,211,55],[196,58,211,56],[197,8,213,6],[197,12,213,10],[197,13,213,11,"LogBoxData"],[197,23,213,21],[197,24,213,22,"isMessageIgnored"],[197,40,213,38],[197,41,213,39,"message"],[197,48,213,46],[197,49,213,47,"content"],[197,56,213,54],[197,57,213,55],[197,59,213,57],[198,10,214,8,"LogBoxData"],[198,20,214,18],[198,21,214,19,"addLog"],[198,27,214,25],[198,28,214,26],[199,12,215,10,"level"],[199,17,215,15],[199,19,215,10,"level"],[199,24,215,15],[200,12,216,10,"category"],[200,20,216,18],[200,22,216,10,"category"],[200,30,216,18],[201,12,217,10,"message"],[201,19,217,17],[201,21,217,10,"message"],[201,28,217,17],[202,12,218,10,"componentStack"],[202,26,218,24],[202,28,218,10,"componentStack"],[203,10,219,8],[203,11,219,9],[203,12,219,10],[204,8,220,6],[205,6,221,4],[205,7,221,5],[205,8,221,6],[205,15,221,13,"err"],[205,18,221,16],[205,20,221,18],[206,8,222,6,"LogBoxData"],[206,18,222,16],[206,19,222,17,"reportLogBoxError"],[206,36,222,34],[206,37,222,35,"err"],[206,40,222,38],[206,41,222,39],[207,6,223,4],[208,4,224,2],[208,5,224,3],[209,2,225,0],[209,3,225,1],[209,9,225,7],[210,4,226,2,"LogBox"],[210,10,226,8],[210,13,226,11],[211,6,227,4,"install"],[211,13,227,11],[211,24,227,11,"install"],[211,32,227,11],[211,34,227,20],[212,8,228,6],[213,6,228,6],[213,7,229,5],[214,6,231,4,"uninstall"],[214,15,231,13],[214,26,231,13,"uninstall"],[214,36,231,13],[214,38,231,22],[215,8,232,6],[216,6,232,6],[216,7,233,5],[217,6,235,4,"isInstalled"],[217,17,235,15],[217,28,235,15,"isInstalled"],[217,40,235,15],[217,42,235,27],[218,8,236,6],[218,15,236,13],[218,20,236,18],[219,6,237,4],[219,7,237,5],[220,6,239,4,"ignoreLogs"],[220,16,239,14],[220,27,239,14,"ignoreLogs"],[220,38,239,15,"patterns"],[220,46,239,54],[220,48,239,62],[221,8,240,6],[222,6,240,6],[222,7,241,5],[223,6,243,4,"ignoreAllLogs"],[223,19,243,17],[223,30,243,17,"ignoreAllLogs"],[223,44,243,18,"value"],[223,49,243,34],[223,51,243,42],[224,8,244,6],[225,6,244,6],[225,7,245,5],[226,6,247,4,"clearAllLogs"],[226,18,247,16],[226,29,247,16,"clearAllLogs"],[226,42,247,16],[226,44,247,25],[227,8,248,6],[228,6,248,6],[228,7,249,5],[229,6,251,4,"addLog"],[229,12,251,10],[229,23,251,10,"addLog"],[229,30,251,11,"log"],[229,33,251,23],[229,35,251,31],[230,8,252,6],[231,6,252,6],[231,7,253,5],[232,6,255,4,"addException"],[232,18,255,16],[232,29,255,16,"addException"],[232,42,255,17,"error"],[232,47,255,45],[232,49,255,53],[233,8,256,6],[234,6,256,6],[235,4,258,2],[235,5,258,3],[236,2,259,0],[237,2,259,1],[237,6,259,1,"_default"],[237,14,259,1],[237,17,259,1,"exports"],[237,24,259,1],[237,25,259,1,"default"],[237,32,259,1],[237,35,261,16,"LogBox"],[237,41,261,22],[238,0,261,22]],"functionMap":{"names":["<global>","install","console.error","console.warn","RCTLog.setWarningHandler$argument_0","uninstall","isInstalled","ignoreLogs","ignoreAllLogs","clearAllLogs","addLog","addException","isRCTLogAdviceWarning","isWarningModuleWarning","registerWarning","registerError"],"mappings":"AAA;IC8C;wBCmB;SDE;uBEE;SFE;+BGU;OHE;KDC;IKE;KLa;IME;KNE;IOE;KPE;IQE;KRE;ISE;KTE;IUE;KVI;IWE;KXI;gCYG;GZI;iCaE;GbE;0BcE;Gd0B;wBeI;GfqD;ICG;KDE;IKE;KLE;IME;KNE;IOE;KPE;IQE;KRE;ISE;KTE;IUE;KVE;IWE;KXE"}},"type":"js/module"}]}