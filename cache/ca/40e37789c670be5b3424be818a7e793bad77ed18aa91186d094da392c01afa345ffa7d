{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":313,"column":0,"index":8684}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":313,"column":0,"index":8684}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":313,"column":0,"index":8684}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":313,"column":0,"index":8684}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":313,"column":0,"index":8684}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":313,"column":0,"index":8684}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"../Utilities/warnOnce","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":408},"end":{"line":16,"column":45,"index":453}}],"key":"kNjwaOGu6RTuhRe1hOzDj+Zr/e4="}},{"name":"./EventCounts","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":454},"end":{"line":17,"column":40,"index":494}}],"key":"jwR/v3s0YGimAkhZcXLqPRw0Pig="}},{"name":"./MemoryInfo","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":495},"end":{"line":18,"column":38,"index":533}}],"key":"dxSGpmGNu9nn97h5U//y4Z7TNCE="}},{"name":"./NativePerformance","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":534},"end":{"line":19,"column":52,"index":586}}],"key":"zy6K2cs2M+1E0762V7BqcgGOjYg="}},{"name":"./NativePerformanceObserver","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":587},"end":{"line":20,"column":68,"index":655}}],"key":"+npX2Ui+iNVclanReXTyyCh0Pkw="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":656},"end":{"line":21,"column":52,"index":708}}],"key":"limm2T+T1Tv0g3goGjXkwAZT0/A="}},{"name":"./PerformanceObserver","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":709},"end":{"line":22,"column":70,"index":779}}],"key":"dZd/Qr9hEmOi9AeTIps7GE30VG4="}},{"name":"./RawPerformanceEntry","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":780},"end":{"line":26,"column":31,"index":874}}],"key":"zrkCAbiGCMzHpBgnI/Ykq8YEer4="}},{"name":"./ReactNativeStartupTiming","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0,"index":944},"end":{"line":28,"column":66,"index":1010}}],"key":"e1WSS1Vx32J2Zrr9VnAGPRKnSbc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.PerformanceMeasure = exports.PerformanceMark = void 0;\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _warnOnce = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../Utilities/warnOnce\"));\n  var _EventCounts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./EventCounts\"));\n  var _MemoryInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./MemoryInfo\"));\n  var _NativePerformance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./NativePerformance\"));\n  var _NativePerformanceObserver = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./NativePerformanceObserver\"));\n  var _PerformanceEntry3 = _$$_REQUIRE(_dependencyMap[11], \"./PerformanceEntry\");\n  var _PerformanceObserver = _$$_REQUIRE(_dependencyMap[12], \"./PerformanceObserver\");\n  var _RawPerformanceEntry = _$$_REQUIRE(_dependencyMap[13], \"./RawPerformanceEntry\");\n  var _ReactNativeStartupTiming = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./ReactNativeStartupTiming\"));\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } } /**\n                                                                                                                                                                                                                                                                                                                                             * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                                                                                                                                                                                                                                                             *\n                                                                                                                                                                                                                                                                                                                                             * This source code is licensed under the MIT license found in the\n                                                                                                                                                                                                                                                                                                                                             * LICENSE file in the root directory of this source tree.\n                                                                                                                                                                                                                                                                                                                                             *\n                                                                                                                                                                                                                                                                                                                                             * @format\n                                                                                                                                                                                                                                                                                                                                             * \n                                                                                                                                                                                                                                                                                                                                             */ // flowlint unsafe-getters-setters:off\n  var getCurrentTimeStamp = global.nativePerformanceNow ? global.nativePerformanceNow : function () {\n    return Date.now();\n  };\n  var PerformanceMark = exports.PerformanceMark = /*#__PURE__*/function (_PerformanceEntry) {\n    (0, _inherits2.default)(PerformanceMark, _PerformanceEntry);\n    var _super = _createSuper(PerformanceMark);\n    function PerformanceMark(markName, markOptions) {\n      var _markOptions$startTim;\n      var _this;\n      (0, _classCallCheck2.default)(this, PerformanceMark);\n      _this = _super.call(this, {\n        name: markName,\n        entryType: 'mark',\n        startTime: (_markOptions$startTim = markOptions == null ? void 0 : markOptions.startTime) != null ? _markOptions$startTim : getCurrentTimeStamp(),\n        duration: 0\n      });\n      if (markOptions) {\n        _this.detail = markOptions.detail;\n      }\n      return _this;\n    }\n    return (0, _createClass2.default)(PerformanceMark);\n  }(_PerformanceEntry3.PerformanceEntry);\n  var PerformanceMeasure = exports.PerformanceMeasure = /*#__PURE__*/function (_PerformanceEntry2) {\n    (0, _inherits2.default)(PerformanceMeasure, _PerformanceEntry2);\n    var _super2 = _createSuper(PerformanceMeasure);\n    function PerformanceMeasure(measureName, measureOptions) {\n      var _measureOptions$durat;\n      var _this2;\n      (0, _classCallCheck2.default)(this, PerformanceMeasure);\n      _this2 = _super2.call(this, {\n        name: measureName,\n        entryType: 'measure',\n        startTime: 0,\n        duration: (_measureOptions$durat = measureOptions == null ? void 0 : measureOptions.duration) != null ? _measureOptions$durat : 0\n      });\n      if (measureOptions) {\n        _this2.detail = measureOptions.detail;\n      }\n      return _this2;\n    }\n    return (0, _createClass2.default)(PerformanceMeasure);\n  }(_PerformanceEntry3.PerformanceEntry);\n  function warnNoNativePerformance() {\n    (0, _warnOnce.default)('missing-native-performance', 'Missing native implementation of Performance');\n  }\n\n  /**\n   * Partial implementation of the Performance interface for RN,\n   * corresponding to the standard in\n   * https://www.w3.org/TR/user-timing/#extensions-performance-interface\n   */\n  var Performance = exports.default = /*#__PURE__*/function () {\n    function Performance() {\n      (0, _classCallCheck2.default)(this, Performance);\n      this.eventCounts = new _EventCounts.default();\n    }\n    (0, _createClass2.default)(Performance, [{\n      key: \"memory\",\n      get:\n      // Get the current JS memory information.\n      function get() {\n        if (_NativePerformance.default != null && _NativePerformance.default.getSimpleMemoryInfo) {\n          // JSI API implementations may have different variants of names for the JS\n          // heap information we need here. We will parse the result based on our\n          // guess of the implementation for now.\n          var memoryInfo = _NativePerformance.default.getSimpleMemoryInfo();\n          if (memoryInfo.hasOwnProperty('hermes_heapSize')) {\n            // We got memory information from Hermes\n            var totalJSHeapSize = memoryInfo.hermes_heapSize,\n              usedJSHeapSize = memoryInfo.hermes_allocatedBytes;\n            return new _MemoryInfo.default({\n              jsHeapSizeLimit: null,\n              // We don't know the heap size limit from Hermes.\n              totalJSHeapSize: totalJSHeapSize,\n              usedJSHeapSize: usedJSHeapSize\n            });\n          } else {\n            // JSC and V8 has no native implementations for memory information in JSI::Instrumentation\n            return new _MemoryInfo.default();\n          }\n        }\n        return new _MemoryInfo.default();\n      }\n\n      // Startup metrics is not used in web, but only in React Native.\n    }, {\n      key: \"reactNativeStartupTiming\",\n      get: function get() {\n        if (_NativePerformance.default != null && _NativePerformance.default.getReactNativeStartupTiming) {\n          return new _ReactNativeStartupTiming.default(_NativePerformance.default.getReactNativeStartupTiming());\n        }\n        return new _ReactNativeStartupTiming.default();\n      }\n    }, {\n      key: \"mark\",\n      value: function mark(markName, markOptions) {\n        var mark = new PerformanceMark(markName, markOptions);\n        if (_NativePerformance.default != null && _NativePerformance.default.mark) {\n          _NativePerformance.default.mark(markName, mark.startTime, mark.duration);\n        } else {\n          warnNoNativePerformance();\n        }\n        return mark;\n      }\n    }, {\n      key: \"clearMarks\",\n      value: function clearMarks(markName) {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default == null ? void 0 : _NativePerformanceObserver.default.clearEntries(_RawPerformanceEntry.RawPerformanceEntryTypeValues.MARK, markName);\n      }\n    }, {\n      key: \"measure\",\n      value: function measure(measureName, startMarkOrOptions, endMark) {\n        var options;\n        var startMarkName,\n          endMarkName = endMark,\n          duration,\n          startTime = 0,\n          endTime = 0;\n        if (typeof startMarkOrOptions === 'string') {\n          startMarkName = startMarkOrOptions;\n        } else if (startMarkOrOptions !== undefined) {\n          var _options$duration;\n          options = startMarkOrOptions;\n          if (endMark !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both options and endMark\");\n          }\n          if (options.start === undefined && options.end === undefined) {\n            throw new TypeError('Performance.measure: Must have at least one of start/end specified in options');\n          }\n          if (options.start !== undefined && options.end !== undefined && options.duration !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both start/end and duration explicitly in options\");\n          }\n          if (typeof options.start === 'number') {\n            startTime = options.start;\n          } else {\n            startMarkName = options.start;\n          }\n          if (typeof options.end === 'number') {\n            endTime = options.end;\n          } else {\n            endMarkName = options.end;\n          }\n          duration = (_options$duration = options.duration) != null ? _options$duration : duration;\n        }\n        var measure = new PerformanceMeasure(measureName, options);\n        if (_NativePerformance.default != null && _NativePerformance.default.measure) {\n          _NativePerformance.default.measure(measureName, startTime, endTime, duration, startMarkName, endMarkName);\n        } else {\n          warnNoNativePerformance();\n        }\n        return measure;\n      }\n    }, {\n      key: \"clearMeasures\",\n      value: function clearMeasures(measureName) {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default == null ? void 0 : _NativePerformanceObserver.default.clearEntries(_RawPerformanceEntry.RawPerformanceEntryTypeValues.MEASURE, measureName);\n      }\n\n      /**\n       * Returns a double, measured in milliseconds.\n       * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n       */\n    }, {\n      key: \"now\",\n      value: function now() {\n        return getCurrentTimeStamp();\n      }\n\n      /**\n       * An extension that allows to get back to JS all currently logged marks/measures\n       * (in our case, be it from JS or native), see\n       * https://www.w3.org/TR/performance-timeline/#extensions-to-the-performance-interface\n       */\n    }, {\n      key: \"getEntries\",\n      value: function getEntries() {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries().map(_RawPerformanceEntry.rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByType\",\n      value: function getEntriesByType(entryType) {\n        if (entryType !== 'mark' && entryType !== 'measure') {\n          console.log(`Performance.getEntriesByType: Only valid for 'mark' and 'measure' entry types, got ${entryType}`);\n          return [];\n        }\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries((0, _RawPerformanceEntry.performanceEntryTypeToRaw)(entryType)).map(_RawPerformanceEntry.rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByName\",\n      value: function getEntriesByName(entryName, entryType) {\n        if (entryType !== undefined && entryType !== 'mark' && entryType !== 'measure') {\n          console.log(`Performance.getEntriesByName: Only valid for 'mark' and 'measure' entry types, got ${entryType}`);\n          return [];\n        }\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries(entryType != null ? (0, _RawPerformanceEntry.performanceEntryTypeToRaw)(entryType) : undefined, entryName).map(_RawPerformanceEntry.rawToPerformanceEntry);\n      }\n    }]);\n    return Performance;\n  }();\n});","lineCount":251,"map":[[12,2,16,0],[12,6,16,0,"_warnOnce"],[12,15,16,0],[12,18,16,0,"_interopRequireDefault"],[12,40,16,0],[12,41,16,0,"_$$_REQUIRE"],[12,52,16,0],[12,53,16,0,"_dependencyMap"],[12,67,16,0],[13,2,17,0],[13,6,17,0,"_EventCounts"],[13,18,17,0],[13,21,17,0,"_interopRequireDefault"],[13,43,17,0],[13,44,17,0,"_$$_REQUIRE"],[13,55,17,0],[13,56,17,0,"_dependencyMap"],[13,70,17,0],[14,2,18,0],[14,6,18,0,"_MemoryInfo"],[14,17,18,0],[14,20,18,0,"_interopRequireDefault"],[14,42,18,0],[14,43,18,0,"_$$_REQUIRE"],[14,54,18,0],[14,55,18,0,"_dependencyMap"],[14,69,18,0],[15,2,19,0],[15,6,19,0,"_NativePerformance"],[15,24,19,0],[15,27,19,0,"_interopRequireDefault"],[15,49,19,0],[15,50,19,0,"_$$_REQUIRE"],[15,61,19,0],[15,62,19,0,"_dependencyMap"],[15,76,19,0],[16,2,20,0],[16,6,20,0,"_NativePerformanceObserver"],[16,32,20,0],[16,35,20,0,"_interopRequireDefault"],[16,57,20,0],[16,58,20,0,"_$$_REQUIRE"],[16,69,20,0],[16,70,20,0,"_dependencyMap"],[16,84,20,0],[17,2,21,0],[17,6,21,0,"_PerformanceEntry3"],[17,24,21,0],[17,27,21,0,"_$$_REQUIRE"],[17,38,21,0],[17,39,21,0,"_dependencyMap"],[17,53,21,0],[18,2,22,0],[18,6,22,0,"_PerformanceObserver"],[18,26,22,0],[18,29,22,0,"_$$_REQUIRE"],[18,40,22,0],[18,41,22,0,"_dependencyMap"],[18,55,22,0],[19,2,23,0],[19,6,23,0,"_RawPerformanceEntry"],[19,26,23,0],[19,29,23,0,"_$$_REQUIRE"],[19,40,23,0],[19,41,23,0,"_dependencyMap"],[19,55,23,0],[20,2,28,0],[20,6,28,0,"_ReactNativeStartupTiming"],[20,31,28,0],[20,34,28,0,"_interopRequireDefault"],[20,56,28,0],[20,57,28,0,"_$$_REQUIRE"],[20,68,28,0],[20,69,28,0,"_dependencyMap"],[20,83,28,0],[21,2,28,66],[21,11,28,66,"_createSuper"],[21,24,28,66,"Derived"],[21,31,28,66],[21,39,28,66,"hasNativeReflectConstruct"],[21,64,28,66],[21,67,28,66,"_isNativeReflectConstruct"],[21,92,28,66],[21,112,28,66,"_createSuperInternal"],[21,133,28,66],[21,141,28,66,"Super"],[21,146,28,66],[21,153,28,66,"_getPrototypeOf2"],[21,169,28,66],[21,170,28,66,"default"],[21,177,28,66],[21,179,28,66,"Derived"],[21,186,28,66],[21,189,28,66,"result"],[21,195,28,66],[21,201,28,66,"hasNativeReflectConstruct"],[21,226,28,66],[21,234,28,66,"NewTarget"],[21,243,28,66],[21,250,28,66,"_getPrototypeOf2"],[21,266,28,66],[21,267,28,66,"default"],[21,274,28,66],[21,282,28,66,"constructor"],[21,293,28,66],[21,295,28,66,"result"],[21,301,28,66],[21,304,28,66,"Reflect"],[21,311,28,66],[21,312,28,66,"construct"],[21,321,28,66],[21,322,28,66,"Super"],[21,327,28,66],[21,329,28,66,"arguments"],[21,338,28,66],[21,340,28,66,"NewTarget"],[21,349,28,66],[21,361,28,66,"result"],[21,367,28,66],[21,370,28,66,"Super"],[21,375,28,66],[21,376,28,66,"apply"],[21,381,28,66],[21,388,28,66,"arguments"],[21,397,28,66],[21,413,28,66,"_possibleConstructorReturn2"],[21,440,28,66],[21,441,28,66,"default"],[21,448,28,66],[21,456,28,66,"result"],[21,462,28,66],[22,2,28,66],[22,11,28,66,"_isNativeReflectConstruct"],[22,37,28,66],[22,52,28,66,"Reflect"],[22,59,28,66],[22,80,28,66,"Reflect"],[22,87,28,66],[22,88,28,66,"construct"],[22,97,28,66],[22,117,28,66,"Reflect"],[22,124,28,66],[22,125,28,66,"construct"],[22,134,28,66],[22,135,28,66,"sham"],[22,139,28,66],[22,166,28,66,"Proxy"],[22,171,28,66],[22,207,28,66,"Boolean"],[22,214,28,66],[22,215,28,66,"prototype"],[22,224,28,66],[22,225,28,66,"valueOf"],[22,232,28,66],[22,233,28,66,"call"],[22,237,28,66],[22,238,28,66,"Reflect"],[22,245,28,66],[22,246,28,66,"construct"],[22,255,28,66],[22,256,28,66,"Boolean"],[22,263,28,66],[22,309,28,66,"e"],[22,310,28,66],[22,332,1,0],[23,0,2,0],[24,0,3,0],[25,0,4,0],[26,0,5,0],[27,0,6,0],[28,0,7,0],[29,0,8,0],[30,0,9,0],[30,335,1,0],[30,336,11,0],[31,2,42,0],[31,6,42,6,"getCurrentTimeStamp"],[31,25,42,49],[31,28,42,52,"global"],[31,34,42,58],[31,35,42,59,"nativePerformanceNow"],[31,55,42,79],[31,58,43,4,"global"],[31,64,43,10],[31,65,43,11,"nativePerformanceNow"],[31,85,43,31],[31,88,44,4],[32,4,44,4],[32,11,44,10,"Date"],[32,15,44,14],[32,16,44,15,"now"],[32,19,44,18],[32,20,44,19],[32,21,44,20],[33,2,44,20],[34,2,44,21],[34,6,46,13,"PerformanceMark"],[34,21,46,28],[34,24,46,28,"exports"],[34,31,46,28],[34,32,46,28,"PerformanceMark"],[34,47,46,28],[34,73,46,28,"_PerformanceEntry"],[34,90,46,28],[35,4,46,28],[35,8,46,28,"_inherits2"],[35,18,46,28],[35,19,46,28,"default"],[35,26,46,28],[35,28,46,28,"PerformanceMark"],[35,43,46,28],[35,45,46,28,"_PerformanceEntry"],[35,62,46,28],[36,4,46,28],[36,8,46,28,"_super"],[36,14,46,28],[36,17,46,28,"_createSuper"],[36,29,46,28],[36,30,46,28,"PerformanceMark"],[36,45,46,28],[37,4,49,2],[37,13,49,2,"PerformanceMark"],[37,29,49,14,"markName"],[37,37,49,30],[37,39,49,32,"markOptions"],[37,50,49,68],[37,52,49,70],[38,6,49,70],[38,10,49,70,"_markOptions$startTim"],[38,31,49,70],[39,6,49,70],[39,10,49,70,"_this"],[39,15,49,70],[40,6,49,70],[40,10,49,70,"_classCallCheck2"],[40,26,49,70],[40,27,49,70,"default"],[40,34,49,70],[40,42,49,70,"PerformanceMark"],[40,57,49,70],[41,6,50,4,"_this"],[41,11,50,4],[41,14,50,4,"_super"],[41,20,50,4],[41,21,50,4,"call"],[41,25,50,4],[41,32,50,10],[42,8,51,6,"name"],[42,12,51,10],[42,14,51,12,"markName"],[42,22,51,20],[43,8,52,6,"entryType"],[43,17,52,15],[43,19,52,17],[43,25,52,23],[44,8,53,6,"startTime"],[44,17,53,15],[44,20,53,15,"_markOptions$startTim"],[44,41,53,15],[44,44,53,17,"markOptions"],[44,55,53,28],[44,75,53,17,"markOptions"],[44,86,53,28],[44,87,53,30,"startTime"],[44,96,53,39],[44,108,53,39,"_markOptions$startTim"],[44,129,53,39],[44,132,53,43,"getCurrentTimeStamp"],[44,151,53,62],[44,152,53,63],[44,153,53,64],[45,8,54,6,"duration"],[45,16,54,14],[45,18,54,16],[46,6,55,4],[46,7,55,5],[47,6,57,4],[47,10,57,8,"markOptions"],[47,21,57,19],[47,23,57,21],[48,8,58,6,"_this"],[48,13,58,6],[48,14,58,11,"detail"],[48,20,58,17],[48,23,58,20,"markOptions"],[48,34,58,31],[48,35,58,32,"detail"],[48,41,58,38],[49,6,59,4],[50,6,59,5],[50,13,59,5,"_this"],[50,18,59,5],[51,4,60,2],[52,4,60,3],[52,15,60,3,"_createClass2"],[52,28,60,3],[52,29,60,3,"default"],[52,36,60,3],[52,38,60,3,"PerformanceMark"],[52,53,60,3],[53,2,60,3],[53,4,46,37,"PerformanceEntry"],[53,39,46,53],[54,2,46,53],[54,6,72,13,"PerformanceMeasure"],[54,24,72,31],[54,27,72,31,"exports"],[54,34,72,31],[54,35,72,31,"PerformanceMeasure"],[54,53,72,31],[54,79,72,31,"_PerformanceEntry2"],[54,97,72,31],[55,4,72,31],[55,8,72,31,"_inherits2"],[55,18,72,31],[55,19,72,31,"default"],[55,26,72,31],[55,28,72,31,"PerformanceMeasure"],[55,46,72,31],[55,48,72,31,"_PerformanceEntry2"],[55,66,72,31],[56,4,72,31],[56,8,72,31,"_super2"],[56,15,72,31],[56,18,72,31,"_createSuper"],[56,30,72,31],[56,31,72,31,"PerformanceMeasure"],[56,49,72,31],[57,4,75,2],[57,13,75,2,"PerformanceMeasure"],[57,32,75,14,"measureName"],[57,43,75,33],[57,45,75,35,"measureOptions"],[57,59,75,77],[57,61,75,79],[58,6,75,79],[58,10,75,79,"_measureOptions$durat"],[58,31,75,79],[59,6,75,79],[59,10,75,79,"_this2"],[59,16,75,79],[60,6,75,79],[60,10,75,79,"_classCallCheck2"],[60,26,75,79],[60,27,75,79,"default"],[60,34,75,79],[60,42,75,79,"PerformanceMeasure"],[60,60,75,79],[61,6,76,4,"_this2"],[61,12,76,4],[61,15,76,4,"_super2"],[61,22,76,4],[61,23,76,4,"call"],[61,27,76,4],[61,34,76,10],[62,8,77,6,"name"],[62,12,77,10],[62,14,77,12,"measureName"],[62,25,77,23],[63,8,78,6,"entryType"],[63,17,78,15],[63,19,78,17],[63,28,78,26],[64,8,79,6,"startTime"],[64,17,79,15],[64,19,79,17],[64,20,79,18],[65,8,80,6,"duration"],[65,16,80,14],[65,19,80,14,"_measureOptions$durat"],[65,40,80,14],[65,43,80,16,"measureOptions"],[65,57,80,30],[65,77,80,16,"measureOptions"],[65,91,80,30],[65,92,80,32,"duration"],[65,100,80,40],[65,112,80,40,"_measureOptions$durat"],[65,133,80,40],[65,136,80,44],[66,6,81,4],[66,7,81,5],[67,6,83,4],[67,10,83,8,"measureOptions"],[67,24,83,22],[67,26,83,24],[68,8,84,6,"_this2"],[68,14,84,6],[68,15,84,11,"detail"],[68,21,84,17],[68,24,84,20,"measureOptions"],[68,38,84,34],[68,39,84,35,"detail"],[68,45,84,41],[69,6,85,4],[70,6,85,5],[70,13,85,5,"_this2"],[70,19,85,5],[71,4,86,2],[72,4,86,3],[72,15,86,3,"_createClass2"],[72,28,86,3],[72,29,86,3,"default"],[72,36,86,3],[72,38,86,3,"PerformanceMeasure"],[72,56,86,3],[73,2,86,3],[73,4,72,40,"PerformanceEntry"],[73,39,72,56],[74,2,89,0],[74,11,89,9,"warnNoNativePerformance"],[74,34,89,32,"warnNoNativePerformance"],[74,35,89,32],[74,37,89,35],[75,4,90,2],[75,8,90,2,"warnOnce"],[75,25,90,10],[75,27,91,4],[75,55,91,32],[75,57,92,4],[75,103,93,2],[75,104,93,3],[76,2,94,0],[78,2,96,0],[79,0,97,0],[80,0,98,0],[81,0,99,0],[82,0,100,0],[83,2,96,0],[83,6,101,21,"Performance"],[83,17,101,32],[83,20,101,32,"exports"],[83,27,101,32],[83,28,101,32,"default"],[83,35,101,32],[84,4,101,32],[84,13,101,32,"Performance"],[84,25,101,32],[85,6,101,32],[85,10,101,32,"_classCallCheck2"],[85,26,101,32],[85,27,101,32,"default"],[85,34,101,32],[85,42,101,32,"Performance"],[85,53,101,32],[86,6,101,32],[86,11,102,2,"eventCounts"],[86,22,102,13],[86,25,102,29],[86,29,102,33,"EventCounts"],[86,49,102,44],[86,50,102,45],[86,51,102,46],[87,4,102,46],[88,4,102,46],[88,8,102,46,"_createClass2"],[88,21,102,46],[88,22,102,46,"default"],[88,29,102,46],[88,31,102,46,"Performance"],[88,42,102,46],[89,6,102,46,"key"],[89,9,102,46],[90,6,102,46,"get"],[90,9,102,46],[91,6,104,2],[92,6,105,2],[92,15,105,2,"get"],[92,19,105,2],[92,21,105,27],[93,8,106,4],[93,12,106,8,"NativePerformance"],[93,38,106,25],[93,50,106,8,"NativePerformance"],[93,76,106,25],[93,77,106,27,"getSimpleMemoryInfo"],[93,96,106,46],[93,98,106,48],[94,10,107,6],[95,10,108,6],[96,10,109,6],[97,10,110,6],[97,14,110,12,"memoryInfo"],[97,24,110,22],[97,27,110,25,"NativePerformance"],[97,53,110,42],[97,54,110,43,"getSimpleMemoryInfo"],[97,73,110,62],[97,74,110,63],[97,75,110,64],[98,10,111,6],[98,14,111,10,"memoryInfo"],[98,24,111,20],[98,25,111,21,"hasOwnProperty"],[98,39,111,35],[98,40,111,36],[98,57,111,53],[98,58,111,54],[98,60,111,56],[99,12,112,8],[100,12,113,8],[100,16,114,27,"totalJSHeapSize"],[100,31,114,42],[100,34,116,12,"memoryInfo"],[100,44,116,22],[100,45,114,10,"hermes_heapSize"],[100,60,114,25],[101,14,115,33,"usedJSHeapSize"],[101,28,115,47],[101,31,116,12,"memoryInfo"],[101,41,116,22],[101,42,115,10,"hermes_allocatedBytes"],[101,63,115,31],[102,12,118,8],[102,19,118,15],[102,23,118,19,"MemoryInfo"],[102,42,118,29],[102,43,118,30],[103,14,119,10,"jsHeapSizeLimit"],[103,29,119,25],[103,31,119,27],[103,35,119,31],[104,14,119,33],[105,14,120,10,"totalJSHeapSize"],[105,29,120,25],[105,31,120,10,"totalJSHeapSize"],[105,46,120,25],[106,14,121,10,"usedJSHeapSize"],[106,28,121,24],[106,30,121,10,"usedJSHeapSize"],[107,12,122,8],[107,13,122,9],[107,14,122,10],[108,10,123,6],[108,11,123,7],[108,17,123,13],[109,12,124,8],[110,12,125,8],[110,19,125,15],[110,23,125,19,"MemoryInfo"],[110,42,125,29],[110,43,125,30],[110,44,125,31],[111,10,126,6],[112,8,127,4],[113,8,129,4],[113,15,129,11],[113,19,129,15,"MemoryInfo"],[113,38,129,25],[113,39,129,26],[113,40,129,27],[114,6,130,2],[116,6,132,2],[117,4,132,2],[118,6,132,2,"key"],[118,9,132,2],[119,6,132,2,"get"],[119,9,132,2],[119,11,133,2],[119,20,133,2,"get"],[119,24,133,2],[119,26,133,59],[120,8,134,4],[120,12,134,8,"NativePerformance"],[120,38,134,25],[120,50,134,8,"NativePerformance"],[120,76,134,25],[120,77,134,27,"getReactNativeStartupTiming"],[120,104,134,54],[120,106,134,56],[121,10,135,6],[121,17,135,13],[121,21,135,17,"ReactNativeStartupTiming"],[121,54,135,41],[121,55,136,8,"NativePerformance"],[121,81,136,25],[121,82,136,26,"getReactNativeStartupTiming"],[121,109,136,53],[121,110,136,54],[121,111,137,6],[121,112,137,7],[122,8,138,4],[123,8,139,4],[123,15,139,11],[123,19,139,15,"ReactNativeStartupTiming"],[123,52,139,39],[123,53,139,40],[123,54,139,41],[124,6,140,2],[125,4,140,3],[126,6,140,3,"key"],[126,9,140,3],[127,6,140,3,"value"],[127,11,140,3],[127,13,142,2],[127,22,142,2,"mark"],[127,27,143,4,"markName"],[127,35,143,20],[127,37,144,4,"markOptions"],[127,48,144,40],[127,50,145,21],[128,8,146,4],[128,12,146,10,"mark"],[128,16,146,14],[128,19,146,17],[128,23,146,21,"PerformanceMark"],[128,38,146,36],[128,39,146,37,"markName"],[128,47,146,45],[128,49,146,47,"markOptions"],[128,60,146,58],[128,61,146,59],[129,8,148,4],[129,12,148,8,"NativePerformance"],[129,38,148,25],[129,50,148,8,"NativePerformance"],[129,76,148,25],[129,77,148,27,"mark"],[129,81,148,31],[129,83,148,33],[130,10,149,6,"NativePerformance"],[130,36,149,23],[130,37,149,24,"mark"],[130,41,149,28],[130,42,149,29,"markName"],[130,50,149,37],[130,52,149,39,"mark"],[130,56,149,43],[130,57,149,44,"startTime"],[130,66,149,53],[130,68,149,55,"mark"],[130,72,149,59],[130,73,149,60,"duration"],[130,81,149,68],[130,82,149,69],[131,8,150,4],[131,9,150,5],[131,15,150,11],[132,10,151,6,"warnNoNativePerformance"],[132,33,151,29],[132,34,151,30],[132,35,151,31],[133,8,152,4],[134,8,154,4],[134,15,154,11,"mark"],[134,19,154,15],[135,6,155,2],[136,4,155,3],[137,6,155,3,"key"],[137,9,155,3],[138,6,155,3,"value"],[138,11,155,3],[138,13,157,2],[138,22,157,2,"clearMarks"],[138,33,157,13,"markName"],[138,41,157,30],[138,43,157,38],[139,8,158,4],[139,12,158,8],[139,14,158,9,"NativePerformanceObserver"],[139,48,158,34],[139,60,158,9,"NativePerformanceObserver"],[139,94,158,34],[139,95,158,36,"clearEntries"],[139,107,158,48],[139,110,158,50],[140,10,159,6],[140,14,159,6,"warnNoNativePerformanceObserver"],[140,66,159,37],[140,68,159,38],[140,69,159,39],[141,10,160,6],[142,8,161,4],[143,8,163,4,"NativePerformanceObserver"],[143,42,163,29],[143,62,163,4,"NativePerformanceObserver"],[143,96,163,29],[143,97,163,31,"clearEntries"],[143,109,163,43],[143,110,164,6,"RawPerformanceEntryTypeValues"],[143,160,164,35],[143,161,164,36,"MARK"],[143,165,164,40],[143,167,165,6,"markName"],[143,175,166,4],[143,176,166,5],[144,6,167,2],[145,4,167,3],[146,6,167,3,"key"],[146,9,167,3],[147,6,167,3,"value"],[147,11,167,3],[147,13,169,2],[147,22,169,2,"measure"],[147,30,170,4,"measureName"],[147,41,170,23],[147,43,171,4,"startMarkOrOptions"],[147,61,171,59],[147,63,172,4,"endMark"],[147,70,172,20],[147,72,173,24],[148,8,174,4],[148,12,174,8,"options"],[148,19,174,15],[149,8,175,4],[149,12,175,8,"startMarkName"],[149,25,175,21],[150,10,176,6,"endMarkName"],[150,21,176,17],[150,24,176,20,"endMark"],[150,31,176,27],[151,10,177,6,"duration"],[151,18,177,14],[152,10,178,6,"startTime"],[152,19,178,15],[152,22,178,18],[152,23,178,19],[153,10,179,6,"endTime"],[153,17,179,13],[153,20,179,16],[153,21,179,17],[154,8,181,4],[154,12,181,8],[154,19,181,15,"startMarkOrOptions"],[154,37,181,33],[154,42,181,38],[154,50,181,46],[154,52,181,48],[155,10,182,6,"startMarkName"],[155,23,182,19],[155,26,182,22,"startMarkOrOptions"],[155,44,182,40],[156,8,183,4],[156,9,183,5],[156,15,183,11],[156,19,183,15,"startMarkOrOptions"],[156,37,183,33],[156,42,183,38,"undefined"],[156,51,183,47],[156,53,183,49],[157,10,183,49],[157,14,183,49,"_options$duration"],[157,31,183,49],[158,10,184,6,"options"],[158,17,184,13],[158,20,184,16,"startMarkOrOptions"],[158,38,184,34],[159,10,185,6],[159,14,185,10,"endMark"],[159,21,185,17],[159,26,185,22,"undefined"],[159,35,185,31],[159,37,185,33],[160,12,186,8],[160,18,186,14],[160,22,186,18,"TypeError"],[160,31,186,27],[160,32,187,10],[160,90,188,8],[160,91,188,9],[161,10,189,6],[162,10,190,6],[162,14,190,10,"options"],[162,21,190,17],[162,22,190,18,"start"],[162,27,190,23],[162,32,190,28,"undefined"],[162,41,190,37],[162,45,190,41,"options"],[162,52,190,48],[162,53,190,49,"end"],[162,56,190,52],[162,61,190,57,"undefined"],[162,70,190,66],[162,72,190,68],[163,12,191,8],[163,18,191,14],[163,22,191,18,"TypeError"],[163,31,191,27],[163,32,192,10],[163,111,193,8],[163,112,193,9],[164,10,194,6],[165,10,195,6],[165,14,196,8,"options"],[165,21,196,15],[165,22,196,16,"start"],[165,27,196,21],[165,32,196,26,"undefined"],[165,41,196,35],[165,45,197,8,"options"],[165,52,197,15],[165,53,197,16,"end"],[165,56,197,19],[165,61,197,24,"undefined"],[165,70,197,33],[165,74,198,8,"options"],[165,81,198,15],[165,82,198,16,"duration"],[165,90,198,24],[165,95,198,29,"undefined"],[165,104,198,38],[165,106,199,8],[166,12,200,8],[166,18,200,14],[166,22,200,18,"TypeError"],[166,31,200,27],[166,32,201,10],[166,115,202,8],[166,116,202,9],[167,10,203,6],[168,10,205,6],[168,14,205,10],[168,21,205,17,"options"],[168,28,205,24],[168,29,205,25,"start"],[168,34,205,30],[168,39,205,35],[168,47,205,43],[168,49,205,45],[169,12,206,8,"startTime"],[169,21,206,17],[169,24,206,20,"options"],[169,31,206,27],[169,32,206,28,"start"],[169,37,206,33],[170,10,207,6],[170,11,207,7],[170,17,207,13],[171,12,208,8,"startMarkName"],[171,25,208,21],[171,28,208,24,"options"],[171,35,208,31],[171,36,208,32,"start"],[171,41,208,37],[172,10,209,6],[173,10,211,6],[173,14,211,10],[173,21,211,17,"options"],[173,28,211,24],[173,29,211,25,"end"],[173,32,211,28],[173,37,211,33],[173,45,211,41],[173,47,211,43],[174,12,212,8,"endTime"],[174,19,212,15],[174,22,212,18,"options"],[174,29,212,25],[174,30,212,26,"end"],[174,33,212,29],[175,10,213,6],[175,11,213,7],[175,17,213,13],[176,12,214,8,"endMarkName"],[176,23,214,19],[176,26,214,22,"options"],[176,33,214,29],[176,34,214,30,"end"],[176,37,214,33],[177,10,215,6],[178,10,217,6,"duration"],[178,18,217,14],[178,22,217,14,"_options$duration"],[178,39,217,14],[178,42,217,17,"options"],[178,49,217,24],[178,50,217,25,"duration"],[178,58,217,33],[178,70,217,33,"_options$duration"],[178,87,217,33],[178,90,217,37,"duration"],[178,98,217,45],[179,8,218,4],[180,8,220,4],[180,12,220,10,"measure"],[180,19,220,17],[180,22,220,20],[180,26,220,24,"PerformanceMeasure"],[180,44,220,42],[180,45,220,43,"measureName"],[180,56,220,54],[180,58,220,56,"options"],[180,65,220,63],[180,66,220,64],[181,8,222,4],[181,12,222,8,"NativePerformance"],[181,38,222,25],[181,50,222,8,"NativePerformance"],[181,76,222,25],[181,77,222,27,"measure"],[181,84,222,34],[181,86,222,36],[182,10,223,6,"NativePerformance"],[182,36,223,23],[182,37,223,24,"measure"],[182,44,223,31],[182,45,224,8,"measureName"],[182,56,224,19],[182,58,225,8,"startTime"],[182,67,225,17],[182,69,226,8,"endTime"],[182,76,226,15],[182,78,227,8,"duration"],[182,86,227,16],[182,88,228,8,"startMarkName"],[182,101,228,21],[182,103,229,8,"endMarkName"],[182,114,230,6],[182,115,230,7],[183,8,231,4],[183,9,231,5],[183,15,231,11],[184,10,232,6,"warnNoNativePerformance"],[184,33,232,29],[184,34,232,30],[184,35,232,31],[185,8,233,4],[186,8,235,4],[186,15,235,11,"measure"],[186,22,235,18],[187,6,236,2],[188,4,236,3],[189,6,236,3,"key"],[189,9,236,3],[190,6,236,3,"value"],[190,11,236,3],[190,13,238,2],[190,22,238,2,"clearMeasures"],[190,36,238,16,"measureName"],[190,47,238,36],[190,49,238,44],[191,8,239,4],[191,12,239,8],[191,14,239,9,"NativePerformanceObserver"],[191,48,239,34],[191,60,239,9,"NativePerformanceObserver"],[191,94,239,34],[191,95,239,36,"clearEntries"],[191,107,239,48],[191,110,239,50],[192,10,240,6],[192,14,240,6,"warnNoNativePerformanceObserver"],[192,66,240,37],[192,68,240,38],[192,69,240,39],[193,10,241,6],[194,8,242,4],[195,8,244,4,"NativePerformanceObserver"],[195,42,244,29],[195,62,244,4,"NativePerformanceObserver"],[195,96,244,29],[195,97,244,31,"clearEntries"],[195,109,244,43],[195,110,245,6,"RawPerformanceEntryTypeValues"],[195,160,245,35],[195,161,245,36,"MEASURE"],[195,168,245,43],[195,170,246,6,"measureName"],[195,181,247,4],[195,182,247,5],[196,6,248,2],[198,6,250,2],[199,0,251,0],[200,0,252,0],[201,0,253,0],[202,4,250,2],[203,6,250,2,"key"],[203,9,250,2],[204,6,250,2,"value"],[204,11,250,2],[204,13,254,2],[204,22,254,2,"now"],[204,26,254,2],[204,28,254,26],[205,8,255,4],[205,15,255,11,"getCurrentTimeStamp"],[205,34,255,30],[205,35,255,31],[205,36,255,32],[206,6,256,2],[208,6,258,2],[209,0,259,0],[210,0,260,0],[211,0,261,0],[212,0,262,0],[213,4,258,2],[214,6,258,2,"key"],[214,9,258,2],[215,6,258,2,"value"],[215,11,258,2],[215,13,263,2],[215,22,263,2,"getEntries"],[215,33,263,2],[215,35,263,37],[216,8,264,4],[216,12,264,8],[216,14,264,9,"NativePerformanceObserver"],[216,48,264,34],[216,60,264,9,"NativePerformanceObserver"],[216,94,264,34],[216,95,264,36,"clearEntries"],[216,107,264,48],[216,110,264,50],[217,10,265,6],[217,14,265,6,"warnNoNativePerformanceObserver"],[217,66,265,37],[217,68,265,38],[217,69,265,39],[218,10,266,6],[218,17,266,13],[218,19,266,15],[219,8,267,4],[220,8,268,4],[220,15,268,11,"NativePerformanceObserver"],[220,49,268,36],[220,50,268,37,"getEntries"],[220,60,268,47],[220,61,268,48],[220,62,268,49],[220,63,268,50,"map"],[220,66,268,53],[220,67,268,54,"rawToPerformanceEntry"],[220,109,268,75],[220,110,268,76],[221,6,269,2],[222,4,269,3],[223,6,269,3,"key"],[223,9,269,3],[224,6,269,3,"value"],[224,11,269,3],[224,13,271,2],[224,22,271,2,"getEntriesByType"],[224,39,271,19,"entryType"],[224,48,271,50],[224,50,271,74],[225,8,272,4],[225,12,272,8,"entryType"],[225,21,272,17],[225,26,272,22],[225,32,272,28],[225,36,272,32,"entryType"],[225,45,272,41],[225,50,272,46],[225,59,272,55],[225,61,272,57],[226,10,273,6,"console"],[226,17,273,13],[226,18,273,14,"log"],[226,21,273,17],[226,22,274,9],[226,108,274,94,"entryType"],[226,117,274,104],[226,119,275,6],[226,120,275,7],[227,10,276,6],[227,17,276,13],[227,19,276,15],[228,8,277,4],[229,8,279,4],[229,12,279,8],[229,14,279,9,"NativePerformanceObserver"],[229,48,279,34],[229,60,279,9,"NativePerformanceObserver"],[229,94,279,34],[229,95,279,36,"clearEntries"],[229,107,279,48],[229,110,279,50],[230,10,280,6],[230,14,280,6,"warnNoNativePerformanceObserver"],[230,66,280,37],[230,68,280,38],[230,69,280,39],[231,10,281,6],[231,17,281,13],[231,19,281,15],[232,8,282,4],[233,8,283,4],[233,15,283,11,"NativePerformanceObserver"],[233,49,283,36],[233,50,283,37,"getEntries"],[233,60,283,47],[233,61,284,6],[233,65,284,6,"performanceEntryTypeToRaw"],[233,111,284,31],[233,113,284,32,"entryType"],[233,122,284,41],[233,123,285,4],[233,124,285,5],[233,125,285,6,"map"],[233,128,285,9],[233,129,285,10,"rawToPerformanceEntry"],[233,171,285,31],[233,172,285,32],[234,6,286,2],[235,4,286,3],[236,6,286,3,"key"],[236,9,286,3],[237,6,286,3,"value"],[237,11,286,3],[237,13,288,2],[237,22,288,2,"getEntriesByName"],[237,39,289,4,"entryName"],[237,48,289,21],[237,50,290,4,"entryType"],[237,59,290,36],[237,61,291,26],[238,8,292,4],[238,12,293,6,"entryType"],[238,21,293,15],[238,26,293,20,"undefined"],[238,35,293,29],[238,39,294,6,"entryType"],[238,48,294,15],[238,53,294,20],[238,59,294,26],[238,63,295,6,"entryType"],[238,72,295,15],[238,77,295,20],[238,86,295,29],[238,88,296,6],[239,10,297,6,"console"],[239,17,297,13],[239,18,297,14,"log"],[239,21,297,17],[239,22,298,9],[239,108,298,94,"entryType"],[239,117,298,104],[239,119,299,6],[239,120,299,7],[240,10,300,6],[240,17,300,13],[240,19,300,15],[241,8,301,4],[242,8,303,4],[242,12,303,8],[242,14,303,9,"NativePerformanceObserver"],[242,48,303,34],[242,60,303,9,"NativePerformanceObserver"],[242,94,303,34],[242,95,303,36,"clearEntries"],[242,107,303,48],[242,110,303,50],[243,10,304,6],[243,14,304,6,"warnNoNativePerformanceObserver"],[243,66,304,37],[243,68,304,38],[243,69,304,39],[244,10,305,6],[244,17,305,13],[244,19,305,15],[245,8,306,4],[246,8,307,4],[246,15,307,11,"NativePerformanceObserver"],[246,49,307,36],[246,50,307,37,"getEntries"],[246,60,307,47],[246,61,308,6,"entryType"],[246,70,308,15],[246,74,308,19],[246,78,308,23],[246,81,308,26],[246,85,308,26,"performanceEntryTypeToRaw"],[246,131,308,51],[246,133,308,52,"entryType"],[246,142,308,61],[246,143,308,62],[246,146,308,65,"undefined"],[246,155,308,74],[246,157,309,6,"entryName"],[246,166,310,4],[246,167,310,5],[246,168,310,6,"map"],[246,171,310,9],[246,172,310,10,"rawToPerformanceEntry"],[246,214,310,31],[246,215,310,32],[247,6,311,2],[248,4,311,3],[249,4,311,3],[249,11,311,3,"Performance"],[249,22,311,3],[250,2,311,3],[251,0,311,3]],"functionMap":{"names":["<global>","<anonymous>","PerformanceMark","PerformanceMark#constructor","PerformanceMeasure","PerformanceMeasure#constructor","warnNoNativePerformance","Performance","get__memory","get__reactNativeStartupTiming","mark","clearMarks","measure","clearMeasures","now","getEntries","getEntriesByType","getEntriesByName"],"mappings":"AAA;IC2C,gBD;OEE;ECG;GDW;CFC;OIW;ECG;GDW;CJC;AME;CNK;eOO;ECI;GDyB;EEG;GFO;EGE;GHa;EIE;GJU;EKE;GLmE;EME;GNU;EOM;GPE;EQO;GRM;ESE;GTe;EUE;GVuB;CPC"}},"type":"js/module"}]}