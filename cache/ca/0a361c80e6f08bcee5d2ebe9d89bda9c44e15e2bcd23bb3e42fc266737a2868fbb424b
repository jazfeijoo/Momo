{"dependencies":[{"name":"@react-native/normalize-color","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":23,"index":242},"end":{"line":12,"column":63,"index":282}}],"key":"vhpsyRC/dyZSiZwhF8E1L5pwclU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  'use strict';\n\n  var normalizeColor = _$$_REQUIRE(_dependencyMap[0], \"@react-native/normalize-color\");\n  var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {\n    var color = props[propName];\n    if (color == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');\n      }\n      return;\n    }\n    if (typeof color === 'number') {\n      // Developers should not use a number, but we are using the prop type\n      // both for user provided colors and for transformed ones. This isn't ideal\n      // and should be fixed but will do for now...\n      return;\n    }\n    if (typeof color === 'string' && normalizeColor(color) === null) {\n      return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\\n' + `Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n`);\n    }\n  };\n  var ColorPropType = colorPropType.bind(null, false /* isRequired */);\n  ColorPropType.isRequired = colorPropType.bind(null, true /* isRequired */);\n\n  module.exports = ColorPropType;\n});","lineCount":48,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[11,2,10,0],[11,14,10,12],[13,2,12,0],[13,6,12,6,"normalizeColor"],[13,20,12,20],[13,23,12,23,"require"],[13,34,12,30],[13,35,12,30,"_dependencyMap"],[13,49,12,30],[13,85,12,62],[13,86,12,63],[14,2,14,0],[14,6,14,6,"colorPropType"],[14,19,14,19],[14,22,14,22],[14,31,14,6,"colorPropType"],[14,44,14,19,"colorPropType"],[14,45,15,2,"isRequired"],[14,55,15,12],[14,57,16,2,"props"],[14,62,16,7],[14,64,17,2,"propName"],[14,72,17,10],[14,74,18,2,"componentName"],[14,87,18,15],[14,89,19,2,"location"],[14,97,19,10],[14,99,20,2,"propFullName"],[14,111,20,14],[14,113,21,2],[15,4,22,2],[15,8,22,8,"color"],[15,13,22,13],[15,16,22,16,"props"],[15,21,22,21],[15,22,22,22,"propName"],[15,30,22,30],[15,31,22,31],[16,4,24,2],[16,8,24,6,"color"],[16,13,24,11],[16,17,24,15],[16,21,24,19],[16,23,24,21],[17,6,25,4],[17,10,25,8,"isRequired"],[17,20,25,18],[17,22,25,20],[18,8,26,6],[18,15,26,13],[18,19,26,17,"Error"],[18,24,26,22],[18,25,27,8],[18,36,27,19],[18,39,28,10,"location"],[18,47,28,18],[18,50,29,10],[18,54,29,14],[18,58,30,11,"propFullName"],[18,70,30,23],[18,74,30,27,"propName"],[18,82,30,35],[18,83,30,36],[18,86,31,10],[18,112,31,36],[18,115,32,10,"componentName"],[18,128,32,23],[18,131,33,10],[18,135,34,6],[18,136,34,7],[19,6,35,4],[20,6,36,4],[21,4,37,2],[22,4,39,2],[22,8,39,6],[22,15,39,13,"color"],[22,20,39,18],[22,25,39,23],[22,33,39,31],[22,35,39,33],[23,6,40,4],[24,6,41,4],[25,6,42,4],[26,6,43,4],[27,4,44,2],[28,4,46,2],[28,8,46,6],[28,15,46,13,"color"],[28,20,46,18],[28,25,46,23],[28,33,46,31],[28,37,46,35,"normalizeColor"],[28,51,46,49],[28,52,46,50,"color"],[28,57,46,55],[28,58,46,56],[28,63,46,61],[28,67,46,65],[28,69,46,67],[29,6,47,4],[29,13,47,11],[29,17,47,15,"Error"],[29,22,47,20],[29,23,48,6],[29,33,48,16],[29,36,49,8,"location"],[29,44,49,16],[29,47,50,8],[29,51,50,12],[29,55,51,9,"propFullName"],[29,67,51,21],[29,71,51,25,"propName"],[29,79,51,33],[29,80,51,34],[29,83,52,8],[29,100,52,25],[29,103,53,8,"componentName"],[29,116,53,21],[29,119,54,8],[29,124,54,13],[29,127,55,8,"color"],[29,132,55,13],[29,135,56,8],[29,139,56,12],[29,142,57,9],[30,0,58,0],[31,0,59,0],[32,0,60,0],[33,0,61,0],[34,0,62,0],[35,0,63,0],[36,0,64,0],[37,0,65,0],[38,0,66,0],[39,0,67,0],[40,0,68,0],[41,0,69,0],[41,1,70,4],[41,2,70,5],[42,4,71,2],[43,2,72,0],[43,3,72,1],[44,2,74,0],[44,6,74,6,"ColorPropType"],[44,19,74,19],[44,22,74,22,"colorPropType"],[44,35,74,35],[44,36,74,36,"bind"],[44,40,74,40],[44,41,74,41],[44,45,74,45],[44,47,74,47],[44,52,74,52],[44,53,74,53],[44,69,74,69],[44,70,74,70],[45,2,75,0,"ColorPropType"],[45,15,75,13],[45,16,75,14,"isRequired"],[45,26,75,24],[45,29,75,27,"colorPropType"],[45,42,75,40],[45,43,75,41,"bind"],[45,47,75,45],[45,48,75,46],[45,52,75,50],[45,54,75,52],[45,58,75,56],[45,59,75,57],[45,75,75,73],[45,76,75,74],[47,2,77,0,"module"],[47,8,77,6],[47,9,77,7,"exports"],[47,16,77,14],[47,19,77,17,"ColorPropType"],[47,32,77,30],[48,0,77,31]],"functionMap":{"names":["<global>","colorPropType"],"mappings":"AAA;sBCa;CD0D"}},"type":"js/module"}]}