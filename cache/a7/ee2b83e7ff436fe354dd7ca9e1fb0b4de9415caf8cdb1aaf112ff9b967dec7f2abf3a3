{"dependencies":[{"name":"../tokenizer","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":38,"index":38}}],"key":"jdHcfLp+ZWoVoG/X76x8Q2Emsc0="}},{"name":"../common/TokenStream","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":18,"index":58},"end":{"line":2,"column":50,"index":90}}],"key":"ENdWRVnyjrd3VEfJJi1X+aaQbZI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var tokenize = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\");\n  var TokenStream = _$$_REQUIRE(_dependencyMap[1], \"../common/TokenStream\");\n  var tokenStream = new TokenStream();\n  var astToTokens = {\n    decorator: function decorator(handlers) {\n      var curNode = null;\n      var prev = {\n        len: 0,\n        node: null\n      };\n      var nodes = [prev];\n      var buffer = '';\n      return {\n        children: handlers.children,\n        node: function node(_node) {\n          var tmp = curNode;\n          curNode = _node;\n          handlers.node.call(this, _node);\n          curNode = tmp;\n        },\n        chunk: function chunk(_chunk) {\n          buffer += _chunk;\n          if (prev.node !== curNode) {\n            nodes.push({\n              len: _chunk.length,\n              node: curNode\n            });\n          } else {\n            prev.len += _chunk.length;\n          }\n        },\n        result: function result() {\n          return prepareTokens(buffer, nodes);\n        }\n      };\n    }\n  };\n  function prepareTokens(str, nodes) {\n    var tokens = [];\n    var nodesOffset = 0;\n    var nodesIndex = 0;\n    var currentNode = nodes ? nodes[nodesIndex].node : null;\n    tokenize(str, tokenStream);\n    while (!tokenStream.eof) {\n      if (nodes) {\n        while (nodesIndex < nodes.length && nodesOffset + nodes[nodesIndex].len <= tokenStream.tokenStart) {\n          nodesOffset += nodes[nodesIndex++].len;\n          currentNode = nodes[nodesIndex].node;\n        }\n      }\n      tokens.push({\n        type: tokenStream.tokenType,\n        value: tokenStream.getTokenValue(),\n        index: tokenStream.tokenIndex,\n        // TODO: remove it, temporary solution\n        balance: tokenStream.balance[tokenStream.tokenIndex],\n        // TODO: remove it, temporary solution\n        node: currentNode\n      });\n      tokenStream.next();\n      // console.log({ ...tokens[tokens.length - 1], node: undefined });\n    }\n\n    return tokens;\n  }\n  module.exports = function (value, syntax) {\n    if (typeof value === 'string') {\n      return prepareTokens(value, null);\n    }\n    return syntax.generate(value, astToTokens);\n  };\n});","lineCount":73,"map":[[2,2,1,0],[2,6,1,4,"tokenize"],[2,14,1,12],[2,17,1,15,"require"],[2,28,1,22],[2,29,1,22,"_dependencyMap"],[2,43,1,22],[2,62,1,37],[2,63,1,38],[3,2,2,0],[3,6,2,4,"TokenStream"],[3,17,2,15],[3,20,2,18,"require"],[3,31,2,25],[3,32,2,25,"_dependencyMap"],[3,46,2,25],[3,74,2,49],[3,75,2,50],[4,2,3,0],[4,6,3,4,"tokenStream"],[4,17,3,15],[4,20,3,18],[4,24,3,22,"TokenStream"],[4,35,3,33],[4,36,3,34],[4,37,3,35],[5,2,4,0],[5,6,4,4,"astToTokens"],[5,17,4,15],[5,20,4,18],[6,4,5,4,"decorator"],[6,13,5,13],[6,15,5,15],[6,24,5,15,"decorator"],[6,34,5,24,"handlers"],[6,42,5,32],[6,44,5,34],[7,6,6,8],[7,10,6,12,"curNode"],[7,17,6,19],[7,20,6,22],[7,24,6,26],[8,6,7,8],[8,10,7,12,"prev"],[8,14,7,16],[8,17,7,19],[9,8,7,21,"len"],[9,11,7,24],[9,13,7,26],[9,14,7,27],[10,8,7,29,"node"],[10,12,7,33],[10,14,7,35],[11,6,7,40],[11,7,7,41],[12,6,8,8],[12,10,8,12,"nodes"],[12,15,8,17],[12,18,8,20],[12,19,8,21,"prev"],[12,23,8,25],[12,24,8,26],[13,6,9,8],[13,10,9,12,"buffer"],[13,16,9,18],[13,19,9,21],[13,21,9,23],[14,6,11,8],[14,13,11,15],[15,8,12,12,"children"],[15,16,12,20],[15,18,12,22,"handlers"],[15,26,12,30],[15,27,12,31,"children"],[15,35,12,39],[16,8,13,12,"node"],[16,12,13,16],[16,14,13,18],[16,23,13,18,"node"],[16,28,13,27,"node"],[16,33,13,31],[16,35,13,33],[17,10,14,16],[17,14,14,20,"tmp"],[17,17,14,23],[17,20,14,26,"curNode"],[17,27,14,33],[18,10,15,16,"curNode"],[18,17,15,23],[18,20,15,26,"node"],[18,25,15,30],[19,10,16,16,"handlers"],[19,18,16,24],[19,19,16,25,"node"],[19,23,16,29],[19,24,16,30,"call"],[19,28,16,34],[19,29,16,35],[19,33,16,39],[19,35,16,41,"node"],[19,40,16,45],[19,41,16,46],[20,10,17,16,"curNode"],[20,17,17,23],[20,20,17,26,"tmp"],[20,23,17,29],[21,8,18,12],[21,9,18,13],[22,8,19,12,"chunk"],[22,13,19,17],[22,15,19,19],[22,24,19,19,"chunk"],[22,30,19,28,"chunk"],[22,36,19,33],[22,38,19,35],[23,10,20,16,"buffer"],[23,16,20,22],[23,20,20,26,"chunk"],[23,26,20,31],[24,10,21,16],[24,14,21,20,"prev"],[24,18,21,24],[24,19,21,25,"node"],[24,23,21,29],[24,28,21,34,"curNode"],[24,35,21,41],[24,37,21,43],[25,12,22,20,"nodes"],[25,17,22,25],[25,18,22,26,"push"],[25,22,22,30],[25,23,22,31],[26,14,23,24,"len"],[26,17,23,27],[26,19,23,29,"chunk"],[26,25,23,34],[26,26,23,35,"length"],[26,32,23,41],[27,14,24,24,"node"],[27,18,24,28],[27,20,24,30,"curNode"],[28,12,25,20],[28,13,25,21],[28,14,25,22],[29,10,26,16],[29,11,26,17],[29,17,26,23],[30,12,27,20,"prev"],[30,16,27,24],[30,17,27,25,"len"],[30,20,27,28],[30,24,27,32,"chunk"],[30,30,27,37],[30,31,27,38,"length"],[30,37,27,44],[31,10,28,16],[32,8,29,12],[32,9,29,13],[33,8,30,12,"result"],[33,14,30,18],[33,16,30,20],[33,25,30,20,"result"],[33,32,30,20],[33,34,30,31],[34,10,31,16],[34,17,31,23,"prepareTokens"],[34,30,31,36],[34,31,31,37,"buffer"],[34,37,31,43],[34,39,31,45,"nodes"],[34,44,31,50],[34,45,31,51],[35,8,32,12],[36,6,33,8],[36,7,33,9],[37,4,34,4],[38,2,35,0],[38,3,35,1],[39,2,37,0],[39,11,37,9,"prepareTokens"],[39,24,37,22,"prepareTokens"],[39,25,37,23,"str"],[39,28,37,26],[39,30,37,28,"nodes"],[39,35,37,33],[39,37,37,35],[40,4,38,4],[40,8,38,8,"tokens"],[40,14,38,14],[40,17,38,17],[40,19,38,19],[41,4,39,4],[41,8,39,8,"nodesOffset"],[41,19,39,19],[41,22,39,22],[41,23,39,23],[42,4,40,4],[42,8,40,8,"nodesIndex"],[42,18,40,18],[42,21,40,21],[42,22,40,22],[43,4,41,4],[43,8,41,8,"currentNode"],[43,19,41,19],[43,22,41,22,"nodes"],[43,27,41,27],[43,30,41,30,"nodes"],[43,35,41,35],[43,36,41,36,"nodesIndex"],[43,46,41,46],[43,47,41,47],[43,48,41,48,"node"],[43,52,41,52],[43,55,41,55],[43,59,41,59],[44,4,43,4,"tokenize"],[44,12,43,12],[44,13,43,13,"str"],[44,16,43,16],[44,18,43,18,"tokenStream"],[44,29,43,29],[44,30,43,30],[45,4,45,4],[45,11,45,11],[45,12,45,12,"tokenStream"],[45,23,45,23],[45,24,45,24,"eof"],[45,27,45,27],[45,29,45,29],[46,6,46,8],[46,10,46,12,"nodes"],[46,15,46,17],[46,17,46,19],[47,8,47,12],[47,15,47,19,"nodesIndex"],[47,25,47,29],[47,28,47,32,"nodes"],[47,33,47,37],[47,34,47,38,"length"],[47,40,47,44],[47,44,47,48,"nodesOffset"],[47,55,47,59],[47,58,47,62,"nodes"],[47,63,47,67],[47,64,47,68,"nodesIndex"],[47,74,47,78],[47,75,47,79],[47,76,47,80,"len"],[47,79,47,83],[47,83,47,87,"tokenStream"],[47,94,47,98],[47,95,47,99,"tokenStart"],[47,105,47,109],[47,107,47,111],[48,10,48,16,"nodesOffset"],[48,21,48,27],[48,25,48,31,"nodes"],[48,30,48,36],[48,31,48,37,"nodesIndex"],[48,41,48,47],[48,43,48,49],[48,44,48,50],[48,45,48,51,"len"],[48,48,48,54],[49,10,49,16,"currentNode"],[49,21,49,27],[49,24,49,30,"nodes"],[49,29,49,35],[49,30,49,36,"nodesIndex"],[49,40,49,46],[49,41,49,47],[49,42,49,48,"node"],[49,46,49,52],[50,8,50,12],[51,6,51,8],[52,6,53,8,"tokens"],[52,12,53,14],[52,13,53,15,"push"],[52,17,53,19],[52,18,53,20],[53,8,54,12,"type"],[53,12,54,16],[53,14,54,18,"tokenStream"],[53,25,54,29],[53,26,54,30,"tokenType"],[53,35,54,39],[54,8,55,12,"value"],[54,13,55,17],[54,15,55,19,"tokenStream"],[54,26,55,30],[54,27,55,31,"getTokenValue"],[54,40,55,44],[54,41,55,45],[54,42,55,46],[55,8,56,12,"index"],[55,13,56,17],[55,15,56,19,"tokenStream"],[55,26,56,30],[55,27,56,31,"tokenIndex"],[55,37,56,41],[56,8,56,43],[57,8,57,12,"balance"],[57,15,57,19],[57,17,57,21,"tokenStream"],[57,28,57,32],[57,29,57,33,"balance"],[57,36,57,40],[57,37,57,41,"tokenStream"],[57,48,57,52],[57,49,57,53,"tokenIndex"],[57,59,57,63],[57,60,57,64],[58,8,57,66],[59,8,58,12,"node"],[59,12,58,16],[59,14,58,18,"currentNode"],[60,6,59,8],[60,7,59,9],[60,8,59,10],[61,6,60,8,"tokenStream"],[61,17,60,19],[61,18,60,20,"next"],[61,22,60,24],[61,23,60,25],[61,24,60,26],[62,6,61,8],[63,4,62,4],[65,4,64,4],[65,11,64,11,"tokens"],[65,17,64,17],[66,2,65,0],[67,2,67,0,"module"],[67,8,67,6],[67,9,67,7,"exports"],[67,16,67,14],[67,19,67,17],[67,29,67,26,"value"],[67,34,67,31],[67,36,67,33,"syntax"],[67,42,67,39],[67,44,67,41],[68,4,68,4],[68,8,68,8],[68,15,68,15,"value"],[68,20,68,20],[68,25,68,25],[68,33,68,33],[68,35,68,35],[69,6,69,8],[69,13,69,15,"prepareTokens"],[69,26,69,28],[69,27,69,29,"value"],[69,32,69,34],[69,34,69,36],[69,38,69,40],[69,39,69,41],[70,4,70,4],[71,4,72,4],[71,11,72,11,"syntax"],[71,17,72,17],[71,18,72,18,"generate"],[71,26,72,26],[71,27,72,27,"value"],[71,32,72,32],[71,34,72,34,"astToTokens"],[71,45,72,45],[71,46,72,46],[72,2,73,0],[72,3,73,1],[73,0,73,2]],"functionMap":{"names":["<global>","astToTokens.decorator","node","chunk","result","prepareTokens","module.exports"],"mappings":"AAA;eCI;kBCQ;aDK;mBEC;aFU;oBGC;aHE;KDE;AKG;CL4B;iBME;CNM"}},"type":"js/module"}]}