{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":99,"column":0,"index":2865}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":99,"column":0,"index":2865}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":99,"column":0,"index":2865}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":99,"column":0,"index":2865}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\n  function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n  /**\n   * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\n   * with mixed data (string, native files) to be submitted via XMLHttpRequest.\n   *\n   * Example:\n   *\n   *   var photo = {\n   *     uri: uriFromCameraRoll,\n   *     type: 'image/jpeg',\n   *     name: 'photo.jpg',\n   *   };\n   *\n   *   var body = new FormData();\n   *   body.append('authToken', 'secret');\n   *   body.append('photo', photo);\n   *   body.append('title', 'A beautiful photo!');\n   *\n   *   xhr.open('POST', serverURL);\n   *   xhr.send(body);\n   */\n  var FormData = /*#__PURE__*/function () {\n    function FormData() {\n      _classCallCheck(this, FormData);\n      this._parts = [];\n    }\n    _createClass(FormData, [{\n      key: \"append\",\n      value: function append(key, value) {\n        // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\n        // MDN says that any new values should be appended to existing values.\n        // In any case, major browsers allow duplicate keys, so that's what we'll do\n        // too. They'll simply get appended as additional form data parts in the\n        // request body, leaving the server to deal with them.\n        this._parts.push([key, value]);\n      }\n    }, {\n      key: \"getAll\",\n      value: function getAll(key) {\n        return this._parts.filter(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 1),\n            name = _ref2[0];\n          return name === key;\n        }).map(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n            value = _ref4[1];\n          return value;\n        });\n      }\n    }, {\n      key: \"getParts\",\n      value: function getParts() {\n        return this._parts.map(function (_ref5) {\n          var _ref6 = _slicedToArray(_ref5, 2),\n            name = _ref6[0],\n            value = _ref6[1];\n          var contentDisposition = 'form-data; name=\"' + name + '\"';\n          var headers = {\n            'content-disposition': contentDisposition\n          };\n\n          // The body part is a \"blob\", which in React Native just means\n          // an object with a `uri` attribute. Optionally, it can also\n          // have a `name` and `type` attribute to specify filename and\n          // content type (cf. web Blob interface.)\n          if (typeof value === 'object' && !Array.isArray(value) && value) {\n            if (typeof value.name === 'string') {\n              headers['content-disposition'] += '; filename=\"' + value.name + '\"';\n            }\n            if (typeof value.type === 'string') {\n              headers['content-type'] = value.type;\n            }\n            return _objectSpread(_objectSpread({}, value), {}, {\n              headers: headers,\n              fieldName: name\n            });\n          }\n          // Convert non-object values to strings as per FormData.append() spec\n          return {\n            string: String(value),\n            headers: headers,\n            fieldName: name\n          };\n        });\n      }\n    }]);\n    return FormData;\n  }();\n  module.exports = FormData;\n});","lineCount":108,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_defineProperty"],[14,21,11,13],[14,24,11,13,"_$$_REQUIRE"],[14,35,11,13],[14,36,11,13,"_dependencyMap"],[14,50,11,13],[15,2,11,13],[15,6,11,13,"_slicedToArray"],[15,20,11,13],[15,23,11,13,"_$$_REQUIRE"],[15,34,11,13],[15,35,11,13,"_dependencyMap"],[15,49,11,13],[16,2,11,13],[16,6,11,13,"_classCallCheck"],[16,21,11,13],[16,24,11,13,"_$$_REQUIRE"],[16,35,11,13],[16,36,11,13,"_dependencyMap"],[16,50,11,13],[17,2,11,13],[17,6,11,13,"_createClass"],[17,18,11,13],[17,21,11,13,"_$$_REQUIRE"],[17,32,11,13],[17,33,11,13,"_dependencyMap"],[17,47,11,13],[18,2,11,13],[18,11,11,13,"ownKeys"],[18,19,11,13,"e"],[18,20,11,13],[18,22,11,13,"r"],[18,23,11,13],[18,31,11,13,"t"],[18,32,11,13],[18,35,11,13,"Object"],[18,41,11,13],[18,42,11,13,"keys"],[18,46,11,13],[18,47,11,13,"e"],[18,48,11,13],[18,55,11,13,"Object"],[18,61,11,13],[18,62,11,13,"getOwnPropertySymbols"],[18,83,11,13],[18,91,11,13,"o"],[18,92,11,13],[18,95,11,13,"Object"],[18,101,11,13],[18,102,11,13,"getOwnPropertySymbols"],[18,123,11,13],[18,124,11,13,"e"],[18,125,11,13],[18,128,11,13,"r"],[18,129,11,13],[18,134,11,13,"o"],[18,135,11,13],[18,138,11,13,"o"],[18,139,11,13],[18,140,11,13,"filter"],[18,146,11,13],[18,157,11,13,"r"],[18,158,11,13],[18,169,11,13,"Object"],[18,175,11,13],[18,176,11,13,"getOwnPropertyDescriptor"],[18,200,11,13],[18,201,11,13,"e"],[18,202,11,13],[18,204,11,13,"r"],[18,205,11,13],[18,207,11,13,"enumerable"],[18,217,11,13],[18,224,11,13,"t"],[18,225,11,13],[18,226,11,13,"push"],[18,230,11,13],[18,231,11,13,"apply"],[18,236,11,13],[18,237,11,13,"t"],[18,238,11,13],[18,240,11,13,"o"],[18,241,11,13],[18,253,11,13,"t"],[18,254,11,13],[19,2,11,13],[19,11,11,13,"_objectSpread"],[19,25,11,13,"e"],[19,26,11,13],[19,39,11,13,"r"],[19,40,11,13],[19,46,11,13,"r"],[19,47,11,13],[19,50,11,13,"arguments"],[19,59,11,13],[19,60,11,13,"length"],[19,66,11,13],[19,68,11,13,"r"],[19,69,11,13],[19,79,11,13,"t"],[19,80,11,13],[19,91,11,13,"arguments"],[19,100,11,13],[19,101,11,13,"r"],[19,102,11,13],[19,106,11,13,"arguments"],[19,115,11,13],[19,116,11,13,"r"],[19,117,11,13],[19,125,11,13,"r"],[19,126,11,13],[19,133,11,13,"ownKeys"],[19,140,11,13],[19,141,11,13,"Object"],[19,147,11,13],[19,148,11,13,"t"],[19,149,11,13],[19,156,11,13,"forEach"],[19,163,11,13],[19,174,11,13,"r"],[19,175,11,13],[19,179,11,13,"_defineProperty"],[19,194,11,13],[19,195,11,13,"e"],[19,196,11,13],[19,198,11,13,"r"],[19,199,11,13],[19,201,11,13,"t"],[19,202,11,13],[19,203,11,13,"r"],[19,204,11,13],[19,213,11,13,"Object"],[19,219,11,13],[19,220,11,13,"getOwnPropertyDescriptors"],[19,245,11,13],[19,248,11,13,"Object"],[19,254,11,13],[19,255,11,13,"defineProperties"],[19,271,11,13],[19,272,11,13,"e"],[19,273,11,13],[19,275,11,13,"Object"],[19,281,11,13],[19,282,11,13,"getOwnPropertyDescriptors"],[19,307,11,13],[19,308,11,13,"t"],[19,309,11,13],[19,314,11,13,"ownKeys"],[19,321,11,13],[19,322,11,13,"Object"],[19,328,11,13],[19,329,11,13,"t"],[19,330,11,13],[19,333,11,13,"forEach"],[19,340,11,13],[19,351,11,13,"r"],[19,352,11,13],[19,356,11,13,"Object"],[19,362,11,13],[19,363,11,13,"defineProperty"],[19,377,11,13],[19,378,11,13,"e"],[19,379,11,13],[19,381,11,13,"r"],[19,382,11,13],[19,384,11,13,"Object"],[19,390,11,13],[19,391,11,13,"getOwnPropertyDescriptor"],[19,415,11,13],[19,416,11,13,"t"],[19,417,11,13],[19,419,11,13,"r"],[19,420,11,13],[19,437,11,13,"e"],[19,438,11,13],[20,2,31,0],[21,0,32,0],[22,0,33,0],[23,0,34,0],[24,0,35,0],[25,0,36,0],[26,0,37,0],[27,0,38,0],[28,0,39,0],[29,0,40,0],[30,0,41,0],[31,0,42,0],[32,0,43,0],[33,0,44,0],[34,0,45,0],[35,0,46,0],[36,0,47,0],[37,0,48,0],[38,0,49,0],[39,0,50,0],[40,2,31,0],[40,6,51,6,"FormData"],[40,14,51,14],[41,4,54,2],[41,13,54,2,"FormData"],[41,22,54,2],[41,24,54,16],[42,6,54,16,"_classCallCheck"],[42,21,54,16],[42,28,54,16,"FormData"],[42,36,54,16],[43,6,55,4],[43,10,55,8],[43,11,55,9,"_parts"],[43,17,55,15],[43,20,55,18],[43,22,55,20],[44,4,56,2],[45,4,56,3,"_createClass"],[45,16,56,3],[45,17,56,3,"FormData"],[45,25,56,3],[46,6,56,3,"key"],[46,9,56,3],[47,6,56,3,"value"],[47,11,56,3],[47,13,58,2],[47,22,58,2,"append"],[47,29,58,9,"key"],[47,32,58,20],[47,34,58,22,"value"],[47,39,58,42],[47,41,58,44],[48,8,59,4],[49,8,60,4],[50,8,61,4],[51,8,62,4],[52,8,63,4],[53,8,64,4],[53,12,64,8],[53,13,64,9,"_parts"],[53,19,64,15],[53,20,64,16,"push"],[53,24,64,20],[53,25,64,21],[53,26,64,22,"key"],[53,29,64,25],[53,31,64,27,"value"],[53,36,64,32],[53,37,64,33],[53,38,64,34],[54,6,65,2],[55,4,65,3],[56,6,65,3,"key"],[56,9,65,3],[57,6,65,3,"value"],[57,11,65,3],[57,13,67,2],[57,22,67,2,"getAll"],[57,29,67,9,"key"],[57,32,67,20],[57,34,67,44],[58,8,68,4],[58,15,68,11],[58,19,68,15],[58,20,68,16,"_parts"],[58,26,68,22],[58,27,69,7,"filter"],[58,33,69,13],[58,34,69,14],[58,44,69,14,"_ref"],[58,48,69,14],[59,10,69,14],[59,14,69,14,"_ref2"],[59,19,69,14],[59,22,69,14,"_slicedToArray"],[59,36,69,14],[59,37,69,14,"_ref"],[59,41,69,14],[60,12,69,16,"name"],[60,16,69,20],[60,19,69,20,"_ref2"],[60,24,69,20],[61,10,69,20],[61,17,69,26,"name"],[61,21,69,30],[61,26,69,35,"key"],[61,29,69,38],[62,8,69,38],[62,10,69,39],[62,11,70,7,"map"],[62,14,70,10],[62,15,70,11],[62,25,70,11,"_ref3"],[62,30,70,11],[63,10,70,11],[63,14,70,11,"_ref4"],[63,19,70,11],[63,22,70,11,"_slicedToArray"],[63,36,70,11],[63,37,70,11,"_ref3"],[63,42,70,11],[64,12,70,15,"value"],[64,17,70,20],[64,20,70,20,"_ref4"],[64,25,70,20],[65,10,70,20],[65,17,70,26,"value"],[65,22,70,31],[66,8,70,31],[66,10,70,32],[67,6,71,2],[68,4,71,3],[69,6,71,3,"key"],[69,9,71,3],[70,6,71,3,"value"],[70,11,71,3],[70,13,73,2],[70,22,73,2,"getParts"],[70,31,73,2],[70,33,73,34],[71,8,74,4],[71,15,74,11],[71,19,74,15],[71,20,74,16,"_parts"],[71,26,74,22],[71,27,74,23,"map"],[71,30,74,26],[71,31,74,27],[71,41,74,27,"_ref5"],[71,46,74,27],[71,48,74,46],[72,10,74,46],[72,14,74,46,"_ref6"],[72,19,74,46],[72,22,74,46,"_slicedToArray"],[72,36,74,46],[72,37,74,46,"_ref5"],[72,42,74,46],[73,12,74,29,"name"],[73,16,74,33],[73,19,74,33,"_ref6"],[73,24,74,33],[74,12,74,35,"value"],[74,17,74,40],[74,20,74,40,"_ref6"],[74,25,74,40],[75,10,75,6],[75,14,75,12,"contentDisposition"],[75,32,75,30],[75,35,75,33],[75,54,75,52],[75,57,75,55,"name"],[75,61,75,59],[75,64,75,62],[75,67,75,65],[76,10,77,6],[76,14,77,12,"headers"],[76,21,77,28],[76,24,77,31],[77,12,77,32],[77,33,77,53],[77,35,77,55,"contentDisposition"],[78,10,77,73],[78,11,77,74],[80,10,79,6],[81,10,80,6],[82,10,81,6],[83,10,82,6],[84,10,83,6],[84,14,83,10],[84,21,83,17,"value"],[84,26,83,22],[84,31,83,27],[84,39,83,35],[84,43,83,39],[84,44,83,40,"Array"],[84,49,83,45],[84,50,83,46,"isArray"],[84,57,83,53],[84,58,83,54,"value"],[84,63,83,59],[84,64,83,60],[84,68,83,64,"value"],[84,73,83,69],[84,75,83,71],[85,12,84,8],[85,16,84,12],[85,23,84,19,"value"],[85,28,84,24],[85,29,84,25,"name"],[85,33,84,29],[85,38,84,34],[85,46,84,42],[85,48,84,44],[86,14,85,10,"headers"],[86,21,85,17],[86,22,85,18],[86,43,85,39],[86,44,85,40],[86,48,85,44],[86,62,85,58],[86,65,85,61,"value"],[86,70,85,66],[86,71,85,67,"name"],[86,75,85,71],[86,78,85,74],[86,81,85,77],[87,12,86,8],[88,12,87,8],[88,16,87,12],[88,23,87,19,"value"],[88,28,87,24],[88,29,87,25,"type"],[88,33,87,29],[88,38,87,34],[88,46,87,42],[88,48,87,44],[89,14,88,10,"headers"],[89,21,88,17],[89,22,88,18],[89,36,88,32],[89,37,88,33],[89,40,88,36,"value"],[89,45,88,41],[89,46,88,42,"type"],[89,50,88,46],[90,12,89,8],[91,12,90,8],[91,19,90,8,"_objectSpread"],[91,32,90,8],[91,33,90,8,"_objectSpread"],[91,46,90,8],[91,51,90,19,"value"],[91,56,90,24],[92,14,90,26,"headers"],[92,21,90,33],[92,23,90,26,"headers"],[92,30,90,33],[93,14,90,35,"fieldName"],[93,23,90,44],[93,25,90,46,"name"],[94,12,90,50],[95,10,91,6],[96,10,92,6],[97,10,93,6],[97,17,93,13],[98,12,93,14,"string"],[98,18,93,20],[98,20,93,22,"String"],[98,26,93,28],[98,27,93,29,"value"],[98,32,93,34],[98,33,93,35],[99,12,93,37,"headers"],[99,19,93,44],[99,21,93,37,"headers"],[99,28,93,44],[100,12,93,46,"fieldName"],[100,21,93,55],[100,23,93,57,"name"],[101,10,93,61],[101,11,93,62],[102,8,94,4],[102,9,94,5],[102,10,94,6],[103,6,95,2],[104,4,95,3],[105,4,95,3],[105,11,95,3,"FormData"],[105,19,95,3],[106,2,95,3],[107,2,98,0,"module"],[107,8,98,6],[107,9,98,7,"exports"],[107,16,98,14],[107,19,98,17,"FormData"],[107,27,98,25],[108,0,98,26]],"functionMap":{"names":["<global>","FormData","constructor","append","getAll","_parts.filter$argument_0","_parts.filter.map$argument_0","getParts","_parts.map$argument_0"],"mappings":"AAA;ACkD;ECG;GDE;EEE;GFO;EGE;cCE,wBD;WEC,oBF;GHC;EME;2BCC;KDoB;GNC;CDC"}},"type":"js/module"}]}