{"dependencies":[{"name":"domhandler","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":19,"index":292},"end":{"line":4,"column":40,"index":313}}],"key":"JhlTxQPoKjLr/Si5MjJ4YoDUcd0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\n  var domhandler_1 = _$$_REQUIRE(_dependencyMap[0], \"domhandler\");\n  /**\n   * Get a node's children.\n   *\n   * @category Traversal\n   * @param elem Node to get the children of.\n   * @returns `elem`'s children, or an empty array.\n   */\n  function getChildren(elem) {\n    return (0, domhandler_1.hasChildren)(elem) ? elem.children : [];\n  }\n  exports.getChildren = getChildren;\n  /**\n   * Get a node's parent.\n   *\n   * @category Traversal\n   * @param elem Node to get the parent of.\n   * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n   */\n  function getParent(elem) {\n    return elem.parent || null;\n  }\n  exports.getParent = getParent;\n  /**\n   * Gets an elements siblings, including the element itself.\n   *\n   * Attempts to get the children through the element's parent first. If we don't\n   * have a parent (the element is a root node), we walk the element's `prev` &\n   * `next` to get all remaining nodes.\n   *\n   * @category Traversal\n   * @param elem Element to get the siblings of.\n   * @returns `elem`'s siblings, including `elem`.\n   */\n  function getSiblings(elem) {\n    var _a, _b;\n    var parent = getParent(elem);\n    if (parent != null) return getChildren(parent);\n    var siblings = [elem];\n    var prev = elem.prev,\n      next = elem.next;\n    while (prev != null) {\n      siblings.unshift(prev);\n      _a = prev, prev = _a.prev;\n    }\n    while (next != null) {\n      siblings.push(next);\n      _b = next, next = _b.next;\n    }\n    return siblings;\n  }\n  exports.getSiblings = getSiblings;\n  /**\n   * Gets an attribute from an element.\n   *\n   * @category Traversal\n   * @param elem Element to check.\n   * @param name Attribute name to retrieve.\n   * @returns The element's attribute value, or `undefined`.\n   */\n  function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n  }\n  exports.getAttributeValue = getAttributeValue;\n  /**\n   * Checks whether an element has an attribute.\n   *\n   * @category Traversal\n   * @param elem Element to check.\n   * @param name Attribute name to look for.\n   * @returns Returns whether `elem` has the attribute `name`.\n   */\n  function hasAttrib(elem, name) {\n    return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n  }\n  exports.hasAttrib = hasAttrib;\n  /**\n   * Get the tag name of an element.\n   *\n   * @category Traversal\n   * @param elem The element to get the name for.\n   * @returns The tag name of `elem`.\n   */\n  function getName(elem) {\n    return elem.name;\n  }\n  exports.getName = getName;\n  /**\n   * Returns the next element sibling of a node.\n   *\n   * @category Traversal\n   * @param elem The element to get the next sibling of.\n   * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n   * sibling.\n   */\n  function nextElementSibling(elem) {\n    var _a;\n    var next = elem.next;\n    while (next !== null && !(0, domhandler_1.isTag)(next)) _a = next, next = _a.next;\n    return next;\n  }\n  exports.nextElementSibling = nextElementSibling;\n  /**\n   * Returns the previous element sibling of a node.\n   *\n   * @category Traversal\n   * @param elem The element to get the previous sibling of.\n   * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n   * previous sibling.\n   */\n  function prevElementSibling(elem) {\n    var _a;\n    var prev = elem.prev;\n    while (prev !== null && !(0, domhandler_1.isTag)(prev)) _a = prev, prev = _a.prev;\n    return prev;\n  }\n  exports.prevElementSibling = prevElementSibling;\n});","lineCount":126,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"prevElementSibling"],[7,28,3,26],[7,31,3,29,"exports"],[7,38,3,36],[7,39,3,37,"nextElementSibling"],[7,57,3,55],[7,60,3,58,"exports"],[7,67,3,65],[7,68,3,66,"getName"],[7,75,3,73],[7,78,3,76,"exports"],[7,85,3,83],[7,86,3,84,"hasAttrib"],[7,95,3,93],[7,98,3,96,"exports"],[7,105,3,103],[7,106,3,104,"getAttributeValue"],[7,123,3,121],[7,126,3,124,"exports"],[7,133,3,131],[7,134,3,132,"getSiblings"],[7,145,3,143],[7,148,3,146,"exports"],[7,155,3,153],[7,156,3,154,"getParent"],[7,165,3,163],[7,168,3,166,"exports"],[7,175,3,173],[7,176,3,174,"getChildren"],[7,187,3,185],[7,190,3,188],[7,195,3,193],[7,196,3,194],[8,2,4,0],[8,6,4,4,"domhandler_1"],[8,18,4,16],[8,21,4,19,"require"],[8,32,4,26],[8,33,4,26,"_dependencyMap"],[8,47,4,26],[8,64,4,39],[8,65,4,40],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,2,12,0],[16,11,12,9,"getChildren"],[16,22,12,20,"getChildren"],[16,23,12,21,"elem"],[16,27,12,25],[16,29,12,27],[17,4,13,4],[17,11,13,11],[17,12,13,12],[17,13,13,13],[17,15,13,15,"domhandler_1"],[17,27,13,27],[17,28,13,28,"hasChildren"],[17,39,13,39],[17,41,13,41,"elem"],[17,45,13,45],[17,46,13,46],[17,49,13,49,"elem"],[17,53,13,53],[17,54,13,54,"children"],[17,62,13,62],[17,65,13,65],[17,67,13,67],[18,2,14,0],[19,2,15,0,"exports"],[19,9,15,7],[19,10,15,8,"getChildren"],[19,21,15,19],[19,24,15,22,"getChildren"],[19,35,15,33],[20,2,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,2,23,0],[27,11,23,9,"getParent"],[27,20,23,18,"getParent"],[27,21,23,19,"elem"],[27,25,23,23],[27,27,23,25],[28,4,24,4],[28,11,24,11,"elem"],[28,15,24,15],[28,16,24,16,"parent"],[28,22,24,22],[28,26,24,26],[28,30,24,30],[29,2,25,0],[30,2,26,0,"exports"],[30,9,26,7],[30,10,26,8,"getParent"],[30,19,26,17],[30,22,26,20,"getParent"],[30,31,26,29],[31,2,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,2,38,0],[42,11,38,9,"getSiblings"],[42,22,38,20,"getSiblings"],[42,23,38,21,"elem"],[42,27,38,25],[42,29,38,27],[43,4,39,4],[43,8,39,8,"_a"],[43,10,39,10],[43,12,39,12,"_b"],[43,14,39,14],[44,4,40,4],[44,8,40,8,"parent"],[44,14,40,14],[44,17,40,17,"getParent"],[44,26,40,26],[44,27,40,27,"elem"],[44,31,40,31],[44,32,40,32],[45,4,41,4],[45,8,41,8,"parent"],[45,14,41,14],[45,18,41,18],[45,22,41,22],[45,24,42,8],[45,31,42,15,"getChildren"],[45,42,42,26],[45,43,42,27,"parent"],[45,49,42,33],[45,50,42,34],[46,4,43,4],[46,8,43,8,"siblings"],[46,16,43,16],[46,19,43,19],[46,20,43,20,"elem"],[46,24,43,24],[46,25,43,25],[47,4,44,4],[47,8,44,8,"prev"],[47,12,44,12],[47,15,44,15,"elem"],[47,19,44,19],[47,20,44,20,"prev"],[47,24,44,24],[48,6,44,26,"next"],[48,10,44,30],[48,13,44,33,"elem"],[48,17,44,37],[48,18,44,38,"next"],[48,22,44,42],[49,4,45,4],[49,11,45,11,"prev"],[49,15,45,15],[49,19,45,19],[49,23,45,23],[49,25,45,25],[50,6,46,8,"siblings"],[50,14,46,16],[50,15,46,17,"unshift"],[50,22,46,24],[50,23,46,25,"prev"],[50,27,46,29],[50,28,46,30],[51,6,47,9,"_a"],[51,8,47,11],[51,11,47,14,"prev"],[51,15,47,18],[51,17,47,20,"prev"],[51,21,47,24],[51,24,47,27,"_a"],[51,26,47,29],[51,27,47,30,"prev"],[51,31,47,34],[52,4,48,4],[53,4,49,4],[53,11,49,11,"next"],[53,15,49,15],[53,19,49,19],[53,23,49,23],[53,25,49,25],[54,6,50,8,"siblings"],[54,14,50,16],[54,15,50,17,"push"],[54,19,50,21],[54,20,50,22,"next"],[54,24,50,26],[54,25,50,27],[55,6,51,9,"_b"],[55,8,51,11],[55,11,51,14,"next"],[55,15,51,18],[55,17,51,20,"next"],[55,21,51,24],[55,24,51,27,"_b"],[55,26,51,29],[55,27,51,30,"next"],[55,31,51,34],[56,4,52,4],[57,4,53,4],[57,11,53,11,"siblings"],[57,19,53,19],[58,2,54,0],[59,2,55,0,"exports"],[59,9,55,7],[59,10,55,8,"getSiblings"],[59,21,55,19],[59,24,55,22,"getSiblings"],[59,35,55,33],[60,2,56,0],[61,0,57,0],[62,0,58,0],[63,0,59,0],[64,0,60,0],[65,0,61,0],[66,0,62,0],[67,0,63,0],[68,2,64,0],[68,11,64,9,"getAttributeValue"],[68,28,64,26,"getAttributeValue"],[68,29,64,27,"elem"],[68,33,64,31],[68,35,64,33,"name"],[68,39,64,37],[68,41,64,39],[69,4,65,4],[69,8,65,8,"_a"],[69,10,65,10],[70,4,66,4],[70,11,66,11],[70,12,66,12,"_a"],[70,14,66,14],[70,17,66,17,"elem"],[70,21,66,21],[70,22,66,22,"attribs"],[70,29,66,29],[70,35,66,35],[70,39,66,39],[70,43,66,43,"_a"],[70,45,66,45],[70,50,66,50],[70,55,66,55],[70,56,66,56],[70,59,66,59],[70,64,66,64],[70,65,66,65],[70,68,66,68,"_a"],[70,70,66,70],[70,71,66,71,"name"],[70,75,66,75],[70,76,66,76],[71,2,67,0],[72,2,68,0,"exports"],[72,9,68,7],[72,10,68,8,"getAttributeValue"],[72,27,68,25],[72,30,68,28,"getAttributeValue"],[72,47,68,45],[73,2,69,0],[74,0,70,0],[75,0,71,0],[76,0,72,0],[77,0,73,0],[78,0,74,0],[79,0,75,0],[80,0,76,0],[81,2,77,0],[81,11,77,9,"hasAttrib"],[81,20,77,18,"hasAttrib"],[81,21,77,19,"elem"],[81,25,77,23],[81,27,77,25,"name"],[81,31,77,29],[81,33,77,31],[82,4,78,4],[82,11,78,12,"elem"],[82,15,78,16],[82,16,78,17,"attribs"],[82,23,78,24],[82,27,78,28],[82,31,78,32],[82,35,79,8,"Object"],[82,41,79,14],[82,42,79,15,"prototype"],[82,51,79,24],[82,52,79,25,"hasOwnProperty"],[82,66,79,39],[82,67,79,40,"call"],[82,71,79,44],[82,72,79,45,"elem"],[82,76,79,49],[82,77,79,50,"attribs"],[82,84,79,57],[82,86,79,59,"name"],[82,90,79,63],[82,91,79,64],[82,95,80,8,"elem"],[82,99,80,12],[82,100,80,13,"attribs"],[82,107,80,20],[82,108,80,21,"name"],[82,112,80,25],[82,113,80,26],[82,117,80,30],[82,121,80,34],[83,2,81,0],[84,2,82,0,"exports"],[84,9,82,7],[84,10,82,8,"hasAttrib"],[84,19,82,17],[84,22,82,20,"hasAttrib"],[84,31,82,29],[85,2,83,0],[86,0,84,0],[87,0,85,0],[88,0,86,0],[89,0,87,0],[90,0,88,0],[91,0,89,0],[92,2,90,0],[92,11,90,9,"getName"],[92,18,90,16,"getName"],[92,19,90,17,"elem"],[92,23,90,21],[92,25,90,23],[93,4,91,4],[93,11,91,11,"elem"],[93,15,91,15],[93,16,91,16,"name"],[93,20,91,20],[94,2,92,0],[95,2,93,0,"exports"],[95,9,93,7],[95,10,93,8,"getName"],[95,17,93,15],[95,20,93,18,"getName"],[95,27,93,25],[96,2,94,0],[97,0,95,0],[98,0,96,0],[99,0,97,0],[100,0,98,0],[101,0,99,0],[102,0,100,0],[103,0,101,0],[104,2,102,0],[104,11,102,9,"nextElementSibling"],[104,29,102,27,"nextElementSibling"],[104,30,102,28,"elem"],[104,34,102,32],[104,36,102,34],[105,4,103,4],[105,8,103,8,"_a"],[105,10,103,10],[106,4,104,4],[106,8,104,8,"next"],[106,12,104,12],[106,15,104,15,"elem"],[106,19,104,19],[106,20,104,20,"next"],[106,24,104,24],[107,4,105,4],[107,11,105,11,"next"],[107,15,105,15],[107,20,105,20],[107,24,105,24],[107,28,105,28],[107,29,105,29],[107,30,105,30],[107,31,105,31],[107,33,105,33,"domhandler_1"],[107,45,105,45],[107,46,105,46,"isTag"],[107,51,105,51],[107,53,105,53,"next"],[107,57,105,57],[107,58,105,58],[107,60,106,9,"_a"],[107,62,106,11],[107,65,106,14,"next"],[107,69,106,18],[107,71,106,20,"next"],[107,75,106,24],[107,78,106,27,"_a"],[107,80,106,29],[107,81,106,30,"next"],[107,85,106,34],[108,4,107,4],[108,11,107,11,"next"],[108,15,107,15],[109,2,108,0],[110,2,109,0,"exports"],[110,9,109,7],[110,10,109,8,"nextElementSibling"],[110,28,109,26],[110,31,109,29,"nextElementSibling"],[110,49,109,47],[111,2,110,0],[112,0,111,0],[113,0,112,0],[114,0,113,0],[115,0,114,0],[116,0,115,0],[117,0,116,0],[118,0,117,0],[119,2,118,0],[119,11,118,9,"prevElementSibling"],[119,29,118,27,"prevElementSibling"],[119,30,118,28,"elem"],[119,34,118,32],[119,36,118,34],[120,4,119,4],[120,8,119,8,"_a"],[120,10,119,10],[121,4,120,4],[121,8,120,8,"prev"],[121,12,120,12],[121,15,120,15,"elem"],[121,19,120,19],[121,20,120,20,"prev"],[121,24,120,24],[122,4,121,4],[122,11,121,11,"prev"],[122,15,121,15],[122,20,121,20],[122,24,121,24],[122,28,121,28],[122,29,121,29],[122,30,121,30],[122,31,121,31],[122,33,121,33,"domhandler_1"],[122,45,121,45],[122,46,121,46,"isTag"],[122,51,121,51],[122,53,121,53,"prev"],[122,57,121,57],[122,58,121,58],[122,60,122,9,"_a"],[122,62,122,11],[122,65,122,14,"prev"],[122,69,122,18],[122,71,122,20,"prev"],[122,75,122,24],[122,78,122,27,"_a"],[122,80,122,29],[122,81,122,30,"prev"],[122,85,122,34],[123,4,123,4],[123,11,123,11,"prev"],[123,15,123,15],[124,2,124,0],[125,2,125,0,"exports"],[125,9,125,7],[125,10,125,8,"prevElementSibling"],[125,28,125,26],[125,31,125,29,"prevElementSibling"],[125,49,125,47],[126,0,125,48]],"functionMap":{"names":["<global>","getChildren","getParent","getSiblings","getAttributeValue","hasAttrib","getName","nextElementSibling","prevElementSibling"],"mappings":"AAA;ACW;CDE;AES;CFE;AGa;CHgB;AIU;CJG;AKU;CLI;AMS;CNE;AOU;CPM;AQU;CRM"}},"type":"js/module"}]}