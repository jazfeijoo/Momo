{"dependencies":[{"name":"../utils/createCustomError","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":24,"index":24},"end":{"line":1,"column":61,"index":61}}],"key":"3fHpaonZOXjONqyIVCt4jZUtwD4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var createCustomError = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\");\n  var MAX_LINE_LENGTH = 100;\n  var OFFSET_CORRECTION = 60;\n  var TAB_REPLACEMENT = '    ';\n  function sourceFragment(error, extraLines) {\n    function processLines(start, end) {\n      return lines.slice(start, end).map(function (line, idx) {\n        var num = String(start + idx + 1);\n        while (num.length < maxNumLength) {\n          num = ' ' + num;\n        }\n        return num + ' |' + line;\n      }).join('\\n');\n    }\n    var lines = error.source.split(/\\r\\n?|\\n|\\f/);\n    var line = error.line;\n    var column = error.column;\n    var startLine = Math.max(1, line - extraLines) - 1;\n    var endLine = Math.min(line + extraLines, lines.length + 1);\n    var maxNumLength = Math.max(4, String(endLine).length) + 1;\n    var cutLeft = 0;\n\n    // column correction according to replaced tab before column\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n    if (column > MAX_LINE_LENGTH) {\n      cutLeft = column - OFFSET_CORRECTION + 3;\n      column = OFFSET_CORRECTION - 2;\n    }\n    for (var i = startLine; i <= endLine; i++) {\n      if (i >= 0 && i < lines.length) {\n        lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n        lines[i] = (cutLeft > 0 && lines[i].length > cutLeft ? \"\\u2026\" : '') + lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) + (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? \"\\u2026\" : '');\n      }\n    }\n    return [processLines(startLine, line), new Array(column + maxNumLength + 2).join('-') + '^', processLines(line, endLine)].filter(Boolean).join('\\n');\n  }\n  var SyntaxError = function SyntaxError(message, source, offset, line, column) {\n    var error = createCustomError('SyntaxError', message);\n    error.source = source;\n    error.offset = offset;\n    error.line = line;\n    error.column = column;\n    error.sourceFragment = function (extraLines) {\n      return sourceFragment(error, isNaN(extraLines) ? 0 : extraLines);\n    };\n    Object.defineProperty(error, 'formattedMessage', {\n      get: function get() {\n        return 'Parse error: ' + error.message + '\\n' + sourceFragment(error, 2);\n      }\n    });\n\n    // for backward capability\n    error.parseError = {\n      offset: offset,\n      line: line,\n      column: column\n    };\n    return error;\n  };\n  module.exports = SyntaxError;\n});","lineCount":62,"map":[[2,2,1,0],[2,6,1,4,"createCustomError"],[2,23,1,21],[2,26,1,24,"require"],[2,37,1,31],[2,38,1,31,"_dependencyMap"],[2,52,1,31],[2,85,1,60],[2,86,1,61],[3,2,2,0],[3,6,2,4,"MAX_LINE_LENGTH"],[3,21,2,19],[3,24,2,22],[3,27,2,25],[4,2,3,0],[4,6,3,4,"OFFSET_CORRECTION"],[4,23,3,21],[4,26,3,24],[4,28,3,26],[5,2,4,0],[5,6,4,4,"TAB_REPLACEMENT"],[5,21,4,19],[5,24,4,22],[5,30,4,28],[6,2,6,0],[6,11,6,9,"sourceFragment"],[6,25,6,23,"sourceFragment"],[6,26,6,24,"error"],[6,31,6,29],[6,33,6,31,"extraLines"],[6,43,6,41],[6,45,6,43],[7,4,7,4],[7,13,7,13,"processLines"],[7,25,7,25,"processLines"],[7,26,7,26,"start"],[7,31,7,31],[7,33,7,33,"end"],[7,36,7,36],[7,38,7,38],[8,6,8,8],[8,13,8,15,"lines"],[8,18,8,20],[8,19,8,21,"slice"],[8,24,8,26],[8,25,8,27,"start"],[8,30,8,32],[8,32,8,34,"end"],[8,35,8,37],[8,36,8,38],[8,37,8,39,"map"],[8,40,8,42],[8,41,8,43],[8,51,8,52,"line"],[8,55,8,56],[8,57,8,58,"idx"],[8,60,8,61],[8,62,8,63],[9,8,9,12],[9,12,9,16,"num"],[9,15,9,19],[9,18,9,22,"String"],[9,24,9,28],[9,25,9,29,"start"],[9,30,9,34],[9,33,9,37,"idx"],[9,36,9,40],[9,39,9,43],[9,40,9,44],[9,41,9,45],[10,8,11,12],[10,15,11,19,"num"],[10,18,11,22],[10,19,11,23,"length"],[10,25,11,29],[10,28,11,32,"maxNumLength"],[10,40,11,44],[10,42,11,46],[11,10,12,16,"num"],[11,13,12,19],[11,16,12,22],[11,19,12,25],[11,22,12,28,"num"],[11,25,12,31],[12,8,13,12],[13,8,15,12],[13,15,15,19,"num"],[13,18,15,22],[13,21,15,25],[13,25,15,29],[13,28,15,32,"line"],[13,32,15,36],[14,6,16,8],[14,7,16,9],[14,8,16,10],[14,9,16,11,"join"],[14,13,16,15],[14,14,16,16],[14,18,16,20],[14,19,16,21],[15,4,17,4],[16,4,19,4],[16,8,19,8,"lines"],[16,13,19,13],[16,16,19,16,"error"],[16,21,19,21],[16,22,19,22,"source"],[16,28,19,28],[16,29,19,29,"split"],[16,34,19,34],[16,35,19,35],[16,48,19,48],[16,49,19,49],[17,4,20,4],[17,8,20,8,"line"],[17,12,20,12],[17,15,20,15,"error"],[17,20,20,20],[17,21,20,21,"line"],[17,25,20,25],[18,4,21,4],[18,8,21,8,"column"],[18,14,21,14],[18,17,21,17,"error"],[18,22,21,22],[18,23,21,23,"column"],[18,29,21,29],[19,4,22,4],[19,8,22,8,"startLine"],[19,17,22,17],[19,20,22,20,"Math"],[19,24,22,24],[19,25,22,25,"max"],[19,28,22,28],[19,29,22,29],[19,30,22,30],[19,32,22,32,"line"],[19,36,22,36],[19,39,22,39,"extraLines"],[19,49,22,49],[19,50,22,50],[19,53,22,53],[19,54,22,54],[20,4,23,4],[20,8,23,8,"endLine"],[20,15,23,15],[20,18,23,18,"Math"],[20,22,23,22],[20,23,23,23,"min"],[20,26,23,26],[20,27,23,27,"line"],[20,31,23,31],[20,34,23,34,"extraLines"],[20,44,23,44],[20,46,23,46,"lines"],[20,51,23,51],[20,52,23,52,"length"],[20,58,23,58],[20,61,23,61],[20,62,23,62],[20,63,23,63],[21,4,24,4],[21,8,24,8,"maxNumLength"],[21,20,24,20],[21,23,24,23,"Math"],[21,27,24,27],[21,28,24,28,"max"],[21,31,24,31],[21,32,24,32],[21,33,24,33],[21,35,24,35,"String"],[21,41,24,41],[21,42,24,42,"endLine"],[21,49,24,49],[21,50,24,50],[21,51,24,51,"length"],[21,57,24,57],[21,58,24,58],[21,61,24,61],[21,62,24,62],[22,4,25,4],[22,8,25,8,"cutLeft"],[22,15,25,15],[22,18,25,18],[22,19,25,19],[24,4,27,4],[25,4,28,4,"column"],[25,10,28,10],[25,14,28,14],[25,15,28,15,"TAB_REPLACEMENT"],[25,30,28,30],[25,31,28,31,"length"],[25,37,28,37],[25,40,28,40],[25,41,28,41],[25,45,28,45],[25,46,28,46,"lines"],[25,51,28,51],[25,52,28,52,"line"],[25,56,28,56],[25,59,28,59],[25,60,28,60],[25,61,28,61],[25,62,28,62,"substr"],[25,68,28,68],[25,69,28,69],[25,70,28,70],[25,72,28,72,"column"],[25,78,28,78],[25,81,28,81],[25,82,28,82],[25,83,28,83],[25,84,28,84,"match"],[25,89,28,89],[25,90,28,90],[25,95,28,95],[25,96,28,96],[25,100,28,100],[25,102,28,102],[25,104,28,104,"length"],[25,110,28,110],[26,4,30,4],[26,8,30,8,"column"],[26,14,30,14],[26,17,30,17,"MAX_LINE_LENGTH"],[26,32,30,32],[26,34,30,34],[27,6,31,8,"cutLeft"],[27,13,31,15],[27,16,31,18,"column"],[27,22,31,24],[27,25,31,27,"OFFSET_CORRECTION"],[27,42,31,44],[27,45,31,47],[27,46,31,48],[28,6,32,8,"column"],[28,12,32,14],[28,15,32,17,"OFFSET_CORRECTION"],[28,32,32,34],[28,35,32,37],[28,36,32,38],[29,4,33,4],[30,4,35,4],[30,9,35,9],[30,13,35,13,"i"],[30,14,35,14],[30,17,35,17,"startLine"],[30,26,35,26],[30,28,35,28,"i"],[30,29,35,29],[30,33,35,33,"endLine"],[30,40,35,40],[30,42,35,42,"i"],[30,43,35,43],[30,45,35,45],[30,47,35,47],[31,6,36,8],[31,10,36,12,"i"],[31,11,36,13],[31,15,36,17],[31,16,36,18],[31,20,36,22,"i"],[31,21,36,23],[31,24,36,26,"lines"],[31,29,36,31],[31,30,36,32,"length"],[31,36,36,38],[31,38,36,40],[32,8,37,12,"lines"],[32,13,37,17],[32,14,37,18,"i"],[32,15,37,19],[32,16,37,20],[32,19,37,23,"lines"],[32,24,37,28],[32,25,37,29,"i"],[32,26,37,30],[32,27,37,31],[32,28,37,32,"replace"],[32,35,37,39],[32,36,37,40],[32,41,37,45],[32,43,37,47,"TAB_REPLACEMENT"],[32,58,37,62],[32,59,37,63],[33,8,38,12,"lines"],[33,13,38,17],[33,14,38,18,"i"],[33,15,38,19],[33,16,38,20],[33,19,39,16],[33,20,39,17,"cutLeft"],[33,27,39,24],[33,30,39,27],[33,31,39,28],[33,35,39,32,"lines"],[33,40,39,37],[33,41,39,38,"i"],[33,42,39,39],[33,43,39,40],[33,44,39,41,"length"],[33,50,39,47],[33,53,39,50,"cutLeft"],[33,60,39,57],[33,63,39,60],[33,71,39,68],[33,74,39,71],[33,76,39,73],[33,80,40,16,"lines"],[33,85,40,21],[33,86,40,22,"i"],[33,87,40,23],[33,88,40,24],[33,89,40,25,"substr"],[33,95,40,31],[33,96,40,32,"cutLeft"],[33,103,40,39],[33,105,40,41,"MAX_LINE_LENGTH"],[33,120,40,56],[33,123,40,59],[33,124,40,60],[33,125,40,61],[33,129,41,17,"lines"],[33,134,41,22],[33,135,41,23,"i"],[33,136,41,24],[33,137,41,25],[33,138,41,26,"length"],[33,144,41,32],[33,147,41,35,"cutLeft"],[33,154,41,42],[33,157,41,45,"MAX_LINE_LENGTH"],[33,172,41,60],[33,175,41,63],[33,176,41,64],[33,179,41,67],[33,187,41,75],[33,190,41,78],[33,192,41,80],[33,193,41,81],[34,6,42,8],[35,4,43,4],[36,4,45,4],[36,11,45,11],[36,12,46,8,"processLines"],[36,24,46,20],[36,25,46,21,"startLine"],[36,34,46,30],[36,36,46,32,"line"],[36,40,46,36],[36,41,46,37],[36,43,47,8],[36,47,47,12,"Array"],[36,52,47,17],[36,53,47,18,"column"],[36,59,47,24],[36,62,47,27,"maxNumLength"],[36,74,47,39],[36,77,47,42],[36,78,47,43],[36,79,47,44],[36,80,47,45,"join"],[36,84,47,49],[36,85,47,50],[36,88,47,53],[36,89,47,54],[36,92,47,57],[36,95,47,60],[36,97,48,8,"processLines"],[36,109,48,20],[36,110,48,21,"line"],[36,114,48,25],[36,116,48,27,"endLine"],[36,123,48,34],[36,124,48,35],[36,125,49,5],[36,126,49,6,"filter"],[36,132,49,12],[36,133,49,13,"Boolean"],[36,140,49,20],[36,141,49,21],[36,142,49,22,"join"],[36,146,49,26],[36,147,49,27],[36,151,49,31],[36,152,49,32],[37,2,50,0],[38,2,52,0],[38,6,52,4,"SyntaxError"],[38,17,52,15],[38,20,52,18],[38,29,52,4,"SyntaxError"],[38,40,52,15,"SyntaxError"],[38,41,52,27,"message"],[38,48,52,34],[38,50,52,36,"source"],[38,56,52,42],[38,58,52,44,"offset"],[38,64,52,50],[38,66,52,52,"line"],[38,70,52,56],[38,72,52,58,"column"],[38,78,52,64],[38,80,52,66],[39,4,53,4],[39,8,53,8,"error"],[39,13,53,13],[39,16,53,16,"createCustomError"],[39,33,53,33],[39,34,53,34],[39,47,53,47],[39,49,53,49,"message"],[39,56,53,56],[39,57,53,57],[40,4,55,4,"error"],[40,9,55,9],[40,10,55,10,"source"],[40,16,55,16],[40,19,55,19,"source"],[40,25,55,25],[41,4,56,4,"error"],[41,9,56,9],[41,10,56,10,"offset"],[41,16,56,16],[41,19,56,19,"offset"],[41,25,56,25],[42,4,57,4,"error"],[42,9,57,9],[42,10,57,10,"line"],[42,14,57,14],[42,17,57,17,"line"],[42,21,57,21],[43,4,58,4,"error"],[43,9,58,9],[43,10,58,10,"column"],[43,16,58,16],[43,19,58,19,"column"],[43,25,58,25],[44,4,60,4,"error"],[44,9,60,9],[44,10,60,10,"sourceFragment"],[44,24,60,24],[44,27,60,27],[44,37,60,36,"extraLines"],[44,47,60,46],[44,49,60,48],[45,6,61,8],[45,13,61,15,"sourceFragment"],[45,27,61,29],[45,28,61,30,"error"],[45,33,61,35],[45,35,61,37,"isNaN"],[45,40,61,42],[45,41,61,43,"extraLines"],[45,51,61,53],[45,52,61,54],[45,55,61,57],[45,56,61,58],[45,59,61,61,"extraLines"],[45,69,61,71],[45,70,61,72],[46,4,62,4],[46,5,62,5],[47,4,63,4,"Object"],[47,10,63,10],[47,11,63,11,"defineProperty"],[47,25,63,25],[47,26,63,26,"error"],[47,31,63,31],[47,33,63,33],[47,51,63,51],[47,53,63,53],[48,6,64,8,"get"],[48,9,64,11],[48,11,64,13],[48,20,64,13,"get"],[48,24,64,13],[48,26,64,24],[49,8,65,12],[49,15,66,16],[49,30,66,31],[49,33,66,34,"error"],[49,38,66,39],[49,39,66,40,"message"],[49,46,66,47],[49,49,66,50],[49,53,66,54],[49,56,67,16,"sourceFragment"],[49,70,67,30],[49,71,67,31,"error"],[49,76,67,36],[49,78,67,38],[49,79,67,39],[49,80,67,40],[50,6,69,8],[51,4,70,4],[51,5,70,5],[51,6,70,6],[53,4,72,4],[54,4,73,4,"error"],[54,9,73,9],[54,10,73,10,"parseError"],[54,20,73,20],[54,23,73,23],[55,6,74,8,"offset"],[55,12,74,14],[55,14,74,16,"offset"],[55,20,74,22],[56,6,75,8,"line"],[56,10,75,12],[56,12,75,14,"line"],[56,16,75,18],[57,6,76,8,"column"],[57,12,76,14],[57,14,76,16,"column"],[58,4,77,4],[58,5,77,5],[59,4,79,4],[59,11,79,11,"error"],[59,16,79,16],[60,2,80,0],[60,3,80,1],[61,2,82,0,"module"],[61,8,82,6],[61,9,82,7,"exports"],[61,16,82,14],[61,19,82,17,"SyntaxError"],[61,30,82,28],[62,0,82,29]],"functionMap":{"names":["<global>","sourceFragment","processLines","lines.slice.map$argument_0","SyntaxError","error.sourceFragment","Object.defineProperty$argument_2.get"],"mappings":"AAA;ACK;ICC;2CCC;SDQ;KDC;CDiC;kBIE;2BCQ;KDE;aEE;SFK;CJW"}},"type":"js/module"}]}