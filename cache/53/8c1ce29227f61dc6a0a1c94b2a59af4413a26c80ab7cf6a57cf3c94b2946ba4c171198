{"dependencies":[{"name":"./PerformanceEntry","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":387},"end":{"line":17,"column":52,"index":439}}],"key":"limm2T+T1Tv0g3goGjXkwAZT0/A="}},{"name":"./PerformanceEventTiming","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":440},"end":{"line":18,"column":64,"index":504}}],"key":"JgH87HqTtba/7D9cnIh1vqbgoIs="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RawPerformanceEntryTypeValues = void 0;\n  exports.performanceEntryTypeToRaw = performanceEntryTypeToRaw;\n  exports.rawToPerformanceEntry = rawToPerformanceEntry;\n  exports.rawToPerformanceEntryType = rawToPerformanceEntryType;\n  var _PerformanceEntry = _$$_REQUIRE(_dependencyMap[0], \"./PerformanceEntry\");\n  var _PerformanceEventTiming = _$$_REQUIRE(_dependencyMap[1], \"./PerformanceEventTiming\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var RawPerformanceEntryTypeValues = exports.RawPerformanceEntryTypeValues = {\n    UNDEFINED: 0,\n    MARK: 1,\n    MEASURE: 2,\n    EVENT: 3\n  };\n  function rawToPerformanceEntry(entry) {\n    if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {\n      return new _PerformanceEventTiming.PerformanceEventTiming({\n        name: entry.name,\n        startTime: entry.startTime,\n        duration: entry.duration,\n        processingStart: entry.processingStart,\n        processingEnd: entry.processingEnd,\n        interactionId: entry.interactionId\n      });\n    } else {\n      return new _PerformanceEntry.PerformanceEntry({\n        name: entry.name,\n        entryType: rawToPerformanceEntryType(entry.entryType),\n        startTime: entry.startTime,\n        duration: entry.duration\n      });\n    }\n  }\n  function rawToPerformanceEntryType(type) {\n    switch (type) {\n      case RawPerformanceEntryTypeValues.MARK:\n        return 'mark';\n      case RawPerformanceEntryTypeValues.MEASURE:\n        return 'measure';\n      case RawPerformanceEntryTypeValues.EVENT:\n        return 'event';\n      case RawPerformanceEntryTypeValues.UNDEFINED:\n        throw new TypeError(\"rawToPerformanceEntryType: UNDEFINED can't be cast to PerformanceEntryType\");\n      default:\n        throw new TypeError(`rawToPerformanceEntryType: unexpected performance entry type received: ${type}`);\n    }\n  }\n  function performanceEntryTypeToRaw(type) {\n    switch (type) {\n      case 'mark':\n        return RawPerformanceEntryTypeValues.MARK;\n      case 'measure':\n        return RawPerformanceEntryTypeValues.MEASURE;\n      case 'event':\n        return RawPerformanceEntryTypeValues.EVENT;\n      default:\n        // Verify exhaustive check with Flow\n        type;\n        throw new TypeError(`performanceEntryTypeToRaw: unexpected performance entry type received: ${type}`);\n    }\n  }\n});","lineCount":74,"map":[[9,2,17,0],[9,6,17,0,"_PerformanceEntry"],[9,23,17,0],[9,26,17,0,"_$$_REQUIRE"],[9,37,17,0],[9,38,17,0,"_dependencyMap"],[9,52,17,0],[10,2,18,0],[10,6,18,0,"_PerformanceEventTiming"],[10,29,18,0],[10,32,18,0,"_$$_REQUIRE"],[10,43,18,0],[10,44,18,0,"_dependencyMap"],[10,58,18,0],[11,2,1,0],[12,0,2,0],[13,0,3,0],[14,0,4,0],[15,0,5,0],[16,0,6,0],[17,0,7,0],[18,0,8,0],[19,0,9,0],[21,2,20,7],[21,6,20,13,"RawPerformanceEntryTypeValues"],[21,35,20,42],[21,38,20,42,"exports"],[21,45,20,42],[21,46,20,42,"RawPerformanceEntryTypeValues"],[21,75,20,42],[21,78,20,45],[22,4,21,2,"UNDEFINED"],[22,13,21,11],[22,15,21,13],[22,16,21,14],[23,4,22,2,"MARK"],[23,8,22,6],[23,10,22,8],[23,11,22,9],[24,4,23,2,"MEASURE"],[24,11,23,9],[24,13,23,11],[24,14,23,12],[25,4,24,2,"EVENT"],[25,9,24,7],[25,11,24,9],[26,2,25,0],[26,3,25,1],[27,2,27,7],[27,11,27,16,"rawToPerformanceEntry"],[27,32,27,37,"rawToPerformanceEntry"],[27,33,28,2,"entry"],[27,38,28,28],[27,40,29,20],[28,4,30,2],[28,8,30,6,"entry"],[28,13,30,11],[28,14,30,12,"entryType"],[28,23,30,21],[28,28,30,26,"RawPerformanceEntryTypeValues"],[28,57,30,55],[28,58,30,56,"EVENT"],[28,63,30,61],[28,65,30,63],[29,6,31,4],[29,13,31,11],[29,17,31,15,"PerformanceEventTiming"],[29,63,31,37],[29,64,31,38],[30,8,32,6,"name"],[30,12,32,10],[30,14,32,12,"entry"],[30,19,32,17],[30,20,32,18,"name"],[30,24,32,22],[31,8,33,6,"startTime"],[31,17,33,15],[31,19,33,17,"entry"],[31,24,33,22],[31,25,33,23,"startTime"],[31,34,33,32],[32,8,34,6,"duration"],[32,16,34,14],[32,18,34,16,"entry"],[32,23,34,21],[32,24,34,22,"duration"],[32,32,34,30],[33,8,35,6,"processingStart"],[33,23,35,21],[33,25,35,23,"entry"],[33,30,35,28],[33,31,35,29,"processingStart"],[33,46,35,44],[34,8,36,6,"processingEnd"],[34,21,36,19],[34,23,36,21,"entry"],[34,28,36,26],[34,29,36,27,"processingEnd"],[34,42,36,40],[35,8,37,6,"interactionId"],[35,21,37,19],[35,23,37,21,"entry"],[35,28,37,26],[35,29,37,27,"interactionId"],[36,6,38,4],[36,7,38,5],[36,8,38,6],[37,4,39,2],[37,5,39,3],[37,11,39,9],[38,6,40,4],[38,13,40,11],[38,17,40,15,"PerformanceEntry"],[38,51,40,31],[38,52,40,32],[39,8,41,6,"name"],[39,12,41,10],[39,14,41,12,"entry"],[39,19,41,17],[39,20,41,18,"name"],[39,24,41,22],[40,8,42,6,"entryType"],[40,17,42,15],[40,19,42,17,"rawToPerformanceEntryType"],[40,44,42,42],[40,45,42,43,"entry"],[40,50,42,48],[40,51,42,49,"entryType"],[40,60,42,58],[40,61,42,59],[41,8,43,6,"startTime"],[41,17,43,15],[41,19,43,17,"entry"],[41,24,43,22],[41,25,43,23,"startTime"],[41,34,43,32],[42,8,44,6,"duration"],[42,16,44,14],[42,18,44,16,"entry"],[42,23,44,21],[42,24,44,22,"duration"],[43,6,45,4],[43,7,45,5],[43,8,45,6],[44,4,46,2],[45,2,47,0],[46,2,49,7],[46,11,49,16,"rawToPerformanceEntryType"],[46,36,49,41,"rawToPerformanceEntryType"],[46,37,50,2,"type"],[46,41,50,31],[46,43,51,24],[47,4,52,2],[47,12,52,10,"type"],[47,16,52,14],[48,6,53,4],[48,11,53,9,"RawPerformanceEntryTypeValues"],[48,40,53,38],[48,41,53,39,"MARK"],[48,45,53,43],[49,8,54,6],[49,15,54,13],[49,21,54,19],[50,6,55,4],[50,11,55,9,"RawPerformanceEntryTypeValues"],[50,40,55,38],[50,41,55,39,"MEASURE"],[50,48,55,46],[51,8,56,6],[51,15,56,13],[51,24,56,22],[52,6,57,4],[52,11,57,9,"RawPerformanceEntryTypeValues"],[52,40,57,38],[52,41,57,39,"EVENT"],[52,46,57,44],[53,8,58,6],[53,15,58,13],[53,22,58,20],[54,6,59,4],[54,11,59,9,"RawPerformanceEntryTypeValues"],[54,40,59,38],[54,41,59,39,"UNDEFINED"],[54,50,59,48],[55,8,60,6],[55,14,60,12],[55,18,60,16,"TypeError"],[55,27,60,25],[55,28,61,8],[55,104,62,6],[55,105,62,7],[56,6,63,4],[57,8,64,6],[57,14,64,12],[57,18,64,16,"TypeError"],[57,27,64,25],[57,28,65,9],[57,102,65,82,"type"],[57,106,65,87],[57,108,66,6],[57,109,66,7],[58,4,67,2],[59,2,68,0],[60,2,70,7],[60,11,70,16,"performanceEntryTypeToRaw"],[60,36,70,41,"performanceEntryTypeToRaw"],[60,37,71,2,"type"],[60,41,71,28],[60,43,72,27],[61,4,73,2],[61,12,73,10,"type"],[61,16,73,14],[62,6,74,4],[62,11,74,9],[62,17,74,15],[63,8,75,6],[63,15,75,13,"RawPerformanceEntryTypeValues"],[63,44,75,42],[63,45,75,43,"MARK"],[63,49,75,47],[64,6,76,4],[64,11,76,9],[64,20,76,18],[65,8,77,6],[65,15,77,13,"RawPerformanceEntryTypeValues"],[65,44,77,42],[65,45,77,43,"MEASURE"],[65,52,77,50],[66,6,78,4],[66,11,78,9],[66,18,78,16],[67,8,79,6],[67,15,79,13,"RawPerformanceEntryTypeValues"],[67,44,79,42],[67,45,79,43,"EVENT"],[67,50,79,48],[68,6,80,4],[69,8,81,6],[70,8,82,7,"type"],[70,12,82,11],[71,8,83,6],[71,14,83,12],[71,18,83,16,"TypeError"],[71,27,83,25],[71,28,84,9],[71,102,84,82,"type"],[71,106,84,87],[71,108,85,6],[71,109,85,7],[72,4,86,2],[73,2,87,0],[74,0,87,1]],"functionMap":{"names":["<global>","rawToPerformanceEntry","rawToPerformanceEntryType","performanceEntryTypeToRaw"],"mappings":"AAA;OC0B;CDoB;OEE;CFmB;OGE;CHiB"}},"type":"js/module"}]}