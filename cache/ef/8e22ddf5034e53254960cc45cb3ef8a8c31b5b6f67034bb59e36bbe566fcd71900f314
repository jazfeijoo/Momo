{"dependencies":[{"name":"../utils/createCustomError","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":26,"index":26},"end":{"line":1,"column":63,"index":63}}],"key":"3fHpaonZOXjONqyIVCt4jZUtwD4="}},{"name":"../definition-syntax/generate","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":17,"index":82},"end":{"line":2,"column":57,"index":122}}],"key":"asOE5zTE95h03Jlq3uDzGrJkfg0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var createCustomError = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\");\n  var generate = _$$_REQUIRE(_dependencyMap[1], \"../definition-syntax/generate\");\n  var defaultLoc = {\n    offset: 0,\n    line: 1,\n    column: 1\n  };\n  function locateMismatch(matchResult, node) {\n    var tokens = matchResult.tokens;\n    var longestMatch = matchResult.longestMatch;\n    var mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    var badNode = mismatchNode !== node ? mismatchNode : null;\n    var mismatchOffset = 0;\n    var mismatchLength = 0;\n    var entries = 0;\n    var css = '';\n    var start;\n    var end;\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i].value;\n      if (i === longestMatch) {\n        mismatchLength = token.length;\n        mismatchOffset = css.length;\n      }\n      if (badNode !== null && tokens[i].node === badNode) {\n        if (i <= longestMatch) {\n          entries++;\n        } else {\n          entries = 0;\n        }\n      }\n      css += token;\n    }\n    if (longestMatch === tokens.length || entries > 1) {\n      // last\n      start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n      end = buildLoc(start);\n    } else {\n      start = fromLoc(badNode, 'start') || buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n      end = fromLoc(badNode, 'end') || buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n    return {\n      css: css,\n      mismatchOffset: mismatchOffset,\n      mismatchLength: mismatchLength,\n      start: start,\n      end: end\n    };\n  }\n  function fromLoc(node, point) {\n    var value = node && node.loc && node.loc[point];\n    if (value) {\n      return 'line' in value ? buildLoc(value) : value;\n    }\n    return null;\n  }\n  function buildLoc(_ref, extra) {\n    var offset = _ref.offset,\n      line = _ref.line,\n      column = _ref.column;\n    var loc = {\n      offset: offset,\n      line: line,\n      column: column\n    };\n    if (extra) {\n      var lines = extra.split(/\\n|\\r\\n?|\\f/);\n      loc.offset += extra.length;\n      loc.line += lines.length - 1;\n      loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n    return loc;\n  }\n  var SyntaxReferenceError = function SyntaxReferenceError(type, referenceName) {\n    var error = createCustomError('SyntaxReferenceError', type + (referenceName ? ' `' + referenceName + '`' : ''));\n    error.reference = referenceName;\n    return error;\n  };\n  var SyntaxMatchError = function SyntaxMatchError(message, syntax, node, matchResult) {\n    var error = createCustomError('SyntaxMatchError', message);\n    var _locateMismatch = locateMismatch(matchResult, node),\n      css = _locateMismatch.css,\n      mismatchOffset = _locateMismatch.mismatchOffset,\n      mismatchLength = _locateMismatch.mismatchLength,\n      start = _locateMismatch.start,\n      end = _locateMismatch.end;\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' + '  syntax: ' + error.syntax + '\\n' + '   value: ' + (css || '<empty string>') + '\\n' + '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n    Object.assign(error, start);\n    error.loc = {\n      source: node && node.loc && node.loc.source || '<unknown>',\n      start: start,\n      end: end\n    };\n    return error;\n  };\n  module.exports = {\n    SyntaxReferenceError: SyntaxReferenceError,\n    SyntaxMatchError: SyntaxMatchError\n  };\n});","lineCount":106,"map":[[2,2,1,0],[2,6,1,6,"createCustomError"],[2,23,1,23],[2,26,1,26,"require"],[2,37,1,33],[2,38,1,33,"_dependencyMap"],[2,52,1,33],[2,85,1,62],[2,86,1,63],[3,2,2,0],[3,6,2,6,"generate"],[3,14,2,14],[3,17,2,17,"require"],[3,28,2,24],[3,29,2,24,"_dependencyMap"],[3,43,2,24],[3,79,2,56],[3,80,2,57],[4,2,3,0],[4,6,3,6,"defaultLoc"],[4,16,3,16],[4,19,3,19],[5,4,3,21,"offset"],[5,10,3,27],[5,12,3,29],[5,13,3,30],[6,4,3,32,"line"],[6,8,3,36],[6,10,3,38],[6,11,3,39],[7,4,3,41,"column"],[7,10,3,47],[7,12,3,49],[8,2,3,51],[8,3,3,52],[9,2,5,0],[9,11,5,9,"locateMismatch"],[9,25,5,23,"locateMismatch"],[9,26,5,24,"matchResult"],[9,37,5,35],[9,39,5,37,"node"],[9,43,5,41],[9,45,5,43],[10,4,6,4],[10,8,6,10,"tokens"],[10,14,6,16],[10,17,6,19,"matchResult"],[10,28,6,30],[10,29,6,31,"tokens"],[10,35,6,37],[11,4,7,4],[11,8,7,10,"longestMatch"],[11,20,7,22],[11,23,7,25,"matchResult"],[11,34,7,36],[11,35,7,37,"longestMatch"],[11,47,7,49],[12,4,8,4],[12,8,8,10,"mismatchNode"],[12,20,8,22],[12,23,8,25,"longestMatch"],[12,35,8,37],[12,38,8,40,"tokens"],[12,44,8,46],[12,45,8,47,"length"],[12,51,8,53],[12,54,8,56,"tokens"],[12,60,8,62],[12,61,8,63,"longestMatch"],[12,73,8,75],[12,74,8,76],[12,75,8,77,"node"],[12,79,8,81],[12,83,8,85],[12,87,8,89],[12,90,8,92],[12,94,8,96],[13,4,9,4],[13,8,9,10,"badNode"],[13,15,9,17],[13,18,9,20,"mismatchNode"],[13,30,9,32],[13,35,9,37,"node"],[13,39,9,41],[13,42,9,44,"mismatchNode"],[13,54,9,56],[13,57,9,59],[13,61,9,63],[14,4,10,4],[14,8,10,8,"mismatchOffset"],[14,22,10,22],[14,25,10,25],[14,26,10,26],[15,4,11,4],[15,8,11,8,"mismatchLength"],[15,22,11,22],[15,25,11,25],[15,26,11,26],[16,4,12,4],[16,8,12,8,"entries"],[16,15,12,15],[16,18,12,18],[16,19,12,19],[17,4,13,4],[17,8,13,8,"css"],[17,11,13,11],[17,14,13,14],[17,16,13,16],[18,4,14,4],[18,8,14,8,"start"],[18,13,14,13],[19,4,15,4],[19,8,15,8,"end"],[19,11,15,11],[20,4,17,4],[20,9,17,9],[20,13,17,13,"i"],[20,14,17,14],[20,17,17,17],[20,18,17,18],[20,20,17,20,"i"],[20,21,17,21],[20,24,17,24,"tokens"],[20,30,17,30],[20,31,17,31,"length"],[20,37,17,37],[20,39,17,39,"i"],[20,40,17,40],[20,42,17,42],[20,44,17,44],[21,6,18,8],[21,10,18,14,"token"],[21,15,18,19],[21,18,18,22,"tokens"],[21,24,18,28],[21,25,18,29,"i"],[21,26,18,30],[21,27,18,31],[21,28,18,32,"value"],[21,33,18,37],[22,6,20,8],[22,10,20,12,"i"],[22,11,20,13],[22,16,20,18,"longestMatch"],[22,28,20,30],[22,30,20,32],[23,8,21,12,"mismatchLength"],[23,22,21,26],[23,25,21,29,"token"],[23,30,21,34],[23,31,21,35,"length"],[23,37,21,41],[24,8,22,12,"mismatchOffset"],[24,22,22,26],[24,25,22,29,"css"],[24,28,22,32],[24,29,22,33,"length"],[24,35,22,39],[25,6,23,8],[26,6,25,8],[26,10,25,12,"badNode"],[26,17,25,19],[26,22,25,24],[26,26,25,28],[26,30,25,32,"tokens"],[26,36,25,38],[26,37,25,39,"i"],[26,38,25,40],[26,39,25,41],[26,40,25,42,"node"],[26,44,25,46],[26,49,25,51,"badNode"],[26,56,25,58],[26,58,25,60],[27,8,26,12],[27,12,26,16,"i"],[27,13,26,17],[27,17,26,21,"longestMatch"],[27,29,26,33],[27,31,26,35],[28,10,27,16,"entries"],[28,17,27,23],[28,19,27,25],[29,8,28,12],[29,9,28,13],[29,15,28,19],[30,10,29,16,"entries"],[30,17,29,23],[30,20,29,26],[30,21,29,27],[31,8,30,12],[32,6,31,8],[33,6,33,8,"css"],[33,9,33,11],[33,13,33,15,"token"],[33,18,33,20],[34,4,34,4],[35,4,36,4],[35,8,36,8,"longestMatch"],[35,20,36,20],[35,25,36,25,"tokens"],[35,31,36,31],[35,32,36,32,"length"],[35,38,36,38],[35,42,36,42,"entries"],[35,49,36,49],[35,52,36,52],[35,53,36,53],[35,55,36,55],[36,6,36,57],[37,6,37,8,"start"],[37,11,37,13],[37,14,37,16,"fromLoc"],[37,21,37,23],[37,22,37,24,"badNode"],[37,29,37,31],[37,33,37,35,"node"],[37,37,37,39],[37,39,37,41],[37,44,37,46],[37,45,37,47],[37,49,37,51,"buildLoc"],[37,57,37,59],[37,58,37,60,"defaultLoc"],[37,68,37,70],[37,70,37,72,"css"],[37,73,37,75],[37,74,37,76],[38,6,38,8,"end"],[38,9,38,11],[38,12,38,14,"buildLoc"],[38,20,38,22],[38,21,38,23,"start"],[38,26,38,28],[38,27,38,29],[39,4,39,4],[39,5,39,5],[39,11,39,11],[40,6,40,8,"start"],[40,11,40,13],[40,14,40,16,"fromLoc"],[40,21,40,23],[40,22,40,24,"badNode"],[40,29,40,31],[40,31,40,33],[40,38,40,40],[40,39,40,41],[40,43,41,12,"buildLoc"],[40,51,41,20],[40,52,41,21,"fromLoc"],[40,59,41,28],[40,60,41,29,"node"],[40,64,41,33],[40,66,41,35],[40,73,41,42],[40,74,41,43],[40,78,41,47,"defaultLoc"],[40,88,41,57],[40,90,41,59,"css"],[40,93,41,62],[40,94,41,63,"slice"],[40,99,41,68],[40,100,41,69],[40,101,41,70],[40,103,41,72,"mismatchOffset"],[40,117,41,86],[40,118,41,87],[40,119,41,88],[41,6,42,8,"end"],[41,9,42,11],[41,12,42,14,"fromLoc"],[41,19,42,21],[41,20,42,22,"badNode"],[41,27,42,29],[41,29,42,31],[41,34,42,36],[41,35,42,37],[41,39,43,12,"buildLoc"],[41,47,43,20],[41,48,43,21,"start"],[41,53,43,26],[41,55,43,28,"css"],[41,58,43,31],[41,59,43,32,"substr"],[41,65,43,38],[41,66,43,39,"mismatchOffset"],[41,80,43,53],[41,82,43,55,"mismatchLength"],[41,96,43,69],[41,97,43,70],[41,98,43,71],[42,4,44,4],[43,4,46,4],[43,11,46,11],[44,6,47,8,"css"],[44,9,47,11],[44,11,47,8,"css"],[44,14,47,11],[45,6,48,8,"mismatchOffset"],[45,20,48,22],[45,22,48,8,"mismatchOffset"],[45,36,48,22],[46,6,49,8,"mismatchLength"],[46,20,49,22],[46,22,49,8,"mismatchLength"],[46,36,49,22],[47,6,50,8,"start"],[47,11,50,13],[47,13,50,8,"start"],[47,18,50,13],[48,6,51,8,"end"],[48,9,51,11],[48,11,51,8,"end"],[49,4,52,4],[49,5,52,5],[50,2,53,0],[51,2,55,0],[51,11,55,9,"fromLoc"],[51,18,55,16,"fromLoc"],[51,19,55,17,"node"],[51,23,55,21],[51,25,55,23,"point"],[51,30,55,28],[51,32,55,30],[52,4,56,4],[52,8,56,10,"value"],[52,13,56,15],[52,16,56,18,"node"],[52,20,56,22],[52,24,56,26,"node"],[52,28,56,30],[52,29,56,31,"loc"],[52,32,56,34],[52,36,56,38,"node"],[52,40,56,42],[52,41,56,43,"loc"],[52,44,56,46],[52,45,56,47,"point"],[52,50,56,52],[52,51,56,53],[53,4,58,4],[53,8,58,8,"value"],[53,13,58,13],[53,15,58,15],[54,6,59,8],[54,13,59,15],[54,19,59,21],[54,23,59,25,"value"],[54,28,59,30],[54,31,59,33,"buildLoc"],[54,39,59,41],[54,40,59,42,"value"],[54,45,59,47],[54,46,59,48],[54,49,59,51,"value"],[54,54,59,56],[55,4,60,4],[56,4,62,4],[56,11,62,11],[56,15,62,15],[57,2,63,0],[58,2,65,0],[58,11,65,9,"buildLoc"],[58,19,65,17,"buildLoc"],[58,20,65,17,"_ref"],[58,24,65,17],[58,26,65,44,"extra"],[58,31,65,49],[58,33,65,51],[59,4,65,51],[59,8,65,20,"offset"],[59,14,65,26],[59,17,65,26,"_ref"],[59,21,65,26],[59,22,65,20,"offset"],[59,28,65,26],[60,6,65,28,"line"],[60,10,65,32],[60,13,65,32,"_ref"],[60,17,65,32],[60,18,65,28,"line"],[60,22,65,32],[61,6,65,34,"column"],[61,12,65,40],[61,15,65,40,"_ref"],[61,19,65,40],[61,20,65,34,"column"],[61,26,65,40],[62,4,66,4],[62,8,66,10,"loc"],[62,11,66,13],[62,14,66,16],[63,6,67,8,"offset"],[63,12,67,14],[63,14,67,8,"offset"],[63,20,67,14],[64,6,68,8,"line"],[64,10,68,12],[64,12,68,8,"line"],[64,16,68,12],[65,6,69,8,"column"],[65,12,69,14],[65,14,69,8,"column"],[66,4,70,4],[66,5,70,5],[67,4,72,4],[67,8,72,8,"extra"],[67,13,72,13],[67,15,72,15],[68,6,73,8],[68,10,73,14,"lines"],[68,15,73,19],[68,18,73,22,"extra"],[68,23,73,27],[68,24,73,28,"split"],[68,29,73,33],[68,30,73,34],[68,43,73,47],[68,44,73,48],[69,6,75,8,"loc"],[69,9,75,11],[69,10,75,12,"offset"],[69,16,75,18],[69,20,75,22,"extra"],[69,25,75,27],[69,26,75,28,"length"],[69,32,75,34],[70,6,76,8,"loc"],[70,9,76,11],[70,10,76,12,"line"],[70,14,76,16],[70,18,76,20,"lines"],[70,23,76,25],[70,24,76,26,"length"],[70,30,76,32],[70,33,76,35],[70,34,76,36],[71,6,77,8,"loc"],[71,9,77,11],[71,10,77,12,"column"],[71,16,77,18],[71,19,77,21,"lines"],[71,24,77,26],[71,25,77,27,"length"],[71,31,77,33],[71,36,77,38],[71,37,77,39],[71,40,77,42,"loc"],[71,43,77,45],[71,44,77,46,"column"],[71,50,77,52],[71,53,77,55,"extra"],[71,58,77,60],[71,59,77,61,"length"],[71,65,77,67],[71,68,77,70,"lines"],[71,73,77,75],[71,74,77,76,"pop"],[71,77,77,79],[71,78,77,80],[71,79,77,81],[71,80,77,82,"length"],[71,86,77,88],[71,89,77,91],[71,90,77,92],[72,4,78,4],[73,4,80,4],[73,11,80,11,"loc"],[73,14,80,14],[74,2,81,0],[75,2,83,0],[75,6,83,6,"SyntaxReferenceError"],[75,26,83,26],[75,29,83,29],[75,38,83,6,"SyntaxReferenceError"],[75,58,83,26,"SyntaxReferenceError"],[75,59,83,38,"type"],[75,63,83,42],[75,65,83,44,"referenceName"],[75,78,83,57],[75,80,83,59],[76,4,84,4],[76,8,84,10,"error"],[76,13,84,15],[76,16,84,18,"createCustomError"],[76,33,84,35],[76,34,85,8],[76,56,85,30],[76,58,86,8,"type"],[76,62,86,12],[76,66,86,16,"referenceName"],[76,79,86,29],[76,82,86,32],[76,86,86,36],[76,89,86,39,"referenceName"],[76,102,86,52],[76,105,86,55],[76,108,86,58],[76,111,86,61],[76,113,86,63],[76,114,87,4],[76,115,87,5],[77,4,89,4,"error"],[77,9,89,9],[77,10,89,10,"reference"],[77,19,89,19],[77,22,89,22,"referenceName"],[77,35,89,35],[78,4,91,4],[78,11,91,11,"error"],[78,16,91,16],[79,2,92,0],[79,3,92,1],[80,2,94,0],[80,6,94,6,"SyntaxMatchError"],[80,22,94,22],[80,25,94,25],[80,34,94,6,"SyntaxMatchError"],[80,50,94,22,"SyntaxMatchError"],[80,51,94,34,"message"],[80,58,94,41],[80,60,94,43,"syntax"],[80,66,94,49],[80,68,94,51,"node"],[80,72,94,55],[80,74,94,57,"matchResult"],[80,85,94,68],[80,87,94,70],[81,4,95,4],[81,8,95,10,"error"],[81,13,95,15],[81,16,95,18,"createCustomError"],[81,33,95,35],[81,34,95,36],[81,52,95,54],[81,54,95,56,"message"],[81,61,95,63],[81,62,95,64],[82,4,96,4],[82,8,96,4,"_locateMismatch"],[82,23,96,4],[82,26,102,8,"locateMismatch"],[82,40,102,22],[82,41,102,23,"matchResult"],[82,52,102,34],[82,54,102,36,"node"],[82,58,102,40],[82,59,102,41],[83,6,97,8,"css"],[83,9,97,11],[83,12,97,11,"_locateMismatch"],[83,27,97,11],[83,28,97,8,"css"],[83,31,97,11],[84,6,98,8,"mismatchOffset"],[84,20,98,22],[84,23,98,22,"_locateMismatch"],[84,38,98,22],[84,39,98,8,"mismatchOffset"],[84,53,98,22],[85,6,99,8,"mismatchLength"],[85,20,99,22],[85,23,99,22,"_locateMismatch"],[85,38,99,22],[85,39,99,8,"mismatchLength"],[85,53,99,22],[86,6,100,8,"start"],[86,11,100,13],[86,14,100,13,"_locateMismatch"],[86,29,100,13],[86,30,100,8,"start"],[86,35,100,13],[87,6,101,8,"end"],[87,9,101,11],[87,12,101,11,"_locateMismatch"],[87,27,101,11],[87,28,101,8,"end"],[87,31,101,11],[88,4,104,4,"error"],[88,9,104,9],[88,10,104,10,"rawMessage"],[88,20,104,20],[88,23,104,23,"message"],[88,30,104,30],[89,4,105,4,"error"],[89,9,105,9],[89,10,105,10,"syntax"],[89,16,105,16],[89,19,105,19,"syntax"],[89,25,105,25],[89,28,105,28,"generate"],[89,36,105,36],[89,37,105,37,"syntax"],[89,43,105,43],[89,44,105,44],[89,47,105,47],[89,58,105,58],[90,4,106,4,"error"],[90,9,106,9],[90,10,106,10,"css"],[90,13,106,13],[90,16,106,16,"css"],[90,19,106,19],[91,4,107,4,"error"],[91,9,107,9],[91,10,107,10,"mismatchOffset"],[91,24,107,24],[91,27,107,27,"mismatchOffset"],[91,41,107,41],[92,4,108,4,"error"],[92,9,108,9],[92,10,108,10,"mismatchLength"],[92,24,108,24],[92,27,108,27,"mismatchLength"],[92,41,108,41],[93,4,109,4,"error"],[93,9,109,9],[93,10,109,10,"message"],[93,17,109,17],[93,20,109,20,"message"],[93,27,109,27],[93,30,109,30],[93,34,109,34],[93,37,110,8],[93,49,110,20],[93,52,110,23,"error"],[93,57,110,28],[93,58,110,29,"syntax"],[93,64,110,35],[93,67,110,38],[93,71,110,42],[93,74,111,8],[93,86,111,20],[93,90,111,24,"css"],[93,93,111,27],[93,97,111,31],[93,113,111,47],[93,114,111,48],[93,117,111,51],[93,121,111,55],[93,124,112,8],[93,136,112,20],[93,139,112,23],[93,143,112,27,"Array"],[93,148,112,32],[93,149,112,33,"error"],[93,154,112,38],[93,155,112,39,"mismatchOffset"],[93,169,112,53],[93,172,112,56],[93,173,112,57],[93,174,112,58],[93,175,112,59,"join"],[93,179,112,63],[93,180,112,64],[93,183,112,67],[93,184,112,68],[93,187,112,71],[93,190,112,74],[94,4,114,4,"Object"],[94,10,114,10],[94,11,114,11,"assign"],[94,17,114,17],[94,18,114,18,"error"],[94,23,114,23],[94,25,114,25,"start"],[94,30,114,30],[94,31,114,31],[95,4,115,4,"error"],[95,9,115,9],[95,10,115,10,"loc"],[95,13,115,13],[95,16,115,16],[96,6,116,8,"source"],[96,12,116,14],[96,14,116,17,"node"],[96,18,116,21],[96,22,116,25,"node"],[96,26,116,29],[96,27,116,30,"loc"],[96,30,116,33],[96,34,116,37,"node"],[96,38,116,41],[96,39,116,42,"loc"],[96,42,116,45],[96,43,116,46,"source"],[96,49,116,52],[96,53,116,57],[96,64,116,68],[97,6,117,8,"start"],[97,11,117,13],[97,13,117,8,"start"],[97,18,117,13],[98,6,118,8,"end"],[98,9,118,11],[98,11,118,8,"end"],[99,4,119,4],[99,5,119,5],[100,4,121,4],[100,11,121,11,"error"],[100,16,121,16],[101,2,122,0],[101,3,122,1],[102,2,124,0,"module"],[102,8,124,6],[102,9,124,7,"exports"],[102,16,124,14],[102,19,124,17],[103,4,125,4,"SyntaxReferenceError"],[103,24,125,24],[103,26,125,4,"SyntaxReferenceError"],[103,46,125,24],[104,4,126,4,"SyntaxMatchError"],[104,20,126,20],[104,22,126,4,"SyntaxMatchError"],[105,2,127,0],[105,3,127,1],[106,0,127,2]],"functionMap":{"names":["<global>","locateMismatch","fromLoc","buildLoc","SyntaxReferenceError","SyntaxMatchError"],"mappings":"AAA;ACI;CDgD;AEE;CFQ;AGE;CHgB;6BIE;CJS;yBKE;CL4B"}},"type":"js/module"}]}